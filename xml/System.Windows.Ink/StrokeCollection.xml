<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StrokeCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55b4cf8910185e5ae416d5a30e9e9a138571eeb14.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b4cf8910185e5ae416d5a30e9e9a138571eeb14</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.StrokeCollection">
          <source>Represents a collection of <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> 개체의 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> enables you to perform functions such as hit testing, clipping, and erasing strokes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 적중 테스트 잘리고 스트로크 지우기 등의 기능을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> control performs many of these functions, but if you need more control than the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> provides, the <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> offers more options.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 보다 더 많은 제어 해야 하지만 이러한 함수 대부분을 수행 하는 컨트롤의 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 제공는 <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 더 많은 옵션이 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>The following table lists where to learn about managing digital ink on a custom control.</source>
          <target state="translated">다음 표에서 사용자 지정 컨트롤에서 디지털 잉크 관리에 대 한 설명 하는 항목이 나열 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>To do this…</source>
          <target state="translated">이렇게 하려면...</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>See this article</source>
          <target state="translated">이 문서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>Create a control that collects digital ink</source>
          <target state="translated">디지털 잉크를 수집 하는 컨트롤 만들기</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source><bpt id="p1">[</bpt>Creating an Ink Input Control<ept id="p1">](~/docs/framework/wpf/advanced/creating-an-ink-input-control.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>잉크 입력 컨트롤 만들기<ept id="p1">](~/docs/framework/wpf/advanced/creating-an-ink-input-control.md)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>Create a control that enables the user to select ink</source>
          <target state="translated">잉크 선택할 수 있도록 해 주는 컨트롤 만들기</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source><bpt id="p1">[</bpt>How to: Select Ink from a Custom Control<ept id="p1">](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 사용자 지정 컨트롤에서 잉크 선택<ept id="p1">](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>Create a control that enables the user to point-erase ink</source>
          <target state="translated">지우는 잉크 사용자 수 있도록 하는 컨트롤 만들기</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source><bpt id="p1">[</bpt>How to: Erase Ink on a Custom Control<ept id="p1">](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 사용자 지정 컨트롤에서 잉크 지우기<ept id="p1">](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 특성 사용</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>XAML Object Element Usage</source>
          <target state="translated">XAML 개체 요소 사용</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>Term</source>
          <target state="translated">용어</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>Definition</source>
          <target state="translated">정의</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>A string that represents the stroke in base-64, encoded Ink Serialized Format (ISF).</source>
          <target state="translated">Base 64에서 스트로크를 나타내는 문자열로 인코딩된 잉크 직렬화 형식 (ISF)입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>The following example demonstrates how to copy the ink in one <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> onto another <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 하나에 잉크를 복사 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 다른 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>This example assumes:</source>
          <target state="translated">이 예에서는 가정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>There are two <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> objects called <ph id="ph2">`inkCanvas1`</ph> and <ph id="ph3">`inkCanvas2`</ph>.</source>
          <target state="translated">두 개의 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 라는 개체 <ph id="ph2">`inkCanvas1`</ph> 및 <ph id="ph3">`inkCanvas2`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.StrokeCollection">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event has been connected to the event handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> 이벤트가 이벤트 처리기에 연결 되어 있다고 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.StrokeCollection">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})">
          <source>The strokes to add to the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>에 추가할 스트로크입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> class that contains the specified strokes.</source>
          <target state="translated">지정한 스트로크를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)">
          <source>A stream that contains ink data.</source>
          <target state="translated">잉크 데이터가 들어 있는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)">
          <source>Initializes a <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> from the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> of Ink Serialized Format (ISF).</source>
          <target state="translated">ISF(Serialize된 잉크 형식)의 지정한 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)">
          <source>The following example demonstrates how to save and load a <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 저장 및 로드 하는 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> called <ph id="ph2">`inkCanvas1`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 호출 <ph id="ph2">`inkCanvas1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> to add to the collection.</source>
          <target state="translated">컬렉션에 추가할 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)">
          <source>Adds the specified strokes to the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated">지정한 스트로크를 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Add%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Add%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)">
          <source>The following example demonstrates how to copy the ink in one <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> onto another <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 하나에 잉크를 복사 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 다른 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)">
          <source>This example assumes:</source>
          <target state="translated">이 예에서는 가정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)">
          <source>There are two <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> objects called <ph id="ph2">`inkCanvas1`</ph> and <ph id="ph3">`inkCanvas2`</ph>.</source>
          <target state="translated">두 개의 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 라는 개체 <ph id="ph2">`inkCanvas1`</ph> 및 <ph id="ph3">`inkCanvas2`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event has been connected to the event handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> 이벤트가 이벤트 처리기에 연결 되어 있다고 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> in <ph id="ph2">&lt;paramref name="strokes" /&gt;</ph> is already a member of the <ph id="ph3">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="strokes" /&gt;</ph>의 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>가 이미 <ph id="ph3">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>의 멤버인 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)">
          <source><ph id="ph1">&lt;paramref name="strokes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="strokes" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> to associate with the custom property.</source>
          <target state="translated">사용자 지정 속성과 연결할 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
          <source>The value of the custom property.</source>
          <target state="translated">사용자 지정 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
          <source><bpt id="p1">&lt;c&gt;</bpt>propertyData<ept id="p1">&lt;/c&gt;</ept> must be of type <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.UInt16" /&gt;</ph>, <ph id="ph5">&lt;see cref="T:System.Int32" /&gt;</ph>, <ph id="ph6">&lt;see cref="T:System.UInt32" /&gt;</ph>, <ph id="ph7">&lt;see cref="T:System.Int64" /&gt;</ph>, <ph id="ph8">&lt;see cref="T:System.UInt64" /&gt;</ph>, <ph id="ph9">&lt;see cref="T:System.Single" /&gt;</ph>, <ph id="ph10">&lt;see cref="T:System.Double" /&gt;</ph>, <ph id="ph11">&lt;see cref="T:System.DateTime" /&gt;</ph>, <ph id="ph12">&lt;see cref="T:System.Boolean" /&gt;</ph>, <ph id="ph13">&lt;see cref="T:System.String" /&gt;</ph>, <ph id="ph14">&lt;see cref="T:System.Decimal" /&gt;</ph> or an array of these data types, except <ph id="ph15">&lt;see cref="T:System.String" /&gt;</ph>, which is not allowed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>propertyData<ept id="p1">&lt;/c&gt;</ept>는 <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.UInt16" /&gt;</ph>, <ph id="ph5">&lt;see cref="T:System.Int32" /&gt;</ph>, <ph id="ph6">&lt;see cref="T:System.UInt32" /&gt;</ph>, <ph id="ph7">&lt;see cref="T:System.Int64" /&gt;</ph>, <ph id="ph8">&lt;see cref="T:System.UInt64" /&gt;</ph>, <ph id="ph9">&lt;see cref="T:System.Single" /&gt;</ph>, <ph id="ph10">&lt;see cref="T:System.Double" /&gt;</ph>, <ph id="ph11">&lt;see cref="T:System.DateTime" /&gt;</ph>, <ph id="ph12">&lt;see cref="T:System.Boolean" /&gt;</ph>, <ph id="ph13">&lt;see cref="T:System.String" /&gt;</ph>, <ph id="ph14">&lt;see cref="T:System.Decimal" /&gt;</ph> 형식이거나 이러한 데이터 형식의 배열이어야 합니다. 단, <ph id="ph15">&lt;see cref="T:System.String" /&gt;</ph> 형식의 배열은 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
          <source>Adds a custom property to the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated">사용자 지정 속성을 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A&gt;</ph> method enables you to add custom properties to a <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A&gt;</ph> 메서드를 사용 하면 사용자 지정 속성을 추가할 수는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
          <source>You can then include extra information with a <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated">그런 다음에 추가 정보를 포함할 수는 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
          <source>The following example demonstrates how to add and get custom property data.</source>
          <target state="translated">다음 예제에는 추가 하 고 사용자 지정 속성 데이터를 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
          <source>The <ph id="ph1">`AddTimeStamp_Click`</ph> method uses the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A&gt;</ph> method to add the current time to the <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`AddTimeStamp_Click`</ph> 메서드는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A&gt;</ph> 현재 시간에 추가 하는 메서드는 <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
          <source>The <ph id="ph1">`GetTimeStap_Click`</ph> method uses the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A&gt;</ph> method to retrieve the timestamp from the <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`GetTimeStap_Click`</ph> 메서드는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A&gt;</ph> 타임 스탬프를 검색 하는 메서드는 <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> called <ph id="ph2">`inkCanvas1`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 호출 <ph id="ph2">`inkCanvas1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
          <source><ph id="ph1">&lt;paramref name="propertyDataId" /&gt;</ph> is an empty <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="propertyDataId" /&gt;</ph>가 빈 <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
          <source><ph id="ph1">&lt;paramref name="propertyData" /&gt;</ph> is not one of the allowed data types listed in the <ph id="ph2">&lt;see langword="Parameters" /&gt;</ph> section.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="propertyData" /&gt;</ph>가 <ph id="ph2">&lt;see langword="Parameters" /&gt;</ph> 섹션에 나열된 허용되는 데이터 형식 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.ClearItems">
          <source>Clears all strokes from the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>에서 모든 스트로크를 지웁니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.StrokeCollection">
          <source>Removes all strokes in the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that are outside the specified bounds.</source>
          <target state="translated">지정한 범위 밖에 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>의 모든 스트로크를 제거합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the area to be clipped.</source>
          <target state="translated">클리핑할 영역을 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>Removes all strokes in the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that are outside the bounds of the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> array.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> 배열의 범위 밖에 있는 <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>의 모든 스트로크를 제거합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Clip%2A&gt;</ph> method connects the first and last points in <ph id="ph2">`lassoPoints`</ph> to create the lasso.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Clip%2A&gt;</ph> 메서드에서 첫 번째 및 마지막 점을 연결 <ph id="ph2">`lassoPoints`</ph> 올가미 만들려고 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Clip%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event for each <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> it clips.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Clip%2A&gt;</ph> 메서드 발생은 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> 각각에 대 한 이벤트 <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 클리핑 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The following example demonstrates how to clip the strokes in a <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는의 스트로크를 클리핑 하는 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> called <ph id="ph2">`presenter`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> 호출 <ph id="ph2">`presenter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that specifies the area to be clipped.</source>
          <target state="translated">클리핑할 영역을 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)">
          <source>Replaces all strokes that are clipped by the specified rectangle with new strokes that do not extend beyond the specified rectangle.</source>
          <target state="translated">지정한 사각형으로 클리핑된 모든 스트로크를 지정한 사각형을 벗어나지 않는 새 스트로크로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)">
          <source>All strokes that are entirely outside the specified rectangle are removed.</source>
          <target state="translated">지정된 된 사각형 밖에 있는 선은 모두 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)">
          <source>The following example demonstrates how to erase the ink that is outside the bounds of a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>.</source>
          <target state="translated">다음 예제에서는의 범위 밖에 있는 잉크를 지우는 방법을 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> called <ph id="ph2">`presenter`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> 호출 <ph id="ph2">`presenter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Clone">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>을 복사합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Clone">
          <source>A copy of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>의 복사본입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Clone">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Clone%2A&gt;</ph> method copies each <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> in the collection and the new <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> references the new strokes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Clone%2A&gt;</ph> 메서드 복사 각 <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 는 컬렉션에 새 <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 새 스트로크를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Clone">
          <source>The following example demonstrates how to copy the ink in one <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> onto another <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 하나에 잉크를 복사 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 다른 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Clone">
          <source>This example assumes:</source>
          <target state="translated">이 예에서는 가정합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Clone">
          <source>There are two <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> objects called <ph id="ph2">`inkCanvas1`</ph> and <ph id="ph3">`inkCanvas2.`</ph></source>
          <target state="translated">두 개의 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 라는 개체 <ph id="ph2">`inkCanvas1`</ph> 및 <ph id="ph3">`inkCanvas2.`</ph></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Clone">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event has been connected to the event handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> 이벤트가 이벤트 처리기에 연결 되어 있다고 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>에서 찾을 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)">
          <source>Returns whether the specified custom property identifier is in the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated">지정한 사용자 지정 속성 ID가 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>에 있는지 여부를 반환합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified custom property identifier is in the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정한 사용자 지정 속성 ID가 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)">
          <source>The following example demonstrates how to check for custom property in a <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서 사용자 지정 속성을 확인 하는 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)">
          <source>If a custom property has been associated with <ph id="ph1">`timestamp`</ph>, the example gets that custom property and shows when the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> was saved.</source>
          <target state="translated">사용자 지정 속성이 연결 된 경우 <ph id="ph1">`timestamp`</ph>,이 예제에서는 해당 사용자 지정 속성을 가져오고 표시는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 저장 되었습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> called <ph id="ph2">`inkCanvas1`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 호출 <ph id="ph2">`inkCanvas1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> on which to draw the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph>을 그릴 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)">
          <source>Draws the strokes in the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>의 스트로크를 그립니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)">
          <source>The following example creates a custom element that displays a thumbnail view of an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 미리 보기를 표시 하는 사용자 지정 요소는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)">
          <source>The custom element keeps a reference to an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> and redraws itself when the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.StrokeCollected&gt;</ph> event occurs.</source>
          <target state="translated">에 대 한 참조를 유지 하는 사용자 지정 요소는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 그려집니다 때는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.StrokeCollected&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.StrokeCollection">
          <source>Removes the ink that is within the bounds of the specified area.</source>
          <target state="translated">지정한 영역의 범위 내에 있는 잉크를 제거합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the area to be erased.</source>
          <target state="translated">지울 영역을 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>Removes the ink that is within the bounds of the specified area.</source>
          <target state="translated">지정한 영역의 범위 내에 있는 잉크를 제거합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method connects the first and last points in <ph id="ph2">`lassoPoints`</ph> to create the lasso.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> 메서드에서 첫 번째 및 마지막 점을 연결 <ph id="ph2">`lassoPoints`</ph> 올가미 만들려고 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> might contain new strokes after the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 후 새 선 포함 될 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>For example, if the specified area is through the middle of a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>, the erase method removes that <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> and creates two new strokes.</source>
          <target state="translated">예를 들어, 지정된 된 영역의의 중간 통과 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>, 지우기 메서드를 제거 하는 <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 하 고 두 개의 새 스트로크를 만듭니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event for each <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> it erases.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> 각각에 대 한 이벤트 <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 지우는 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The following example demonstrates how to erase strokes in a <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는의 스트로크를 지우는 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> called <ph id="ph2">`presenter`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> 호출 <ph id="ph2">`presenter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that specifies the area to be erased.</source>
          <target state="translated">지울 영역을 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)">
          <source>Replaces all strokes that are clipped by the specified rectangle with new strokes that do not enter the bounds of the specified rectangle.</source>
          <target state="translated">지정된 직사각형으로 클리핑된 모든 스크로크를 지정된 직사각형의 경계 안에 들어오지 않는 새 스트로크로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> might contain new strokes after the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 후 새 선 포함 될 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)">
          <source>For example, if the specified area is through the middle of a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>, the erase method removes that <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> and creates two new strokes.</source>
          <target state="translated">예를 들어, 지정된 된 영역의의 중간 통과 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>, 지우기 메서드를 제거 하는 <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 하 고 두 개의 새 스트로크를 만듭니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)">
          <source>All strokes that are entirely inside the specified rectangle are removed.</source>
          <target state="translated">지정된 된 사각형 안에 있는 모든 선은 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event for each <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> it erases.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> 각각에 대 한 이벤트 <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 지우는 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)">
          <source>The following example demonstrates how to erase the ink within the <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 내 잉크를 지우는 방법을 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> called <ph id="ph2">`presenter`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> 호출 <ph id="ph2">`presenter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> that specifies the path to be erased.</source>
          <target state="translated">지울 경로를 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph> that specifies the shape of the eraser.</source>
          <target state="translated">지우개의 모양을 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>Replaces all strokes that are clipped by the region created by the specified <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph> along the specified path with new Strokes that are not clipped by the region.</source>
          <target state="translated">지정한 경로를 따라 지정한 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph>에 의해 만들어진 영역으로 클리핑된 모든 스트로크를 해당 영역으로 클리핑되지 않은 새 스트로크로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> might contain new strokes after the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 후 새 선 포함 될 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>For example, if <ph id="ph1">`path`</ph> intersects the middle of a <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>, the erase method removes that <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> and creates two new strokes.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`path`</ph> 의 가운데와 교차 한 <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>, 지우기 메서드를 제거 하는 <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 하 고 두 개의 새 스트로크를 만듭니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event for each <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> it erases.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> 각각에 대 한 이벤트 <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 지우는 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The following example demonstrates how to erase ink along a specific path.</source>
          <target state="translated">다음 예제에서는 특정 경로 따라 잉크를 지우는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> called <ph id="ph2">`presenter`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> 호출 <ph id="ph2">`presenter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetBounds">
          <source>Returns the bounds of the strokes in the collection.</source>
          <target state="translated">컬렉션에 있는 스트로크의 범위를 반환합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that contains the bounds of the strokes in the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>에 있는 스트로크의 범위를 포함하는 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetBounds">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.GetBounds%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> that takes the appearance of the rendered <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.GetBounds%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> 는 렌더링 된 모양을 생긴다는 <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetBounds">
          <source>For example, if <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> is 10 display independent pixels (DIP) wide, the <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> includes the entire width of the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 독립적 픽셀 (DIP) 너비는 <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> 의 전체 너비를 포함 된 <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetBounds">
          <source>The following example demonstrates how to get the bounds of the <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> and draw them on the control.</source>
          <target state="translated">다음 예제에서는의 범위를 가져오는 방법을 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 컨트롤에이 그립니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetBounds">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> called <ph id="ph2">`inkCanvas1`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 호출 <ph id="ph2">`inkCanvas1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)">
          <source>The minimum percentage of each <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that must be contained within the lasso for it to be considered hit.</source>
          <target state="translated">적중된 것으로 간주되기 위해 올가미 내에 포함되어야 하는 각 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>의 최소 비율입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Windows.Ink.IncrementalLassoHitTester" /&gt;</ph> that hit tests the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> with a lasso (freehand) path.</source>
          <target state="translated">자유롭게 그릴 수 있는 올가미 경로를 사용하여 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.IncrementalLassoHitTester" /&gt;</ph>의 적중 테스트를 수행하는 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Ink.IncrementalLassoHitTester" /&gt;</ph> that hit tests the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.IncrementalLassoHitTester" /&gt;</ph>의 적중 테스트를 수행하는 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester%2A&gt;</ph> method returns an <ph id="ph2">&lt;xref:System.Windows.Ink.IncrementalLassoHitTester&gt;</ph> that considers a <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> to be "hit" when the lasso path surrounds it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Ink.IncrementalLassoHitTester&gt;</ph> 것으로 간주 한 <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> "적중" 올가미 경로로 둘러싸인를 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)">
          <source>This is useful for implementing features, such as the ability to select a stroke with a lasso tool.</source>
          <target state="translated">이 스트로크 올가미 도구를 선택 하는 등의 기능을 구현 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> uses an <ph id="ph2">&lt;xref:System.Windows.Ink.IncrementalLassoHitTester&gt;</ph> to implement the lasso selection tool.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 사용 하 여 프로그램 <ph id="ph2">&lt;xref:System.Windows.Ink.IncrementalLassoHitTester&gt;</ph> 올가미 선택 도구를 구현 하 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)">
          <source>The following example demonstrates how to get an <ph id="ph1">&lt;xref:System.Windows.Ink.IncrementalLassoHitTester&gt;</ph> that enables a user to select strokes with a lasso tool.</source>
          <target state="translated">다음 예제에서는 가져오는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Ink.IncrementalLassoHitTester&gt;</ph> 사용자가을 올가미 도구와 스트로크를 선택할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)">
          <source>To create a control that enables a user to select ink, see <bpt id="p1">[</bpt>How to: Select Ink from a Custom Control<ept id="p1">](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)</ept>.</source>
          <target state="translated">사용자가을 잉크를 선택할 수 있는 컨트롤을 만들려면 참조 <bpt id="p1">[</bpt>하는 방법: 사용자 지정 컨트롤을<ept id="p1">](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph> that specifies the tip of the stylus.</source>
          <target state="translated">스타일러스의 끝을 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" /&gt;</ph> that hit tests the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> with an erasing path.</source>
          <target state="translated">지우기 경로를 사용하여 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" /&gt;</ph>의 적중 테스트를 수행하는 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" /&gt;</ph> that hit tests the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" /&gt;</ph>의 적중 테스트를 수행하는 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A&gt;</ph> method returns an <ph id="ph2">&lt;xref:System.Windows.Ink.IncrementalStrokeHitTester&gt;</ph> that considers a <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> to be "hit" when the eraser path intersects it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Ink.IncrementalStrokeHitTester&gt;</ph> 것으로 간주 한 <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> "적중" 지우개 경로 교차 하 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)">
          <source>This is useful for implementing features, such as the ability to erase part of a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">이 기능 등의 일부 초기화 하는 기능을 구현 하는 데 유용는 <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> uses an <ph id="ph2">&lt;xref:System.Windows.Ink.IncrementalStrokeHitTester&gt;</ph> when the <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 사용 하 여 프로그램 <ph id="ph2">&lt;xref:System.Windows.Ink.IncrementalStrokeHitTester&gt;</ph> 때는 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 속성이 <ph id="ph4">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)">
          <source>The following example demonstrates how to get an <ph id="ph1">&lt;xref:System.Windows.Ink.IncrementalStrokeHitTester&gt;</ph> that can be used to erase part of a <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 가져오는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Ink.IncrementalStrokeHitTester&gt;</ph> 의 일부를 지우는 사용할 수 있는 한 <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)">
          <source>To create a control that enables a user to erase ink, see <bpt id="p1">[</bpt>How to: Erase Ink on a Custom Control<ept id="p1">](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)</ept>.</source>
          <target state="translated">사용자가 잉크 지울 수 있도록 하는 컨트롤을 만들려면 참조 <bpt id="p1">[</bpt>하는 방법: 사용자 지정 컨트롤을<ept id="p1">](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> associated with the custom property to get.</source>
          <target state="translated">가져올 사용자 지정 속성과 연결된 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)">
          <source>Returns the value of the custom property associated with the specified <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>와 연결된 사용자 지정 속성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)">
          <source>The value of the custom property associated with the specified <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>와 연결된 사용자 지정 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A&gt;</ph> methods enable you to add custom properties to a <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A&gt;</ph> 메서드를 사용 하면 사용자 지정 속성을 추가할 수는 <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)">
          <source>You can then include extra information with a <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated">그런 다음에 추가 정보를 포함할 수는 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)">
          <source>The following example demonstrates how to add and get custom property data.</source>
          <target state="translated">다음 예제에는 추가 하 고 사용자 지정 속성 데이터를 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)">
          <source>The <ph id="ph1">`AddTimeStamp_Click`</ph> method uses the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A&gt;</ph> method to add the current time to the <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`AddTimeStamp_Click`</ph> 메서드는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A&gt;</ph> 현재 시간에 추가 하는 메서드는 <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)">
          <source>The <ph id="ph1">`GetTimeStap_Click`</ph> method uses the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A&gt;</ph> method to retrieve the timestamp from the <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`GetTimeStap_Click`</ph> 메서드는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A&gt;</ph> 타임 스탬프를 검색 하는 메서드는 <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> called <ph id="ph2">`inkCanvas1`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 호출 <ph id="ph2">`inkCanvas1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)">
          <source><ph id="ph1">&lt;paramref name="propertyDataId" /&gt;</ph> is not associated with a custom property of the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="propertyDataId" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>의 사용자 지정 속성과 연결되지 않은 경우</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetPropertyDataIds">
          <source>Returns the GUIDs of any custom properties associated with the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>과 연결된 사용자 지정 속성의 GUID를 반환합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.GetPropertyDataIds">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that represent the custom property identifiers.</source>
          <target state="translated">사용자 지정 속성 ID를 나타내는 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.GetPropertyDataIds">
          <source>The following example demonstrates how to get the custom property identifiers from the <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서 사용자 지정 속성 id를 가져오는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.StrokeCollection">
          <source>Returns a collection of strokes contained within the specified area.</source>
          <target state="translated">지정한 영역 내에 포함된 스트로크의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)">
          <source>The point to hit test.</source>
          <target state="translated">적중 테스트를 수행할 점입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)">
          <source>Returns a collection of strokes that intersect the specified point.</source>
          <target state="translated">지정한 점과 교차하는 스트로크의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> objects that intersect the specified point.</source>
          <target state="translated">지정한 점과 교차하는 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)">
          <source>The following example demonstrates how to get the strokes that intersect the specified <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 지정 된 교차 하는 스트로크를 가져오는 <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> called <ph id="ph2">`presenter`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> 호출 <ph id="ph2">`presenter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> that represents the bounds of the area to be hit tested.</source>
          <target state="translated">적중 테스트를 수행할 영역의 범위를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>The acceptable length of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>, as a percentage, for <bpt id="p1">&lt;c&gt;</bpt>lassoPoints<ept id="p1">&lt;/c&gt;</ept> to contain.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>lassoPoints<ept id="p1">&lt;/c&gt;</ept>에 포함될 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>의 허용 가능한 길이이며 백분율로 표시됩니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>Returns a collection of strokes that have at least the specified percentage of length within the specified area.</source>
          <target state="translated">지정한 영역 내에서 길이가 지정한 비율 이상인 스트로크의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that has strokes with at least the specified percentage within the <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph> array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> 배열 내에서 지정한 비율 이상인 스트로크가 있는 <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>The following example demonstrates how to remove all strokes that are at least 80 percent within the specified lasso from a <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 모든 스트로크 내에서 지정한 올가미 적어도 80%를 제거 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>This is useful when a custom control enables the user to select ink with a lasso.</source>
          <target state="translated">사용자 지정 컨트롤 잉크 올가미로를 선택할 수 있도록 하는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>To create a control that enables a user to select ink with a lasso, see <bpt id="p1">[</bpt>How to: Select Ink from a Custom Control<ept id="p1">](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)</ept>.</source>
          <target state="translated">사용자가 올가미로 잉크를 선택할 수 있도록 하는 컨트롤을 만들려면 참조 <bpt id="p1">[</bpt>하는 방법: 사용자 지정 컨트롤을<ept id="p1">](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="lassoPoints" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="lassoPoints" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="percentageWithinLasso" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="percentageWithinLasso" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="lassoPoints" /&gt;</ph> contains an empty array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="lassoPoints" /&gt;</ph>에 빈 배열이 포함된 경우</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="percentageWithinLasso" /&gt;</ph> is less than 0 or greater than 100.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="percentageWithinLasso" /&gt;</ph>가 0보다 작거나 100보다 큽니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>An array to type <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> that represents the path to be hit tested.</source>
          <target state="translated">적중 테스트를 수행할 경로를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph> that specifies the shape of <bpt id="p1">&lt;c&gt;</bpt>eraserPath<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>eraserPath<ept id="p1">&lt;/c&gt;</ept>의 모양을 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>Returns a collection of strokes that intersect with the specified path.</source>
          <target state="translated">지정한 경로와 교차하는 스트로크의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> of strokes that intersect with <ph id="ph2">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="path" /&gt;</ph>와 교차하는 스트로크의 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The following example changes the color of all the strokes that intersect the path that is created by the <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> array.</source>
          <target state="translated">모든 스트로크 경로 교차에 의해 만들어진의 색을 변경 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> called <ph id="ph2">`presenter`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> 호출 <ph id="ph2">`presenter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> to hit test.</source>
          <target state="translated">적중 횟수 테스트에 대한 <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)">
          <source>The size of the area around the <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> to hit test.</source>
          <target state="translated">적중 테스트를 수행할 <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> 주변 영역의 크기입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)">
          <source>Returns a collection of strokes that intersect the specified area.</source>
          <target state="translated">지정한 영역과 교차하는 스트로크의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> objects that intersect the specified point.</source>
          <target state="translated">지정한 점과 교차하는 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)">
          <source>The following example demonstrates how to get the strokes that intersect the specified <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 지정 된 교차 하는 스트로크를 가져오는 <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> called <ph id="ph2">`presenter`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> 호출 <ph id="ph2">`presenter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that specifies the bounds to be hit tested.</source>
          <target state="translated">적중 테스트를 수행할 범위를 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)">
          <source>The minimum required length of a Stroke that must exist within bounds for it to be considered hit.</source>
          <target state="translated">적중된 것으로 간주되기 위해 범위 내에 있어야 하는 스트로크의 최소 필수 길이입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)">
          <source>Returns a collection of strokes that have at least the specified percentage of length within the specified rectangle.</source>
          <target state="translated">지정한 사각형에서 길이가 지정한 비율 이상인 스트로크의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that has strokes with at least the specified percentage within the <ph id="ph2">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> 내에서 지정한 비율 이상인 스트로크가 있는 <ph id="ph2">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)">
          <source>The following example erases the strokes that are at least 50% within the bounds of the <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 지웁니다 스트로크를 범위 내에서 최소 50%는 <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> called <ph id="ph2">`presenter`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> 호출 <ph id="ph2">`presenter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)">
          <source>The stroke whose position is required.</source>
          <target state="translated">위치가 필요한 스트로크입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)">
          <source>Returns the index of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> in the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>에 있는 지정한 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>의 인덱스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)">
          <source>The index of the stroke.</source>
          <target state="translated">스트로크의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.IndexOf%2A&gt;</ph> method returns -1 if <ph id="ph2">`stroke`</ph> is not a member of the <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.IndexOf%2A&gt;</ph> 경우-1이 반환 <ph id="ph2">`stroke`</ph> 의 구성원이 아니므로 <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="F:System.Windows.Ink.StrokeCollection.InkSerializedFormat">
          <source>Represents the native persistence format for ink data.</source>
          <target state="translated">잉크 데이터에 대한 네이티브 지속성 형식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Ink.StrokeCollection.InkSerializedFormat">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.InkSerializedFormat&gt;</ph> field to specify the format of the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> when you transfer data, such as when you copy the <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> to the Clipboard.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.InkSerializedFormat&gt;</ph> 필드의 형식을 지정 하는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 복사할 때와 같이 데이터를 전송 하는 경우는 <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 클립보드에 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Ink.StrokeCollection.InkSerializedFormat">
          <source>The following example demonstrates how to copy a <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> to the Clipboard.</source>
          <target state="translated">다음 예제에서는 복사 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 는 클립보드에 복사 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Ink.StrokeCollection.InkSerializedFormat">
          <source>The example specifies that the <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> is in Ink Serialized Format (ISF), so that other programs, such as Microsoft Office Word can accept the copied data.</source>
          <target state="translated">이 예에서는 지정 하는 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> Microsoft Office Word에서 복사한 데이터를 수락할 수와 같은 다른 프로그램이 있도록에 잉크 직렬화 형식 ISF (),이 있습니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)">
          <source>The specified index.</source>
          <target state="translated">지정한 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)">
          <source>The specified stroke</source>
          <target state="translated">지정된 스트로크입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)">
          <source>Inserts a stroke into the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> at the specified index.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>의 지정된 인덱스에 스트로크를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Occurs when any <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> 속성이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollectionChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollectionChangedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.StrokeCollection.StrokesChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Ink.StrokeCollection.StrokesChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.OnStrokesChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate, which is the preferred technique for handling the event in a derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.OnStrokesChanged%2A&gt;</ph> 메서드는 파생된 클래스에서 이벤트를 처리 하기 위한 기본 방법 대리자를 연결 하지 않고도 이벤트를 처리 하는 파생된 클래스를 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the <ph id="ph2">&lt;see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" /&gt;</ph> method for the base class so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" /&gt;</ph> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged">
          <source>Occurs when custom property is added or removed from the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated">사용자 지정 속성이 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>에서 추가되거나 제거될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged">
          <source>The following example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged&gt;</ph> event.</source>
          <target state="translated">다음 예제에서는 처리 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged">
          <source>This example assumes that there is a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> called <ph id="ph2">`dateTimeGuid`</ph> and the <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged&gt;</ph> event is connected to the event handler defined in this example.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Guid&gt;</ph> 호출 <ph id="ph2">`dateTimeGuid`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged&gt;</ph> 이벤트가이 예에서 정의 된 이벤트 처리기에 연결 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> to remove from the collection.</source>
          <target state="translated">컬렉션에서 제거할 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)">
          <source>Removes the specified strokes from the collection.</source>
          <target state="translated">지정된 스트로크을 컬렉션에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Remove%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event for each <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> it removes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Remove%2A&gt;</ph> 메서드 발생은 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> 각각에 대 한 이벤트 <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 제거 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)">
          <source>The following example demonstrates how to remove all strokes that are at least 80 percent within the specified lasso from a <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 모든 스트로크 내에서 지정한 올가미 적어도 80%를 제거 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)">
          <source>This is useful when a custom control enables the user to select ink with a lasso.</source>
          <target state="translated">사용자 지정 컨트롤 잉크 올가미로를 선택할 수 있도록 하는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)">
          <source>To create a control that enables a user to select ink with a lasso, see <bpt id="p1">[</bpt>How to: Select Ink from a Custom Control<ept id="p1">](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)</ept>.</source>
          <target state="translated">사용자가 올가미로 잉크를 선택할 수 있도록 하는 컨트롤을 만들려면 참조 <bpt id="p1">[</bpt>하는 방법: 사용자 지정 컨트롤을<ept id="p1">](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)">
          <source>The specified index.</source>
          <target state="translated">지정한 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)">
          <source>Removes the stroke at the specified index from the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>에서 지정한 인덱스의 스트로크를 제거합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> associated with the custom property to remove.</source>
          <target state="translated">제거할 사용자 지정 속성과 연결된 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)">
          <source>Removes the custom property associated with the specified <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>와 연결된 사용자 지정 속성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)">
          <source>The following example demonstrates how to remove a custom property from the <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서 사용자 지정 속성을 제거 하는 방법의 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> called <ph id="ph2">`inkCanvas1`</ph> and a <ph id="ph3">&lt;xref:System.Guid&gt;</ph> called <ph id="ph4">`timestamp`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 호출 <ph id="ph2">`inkCanvas1`</ph> 및 <ph id="ph3">&lt;xref:System.Guid&gt;</ph> 호출 <ph id="ph4">`timestamp`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.StrokeCollection">
          <source>Replaces the strokes in the collection.</source>
          <target state="translated">컬렉션에 있는 스트로크를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> to replace.</source>
          <target state="translated">바꿀 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated">소스 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)">
          <source>Replaces the specified <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> with the specified <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>를 지정한 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>으로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Replace%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Replace%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)">
          <source>The following example demonstrates how to replace the selected strokes on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> with another <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 선택한 스트로크에 대체 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 다른 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> called <ph id="ph2">`inkCanvas1`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 호출 <ph id="ph2">`inkCanvas1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)">
          <source><ph id="ph1">&lt;paramref name="strokesToReplace" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="strokesToReplace" /&gt;</ph>가 비어 있는 경우</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)">
          <source><ph id="ph1">&lt;paramref name="strokesToReplaceWith" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="strokesToReplaceWith" /&gt;</ph>가 비어 있는 경우</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> in <ph id="ph2">&lt;paramref name="strokesToReplaceWith" /&gt;</ph> is already in <ph id="ph3">&lt;paramref name="strokesToReplace" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="strokesToReplaceWith" /&gt;</ph>의 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>가 이미 <ph id="ph3">&lt;paramref name="strokesToReplace" /&gt;</ph>에 있는 경우</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated">소스 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
          <source>Replaces the specified <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> with a new <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>을 새 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>으로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Replace%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event for each <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> it replaces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Replace%2A&gt;</ph> 메서드 발생은 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> 각각에 대 한 이벤트 <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 대체 합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
          <source>The following example demonstrates how to replace the selected strokes on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> with another <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 선택한 스트로크에 대체 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 다른 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> called <ph id="ph2">`inkCanvas1`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 호출 <ph id="ph2">`inkCanvas1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
          <source><ph id="ph1">&lt;paramref name="strokesToReplace" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="strokesToReplace" /&gt;</ph>가 비어 있는 경우</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
          <source><ph id="ph1">&lt;paramref name="strokesToReplaceWith" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="strokesToReplaceWith" /&gt;</ph>가 비어 있는 경우</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> in <ph id="ph2">&lt;paramref name="strokesToReplaceWith" /&gt;</ph> is already in <ph id="ph3">&lt;paramref name="strokesToReplace." /&gt;</ph></source>
          <target state="translated"><ph id="ph2">&lt;paramref name="strokesToReplaceWith" /&gt;</ph>의 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>가 이미 <ph id="ph3">&lt;paramref name="strokesToReplace." /&gt;</ph>에 있는 경우</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
          <source>The strokes in <ph id="ph1">&lt;paramref name="strokesToReplaceWith" /&gt;</ph> are not continuous.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="strokesToReplaceWith" /&gt;</ph>의 스트로크가 비연속적인 경우</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.StrokeCollection">
          <source>Saves the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>을 저장합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to which to save the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>를 저장할 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)">
          <source>Saves the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>을 저장합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Save%2A&gt;</ph> method saves the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> as Ink Serialized Format (ISF).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Save%2A&gt;</ph> 메서드 저장은 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 로 잉크 직렬화 형식 (ISF).</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)">
          <source>The following example demonstrates how to save a <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> to a file by using the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 저장 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 를 사용 하 여 파일에는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> called <ph id="ph2">`inkCanvas1`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 호출 <ph id="ph2">`inkCanvas1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to which to save the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>를 저장할 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to compress the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>을 압축하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)">
          <source>Saves the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> and compresses it, when specified.</source>
          <target state="translated">지정된 경우 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>을 지정한 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>에 저장하고 압축합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Save%2A&gt;</ph> method saves the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> as Ink Serialized Format (ISF).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.Save%2A&gt;</ph> 메서드 저장은 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 로 잉크 직렬화 형식 (ISF).</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)">
          <source>The following example demonstrates how to save a <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> to a file by using the <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 저장 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 를 사용 하 여 파일에는 <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> called <ph id="ph2">`inkCanvas1`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 호출 <ph id="ph2">`inkCanvas1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)">
          <source>The position at which to replace the stroke.</source>
          <target state="translated">스트로크를 바꿀 위치입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)">
          <source>The stroke to replace the current stroke.</source>
          <target state="translated">현재 스트로크를 바꿀 스트로크입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)">
          <source>Replaces the stroke at the specified index.</source>
          <target state="translated">지정한 인덱스에 있는 스트로크를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.StrokeCollection.StrokesChanged">
          <source>Occurs when a <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> in the collection changes.</source>
          <target state="translated">컬렉션의 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>가 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.StrokeCollection.StrokesChanged">
          <source>The following example adds the current time as a custom property to each new stroke in the <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event handler.</source>
          <target state="translated">다음 예제에서는 사용자 지정 속성으로 현재 시간에서 각 새 스트로크에 추가 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.StrokeCollection.StrokesChanged">
          <source>The example assumes that the <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event is connected to the event handler defined in this example.</source>
          <target state="translated">이 예에서는 가정 하는 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> 이벤트가이 예에서 정의 된 이벤트 처리기에 연결 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph> which specifies the transformation to perform on the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph>에서 수행할 변환을 지정하는 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to apply the transformation to the tip of the stylus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스타일러스의 끝에 변환을 적용하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>Modifies each of the <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.StylusPoints" /&gt;</ph> and optionally the <ph id="ph2">&lt;see cref="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" /&gt;</ph> for each stroke in the <ph id="ph3">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> according to the specified <ph id="ph4">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph>.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.StylusPoints" /&gt;</ph>에 따라 <ph id="ph2">&lt;see cref="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" /&gt;</ph>의 각 스트로크에 대한 각 <ph id="ph3">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>를 수정하고 <ph id="ph4">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph>을 선택적으로 수정합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>When <ph id="ph1">`applyToStylusTip`</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection.Transform%2A&gt;</ph> method affects the shape of the stylus tip, as well as the position of the strokes.</source>
          <target state="translated">때 <ph id="ph1">`applyToStylusTip`</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection.Transform%2A&gt;</ph> 메서드 선의 위치 뿐만 아니라 스타일러스 팁의 모양에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>For example, if you rotate a <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 90 degrees, the strokes move around an axis and the height and width of the strokes appear to be inverted.</source>
          <target state="translated">예를 들어, 회전 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 90도 스트로크 축을 중심으로 이동 하 고 반전 높이 너비가 표시 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>The following example demonstrates how to move all the strokes on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 모든 스트로크 이동 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> called <ph id="ph2">`inkCanvas1`</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 호출 <ph id="ph2">`inkCanvas1`</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>