<Namespace Name="System.Text">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34cddae6e8018aa3245a0db0838a6b65070528ea" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30736137" />
  </Metadata>
  <Docs>
    <summary>
      <span data-ttu-id="c70c4-101">
        <see cref="N:System.Text" /> 네임스페이스에는 ASCII 및 유니코드 문자 인코딩을 나타내는 클래스, 문자와 바이트 블록 간을 변환하기 위한 추상 기본 클래스, <see cref="T:System.String" />의 중간 인스턴스를 만들지 않고 <see cref="T:System.String" /> 개체를 조정하고 서식을 지정하는 도우미 클래스가 포함되어 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c70c4-101">The <see cref="N:System.Text" /> namespace contains classes that represent ASCII and Unicode character encodings; abstract base classes for converting blocks of characters to and from blocks of bytes; and a helper class that manipulates and formats <see cref="T:System.String" /> objects without creating intermediate instances of <see cref="T:System.String" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70c4-102">인코딩 클래스는 인코딩이 서로 다른 코드 페이지 및 유니코드 인코딩 간 변환 하는 데 주로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-102">The encoding classes are primarily intended to convert between different encodings or code pages and a Unicode encoding.</span></span> <span data-ttu-id="c70c4-103"><xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> .NET Framework에서 내부적으로 사용 됩니다 (utf-16) 인코딩 및 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 인코딩는 대개 문자 데이터 저장에 대 한 컴퓨터와 문화권에서 이동성을 보장 합니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-103"><xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> (UTF-16) encoding is used internally by the .NET Framework, and <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> encoding is often used for storing character data to ensure portability across machines and cultures.</span></span>  
  
 <span data-ttu-id="c70c4-104">파생 된 클래스 <xref:System.Text.Encoding> , 바이트의 시퀀스를 인코딩할 수 없는 문자 또는 문자를 디코딩할 수 없는 바이트의 처리 방법을 결정 하는 대체 (fallback) 전략을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-104">The classes derived from <xref:System.Text.Encoding> enable you to choose a fallback strategy, which determines how characters that cannot be encoded into a sequence of bytes, or bytes that cannot be decoded into characters, are handled.</span></span> <span data-ttu-id="c70c4-105">다음 중 하나를 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-105">You can choose one of the following:</span></span>  
  
-   <span data-ttu-id="c70c4-106">예외 대체 (fallback)입니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-106">Exception fallback.</span></span> <span data-ttu-id="c70c4-107">사용 하 여 데이터 오류 발생 시 예외를 throw 하도록 선택할 수 있습니다는 `throwonerror` 를 사용 하 여 일부 클래스 생성자에서 사용할 수 있는 플래그는 <xref:System.Text.EncoderExceptionFallback> 및 <xref:System.Text.DecoderExceptionFallback> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-107">You can choose to throw exceptions on data errors either by using a `throwonerror` flag that is available in some class constructors or by using the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> classes.</span></span> <span data-ttu-id="c70c4-108">데이터 스트림 무결성에 대 한 염려 하는 경우 예외를 throw 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-108">If you are concerned about the integrity of the data stream, throwing on an exception is recommended.</span></span>  
  
-   <span data-ttu-id="c70c4-109">교체 대체 (fallback)입니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-109">Replacement fallback.</span></span> <span data-ttu-id="c70c4-110">사용할 수는 <xref:System.Text.EncoderFallback> 및 <xref:System.Text.DecoderFallback> 문자를 자동으로 변경 하는 클래스 "?" 또는 유니코드 replacement character (U + FFFD).</span><span class="sxs-lookup"><span data-stu-id="c70c4-110">You can use the <xref:System.Text.EncoderFallback> and <xref:System.Text.DecoderFallback> classes to silently change a character to "?" or to the Unicode replacement character (U+FFFD).</span></span>  
  
-   <span data-ttu-id="c70c4-111">최적된 대체 (fallback)입니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-111">Best-fit fallback.</span></span> <span data-ttu-id="c70c4-112">이 옵션의 다른 인코딩으로 문자 인코딩을의 문자를 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-112">This option maps a character in one encoding to a character in another encoding.</span></span> <span data-ttu-id="c70c4-113">자동 맞춤된 대체 수 있기 때문에 데이터 손실이 나 혼동 하지 않는 것이 좋습니다 및 간단한 보다 느린 "?" 문자 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-113">Best fit fallback is often not recommended because it can cause data loss and confusion, and is slower than simple "?" character replacements.</span></span> <span data-ttu-id="c70c4-114">그러나 ANSI 코드 페이지에는 가장 적합된 한 동작이 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-114">However, for ANSI code pages the best-fit behavior is the default.</span></span>  
  
 <span data-ttu-id="c70c4-115"><xref:System.Text.StringBuilder> 클래스는 단일 문자열에 광범위 한 조작을 수행 하는 작업을 위해 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-115">The <xref:System.Text.StringBuilder> class is designed for operations that perform extensive manipulations on a single string.</span></span> <span data-ttu-id="c70c4-116">와 달리는 <xref:System.String> 클래스는 <xref:System.Text.StringBuilder> 클래스는 변경할 수를 연결 하거나 문자열을 삭제할 때 더 나은 성능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-116">Unlike the <xref:System.String> class, the <xref:System.Text.StringBuilder> class is mutable and provides better performance when concatenating or deleting strings.</span></span>  
  
 <span data-ttu-id="c70c4-117">에 대 한 자세한 내용은 <xref:System.Text?displayProperty=nameWithType>, 참조 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 합니다.</span><span class="sxs-lookup"><span data-stu-id="c70c4-117">For more information about <xref:System.Text?displayProperty=nameWithType>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>