<Type Name="ParameterXPathQueryGenerator" FullName="System.ServiceModel.Description.ParameterXPathQueryGenerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ad67104824b435ceb69877b874d76b5ec457ba4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36417330" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ParameterXPathQueryGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ParameterXPathQueryGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ParameterXPathQueryGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class ParameterXPathQueryGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParameterXPathQueryGenerator abstract sealed" />
  <TypeSignature Language="F#" Value="type ParameterXPathQueryGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="af70c-101">데이터 계약에서 XPath를 만들 수 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="af70c-101">Enables the creation of an XPath from a data contract.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFromDataContractSerializer">
      <MemberSignature Language="C#" Value="public static string CreateFromDataContractSerializer (System.Xml.Linq.XName serviceContractName, string operationName, string parameterName, bool isReply, Type type, System.Reflection.MemberInfo[] pathToMember, out System.Xml.XmlNamespaceManager namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateFromDataContractSerializer(class System.Xml.Linq.XName serviceContractName, string operationName, string parameterName, bool isReply, class System.Type type, class System.Reflection.MemberInfo[] pathToMember, [out] class System.Xml.XmlNamespaceManager&amp; namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ParameterXPathQueryGenerator.CreateFromDataContractSerializer(System.Xml.Linq.XName,System.String,System.String,System.Boolean,System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CreateFromDataContractSerializer(System::Xml::Linq::XName ^ serviceContractName, System::String ^ operationName, System::String ^ parameterName, bool isReply, Type ^ type, cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ pathToMember, [Runtime::InteropServices::Out] System::Xml::XmlNamespaceManager ^ % namespaces);" />
      <MemberSignature Language="F#" Value="static member CreateFromDataContractSerializer : System.Xml.Linq.XName * string * string * bool * Type * System.Reflection.MemberInfo[] *  -&gt; string" Usage="System.ServiceModel.Description.ParameterXPathQueryGenerator.CreateFromDataContractSerializer (serviceContractName, operationName, parameterName, isReply, type, pathToMember, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceContractName" Type="System.Xml.Linq.XName" />
        <Parameter Name="operationName" Type="System.String" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="isReply" Type="System.Boolean" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="pathToMember" Type="System.Reflection.MemberInfo[]" />
        <Parameter Name="namespaces" Type="System.Xml.XmlNamespaceManager&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="serviceContractName">
          <span data-ttu-id="af70c-102">서비스 계약 네임스페이스를 포함하는 서비스 계약 XML 요소의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af70c-102">The name of the service contract XML element that contains the service contract namespace.</span>
          </span>
        </param>
        <param name="operationName">
          <span data-ttu-id="af70c-103">서비스 작업의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af70c-103">The name of the service operation.</span>
          </span>
        </param>
        <param name="parameterName">
          <span data-ttu-id="af70c-104">서비스 작업 매개 변수의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af70c-104">The name of the service operation parameter.</span>
          </span>
        </param>
        <param name="isReply">
          <span data-ttu-id="af70c-105">서비스 작업이 응답임을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af70c-105">
              <see langword="true" /> to indicate that the service operation is a response; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="af70c-106">데이터 계약입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af70c-106">The data contract.</span>
          </span>
        </param>
        <param name="pathToMember">
          <span data-ttu-id="af70c-107">
            <see cref="M:System.Type.GetMember(System.String)" /> 클래스의 <see cref="T:System.Type" /> 메서드를 사용하여 생성되는 메타데이터로, 쿼리를 생성하는 데 사용되는 특정 데이터 멤버를 가리킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af70c-107">The metadata, generated using the <see cref="M:System.Type.GetMember(System.String)" /> method of the <see cref="T:System.Type" /> class, which points to the specific data member used to generated the query.</span>
          </span>
        </param>
        <param name="namespaces">
          <span data-ttu-id="af70c-108">이 메서드가 반환될 때 XML 네임스페이스와 데이터 계약에서 찾은 해당 접두사를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af70c-108">When this method returns, contains the XML namespaces and their prefixes found in the data contract.</span>
          </span>
          <span data-ttu-id="af70c-109">이 메서드에서 이 매개 변수를 전달하기 전에 먼저 해당 매개 변수를 인스턴스화해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af70c-109">Instantiate this parameter before passing it in this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af70c-110">지정된 작업 이름, 매개 변수 이름 및 데이터 계약 정보를 사용하여 XPath를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af70c-110">Creates an XPath using the specified operation name, parameter name, and data contract information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af70c-111">지정된 작업 이름, 매개 변수 이름 및 데이터 계약 정보에서 생성된 XPath입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af70c-111">The XPath generated from the specified operation name, parameter name, and data contract information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>