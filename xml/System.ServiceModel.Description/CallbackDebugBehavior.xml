<Type Name="CallbackDebugBehavior" FullName="System.ServiceModel.Description.CallbackDebugBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="913f28a003db0dcbcb7b7e90183e095b075369aa" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37456667" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CallbackDebugBehavior : System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallbackDebugBehavior extends System.Object implements class System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.CallbackDebugBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class CallbackDebugBehavior&#xA;Implements IEndpointBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallbackDebugBehavior : System::ServiceModel::Description::IEndpointBehavior" />
  <TypeSignature Language="F#" Value="type CallbackDebugBehavior = class&#xA;    interface IEndpointBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IEndpointBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="50d6d-101">WCF(Windows Communication Foundation) 콜백 개체에 대한 서비스 디버깅을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50d6d-101">Enables service debugging for a Windows Communication Foundation (WCF) callback object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50d6d-102">클라이언트 콜백 개체의 관리되는 예외 정보를 디버깅을 위해 서비스로 다시 보내려면 응용 프로그램 구성 파일에서 또는 프로그래밍 방식으로 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 속성을 `true`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-102">Set the <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> property to `true` from an application configuration file or programmatically to enable the flow of managed exception information in a client callback object back to the service for debugging purposes.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="50d6d-103">관리되는 예외 정보를 서비스로 이동하면 예외 정보가 내부 클라이언트 구현 정보를 노출하여 권한이 없는 서비스에서 사용할 수 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-103">Returning managed exception information to services can be a security risk because exception details expose information about the internal client implementation that could be used by unauthorized services.</span></span> <span data-ttu-id="50d6d-104">또한 프로그래밍 방식으로 <xref:System.ServiceModel.Description.CallbackDebugBehavior> 속성을 설정할 수도 있지만 배포 시 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 비활성화를 잊기 쉬울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-104">In addition, although the <xref:System.ServiceModel.Description.CallbackDebugBehavior> properties can also be set programmatically, it can be easy to forget to disable <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> when deploying.</span></span>  
  
 <span data-ttu-id="50d6d-105">보안 문제와 관련이 있으므로 다음 작업을 수행하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-105">Because of the security issues involved, it is strongly recommended that:</span></span>  
  
-   <span data-ttu-id="50d6d-106">응용 프로그램 구성 파일을 사용하여 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 속성 값을 `true`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-106">You use an application configuration file to set the value of the <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> property to `true`.</span></span>  
  
-   <span data-ttu-id="50d6d-107">이 작업은 제어된 디버깅 시나리오에서만 수행하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-107">You only do so only in controlled debugging scenarios.</span></span>  
  
 <span data-ttu-id="50d6d-108">관리 되는 예외 정보와 관련 된 보안 문제에 대 한 자세한 내용은 참조 하세요. [지정 및 계약 및 서비스에서 오류 처리](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-108">For more information about the security issues related to managed exception information, see [Specifying and Handling Faults in Contracts and Services](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).</span></span>  
  
 <span data-ttu-id="50d6d-109">사용 하 여이 특성의 값을 설정할 수도 있습니다는 [ &lt;callbackDebug&gt; ](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md) 클라이언트 응용 프로그램 구성 파일의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-109">You can also set the values of this attribute by using the [&lt;callbackDebug&gt;](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md) element in a client application configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50d6d-110">다음 코드 예제에서는 클라이언트를 관리 되는 예외 정보에서에서 반환할 클라이언트 콜백 개체가 SOAP 메시지의 WCF에 지시 하는 구성 파일을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-110">The following code example shows a client configuration file that instructs WCF to return managed exception information from a client callback object in SOAP messages.</span></span>  
  
 [!code-xml[SCA.CallbackContract#4](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackDebugBehavior (bool includeExceptionDetailInFaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeExceptionDetailInFaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.CallbackDebugBehavior.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (includeExceptionDetailInFaults As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackDebugBehavior(bool includeExceptionDetailInFaults);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.CallbackDebugBehavior : bool -&gt; System.ServiceModel.Description.CallbackDebugBehavior" Usage="new System.ServiceModel.Description.CallbackDebugBehavior includeExceptionDetailInFaults" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="includeExceptionDetailInFaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeExceptionDetailInFaults">
          <span data-ttu-id="50d6d-111">WCF 콜백 개체가 서비스로 다시 보낸 SOAP 오류 정보에 관리되는 예외 정보를 포함할지 여부를 제어합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-111">Controls whether a WCF callback object includes managed exception information in the detail of the SOAP faults sent back to the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50d6d-112">
            <see cref="T:System.ServiceModel.Description.CallbackDebugBehavior" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Description.CallbackDebugBehavior" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50d6d-113">생성자는 <xref:System.ServiceModel.Description.CallbackDebugBehavior> 속성 값이 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 값인 `includeExceptionDetailInFaults` 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-113">The constructor creates a <xref:System.ServiceModel.Description.CallbackDebugBehavior> object in which the value of the <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> property is the value of `includeExceptionDetailInFaults`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionDetailInFaults">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionDetailInFaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionDetailInFaults" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeExceptionDetailInFaults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeExceptionDetailInFaults { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeExceptionDetailInFaults : bool with get, set" Usage="System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50d6d-114">클라이언트 콜백 개체가 관리되는 예외 정보를 SOAP 오류의 형태로 서비스에 반환하는지 여부를 제어하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-114">Gets or sets a value that controls whether client callback objects return managed exception information in SOAP faults back to the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50d6d-115">
            <see langword="true" /> WCF 관리 되는 클라이언트 콜백 예외 정보를 SOAP 오류 형태로 반환 서비스 디버깅을 위해 이중 통신; 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-115">
              <see langword="true" /> if WCF returns managed client callback exception information in the SOAP faults for service debugging purposes in duplex communication; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="50d6d-116">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-116">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50d6d-117">클라이언트 콜백 개체의 관리되는 예외 정보를 디버깅을 위해 서비스로 다시 보내려면 응용 프로그램 구성 파일에서 또는 프로그래밍 방식으로 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 속성을 `true`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-117">Set the <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> property to `true` from an application configuration file or programmatically to enable the flow of managed exception information in a client callback object back to the service for debugging purposes.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="50d6d-118">관리되는 예외 정보를 서비스로 이동하면 예외 정보가 내부 클라이언트 구현 정보를 노출하여 권한이 없는 서비스에서 사용할 수 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-118">Returning managed exception information to services can be a security risk because exception details expose information about the internal client implementation that could be used by unauthorized services.</span></span> <span data-ttu-id="50d6d-119">또한 프로그래밍 방식으로 <xref:System.ServiceModel.Description.CallbackDebugBehavior> 속성을 설정할 수도 있지만 배포 시 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 비활성화를 잊기 쉬울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-119">In addition, although the <xref:System.ServiceModel.Description.CallbackDebugBehavior> properties can also be set programmatically, it can be easy to forget to disable <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> when deploying.</span></span>  
  
 <span data-ttu-id="50d6d-120">보안 문제와 관련이 있으므로 다음 작업을 수행하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-120">Because of the security issues involved, it is strongly recommended that:</span></span>  
  
-   <span data-ttu-id="50d6d-121">응용 프로그램 구성 파일을 사용하여 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 속성 값을 `true`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-121">You use an application configuration file to set the value of the <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> property to `true`.</span></span>  
  
-   <span data-ttu-id="50d6d-122">이 작업은 제어된 디버깅 시나리오에서만 수행하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-122">You only do so only in controlled debugging scenarios.</span></span>  
  
 <span data-ttu-id="50d6d-123">관리 되는 예외 정보와 관련 된 보안 문제에 대 한 자세한 내용은 참조 하세요. [지정 및 계약 및 서비스에서 오류 처리](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-123">For more information about the security issues related to managed exception information, see [Specifying and Handling Faults in Contracts and Services](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).</span></span>  
  
### <a name="to-enable-or-disable-a-feature-of-callbackdebugbehavior-using-a-configuration-file"></a><span data-ttu-id="50d6d-124">구성 파일을 사용하여 CallbackDebugBehavior의 기능을 사용하거나 사용하지 않도록 설정하려면</span><span class="sxs-lookup"><span data-stu-id="50d6d-124">To enable or disable a feature of CallbackDebugBehavior using a configuration file</span></span>  
  
1.  <span data-ttu-id="50d6d-125">추가 된 `behaviorConfiguration` 특성을 [ \<끝점 >](http://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017) WCF 클라이언트 응용 프로그램에 대 한 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-125">Add a `behaviorConfiguration` attribute to the client [\<endpoint>](http://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017) element for your WCF client application.</span></span> <span data-ttu-id="50d6d-126"><xref:System.ServiceModel.Description.CallbackDebugBehavior> 동작은 끝점 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-126">The <xref:System.ServiceModel.Description.CallbackDebugBehavior> behavior is an endpoint behavior.</span></span> <span data-ttu-id="50d6d-127">에 구성 된 끝점 동작 `<endpoint>` 요소, 서비스 동작에 구성 된 [ &lt;service&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-127">Endpoint behaviors are configured on `<endpoint>` elements; service behaviors are configured on [&lt;service&gt;](~/docs/framework/configure-apps/file-schema/wcf/service.md) elements.</span></span>  
  
2.  <span data-ttu-id="50d6d-128">추가 하거나 만듭니다는 [ &lt;endpointBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md) 추가한 섹션을 [ &lt;동작&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) 합니다 일치하는이름사용하여요소를`behaviorConfiguration`1 단계에서 특성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-128">Add to or create an [&lt;endpointBehaviors&gt;](~/docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md) section and add a [&lt;behavior&gt;](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) element to that with the name that matches the `behaviorConfiguration` attribute value from step 1.</span></span> <span data-ttu-id="50d6d-129">끝점 동작은 클라이언트에서 사용 하기 위해 추가 됩니다 [ \<끝점 >](http://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017) 사용 하 여 요소를 [ &lt;endpointBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-129">Endpoint behaviors are added for use in a client [\<endpoint>](http://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017) element using an [&lt;endpointBehaviors&gt;](~/docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md) element.</span></span>  
  
3.  <span data-ttu-id="50d6d-130">추가 된 [ &lt;callbackDebug&gt; ](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md) 요소를 [ &lt;동작&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) 2 단계에서 요소 및 사용 또는 사용 안 함에 적합 한 다양 한 속성 시나리오입니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-130">Add a [&lt;callbackDebug&gt;](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md) element to the [&lt;behavior&gt;](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) element from step 2 and enable or disable the various properties appropriate to your scenario.</span></span>  
  
 <span data-ttu-id="50d6d-131">구체적인 예를 보려면 예제 부분을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="50d6d-131">For a specific example, see the Example section.</span></span> <span data-ttu-id="50d6d-132">사용 하 여이 특성의 값을 설정할 수도 있습니다는 [ &lt;callbackDebug&gt; ](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md) 클라이언트 응용 프로그램 구성 파일의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-132">You can also set the values of this attribute by using the [&lt;callbackDebug&gt;](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md) element in a client application configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50d6d-133">다음 코드 예제에서는 클라이언트를 관리 되는 예외 정보에서에서 반환할 클라이언트 콜백 개체가 SOAP 메시지의 WCF에 지시 하는 구성 파일을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-133">The following code example shows a client configuration file that instructs WCF to return managed exception information from a client callback object in SOAP messages.</span></span>  
  
 [!code-xml[SCA.CallbackContract#4](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters) = System::ServiceModel::Description::IEndpointBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">
          <span data-ttu-id="50d6d-134">수정할 끝점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-134">The endpoint to modify.</span>
          </span>
        </param>
        <param name="bindingParameters">
          <span data-ttu-id="50d6d-135">바인딩 요소에서 동작을 지원하기 위해 필요한 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-135">The objects that binding elements require to support the behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50d6d-136">
            <see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> 메서드를 구현하여 동작을 지원합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-136">Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> method to support the behavior.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Dispatcher.ClientRuntime behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Dispatcher.ClientRuntime behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ behavior) = System::ServiceModel::Description::IEndpointBehavior::ApplyClientBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="behavior" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">
          <span data-ttu-id="50d6d-137">사용자 지정할 끝점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-137">The endpoint that is to be customized.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="50d6d-138">사용자 지정할 클라이언트 런타임입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-138">The client runtime to be customized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50d6d-139">
            <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />를 구현하여 동작을 지원합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-139">Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> to support the behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50d6d-140">값을 할당 합니다 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 속성을는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-140">Assigns the value of the <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> property to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher) = System::ServiceModel::Description::IEndpointBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">
          <span data-ttu-id="50d6d-141">계약을 공개하는 끝점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-141">The endpoint that exposes the contract.</span>
          </span>
        </param>
        <param name="endpointDispatcher">
          <span data-ttu-id="50d6d-142">수정하거나 확장할 끝점 디스패처입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-142">The endpoint dispatcher to be modified or extended.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50d6d-143">
            <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />를 구현하여 동작을 지원합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-143">Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> to support the behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50d6d-144"><xref:System.InvalidOperationException?displayProperty=nameWithType>을 throw합니다. 이 동작은 클라이언트 응용 프로그램에서만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="50d6d-144">Throws an <xref:System.InvalidOperationException?displayProperty=nameWithType>; this behavior can only be used in a client application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.Validate">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.Validate (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.Validate(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.Validate(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint) = System::ServiceModel::Description::IEndpointBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">
          <span data-ttu-id="50d6d-145">유효성을 검사할 끝점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-145">The endpoint to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50d6d-146">
            <see cref="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" />를 구현하여 동작을 지원합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50d6d-146">Implements <see cref="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" /> to support the behavior.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>