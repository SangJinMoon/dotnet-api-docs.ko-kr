<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CallbackDebugBehavior.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b727283dd0205d40aff65c9c441e1bea17779b6c8ea.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7283dd0205d40aff65c9c441e1bea17779b6c8ea</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.CallbackDebugBehavior">
          <source>Enables service debugging for a Windows Communication Foundation (WCF) callback object.</source>
          <target state="translated">WCF(Windows Communication Foundation) 콜백 개체에 대한 서비스 디버깅을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.CallbackDebugBehavior">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property to <ph id="ph2">`true`</ph> from an application configuration file or programmatically to enable the flow of managed exception information in a client callback object back to the service for debugging purposes.</source>
          <target state="translated">클라이언트 콜백 개체의 관리되는 예외 정보를 디버깅을 위해 서비스로 다시 보내려면 응용 프로그램 구성 파일에서 또는 프로그래밍 방식으로 <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.CallbackDebugBehavior">
          <source>Returning managed exception information to services can be a security risk because exception details expose information about the internal client implementation that could be used by unauthorized services.</source>
          <target state="translated">관리되는 예외 정보를 서비스로 이동하면 예외 정보가 내부 클라이언트 구현 정보를 노출하여 권한이 없는 서비스에서 사용할 수 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.CallbackDebugBehavior">
          <source>In addition, although the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> properties can also be set programmatically, it can be easy to forget to disable <ph id="ph2">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> when deploying.</source>
          <target state="translated">또한 프로그래밍 방식으로 <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> 속성을 설정할 수도 있지만 배포 시 <ph id="ph2">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> 비활성화를 잊기 쉬울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.CallbackDebugBehavior">
          <source>Because of the security issues involved, it is strongly recommended that:</source>
          <target state="translated">보안 문제와 관련이 있으므로 다음 작업을 수행하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.CallbackDebugBehavior">
          <source>You use an application configuration file to set the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">응용 프로그램 구성 파일을 사용하여 <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> 속성 값을 <ph id="ph2">`true`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.CallbackDebugBehavior">
          <source>You only do so only in controlled debugging scenarios.</source>
          <target state="translated">이 작업은 제어된 디버깅 시나리오에서만 수행하도록 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.CallbackDebugBehavior">
          <source>For more information about the security issues related to managed exception information, see <bpt id="p1">[</bpt>Specifying and Handling Faults in Contracts and Services<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.</source>
          <target state="translated">관리 되는 예외 정보와 관련 된 보안 문제에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>지정 및 계약 및 서비스에서 처리 오류<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.CallbackDebugBehavior">
          <source>You can also set the values of this attribute by using the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>callbackDebug<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md)</ept> element in a client application configuration file.</source>
          <target state="translated">사용 하 여이 특성의 값을 설정할 수도 있습니다는 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>callbackDebug<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md)</ept> 클라이언트 응용 프로그램 구성 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.CallbackDebugBehavior">
          <source>The following code example shows a client configuration file that instructs WCF to return managed exception information from a client callback object in SOAP messages.</source>
          <target state="translated">다음 코드 예제에서는 클라이언트 WCF가 관리 되는 예외 정보는 클라이언트에서 콜백 개체가 SOAP 메시지에 반환 하도록 지시 하는 구성 파일을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.#ctor(System.Boolean)">
          <source>Controls whether a WCF callback object includes managed exception information in the detail of the SOAP faults sent back to the service.</source>
          <target state="translated">WCF 콜백 개체가 서비스로 다시 보낸 SOAP 오류 정보에 관리되는 예외 정보를 포함할지 여부를 제어합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.CallbackDebugBehavior" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.CallbackDebugBehavior" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.#ctor(System.Boolean)">
          <source>The constructor creates a <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> object in which the value of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property is the value of <ph id="ph3">`includeExceptionDetailInFaults`</ph>.</source>
          <target state="translated">생성자는 <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> 값인 <ph id="ph3">`includeExceptionDetailInFaults`</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>Gets or sets a value that controls whether client callback objects return managed exception information in SOAP faults back to the service.</source>
          <target state="translated">클라이언트 콜백 개체가 관리되는 예외 정보를 SOAP 오류의 형태로 서비스에 반환하는지 여부를 제어하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if WCF returns managed client callback exception information in the SOAP faults for service debugging purposes in duplex communication; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> WCF 관리 되는 클라이언트 콜백 예외 정보를 SOAP 오류 형태로 반환 디버깅 목적으로 양방향 통신;에서 서비스에 대 한 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property to <ph id="ph2">`true`</ph> from an application configuration file or programmatically to enable the flow of managed exception information in a client callback object back to the service for debugging purposes.</source>
          <target state="translated">클라이언트 콜백 개체의 관리되는 예외 정보를 디버깅을 위해 서비스로 다시 보내려면 응용 프로그램 구성 파일에서 또는 프로그래밍 방식으로 <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>Returning managed exception information to services can be a security risk because exception details expose information about the internal client implementation that could be used by unauthorized services.</source>
          <target state="translated">관리되는 예외 정보를 서비스로 이동하면 예외 정보가 내부 클라이언트 구현 정보를 노출하여 권한이 없는 서비스에서 사용할 수 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>In addition, although the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> properties can also be set programmatically, it can be easy to forget to disable <ph id="ph2">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> when deploying.</source>
          <target state="translated">또한 프로그래밍 방식으로 <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> 속성을 설정할 수도 있지만 배포 시 <ph id="ph2">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> 비활성화를 잊기 쉬울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>Because of the security issues involved, it is strongly recommended that:</source>
          <target state="translated">보안 문제와 관련이 있으므로 다음 작업을 수행하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>You use an application configuration file to set the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">응용 프로그램 구성 파일을 사용하여 <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> 속성 값을 <ph id="ph2">`true`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>You only do so only in controlled debugging scenarios.</source>
          <target state="translated">이 작업은 제어된 디버깅 시나리오에서만 수행하도록 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>For more information about the security issues related to managed exception information, see <bpt id="p1">[</bpt>Specifying and Handling Faults in Contracts and Services<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.</source>
          <target state="translated">관리 되는 예외 정보와 관련 된 보안 문제에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>지정 및 계약 및 서비스에서 처리 오류<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>To enable or disable a feature of CallbackDebugBehavior using a configuration file</source>
          <target state="translated">구성 파일을 사용하여 CallbackDebugBehavior의 기능을 사용하거나 사용하지 않도록 설정하려면</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>Add a <ph id="ph1">`behaviorConfiguration`</ph> attribute to the client <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>endpoint&gt;<ept id="p1">](http://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017)</ept> element for your WCF client application.</source>
          <target state="translated">추가 <ph id="ph1">`behaviorConfiguration`</ph> 특성을 <bpt id="p1">[</bpt> <ph id="ph2">\&lt;</ph>끝점 &gt;<ept id="p1">](http://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017)</ept> WCF 클라이언트 응용 프로그램에 대 한 요소입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> behavior is an endpoint behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> 동작은 끝점 동작입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>Endpoint behaviors are configured on <ph id="ph1">`&lt;endpoint&gt;`</ph> elements; service behaviors are configured on <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>service<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/service.md)</ept> elements.</source>
          <target state="translated">에 구성 된 끝점 동작 <ph id="ph1">`&lt;endpoint&gt;`</ph> 요소, 서비스 동작에 구성 된 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>서비스<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/service.md)</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>Add to or create an <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>endpointBehaviors<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md)</ept> section and add a <bpt id="p2">[</bpt><ph id="ph3">&amp;lt;</ph>behavior<ph id="ph4">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md)</ept> element to that with the name that matches the <ph id="ph5">`behaviorConfiguration`</ph> attribute value from step 1.</source>
          <target state="translated">추가 하거나 만듭니다는 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>endpointBehaviors<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md)</ept> 섹션 및 추가 <bpt id="p2">[</bpt> <ph id="ph3">&amp;lt;</ph>동작<ph id="ph4">&amp;gt;</ph> <ept id="p2">](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md)</ept> 는 일치하는이름가진요소를<ph id="ph5">`behaviorConfiguration`</ph>1 단계에서 특성 값입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>Endpoint behaviors are added for use in a client <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>endpoint&gt;<ept id="p1">](http://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017)</ept> element using an <bpt id="p2">[</bpt><ph id="ph2">&amp;lt;</ph>endpointBehaviors<ph id="ph3">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md)</ept> element.</source>
          <target state="translated">끝점 동작은 클라이언트에서 사용 하기 위해 추가할 <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>끝점 &gt;<ept id="p1">](http://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017)</ept> 사용 하 여 요소는 <bpt id="p2">[</bpt> <ph id="ph2">&amp;lt;</ph>endpointBehaviors<ph id="ph3">&amp;gt;</ph> <ept id="p2">](~/docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md)</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>Add a <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>callbackDebug<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md)</ept> element to the <bpt id="p2">[</bpt><ph id="ph3">&amp;lt;</ph>behavior<ph id="ph4">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md)</ept> element from step 2 and enable or disable the various properties appropriate to your scenario.</source>
          <target state="translated">추가 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>callbackDebug<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md)</ept> 요소는 <bpt id="p2">[</bpt> <ph id="ph3">&amp;lt;</ph>동작<ph id="ph4">&amp;gt;</ph> <ept id="p2">](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md)</ept> 2 단계에서 요소 및 기능 설정 또는 해제에 적합 한 다양 한 속성 시나리오입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>For a specific example, see the Example section.</source>
          <target state="translated">구체적인 예를 보려면 예제 부분을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>You can also set the values of this attribute by using the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>callbackDebug<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md)</ept> element in a client application configuration file.</source>
          <target state="translated">사용 하 여이 특성의 값을 설정할 수도 있습니다는 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>callbackDebug<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md)</ept> 클라이언트 응용 프로그램 구성 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
          <source>The following code example shows a client configuration file that instructs WCF to return managed exception information from a client callback object in SOAP messages.</source>
          <target state="translated">다음 코드 예제에서는 클라이언트 WCF가 관리 되는 예외 정보는 클라이언트에서 콜백 개체가 SOAP 메시지에 반환 하도록 지시 하는 구성 파일을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The endpoint to modify.</source>
          <target state="translated">수정할 끝점입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The objects that binding elements require to support the behavior.</source>
          <target state="translated">바인딩 요소에서 동작을 지원하기 위해 필요한 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Implements the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /&gt;</ph> method to support the behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /&gt;</ph> 메서드를 구현하여 동작을 지원합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The endpoint that is to be customized.</source>
          <target state="translated">사용자 지정할 끝점입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The client runtime to be customized.</source>
          <target state="translated">사용자 지정할 클라이언트 런타임입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Implements the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /&gt;</ph> to support the behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /&gt;</ph>를 구현하여 동작을 지원합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Assigns the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property to the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">값에 할당 된 <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> 속성을는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>The endpoint that exposes the contract.</source>
          <target state="translated">계약을 공개하는 끝점입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>The endpoint dispatcher to be modified or extended.</source>
          <target state="translated">수정하거나 확장할 끝점 디스패처입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>Implements the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /&gt;</ph> to support the behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /&gt;</ph>를 구현하여 동작을 지원합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>Throws an <ph id="ph1">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph>; this behavior can only be used in a client application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph>을 throw합니다. 이 동작은 클라이언트 응용 프로그램에서만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint to validate.</source>
          <target state="translated">유효성을 검사할 끝점입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implements <ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" /&gt;</ph> to support the behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" /&gt;</ph>를 구현하여 동작을 지원합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>