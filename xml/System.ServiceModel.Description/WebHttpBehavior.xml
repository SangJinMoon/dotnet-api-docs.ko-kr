<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WebHttpBehavior.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b726b6b154d435ad0f93e9afbe65c325c27283eae2d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b6b154d435ad0f93e9afbe65c325c27283eae2d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.WebHttpBehavior">
          <source>Enables the Web programming model for a Windows Communication Foundation (WCF) service.</source>
          <target state="translated">WCF(Windows Communication Foundation) 서비스에 대한 웹 프로그래밍 모델을 활성화합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.WebHttpBehavior">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> behavior, when used in conjunction with the <ph id="ph2">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> binding, enables WCF to expose and access Web style services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> 동작을 함께 사용 하는 경우는 <ph id="ph2">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> 수 있도록 제공 하 고 웹 스타일 서비스를 액세스 하는 WCF 바인딩, 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.WebHttpBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> automatically adds this behavior to endpoints that use the <ph id="ph2">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph>을 사용하는 끝점에 이 동작을 자동으로 추가합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.WebHttpBehavior" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.WebHttpBehavior" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The endpoint.</source>
          <target state="translated">끝점입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The binding parameters that support modifying the bindings.</source>
          <target state="translated">바인딩 수정을 지원하는 바인딩 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Implements the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /&gt;</ph> method to pass data at runtime to bindings to support custom behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /&gt;</ph> 메서드를 구현하여 런타임에 데이터를 바인딩에 전달함으로써 사용자 지정 동작을 지원합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.AddClientErrorInspector(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The service endpoint.</source>
          <target state="translated">서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.AddClientErrorInspector(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The client runtime.</source>
          <target state="translated">클라이언트 런타임입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.AddClientErrorInspector(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Adds a client error inspector to the specified service endpoint.</source>
          <target state="translated">지정된 서비스 끝점에 클라이언트 오류 검사기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.AddServerErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>The service endpoint.</source>
          <target state="translated">서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.AddServerErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>The endpoint dispatcher.</source>
          <target state="translated">끝점 디스패처입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.AddServerErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>Override this method to change the way errors that occur on the service are handled.</source>
          <target state="translated">서비스에서 발생하는 오류의 처리 방식을 변경하려면 이 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The endpoint that exposes the contract.</source>
          <target state="translated">계약을 공개하는 끝점입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The client to which the custom behavior is applied.</source>
          <target state="translated">사용자 지정 동작을 적용할 클라이언트입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Implements the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /&gt;</ph> method to support modification or extension of the client across an endpoint.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /&gt;</ph> 메서드를 구현하여 끝점에서 클라이언트의 수정 또는 확장을 지원합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>As part of this method, <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29&gt;</ph> are called for each operation to determine the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> to install.</source>
          <target state="translated">이 메서드의 일부로 각 작업에 대해 <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29&gt;</ph>를 호출하여 설치할 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph>를 결정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>The endpoint that exposes the contract.</source>
          <target state="translated">계약을 공개하는 끝점입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>The endpoint dispatcher to which the behavior is applied.</source>
          <target state="translated">동작을 적용할 끝점 디스패처입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>Implements the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /&gt;</ph> method to support modification or extension of the client across an endpoint.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /&gt;</ph> 메서드를 구현하여 끝점에서 클라이언트의 수정 또는 확장을 지원합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <source>As part of this method, <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.GetRequestDispatchFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.GetReplyDispatchFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29&gt;</ph> are called for each operation to determine the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageFormatter&gt;</ph> to install.</source>
          <target state="translated">이 메서드의 일부로 각 작업에 대해 <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.GetRequestDispatchFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior.GetReplyDispatchFormatter%28System.ServiceModel.Description.OperationDescription%2CSystem.ServiceModel.Description.ServiceEndpoint%29&gt;</ph>를 호출하여 설치할 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageFormatter&gt;</ph>를 결정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.WebHttpBehavior.AutomaticFormatSelectionEnabled">
          <source>Gets or sets a value that determines if automatic format selection is enabled.</source>
          <target state="translated">선택 영역 자동 서식 지정 기능을 사용할 수 있는지 여부를 결정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.AutomaticFormatSelectionEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if automatic format selection is enabled; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">선택 영역 자동 서식 지정이 활성화되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.AutomaticFormatSelectionEnabled">
          <source>For more information about automatic format selection, see <bpt id="p1">[</bpt>WCF Web HTTP Formatting<ept id="p1">](~/docs/framework/wcf/feature-details/wcf-web-http-formatting.md)</ept>.</source>
          <target state="translated">선택 영역 자동 서식 지정에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>WCF 웹 HTTP 형식 지정<ept id="p1">](~/docs/framework/wcf/feature-details/wcf-web-http-formatting.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.WebHttpBehavior.DefaultBodyStyle">
          <source>Gets and sets the default message body style.</source>
          <target state="translated">기본 메시지 본문 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.DefaultBodyStyle">
          <source>One of the values defined in the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /&gt;</ph> 열거형에 정의된 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.DefaultBodyStyle">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> does not explicitly set the <ph id="ph3">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute.BodyStyle%2A&gt;</ph> property, the value of this property is used as the body style for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph>가 <ph id="ph3">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute.BodyStyle%2A&gt;</ph> 속성을 명시적으로 설정하지 않으면 이 속성 값이 작업에 대한 본문 스타일로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.DefaultBodyStyle">
          <source>The default value is <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebMessageBodyStyle.Bare&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebMessageBodyStyle.Bare&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingRequestFormat">
          <source>Gets and sets the default outgoing request format.</source>
          <target state="translated">나가는 요청의 기본 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingRequestFormat">
          <source>One of the values defined in the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebMessageFormat" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebMessageFormat" /&gt;</ph> 열거형에 정의된 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingRequestFormat">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> does not explicitly set the <ph id="ph3">`OutgoingRequestFormat`</ph> property, the value of this property is used as the request format for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph>가 <ph id="ph3">`OutgoingRequestFormat`</ph> 속성을 명시적으로 설정하지 않으면 이 속성 값이 작업에 대한 요청 형식으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingRequestFormat">
          <source>The default value is <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebMessageFormat.Xml&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebMessageFormat.Xml&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingResponseFormat">
          <source>Gets and sets the default outgoing response format.</source>
          <target state="translated">나가는 응답의 기본 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingResponseFormat">
          <source>One of the values defined in the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebMessageFormat" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebMessageFormat" /&gt;</ph> 열거형에 정의된 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingResponseFormat">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> does not explicitly set the <ph id="ph3">`OutgoingResponseFormat`</ph> property, the value of this property is used as the response format for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph>가 <ph id="ph3">`OutgoingResponseFormat`</ph> 속성을 명시적으로 설정하지 않으면 이 속성 값이 작업에 대한 응답 형식으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.DefaultOutgoingResponseFormat">
          <source>The default value is <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebMessageFormat.Xml&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebMessageFormat.Xml&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.WebHttpBehavior.FaultExceptionEnabled">
          <source>Gets or sets the flag that specifies whether a FaultException is generated when an internal server error (HTTP status code: 500) occurs.</source>
          <target state="translated">내부 서버 오류(HTTP 상태 코드: 500)가 발생할 때 FaultException이 생성되는지 여부를 지정하는 플래그를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.FaultExceptionEnabled">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the flag is enabled; otherwise returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">플래그를 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetOperationSelector(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint that exposes the contract.</source>
          <target state="translated">계약을 공개하는 끝점입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetOperationSelector(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetOperationSelector(System.ServiceModel.Description.ServiceEndpoint)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" /&gt;</ph> that contains the operation selector for the specified endpoint.</source>
          <target state="translated">지정된 끝점에 대한 작업 선택기를 포함하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetOperationSelector(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector&gt;</ph> maps calls to WCF service operations based on the Uniform Resource Identifier (URI) suffix and the HTTP method used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector&gt;</ph> 식별자 URI (Uniform Resource) 접미사를 기반으로 WCF 서비스 작업 및 사용 되는 HTTP 메서드 호출에 매핑됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetOperationSelector(System.ServiceModel.Description.ServiceEndpoint)">
          <source>This is an extensibility point that derived behaviors can use to supply their own implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector&gt;</ph> that maps the incoming HTTP request to a service operation.</source>
          <target state="translated">이는 들어오는 HTTP 요청을 서비스 작업에 매핑하는 자체 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector&gt;</ph> 구현을 제공하기 위해 파생 동작에서 사용할 수 있는 확장 지점입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetQueryStringConverter(System.ServiceModel.Description.OperationDescription)">
          <source>The service operation.</source>
          <target state="translated">서비스 작업입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetQueryStringConverter(System.ServiceModel.Description.OperationDescription)">
          <source>Gets the query string converter.</source>
          <target state="translated">쿼리 문자열 변환기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetQueryStringConverter(System.ServiceModel.Description.OperationDescription)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetQueryStringConverter(System.ServiceModel.Description.OperationDescription)">
          <source>This is an extensibility point that derived behaviors can use to supply their own implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;</ph> that can convert the service operation parameter types to and from the HTTP request URL's query string.</source>
          <target state="translated">이는 HTTP 요청 URL의 쿼리 문자열과 서비스 작업 매개 변수 형식을 상호 변환할 수 있는 자체 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;</ph> 구현을 제공하기 위해 파생 동작에서 사용할 수 있는 확장 지점입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The service operation.</source>
          <target state="translated">서비스 작업입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The service endpoint.</source>
          <target state="translated">서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Gets the reply formatter on the client for the specified endpoint and service operation.</source>
          <target state="translated">지정된 끝점 및 서비스 작업에 대한 클라이언트의 회신 포맷터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /&gt;</ph> reference to the reply formatter on the client for the specified operation and endpoint.</source>
          <target state="translated">지정된 작업 및 끝점에 대해 클라이언트의 회신 포맷터에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /&gt;</ph> 참조입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>This is an extensibility point that derived behaviors can use to supply their own implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> that is called to deserialize the response message into the out parameters/return value of the service operation.</source>
          <target state="translated">이는 응답 메시지를 서비스 작업의 출력 매개 변수/반환 값으로 deserialize하도록 호출되는 자체 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> 구현을 제공하기 위해 파생 동작에서 사용할 수 있는 확장 지점입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The service operation.</source>
          <target state="translated">서비스 작업입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The service endpoint.</source>
          <target state="translated">서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Gets the reply formatter on the service for the specified endpoint and service operation.</source>
          <target state="translated">지정된 끝점 및 서비스 작업에 대한 서비스의 회신 포맷터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" /&gt;</ph> reference to the reply formatter on the service for the specified operation and endpoint.</source>
          <target state="translated">지정된 작업 및 끝점에 대해 서비스의 회신 포맷터에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" /&gt;</ph> 참조입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetReplyDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>This is an extensibility point that derived behaviors can use to supply their own implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageFormatter&gt;</ph> that is called to convert the return value/out parameters of the service operation to a response message.</source>
          <target state="translated">이는 서비스 작업의 반환 값/출력 매개 변수를 응답 메시지로 변환하도록 호출되는 자체 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageFormatter&gt;</ph> 구현을 제공하기 위해 파생 동작에서 사용할 수 있는 확장 지점입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The service operation.</source>
          <target state="translated">서비스 작업입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The service endpoint.</source>
          <target state="translated">서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Gets the request formatter on the client for the specified service operation and endpoint.</source>
          <target state="translated">지정된 서비스 작업 및 끝점에 대한 클라이언트의 요청 포맷터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /&gt;</ph> reference to the request formatter on the client for the specified operation and endpoint.</source>
          <target state="translated">지정된 작업 및 끝점에 대해 클라이언트의 요청 포맷터에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /&gt;</ph> 참조입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>This is an extensibility point that derived behaviors can use to supply their own implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> that is called to convert the input parameters of the service operation call to a request message.</source>
          <target state="translated">이는 서비스 작업 호출의 입력 매개 변수를 요청 메시지로 변환하도록 호출되는 자체 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> 구현을 제공하기 위해 파생 동작에서 사용할 수 있는 확장 지점입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestClientFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Parameters specified in the <ph id="ph1">&lt;xref:System.UriTemplate&gt;</ph> of the service operation must be serialized to the <ph id="ph2">`To`</ph> URI of the request message and other parameters must be serialized to the body of the request message.</source>
          <target state="translated">서비스 작업의 <ph id="ph1">&lt;xref:System.UriTemplate&gt;</ph>에 지정된 매개 변수는 요청 메시지의 <ph id="ph2">`To`</ph> URI로 serialize되어야 하고, 다른 매개 변수는 요청 메시지의 본문으로 serialize되어야 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The service operation.</source>
          <target state="translated">서비스 작업입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The service endpoint.</source>
          <target state="translated">서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Gets the request formatter on the service for the given service operation and service endpoint.</source>
          <target state="translated">지정된 서비스 작업 및 서비스 끝점에 대한 서비스의 요청 포맷터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" /&gt;</ph> reference to the request formatter on the service for the specified operation and endpoint.</source>
          <target state="translated">지정된 작업 및 끝점에 대해 서비스의 요청 포맷터에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" /&gt;</ph> 참조입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>This is an extensibility point that derived behaviors can use to supply their own implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageFormatter&gt;</ph> that is called to deserialize the input parameters of the service operation from the request message.</source>
          <target state="translated">이는 서비스 작업의 입력 매개 변수를 요청 메시지로부터 deserialize하도록 호출되는 자체 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageFormatter&gt;</ph> 구현을 제공하기 위해 파생 동작에서 사용할 수 있는 확장 지점입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.GetRequestDispatchFormatter(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Parameters specified in the <ph id="ph1">&lt;xref:System.UriTemplate&gt;</ph> of the service operation must be deserialized from the <ph id="ph2">`To`</ph> URI of the request message and other parameters must be deserialized from the body of the request message.</source>
          <target state="translated">서비스 작업의 <ph id="ph1">&lt;xref:System.UriTemplate&gt;</ph>에 지정된 매개 변수는 요청 메시지의 <ph id="ph2">`To`</ph> URI로부터 deserialize되어야 하고, 다른 매개 변수는 요청 메시지의 본문으로부터 deserialize되어야 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.WebHttpBehavior.HelpEnabled">
          <source>Gets or sets a value that determines if the WCF Help page is enabled.</source>
          <target state="translated">WCF 도움말 페이지를 사용할 수 있는지 여부를 결정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.HelpEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the WCFHelp page is enabled; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> WCFHelp 페이지를 사용 하면 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.HelpEnabled">
          <source>For more information about the WCF REST Help page, see <bpt id="p1">[</bpt>WCF Web HTTP Service Help Page<ept id="p1">](~/docs/framework/wcf/feature-details/wcf-web-http-service-help-page.md)</ept>.</source>
          <target state="translated">WCF REST 도움말 페이지에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>WCF 웹 HTTP 서비스 도움말 페이지<ept id="p1">](~/docs/framework/wcf/feature-details/wcf-web-http-service-help-page.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.HelpEnabled">
          <source>To enable the helpEnabled attribute in a configuration file:</source>
          <target state="translated">구성 파일에서 helpEnabled 특성을 설정하려면</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.HelpEnabled">
          <source>To programmatically enable the HelpEnabled property:</source>
          <target state="translated">프로그래밍 방식으로 HelpEnabled 속성을 설정하려면</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.WebHttpBehavior.JavascriptCallbackParameterName">
          <source>Gets or sets the JavaScript callback parameter name.</source>
          <target state="translated">JavaScript 콜백 매개 변수 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.WebHttpBehavior.JavascriptCallbackParameterName">
          <source>The JavaScript callback parameter name.</source>
          <target state="translated">JavaScript 콜백 매개 변수 이름입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The service endpoint.</source>
          <target state="translated">서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Confirms that the endpoint meets the requirements for the Web programming model.</source>
          <target state="translated">끝점이 웹 프로그래밍 모델 요구 사항을 충족하는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Verifies the following:</source>
          <target state="translated">다음을 확인합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint is not <ph id="ph1">`null`</ph>.</source>
          <target state="translated">끝점이 <ph id="ph1">`null`</ph>이 아닌지 여부</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint uses the HTTP or HTTPS schemes.</source>
          <target state="translated">끝점에서 HTTP 또는 HTTPS 스키마를 사용하는지 여부</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageVersion&gt;</ph> of the binding is set to <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageVersion.None%2A&gt;</ph>.</source>
          <target state="translated">바인딩의 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageVersion&gt;</ph>이 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageVersion.None%2A&gt;</ph>으로 설정되었는지 여부</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The binding contains an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.HttpTransportBindingElement&gt;</ph> where <ph id="ph2">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A&gt;</ph> is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.HttpTransportBindingElement&gt;</ph>이 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A&gt;</ph>로 설정된 <ph id="ph3">`true`</ph>가 바인딩에 포함되었는지 여부</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The parameters specified in the <ph id="ph1">&lt;xref:System.UriTemplate&gt;</ph> must be part of the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UriTemplate&gt;</ph>에 지정된 매개 변수가 작업의 일부여야 하는지 여부</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.WebHttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Operations that specify <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebMessageBodyStyle.Bare&gt;</ph> have, at most, one input parameter and can have no out parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebMessageBodyStyle.Bare&gt;</ph>를 지정하는 작업이 입력 매개 변수를 최대 하나만 가지는지 그리고 출력 매개 변수를 가질 수 없는지 여부</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.ValidateBinding(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The service endpoint.</source>
          <target state="translated">서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.WebHttpBehavior.ValidateBinding(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Ensures the binding is valid for use with the WCF Web Programming Model.</source>
          <target state="translated">해당 바인딩을 WCF 웹 프로그래밍 모델에 사용할 수 있는지 확인합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>