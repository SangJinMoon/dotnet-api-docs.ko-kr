<Type Name="PrincipalPermissionMode" FullName="System.ServiceModel.Description.PrincipalPermissionMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79f46d53f4511a777d9d7f073432bd85655d96d2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36616763" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PrincipalPermissionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PrincipalPermissionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.PrincipalPermissionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum PrincipalPermissionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class PrincipalPermissionMode" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="59ef1-101">
        <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" />를 사용하여 메서드에 대한 액세스를 제어할 때 권한 부여 확인 모드를 설정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="59ef1-101">Sets the mode for authorization checks when using the <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> to control access to a method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59ef1-102"><xref:System.Security.Permissions.PrincipalPermissionAttribute>를 메서드에 적용할 경우 이 모드는 액세스 권한을 부여할 때 사용할 역할을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-102">When applying the <xref:System.Security.Permissions.PrincipalPermissionAttribute> to a method, this mode specifies which set of roles to use when authorizing access.</span></span> <span data-ttu-id="59ef1-103">기본적으로 이 특성은 Windows 그룹(예: `Administrator` 또는 `Users`)을 사용하여 사용자가 속해야 할 역할을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-103">By default, the attribute uses Windows groups (such as `Administrator` or `Users`) to specify the role to which the user must belong.</span></span>  
  
 <span data-ttu-id="59ef1-104">모드를 프로그래밍 방식으로 설정하려면 `ServiceHost` 클래스의 인스턴스를 만들고 동작 컬렉션에서 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>를 찾은 다음 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A>를 해당 열거형으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-104">To set the mode programmatically, create an instance of the `ServiceHost` class, then find the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> in its collection of behaviors, and set the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> to the appropriate enumeration.</span></span> <span data-ttu-id="59ef1-105">다음 예제에서는 UseAspNetRoles에 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-105">The following example sets the property to UseAspNetRoles.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#1)]
 [!code-vb[PrincipalPermissionMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#1)]  
  
 <span data-ttu-id="59ef1-106">추가 하 여 구성에 동작을 설정할 수도 있습니다는 [ &lt;serviceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) 에 [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) 의 다음 코드와 같이 구성 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-106">You can also set the behavior in configuration by adding a [&lt;serviceAuthorization&gt;](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) to the [&lt;serviceBehaviors&gt;](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) of a configuration file, as shown in the following code.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#10](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#10)]
 [!code-vb[PrincipalPermissionMode#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#10)]  
  
 <span data-ttu-id="59ef1-107">열거형은 <xref:System.Security.Permissions.PrincipalPermissionAttribute> 특성이 메서드에 적용될 때 사용자의 권한을 부여하는 방법에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-107">The enumeration affects how the <xref:System.Security.Permissions.PrincipalPermissionAttribute> attribute authorizes a user when it is applied to a method.</span></span> <span data-ttu-id="59ef1-108">다음 예제에서는 메서드에 특성을 적용하고 사용자가 컴퓨터의 사용자 그룹에 속하도록 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-108">The following example applies the attribute to a method and demands that the user belong to the Users group on the computer.</span></span> <span data-ttu-id="59ef1-109">이 코드는 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A>가 `UseWindowsGroup`으로 설정되어 있는 경우에만 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-109">This code works only when the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> is set to `UseWindowsGroup` (the default setting).</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#2](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#2)]
 [!code-vb[PrincipalPermissionMode#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#2)]  
  
## <a name="useaspnetroles"></a><span data-ttu-id="59ef1-110">UseAspNetRoles</span><span class="sxs-lookup"><span data-stu-id="59ef1-110">UseAspNetRoles</span></span>  
 <span data-ttu-id="59ef1-111">UseAspNetRoles 값은 모든 자격 증명 형식에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-111">The UseAspNetRoles value is used for all credential types.</span></span> <span data-ttu-id="59ef1-112">WCF Windows Communication Foundation ()를 ASP.NET 역할 공급자를 사용 하 여 권한 부여 결정을 내릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-112">This mode enables Windows Communication Foundation (WCF) to use the ASP.NET role provider to make authorization decisions.</span></span>  
  
 <span data-ttu-id="59ef1-113">서비스에 대한 자격 증명이 X.509 인증서인 경우 다음 예제에서처럼 `Name`의 <xref:System.Security.Permissions.PrincipalPermissionAttribute> 속성을 Subject(주체) 필드 값과 Thumbprint(지문) 필드 값을 연결하여 구성된 문자열로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-113">When the credential for a service is an X.509 certificate, you can set the `Name` property of the <xref:System.Security.Permissions.PrincipalPermissionAttribute> to a string that consists of the concatenated values of the Subject field and the Thumbprint field, as shown in the following example.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 <span data-ttu-id="59ef1-114">연결된 문자열은 주체 값과 지문 값이 세미콜론과 공백으로 구분되어 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-114">The concatenated string consists of the subject and thumbprint values separated by a semicolon and a space.</span></span>  
  
 <span data-ttu-id="59ef1-115">인증서에서 Subject 필드를 null 문자열로 설정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-115">It is also possible for a certificate to have a Subject field set to a null string.</span></span> <span data-ttu-id="59ef1-116">그럴 경우 아래 예제에서처럼 세미콜론, 공백, 지문을 차례로 입력하여 `Name` 속성을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-116">In that case, you can set the `Name` property to a semicolon followed by a space and then the thumbprint, as shown in the following example.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#4](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#4)]
 [!code-vb[PrincipalPermissionMode#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#4)]  
  
 <span data-ttu-id="59ef1-117">ASP.NET 역할 공급자가 있는 경우 <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> 속성을 데이터베이스에 있는 역할로 설정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-117">If an ASP.NET role provider is present, you can also set the <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> property to a role in the database.</span></span> <span data-ttu-id="59ef1-118">기본적으로 데이터베이스는 <xref:System.Web.Security.SqlRoleProvider>로 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-118">By default, the database is represented by the <xref:System.Web.Security.SqlRoleProvider>.</span></span> <span data-ttu-id="59ef1-119"><xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> 속성이 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> 클래스인 사용자 지정 역할 공급자를 설정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-119">You can also set a custom role provider with the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> property of the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> class.</span></span> <span data-ttu-id="59ef1-120">다음 코드에서는 역할을 `Administrators`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-120">The following code sets the role to `Administrators`.</span></span> <span data-ttu-id="59ef1-121">역할 공급자는 사용자 계정을 해당 역할에 매핑해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-121">Note that the role provider must map the user account to that role.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#13](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#13)]
 [!code-vb[PrincipalPermissionMode#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#13)]  
  
 <span data-ttu-id="59ef1-122">ASP.NET 역할 공급자에 대 한 자세한 내용은 참조 [방법: ASP.NET 2.0에서 역할 관리자를 사용 하 여](http://go.microsoft.com/fwlink/?LinkId=96692)합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-122">For more information about the ASP.NET Role provider, see [How To: Use Role Manager in ASP.NET 2.0](http://go.microsoft.com/fwlink/?LinkId=96692).</span></span>  
  
 <span data-ttu-id="59ef1-123">WCF 및 역할 공급자를 사용 하는 방법에 대 한 자세한 내용은 참조 [하는 방법: ASP.NET 역할 공급자를 사용 하 여 서비스와](~/docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-123">For more information about using WCF and the role provider, see [How to: Use the ASP.NET Role Provider with a Service](~/docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md).</span></span>  
  
## <a name="custom"></a><span data-ttu-id="59ef1-124">사용자 지정</span><span class="sxs-lookup"><span data-stu-id="59ef1-124">Custom</span></span>  
 <span data-ttu-id="59ef1-125">속성을 Custom으로 설정도 구현 하는 사용자 지정 클래스를 제공 해야는 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-125">When the property is set to Custom, you must also provide a custom class that implements the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> class.</span></span> <span data-ttu-id="59ef1-126">이 클래스는 `IPrincipal` 컬렉션 내에서 호출자의 <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A>을 표시하는 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-126">This class is responsible for providing the caller's `IPrincipal` representation inside the <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A> collection.</span></span> <span data-ttu-id="59ef1-127">다음 예제에서처럼 "Principal" 문자열 키를 사용하여 속성 컬렉션에 `IPrincipal` 인스턴스를 저장해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-127">It must store the `IPrincipal` instance to the properties collection using the "Principal" string key, as shown in the following example.</span></span>  
  
```  
evaluationContext.Properties["Principal"]=new CustomPrincipal(identity);  
```  
  
## <a name="background"></a><span data-ttu-id="59ef1-128">배경</span><span class="sxs-lookup"><span data-stu-id="59ef1-128">Background</span></span>  
 <span data-ttu-id="59ef1-129">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 역할 기반 보안을 사용하면 응용 프로그램에서 코드를 통해 권한 부여를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-129">The role-based security in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] enables applications to specify authorizations through code.</span></span> <span data-ttu-id="59ef1-130"><xref:System.Security.Permissions.PrincipalPermission>은 <xref:System.Threading.Thread.CurrentPrincipal%2A> 요청을 지정하여 `PrincipalPermission` 요구 사항을 충족시켜야 합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-130">By specifying the <xref:System.Security.Permissions.PrincipalPermission> demand, the <xref:System.Threading.Thread.CurrentPrincipal%2A> must satisfy the `PrincipalPermission` requirement.</span></span> <span data-ttu-id="59ef1-131">예를 들어, 사용자가 특정 역할이나 그룹에 속해야 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-131">For example, that the user must be in a specific role or group.</span></span> <span data-ttu-id="59ef1-132">그렇지 않으면 스레드가 코드를 실행할 권한이 없으므로 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-132">Otherwise, the thread is not authorized to execute the code, which results in an exception.</span></span> <span data-ttu-id="59ef1-133">WCF의 집합을 제공 <xref:System.ServiceModel.Description.PrincipalPermissionMode> 지정 하려면 선택 항목의 <xref:System.Threading.Thread.CurrentPrincipal%2A> 기반 <xref:System.Security.SecurityContext> 적절 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-133">WCF provides a set of <xref:System.ServiceModel.Description.PrincipalPermissionMode> selections to specify the <xref:System.Threading.Thread.CurrentPrincipal%2A> based on <xref:System.Security.SecurityContext> accordingly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59ef1-134">다음 예제에서는 UseAspNetRoles를 지정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-134">The following example shows how to specify UseAspNetRoles.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#7](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#7)]
 [!code-vb[PrincipalPermissionMode#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#7)]  
  
 <span data-ttu-id="59ef1-135">다음 예제에서는 사용자 지정을 지정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="59ef1-135">The following example shows how to specify Custom.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#8](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#8)]
 [!code-vb[PrincipalPermissionMode#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Always = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberSignature Language="F#" Value="Always = 4" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ef1-136">항상 사용자가 <see cref="T:System.Security.Principal.IPrincipal" />에 대한 사용자 지정 <see cref="P:System.Threading.Thread.CurrentPrincipal" /> 클래스를 지정할 수 있도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ef1-136">Always enables the user to specify a <see cref="T:System.Security.Principal.IPrincipal" /> class for <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Custom = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberSignature Language="F#" Value="Custom = 3" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ef1-137">사용자가 <see cref="T:System.Security.Principal.IPrincipal" />에 대한 사용자 지정 <see cref="P:System.Threading.Thread.CurrentPrincipal" /> 클래스를 지정할 수 있도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ef1-137">Enables the user to specify a custom <see cref="T:System.Security.Principal.IPrincipal" /> class for <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ef1-138">
            <see cref="P:System.Threading.Thread.CurrentPrincipal" />은 설정되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ef1-138">
              <see cref="P:System.Threading.Thread.CurrentPrincipal" /> is not set.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UseAspNetRoles">
      <MemberSignature Language="C#" Value="UseAspNetRoles" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseAspNetRoles = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberSignature Language="VB.NET" Value="UseAspNetRoles" />
      <MemberSignature Language="C++ CLI" Value="UseAspNetRoles" />
      <MemberSignature Language="F#" Value="UseAspNetRoles = 2" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ef1-139">
            <see cref="P:System.Threading.Thread.CurrentPrincipal" />은 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 역할 공급자(<see cref="T:System.Web.Security.RoleProvider" />)에 따라 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ef1-139">
              <see cref="P:System.Threading.Thread.CurrentPrincipal" /> is set based on the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] role provider (<see cref="T:System.Web.Security.RoleProvider" />).</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UseWindowsGroups">
      <MemberSignature Language="C#" Value="UseWindowsGroups" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseWindowsGroups = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="UseWindowsGroups" />
      <MemberSignature Language="C++ CLI" Value="UseWindowsGroups" />
      <MemberSignature Language="F#" Value="UseWindowsGroups = 1" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="59ef1-140">
            <see cref="P:System.Threading.Thread.CurrentPrincipal" />은 Windows(<see cref="T:System.Security.Principal.WindowsPrincipal" />)를 기반으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ef1-140">
              <see cref="P:System.Threading.Thread.CurrentPrincipal" /> is set based on Windows (<see cref="T:System.Security.Principal.WindowsPrincipal" />).</span>
          </span>
          <span data-ttu-id="59ef1-141">사용자 ID가 Windows 계정에 연결되어 있지 않으면 익명의 Windows 계정이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59ef1-141">If the user identity is not associated with a Windows account, anonymous Windows is used.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>