<Type Name="MetadataResolver" FullName="System.ServiceModel.Description.MetadataResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d74ae750b135b6054dad6d8ea0395fce5611640" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37456518" /></Metadata><TypeSignature Language="C#" Value="public static class MetadataResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MetadataResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataResolver abstract sealed" />
  <TypeSignature Language="F#" Value="type MetadataResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b36e7-101">메타데이터를 검색하여 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-101">Retrieves and imports metadata as <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-102">메타데이터에서 서비스에 대한 엔드포인트를 신속하게 가져오려면 <xref:System.ServiceModel.Description.MetadataResolver> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-102">Use the <xref:System.ServiceModel.Description.MetadataResolver> class to quickly import endpoints for a service from metadata.</span></span> <span data-ttu-id="b36e7-103">이 클래스는 메타데이터를 다운로드하여 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-103">This class downloads and converts metadata into <xref:System.ServiceModel.Description.ServiceEndpoint> objects.</span></span> <span data-ttu-id="b36e7-104">메타데이터를 다운로드한 후 해당 정보를 <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>으로 처리하려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-104">To download metadata and process that information as a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>, see <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b36e7-105">다음 코드 예제에서는 <xref:System.ServiceModel.Description.MetadataResolver> 클래스를 사용하여 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체 컬렉션으로 메타데이터를 반환하는 방법을 보여 줍니다. 이렇게 반환된 개체는 서비스 인스턴스에 연결하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-105">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.</span></span>  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 <span data-ttu-id="b36e7-106">다음 코드 예제에서는 WS-Transfer 대신 HTTP GET 요청을 사용하여 <xref:System.ServiceModel.Description.MetadataResolver>를 통해 메타데이터를 다운로드한 다음 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체 컬렉션으로 반환하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-106">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.</span></span>  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginResolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b36e7-107">메타데이터 주소를 해당 서비스에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션으로 확인하는 비동기 호출을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-107">Begins an asynchronous call that resolves a metadata address into a collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for that service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-108">이러한 메서드는 비동기 버전의 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> 메서드를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-108">These methods begin asynchronous versions of the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="b36e7-109">메타데이터를 다운로드하여 확인할 대상 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-109">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="b36e7-110">메타데이터 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-110">The metadata address.</span></span></param>
        <param name="callback"><span data-ttu-id="b36e7-111">호출이 완료되면 호출되는 비동기 콜백 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-111">The asynchronous callback delegate invoked when the call is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b36e7-112">비동기 호출과 관련된 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-112">The state associated with the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="b36e7-113">지정된 주소와 비동기 상태 및 대리자를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 메타데이터 주소를 확인하는 비동기 호출을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-113">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address and asynchronous state and delegate.</span></span></summary>
        <returns><span data-ttu-id="b36e7-114">비동기 분석 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-114">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-115"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용되며, 기본 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType>는 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-115">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b36e7-116">@FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-116">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b36e7-117">엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-117">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="b36e7-118">빈 컬렉션이 반환되면 경고 추적이 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-118">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b36e7-119">주소, 계약 또는 콜백이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-119">The address, contract, or callback is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b36e7-120"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 <see langword="null" />이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-120"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is <see langword="null" />, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="b36e7-121">메타데이터를 다운로드하여 확인할 대상 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-121">The contract for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="b36e7-122">메타데이터 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-122">The metadata address.</span></span></param>
        <param name="callback"><span data-ttu-id="b36e7-123">호출이 완료되면 호출되는 비동기 콜백 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-123">The asynchronous callback delegate invoked when the call is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b36e7-124">비동기 호출과 관련된 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-124">The state associated with the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="b36e7-125">지정된 주소와 비동기 상태 및 대리자를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 메타데이터 주소를 확인하는 비동기 호출을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-125">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract using the specified address and asynchronous state and delegate.</span></span></summary>
        <returns><span data-ttu-id="b36e7-126">비동기 분석 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-126">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-127"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용되며, 기본 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType>는 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-127">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b36e7-128">@FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-128">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b36e7-129">엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-129">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="b36e7-130">빈 컬렉션이 반환되면 경고 추적이 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-130">If an empty collection is returned, a warning trace is written.</span></span>  
  
 <span data-ttu-id="b36e7-131">이 메서드를 사용하려면 계약 형식을 지정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-131">This method requires that you specify a contract type.</span></span> <span data-ttu-id="b36e7-132">클라이언트 코드에서 서비스 인터페이스를 선언 하거나 Svcutil.exe에 의해 생성 된 WCF 클라이언트를 사용 하 여 계약을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-132">You can specify the contract by declaring the service interface in the client code or by using a WCF client generated by Svcutil.exe.</span></span> <span data-ttu-id="b36e7-133">인터페이스가 변경 되 면 (예를 들어 새 작업을 추가)을 클라이언트 코드에서 인터페이스를 업데이트 하거나 새 WCF 클라이언트 생성.</span><span class="sxs-lookup"><span data-stu-id="b36e7-133">If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new WCF client.</span></span> <span data-ttu-id="b36e7-134">이렇게 하지 않으면 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-134">If you do not, an exception is thrown.</span></span> <span data-ttu-id="b36e7-135">Add(), Sub(), Mult() 및 Div()를 정의하는 ICalculator라는 서비스 계약을 구현하는 서비스를 예로 들어 보겠습니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-135">For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div().</span></span> <span data-ttu-id="b36e7-136">클라이언트 애플리케이션을 만들고 WCF 클라이언트를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-136">You create a client application and generate WCF client.</span></span> <span data-ttu-id="b36e7-137">ICalculator에 Echo()라는 메서드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-137">You then add a method to ICalculator called Echo().</span></span> <span data-ttu-id="b36e7-138">다음 호출 하는 애플리케이션 작성 하는 경우 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> 새 WCF 클라이언트를 생성 하지 않고 다음 예외를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-138">If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new WCF client you get the following exception.</span></span>  
  
 <span data-ttu-id="b36e7-139">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.</span><span class="sxs-lookup"><span data-stu-id="b36e7-139">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b36e7-140">주소, 계약 또는 콜백이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-140">The address, contract, or callback is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="b36e7-141">메타데이터를 다운로드하여 확인할 대상 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-141">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="b36e7-142">메타데이터 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-142">The metadata address.</span></span></param>
        <param name="client"><span data-ttu-id="b36e7-143">메타데이터를 검색하는 데 사용되는 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-143">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</span></span></param>
        <param name="callback"><span data-ttu-id="b36e7-144">호출이 완료되면 호출되는 비동기 콜백 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-144">The asynchronous callback delegate invoked when the call is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b36e7-145">비동기 호출과 관련된 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-145">The state associated with the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="b36e7-146">지정된 주소, <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, 비동기 상태 및 대리자를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> 개체로 메타데이터 주소를 확인하는 비동기 호출을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-146">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, asynchronous state and delegate.</span></span></summary>
        <returns><span data-ttu-id="b36e7-147">비동기 분석 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-147">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-148">기본 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType>는 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-148">The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b36e7-149">@FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-149">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b36e7-150">엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-150">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="b36e7-151">빈 컬렉션이 반환되면 경고 추적이 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-151">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b36e7-152">주소, 계약, 클라이언트 또는 콜백이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-152">The address, contract, client, or callback is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b36e7-153"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-153"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="b36e7-154">메타데이터를 다운로드하여 확인할 대상 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-154">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="b36e7-155">메타데이터 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-155">The metadata address.</span></span></param>
        <param name="mode"><span data-ttu-id="b36e7-156">검색 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-156">The mode of retrieval.</span></span></param>
        <param name="callback"><span data-ttu-id="b36e7-157">호출이 완료되면 호출되는 비동기 콜백 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-157">The asynchronous callback delegate invoked when the call is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b36e7-158">비동기 호출과 관련된 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-158">The state associated with the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="b36e7-159">지정된 주소, <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 값, 비동기 상태 및 대리자를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> 개체로 메타데이터 주소를 확인하는 비동기 호출을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-159">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> value, asynchronous state and delegate.</span></span></summary>
        <returns><span data-ttu-id="b36e7-160">비동기 분석 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-160">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-161"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-161">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata.</span></span>  
  
 <span data-ttu-id="b36e7-162">@FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-162">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b36e7-163">엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-163">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="b36e7-164">빈 컬렉션이 반환되면 경고 추적이 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-164">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b36e7-165">주소, 계약 또는 콜백이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-165">The address, contract, or callback is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b36e7-166"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-166"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="b36e7-167">메타데이터를 다운로드하여 확인할 대상 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-167">The contract for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="b36e7-168">메타데이터 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-168">The metadata address.</span></span></param>
        <param name="mode"><span data-ttu-id="b36e7-169">검색 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-169">The mode of retrieval.</span></span></param>
        <param name="callback"><span data-ttu-id="b36e7-170">호출이 완료되면 호출되는 비동기 콜백 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-170">The asynchronous callback delegate invoked when the call is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b36e7-171">비동기 호출과 관련된 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-171">The state associated with the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="b36e7-172">지정된 주소, <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, 비동기 상태 및 대리자를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> 개체로 메타데이터 주소를 확인하는 비동기 호출을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-172">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, asynchronous state and delegate.</span></span></summary>
        <returns><span data-ttu-id="b36e7-173">비동기 분석 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-173">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-174"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-174">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata.</span></span>  
  
 <span data-ttu-id="b36e7-175">@FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-175">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b36e7-176">엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-176">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="b36e7-177">빈 컬렉션이 반환되면 경고 추적이 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-177">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b36e7-178">주소, 계약 또는 콜백이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-178">The address, contract, or callback is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="b36e7-179">메타데이터를 다운로드하여 확인할 대상 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-179">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="b36e7-180">메타데이터 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-180">The metadata address.</span></span></param>
        <param name="mode"><span data-ttu-id="b36e7-181">검색 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-181">The mode of retrieval.</span></span></param>
        <param name="client"><span data-ttu-id="b36e7-182">메타데이터를 검색하는 데 사용되는 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-182">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</span></span></param>
        <param name="callback"><span data-ttu-id="b36e7-183">호출이 완료되면 호출되는 비동기 콜백 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-183">The asynchronous callback delegate invoked when the call is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b36e7-184">비동기 호출과 관련된 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-184">The state associated with the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="b36e7-185">지정된 주소, <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, 비동기 상태 및 대리자를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> 개체로 메타데이터 주소를 확인하는 비동기 호출을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-185">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, asynchronous state, and delegate.</span></span></summary>
        <returns><span data-ttu-id="b36e7-186">비동기 분석 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-186">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-187">@FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-187">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b36e7-188">엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-188">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="b36e7-189">빈 컬렉션이 반환되면 경고 추적이 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-189">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b36e7-190">주소, 계약 또는 콜백이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-190">The address, contract, or callback is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b36e7-191"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-191"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection EndResolve(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (result As IAsyncResult) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ EndResolve(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.EndResolve result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="b36e7-192"><see cref="T:System.IAsyncResult" /> 메서드를 호출하여 받은 <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-192">The <see cref="T:System.IAsyncResult" /> object that was received from a call to the <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" /> method.</span></span></param>
        <summary><span data-ttu-id="b36e7-193">비동기 호출을 완료하여 메타데이터를 엔드포인트 컬렉션으로 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-193">Completes an asynchronous call to resolve metadata into a collection of endpoints.</span></span></summary>
        <returns><span data-ttu-id="b36e7-194">메타데이터에 포함된 엔드포인트에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-194">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the endpoints contained in the metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-195"><xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> 메서드 중 하나에 대한 비동기 호출을 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-195">Ends an asynchronous call to one of the <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b36e7-196">메타데이터 주소를 다운로드한 후 해당 서비스에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-196">Downloads and resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for that service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-197">@FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-197">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
 <span data-ttu-id="b36e7-198">모든 동기 및 비동기 `Resolve` 메서드는 가져온 엔드포인트가나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-198">For all synchronous and asynchronous `Resolve` methods, an empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="b36e7-199">빈 컬렉션이 반환되면 경고 추적이 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-199">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="b36e7-200">메타데이터를 다운로드하여 확인할 대상 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-200">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="b36e7-201">메타데이터 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-201">The metadata address.</span></span></param>
        <summary><span data-ttu-id="b36e7-202">지정된 메타데이터 주소를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 메타데이터 주소를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-202">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified metadata address.</span></span></summary>
        <returns><span data-ttu-id="b36e7-203">지정된 계약의 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-203">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-204"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용되며, 기본 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType>는 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-204">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b36e7-205">@FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-205">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b36e7-206">엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-206">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="b36e7-207">빈 컬렉션이 반환되면 경고 추적이 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-207">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b36e7-208">주소 또는 계약 컬렉션이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-208">The address or contracts collection is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b36e7-209"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-209"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="b36e7-210">메타데이터를 다운로드하여 확인할 대상 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-210">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="b36e7-211">메타데이터 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-211">The metadata address.</span></span></param>
        <summary><span data-ttu-id="b36e7-212">메타데이터 주소를 다운로드한 후 지정된 주소의 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션으로 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-212">Downloads and resolves a metadata address into a collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for a specified contract at a specified address.</span></span></summary>
        <returns><span data-ttu-id="b36e7-213">지정된 계약의 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-213">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-214"><xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> 메서드를 사용하여 메타데이터를 다운로드하고 분석할 때 사용할 계약 및 메타데이터 주소를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-214">Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify the contract and the metadata address to use when downloading and resolving metadata.</span></span>  
  
 <span data-ttu-id="b36e7-215"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용되며, 기본 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType>는 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-215">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b36e7-216">@FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-216">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b36e7-217">엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-217">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="b36e7-218">빈 컬렉션이 반환되면 경고 추적이 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-218">If an empty collection is returned, a warning trace is written.</span></span>  
  
 <span data-ttu-id="b36e7-219">이 메서드를 사용하려면 계약 형식을 지정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-219">This method requires that you specify a contract type.</span></span> <span data-ttu-id="b36e7-220">클라이언트 코드에서 서비스 인터페이스를 선언 하거나 Svcutil.exe에 의해 생성 된 WCF 클라이언트를 사용 하 여 계약을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-220">You can specify the contract by declaring the service interface in the client code or by using a WCF client generated by Svcutil.exe.</span></span> <span data-ttu-id="b36e7-221">인터페이스가 변경 되 면 (예를 들어 새 작업을 추가)을 클라이언트 코드에서 인터페이스를 업데이트 하거나 새 WCF 클라이언트 생성.</span><span class="sxs-lookup"><span data-stu-id="b36e7-221">If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new WCF client.</span></span> <span data-ttu-id="b36e7-222">이렇게 하지 않으면 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-222">If you do not, an exception is thrown.</span></span> <span data-ttu-id="b36e7-223">Add(), Sub(), Mult() 및 Div()를 정의하는 ICalculator라는 서비스 계약을 구현하는 서비스를 예로 들어 보겠습니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-223">For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div().</span></span> <span data-ttu-id="b36e7-224">클라이언트 애플리케이션을 만들고 WCF 클라이언트를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-224">You create a client application and generate WCF client.</span></span> <span data-ttu-id="b36e7-225">ICalculator에 Echo()라는 메서드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-225">You then add a method to ICalculator called Echo().</span></span> <span data-ttu-id="b36e7-226">다음 호출 하는 애플리케이션 작성 하는 경우 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> 새 WCF 클라이언트를 생성 하지 않고 다음 예외를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-226">If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new WCF client you get the following exception.</span></span>  
  
 <span data-ttu-id="b36e7-227">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.</span><span class="sxs-lookup"><span data-stu-id="b36e7-227">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b36e7-228">다음 코드 예제에서는 <xref:System.ServiceModel.Description.MetadataResolver> 클래스를 사용하여 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체 컬렉션으로 메타데이터를 반환하는 방법을 보여 줍니다. 이렇게 반환된 개체는 서비스 인스턴스에 연결하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-228">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.</span></span>  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b36e7-229">주소 또는 계약이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-229">The address or the contract is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="b36e7-230">메타데이터를 다운로드하여 확인할 대상 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-230">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="b36e7-231">메타데이터 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-231">The metadata address.</span></span></param>
        <param name="client"><span data-ttu-id="b36e7-232">메타데이터를 검색하는 데 사용되는 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-232">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</span></span></param>
        <summary><span data-ttu-id="b36e7-233">지정된 메타데이터 주소 및 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> 개체로 메타데이터 주소를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-233">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified metadata address and <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />.</span></span></summary>
        <returns><span data-ttu-id="b36e7-234">지정된 계약의 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-234">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-235">기본 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType>는 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-235">The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b36e7-236">@FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-236">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b36e7-237">엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-237">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="b36e7-238">빈 컬렉션이 반환되면 경고 추적이 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-238">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b36e7-239">주소, 계약 컬렉션 또는 클라이언트가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-239">The address, contracts collection, or client is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b36e7-240"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-240"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="b36e7-241">메타데이터를 다운로드하여 확인할 대상 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-241">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="b36e7-242">메타데이터 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-242">The metadata address.</span></span></param>
        <param name="mode"><span data-ttu-id="b36e7-243">검색 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-243">The mode of retrieval.</span></span></param>
        <summary><span data-ttu-id="b36e7-244">지정된 주소 및 전송 모드를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 메타데이터 주소를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-244">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified address and transfer mode.</span></span></summary>
        <returns><span data-ttu-id="b36e7-245">지정된 계약의 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-245">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-246"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-246">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata.</span></span>  
  
 <span data-ttu-id="b36e7-247">@FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-247">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b36e7-248">엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-248">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="b36e7-249">빈 컬렉션이 반환되면 경고 추적이 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-249">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b36e7-250">주소 또는 계약 컬렉션이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-250">The address or contracts collection is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b36e7-251"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-251"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="b36e7-252">메타데이터를 다운로드하여 확인할 대상 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-252">The contract for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="b36e7-253">메타데이터 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-253">The metadata address.</span></span></param>
        <param name="mode"><span data-ttu-id="b36e7-254">검색 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-254">The mode of retrieval.</span></span></param>
        <summary><span data-ttu-id="b36e7-255">지정된 주소 및 전송 모드를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 메타데이터 주소를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-255">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract using the specified address and transfer mode.</span></span></summary>
        <returns><span data-ttu-id="b36e7-256">지정된 계약의 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-256">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-257"><xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> 메서드를 사용하여 계약, 주소 및 사용할 다운로드 메커니즘을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-257">Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify a contract, and address, and the download mechanism to use.</span></span>  
  
 <span data-ttu-id="b36e7-258"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-258">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata.</span></span>  
  
 <span data-ttu-id="b36e7-259">@FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-259">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b36e7-260">엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-260">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="b36e7-261">빈 컬렉션이 반환되면 경고 추적이 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-261">If an empty collection is returned, a warning trace is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b36e7-262">다음 코드 예제에서는 WS-Transfer 대신 HTTP GET 요청을 사용하여 <xref:System.ServiceModel.Description.MetadataResolver>를 통해 메타데이터를 다운로드한 다음 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체 컬렉션으로 반환하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-262">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.</span></span>  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b36e7-263">주소 또는 계약이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-263">The address or contract is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="b36e7-264">메타데이터를 다운로드하여 확인할 대상 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-264">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="b36e7-265">메타데이터 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-265">The metadata address.</span></span></param>
        <param name="mode"><span data-ttu-id="b36e7-266">검색 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-266">The mode of retrieval.</span></span></param>
        <param name="client"><span data-ttu-id="b36e7-267">메타데이터를 검색하는 데 사용되는 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-267">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</span></span></param>
        <summary><span data-ttu-id="b36e7-268">지정된 주소, 전송 모드 및 전송 클라이언트를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 메타데이터 주소를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-268">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified address, transfer mode, and transfer client.</span></span></summary>
        <returns><span data-ttu-id="b36e7-269">지정된 계약의 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-269">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36e7-270">@FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="b36e7-270">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b36e7-271">엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-271">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="b36e7-272">빈 컬렉션이 반환되면 경고 추적이 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="b36e7-272">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b36e7-273">주소, 계약 컬렉션 또는 클라이언트가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-273">The address, contracts collection, or client is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b36e7-274"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="b36e7-274"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>