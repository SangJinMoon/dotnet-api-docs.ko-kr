<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IOperationBehavior.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac574831950d68699028d231a79bc457aa397ed7984.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74831950d68699028d231a79bc457aa397ed7984</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Implements methods that can be used to extend run-time behavior for an operation in either a service or client application.</source>
          <target state="translated">서비스 또는 클라이언트 응용 프로그램에서 작업에 대한 런타임 동작을 확장하는 데 사용할 수 있는 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> interface to modify, examine, or extend some aspect of operation-wide execution at the application level for either client or service applications.</source>
          <target state="translated">클라이언트 또는 서버 응용 프로그램에 대해 응용 프로그램 수준에서 작업 차원 실행의 일부 측면을 수정, 검사 또는 확장하기 위한 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> 인터페이스를 구현합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> method to pass custom data at runtime to enable bindings to support custom behavior.</source>
          <target state="translated">바인딩에서 사용자 지정 동작을 지원할 수 있도록 런타임에 사용자 지정 데이터를 전달하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to a client dispatcher in a client application.</source>
          <target state="translated">클라이언트 응용 프로그램에서 클라이언트 디스패처에 대한 확장을 수정, 검사 또는 삽입하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to operation-wide execution in a service application.</source>
          <target state="translated">클라이언트 응용 프로그램에서 작업 차원의 실행에 대한 확장을 수정, 검사 또는 삽입하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> method to confirm that a <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> meets specific requirements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph>가 특정 요구 사항을 충족하는지 확인하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>This can be used to ensure that an operation has a certain configuration setting enabled, supports a particular feature and other requirements.</source>
          <target state="translated">이 메서드는 작업에서 특정 구성 설정을 사용하고 특정 기능과 기타 요구 사항을 지원하는지를 확인하기 위해 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return, performing no action.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> 개체는 이러한 메서드 중 아무 메서드나 사용할 수 있지만 그 중 하나만 사용되는 경우가 많으며 사용되지 않은 메서드는 아무 동작도 수행하지 않고 반환될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> methods pass an <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> object as a parameter.</source>
          <target state="translated">모든 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> 개체를 매개 변수로 전달합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>This parameter is for examination only; if you modify the <ph id="ph1">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> object the execution behavior is undefined.</source>
          <target state="translated">이 매개 변수는 검사 전용이므로 <ph id="ph1">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> 개체를 수정할 경우 실행 동작은 정의되지 않습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> objects are typically used to access the various properties of the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> object in a service application and the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> object in a client application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> 개체는 일반적으로 서비스 응용 프로그램의 다양한 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> 개체 속성과 클라이언트 응용 프로그램의 다양한 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> 개체 속성을 액세스하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Typically, the developer first reviews the extensibility points to determine which customization option suits the application scenario and then implements the customization at the appropriate scope.</source>
          <target state="translated">일반적으로 개발자는 먼저 확장성 지점을 검토하여 응용 프로그램 시나리오에 적합한 사용자 지정 옵션을 결정한 다음 해당 범위에서 사용자 지정을 구현합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>For example, <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType&gt;</ph> objects can insert customizations for all messages in an entire service and <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> objects can insert customizations for all messages across a specific contract, and so on.</source>
          <target state="translated">예를 들어, <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType&gt;</ph> 개체는 전체 서비스의 모든 메시지에 대해 사용자 지정을 삽입하고, <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> 개체는 특정 계약의 모든 메시지에 대해 사용자 지정을 삽입할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>For a description of the various properties and customizations available, see <bpt id="p1">[</bpt>Extending ServiceHost and the Service Model Layer<ept id="p1">](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md)</ept>.</source>
          <target state="translated">참조에 대 한 다양 한 속성 및 사용자 지정을 사용 설명은 <bpt id="p1">[</bpt>확장 ServiceHost 및 서비스 모델 계층<ept id="p1">](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Once a customization has been decided upon (and the customization interface implemented if necessary) and the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> is the appropriate scope of customization, the customization must be inserted into the <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> runtime by implementing <ph id="ph3">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> and adding the operation behavior to the runtime.</source>
          <target state="translated">적절한 사용자 지정 범위에 따라 사용자 지정이 결정되고 필요에 따라 사용자 지정 인터페이스가 구현되었으며 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph>가 결정되면 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>를 구현하고 런타임에 작업 동작을 추가하여 사용자 지정을 <ph id="ph3">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> 런타임에 삽입해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>There are two ways to add the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> to the runtime:</source>
          <target state="translated">다음과 같은 두 가지 방법으로 런타임에 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph>를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Programmatically add the custom operation behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType&gt;</ph> property prior to the opening of the service host (in a service application) or the channel factory (in a client application).</source>
          <target state="translated">서비스 응용 프로그램의 서비스 호스트 또는 클라이언트 응용 프로그램의 채널 팩터리를 열기 전에 <ph id="ph1">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType&gt;</ph> 속성에 사용자 지정 작업 동작을 프로그래밍 방식으로 추가합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Add the behavior using a custom attribute.</source>
          <target state="translated">사용자 지정 특성을 사용하여 동작을 추가합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>To perform the service customization task for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType&gt;</ph> property prior to the construction of the service runtime, which occurs when <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">원하는 대상에 서비스 사용자 지정 작업을 수행하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph>에서 <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType&gt;</ph> 메서드를 호출할 때 발생하는 서비스 런타임 생성이 이루어지기 전에 <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> 개체를 <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> 속성에 추가해야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>To perform a client customization task, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType&gt;</ph> property before calling the <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method on <ph id="ph5">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph>.</source>
          <target state="translated">클라이언트 사용자 지정 작업을 수행하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph>에서 <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType&gt;</ph> 메서드 또는 <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> 메서드를 호출하기 전에 <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> 개체를 <ph id="ph5">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph> 속성에 추가해야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>Although the operation behavior is designed for easy access to the runtime at the scope of an individual operation, you can access the runtime at a larger scope by accessing the parent runtime object.</source>
          <target state="translated">작업 동작의 용도는 개별 작업 범위 내에서 런타임에 쉽게 액세스하기 위한 것이지만 범위를 넓혀 부모 런타임 개체에 액세스함으로써 런타임에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>The following code example shows an implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> that writes to the console when the inspector is invoked on an operation.</source>
          <target state="translated">다음 코드 예제에서는 작업에서 검사자가 호출될 때 콘솔에 쓰는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>This customization can only be attached to the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> and is therefore usually inserted by an operation behavior.</source>
          <target state="translated">이 사용자 지정은 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph>에만 연결되므로 일반적으로 작업 동작에 의해 삽입됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IOperationBehavior">
          <source>The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</source>
          <target state="translated">다음 코드 예제에서는 작업 동작이 매개 변수 검사자를 런타임에 연결하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The operation being examined.</source>
          <target state="translated">검사할 작업입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Use for examination only.</source>
          <target state="translated">검사 전용이므로</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>If the operation description is modified, the results are undefined.</source>
          <target state="translated">작업 설명이 수정될 경우 결과가 정의되지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The collection of objects that binding elements require to support the behavior.</source>
          <target state="translated">바인딩 요소가 동작을 지원해야 하는 개체 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Implement to pass data at runtime to bindings to support custom behavior.</source>
          <target state="translated">런타임에 바인딩에 데이터를 전달하여 사용자 지정 동작을 지원하려면 구현합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with the extra objects they require to support the operation behavior.</source>
          <target state="translated">작업 동작을 지원하는 데 필요한 추가 개체를 바인딩 요소에 제공하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>When binding parameters are added here, the binding can locate and process these objects when the channel listener or channel factory is created.</source>
          <target state="translated">바인딩 매개 변수가 여기에 추가되면 채널 수신기나 채널 팩터리가 생성될 때 바인딩이 이러한 개체를 찾아 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Typically, you implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> method to pass information about the operation to a custom binding element so that it can build a supporting channel correctly.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> 메서드를 구현하여 사용자 지정 바인딩 요소에 작업에 대한 정보를 전달함으로써 지원 채널을 올바르게 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Return no value if no modifications are required.</source>
          <target state="translated">수정이 필요하지 않은 경우 값을 반환하지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>The operation being examined.</source>
          <target state="translated">검사할 작업입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>Use for examination only.</source>
          <target state="translated">검사 전용이므로</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>If the operation description is modified, the results are undefined.</source>
          <target state="translated">작업 설명이 수정될 경우 결과가 정의되지 않습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>The run-time object that exposes customization properties for the operation described by <bpt id="p1">&lt;c&gt;</bpt>operationDescription<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>operationDescription<ept id="p1">&lt;/c&gt;</ept>에 설명된 작업에 대한 사용자 지정 속성을 공개하는 런타임 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>Implements a modification or extension of the client across an operation.</source>
          <target state="translated">작업에 대해 클라이언트의 수정이나 확장을 구현합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> method to view, modify, or add a custom extension to the client runtime across all messages used with a specific operation.</source>
          <target state="translated">특정 작업에 사용되는 모든 메시지에 대해 클라이언트 런타임에 대한 사용자 지정 확장을 보거나 수정 또는 추가하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>For details about what customizations you can do with a client run-time object, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>.</source>
          <target state="translated">클라이언트 런타임 개체로 수행할 수 있는 사용자 지정에 대한 자세한 내용은 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>It is recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> method throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> if the behavior is only intended for use in a service application.</source>
          <target state="translated">동작이 서비스 응용 프로그램에서만 사용하도록 지정된 경우 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> 메서드가 <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph>을 throw하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>The following code example shows an implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> that writes to the console when the inspector is invoked on an operation.</source>
          <target state="translated">다음 코드 예제에서는 작업에서 검사자가 호출될 때 콘솔에 쓰는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>This customization can only be attached to the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> and is therefore usually inserted by an operation behavior.</source>
          <target state="translated">이 사용자 지정은 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph>에만 연결되므로 일반적으로 작업 동작에 의해 삽입됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
          <source>The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</source>
          <target state="translated">다음 코드 예제에서는 작업 동작이 매개 변수 검사자를 런타임에 연결하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>The operation being examined.</source>
          <target state="translated">검사할 작업입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>Use for examination only.</source>
          <target state="translated">검사 전용이므로</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>If the operation description is modified, the results are undefined.</source>
          <target state="translated">작업 설명이 수정될 경우 결과가 정의되지 않습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>The run-time object that exposes customization properties for the operation described by <bpt id="p1">&lt;c&gt;</bpt>operationDescription<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>operationDescription<ept id="p1">&lt;/c&gt;</ept>에 설명된 작업에 대한 사용자 지정 속성을 공개하는 런타임 개체입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>Implements a modification or extension of the service across an operation.</source>
          <target state="translated">작업에 대해 서비스의 수정이나 확장을 구현합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to view, modify, or extend the service runtime across all messages or for a specific operation.</source>
          <target state="translated">모든 메시지에 대해 또는 특정 작업에 대해 서비스 런타임을 보거나 수정 또는 확장하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>For details about what customizations you can do in a service application, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">서비스 응용 프로그램에서 수행할 수 있는 사용자 지정에 대한 자세한 내용은 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>It is recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> method throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a client application.</source>
          <target state="translated">동작이 클라이언트 응용 프로그램에서만 사용되도록 지정된 경우 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> 메서드가 <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> 예외를 throw하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>The following code example shows an implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> that writes to the console when the inspector is invoked on an operation.</source>
          <target state="translated">다음 코드 예제에서는 작업에서 검사자가 호출될 때 콘솔에 쓰는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>This customization can only be attached to the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph> and is therefore usually inserted by an operation behavior.</source>
          <target state="translated">이 사용자 지정은 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType&gt;</ph>에만 연결되므로 일반적으로 작업 동작에 의해 삽입됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
          <source>The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</source>
          <target state="translated">다음 코드 예제에서는 작업 동작이 매개 변수 검사자를 런타임에 연결하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>The operation being examined.</source>
          <target state="translated">검사할 작업입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>Use for examination only.</source>
          <target state="translated">검사 전용이므로</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>If the operation description is modified, the results are undefined.</source>
          <target state="translated">작업 설명이 수정될 경우 결과가 정의되지 않습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>Implement to confirm that the operation meets some intended criteria.</source>
          <target state="translated">작업이 해당 조건을 충족하는지 확인하려면 구현합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> method to examine the structure to confirm any set of criteria.</source>
          <target state="translated">구조체가 기준 집합을 충족하는지 검사하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>It is not necessary to perform any customizations in <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> to make use of this method.</source>
          <target state="translated">이 메서드를 사용하기 위해 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph>에서 사용자 지정을 수행해야 할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>If the operation passes validation, return; otherwise, throw an exception.</source>
          <target state="translated">작업이 유효성 검사를 통과하면 반환되고, 그렇지 않으면 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
          <source>For example, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> method can be use to ensure that an operation is authorized.</source>
          <target state="translated">예를 들어, <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> 메서드를 사용하여 작업이 인증되는지 확인할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>