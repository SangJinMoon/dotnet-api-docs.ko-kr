<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPolicyImportExtension.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72eabdc083ee43a8830cc82eb6bfb3c6b2f2e9e8af.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eabdc083ee43a8830cc82eb6bfb3c6b2f2e9e8af</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Defines a method for objects that import custom policy assertions about bindings.</source>
          <target state="translated">바인딩에 대한 사용자 지정 정책 어설션을 가져오는 개체의 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> interface to search WSDL information exposed by a particular endpoint for custom policy assertions about endpoint capabilities or requirements.</source>
          <target state="translated">끝점 기능 또는 요구 사항에 대한 사용자 지정 정책 어설션의 특정 끝점에서 공개하는 WSDL 정보를 검색하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> 인터페이스를 구현합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Typically, a policy importer searches for a specific assertion and either inserts a binding element, configures a binding element, or modifies the contract to support the requirements of the assertion.</source>
          <target state="translated">일반적으로 정책 가져오기에서는 특정 어설션을 검색한 후 어설션 요구 사항을 지원하도록 바인딩 요소를 삽입 또는 구성하거나 계약을 수정합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Unlike its counterpart, <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> does not require implementation by a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> object; you can load it using the client configuration section shown in the Examples section or programmatically by adding it to the <ph id="ph4">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">상대적인 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>과 달리 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph>은 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> 개체에서 반드시 구현할 필요는 없으며, 예제 부분에 나와 있는 클라이언트 구성 섹션을 사용하여 로드하거나 <ph id="ph4">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> 생성자에 프로그래밍 방식으로 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> passes two objects to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;</ph> method, a <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> and a <ph id="ph4">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;</ph> 메서드에 두 개의 개체 즉, <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 개체와 <ph id="ph4">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> 개체를 전달합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Typically the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> object already contains the policy assertions for each binding scope.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> 개체에는 각 바인딩 범위에 대한 정책 어설션이 이미 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>An <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> implementation performs the following steps:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> 구현에서는 다음 단계를 수행합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Locates the custom policy assertion for which it is responsible by calling either the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods, depending upon the scope.</source>
          <target state="translated">범위에 따라 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> 메서드를 호출하여 해당 사용자 지정 정책 어설션을 찾습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Removes the policy assertion from the assertion collection.</source>
          <target state="translated">어설션 컬렉션에서 정책 어설션을 제거합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method locates, returns, and removes the assertion in one step.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> 메서드는 어설션을 찾아서 반환하고 제거하는 과정을 한 단계로 수행합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Modify the binding stack or the contract by either adding a required custom <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;</ph> property or by modifying the <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">필요한 사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph>를 <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;</ph> 속성에 추가하거나 <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType&gt;</ph> 속성을 수정하여 바인딩 스택 또는 계약을 수정합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Step 2 is important.</source>
          <target state="translated">2단계는 중요한 단계입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>After all policy importers have been called, WCF checks for the existence of any policy assertions that remain.</source>
          <target state="translated">모든 정책 가져오기를 호출 된 후에 WCF 남아 있는 정책 어설션이 있는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>If one exists, WCF assumes that the policy import was unsuccessful and does not import the associated binding.</source>
          <target state="translated">있는 경우 WCF에서는 정책 가져오기가 실패 하 고 관련된 바인딩을 가져오지 않습니다 가정 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>A malicious metadata supplier can attempt to send malformed XML as part of metadata in an attempt to exploit a policy importer.</source>
          <target state="translated">악의적인 메타데이터 공급자가 정책 가져오기를 악용하기 위해 잘못된 XML을 메타데이터의 일부로 보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>It is strongly recommended that custom policy importers be robust to all forms of XML that can be passed to it.</source>
          <target state="translated">따라서 사용자 지정 정책 가져오기는 전달될 수 있는 모든 형태의 XML을 보호할 수 있을 정도로 강력해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Custom <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> implementations must implement their own <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> object to extract the policy assertions attached to the custom metadata format.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 구현에서는 자체 <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> 개체를 구현하여 사용자 지정 메타데이터 형식에 연결된 정책 어설션을 추출해야 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>If you want to export and import custom WSDL elements that are not policy assertions, see <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">정책 어설션이 아닌 사용자 지정 WSDL 요소를 가져오거나 내보내려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>You can use custom policy importers and exporters with the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> by using the same configuration elements in a configuration file and the <ph id="ph1">`/svcutilConfig:&lt;configFile&gt;`</ph> option.</source>
          <target state="translated">사용자 지정 정책 가져오기 및 내보내기를 사용할 수는 <bpt id="p1">[</bpt>ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> 구성 파일에서 동일한 구성 요소를 사용 하 여 및 <ph id="ph1">`/svcutilConfig:&lt;configFile&gt;`</ph> 옵션입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method to locate, return, and remove the assertion in one step.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> 메서드를 사용하여 어설션을 찾아서 반환하고 제거하는 작업을 한 단계로 수행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>The following code example shows the client application configuration file to load the custom policy importer when the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType&gt;</ph> is invoked.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType&gt;</ph>가 호출될 때 사용자 지정 정책 가져오기를 로드하는 클라이언트 응용 프로그램 구성 파일을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver&gt;</ph> to download and resolve metadata into description objects.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver&gt;</ph>를 사용하여 메타데이터를 설명 개체로 다운로드하고 확인하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataImporter" /&gt;</ph> object in use.</source>
          <target state="translated">사용 중인 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataImporter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph> that contains both the policy assertions that can be imported and the collections of binding elements to which implementing binding elements can be added.</source>
          <target state="translated">가져올 수 있는 정책 어설션과, 구현 바인딩 요소를 추가할 수 있는 바인딩 요소 컬렉션을 모두 포함하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Defines a method that can import custom policy assertions and add implementing binding elements.</source>
          <target state="translated">사용자 지정 정책 어설션을 가져오고 구현 바인딩 요소를 추가할 수 있는 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Implement the <ph id="ph1">`ImportPolicy`</ph> method to obtain policy assertions and perform some modification of the imported contract or binding to support the assertion.</source>
          <target state="translated">정책 어설션을 가져온 후 해당 어설션을 지원하도록 가져온 계약 또는 바인딩을 수정하려면 <ph id="ph1">`ImportPolicy`</ph> 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Typically, a policy importer responds to finding a custom policy assertion by configuring or inserting a binding element into the binding being imported.</source>
          <target state="translated">일반적으로 정책 가져오기는 바인딩 요소를 구성하거나 가져올 바인딩에 삽입함으로써 사용자 지정 정책 어설션 검색에 응답합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> passes two objects to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;</ph> method, a <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> and a <ph id="ph4">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;</ph> 메서드에 두 개의 개체 즉, <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 개체와 <ph id="ph4">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> 개체를 전달합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Typically the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> object already contains the policy assertions for each binding scope.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> 개체에는 각 바인딩 범위에 대한 정책 어설션이 이미 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>An <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> implementation performs the following steps:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> 구현에서는 다음 단계를 수행합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Locates the custom policy assertion for which it is responsible by calling either the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods, depending upon the scope.</source>
          <target state="translated">범위에 따라 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> 메서드를 호출하여 해당 사용자 지정 정책 어설션을 찾습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Removes the policy assertion from the assertion collection.</source>
          <target state="translated">어설션 컬렉션에서 정책 어설션을 제거합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method locates, returns, and removes the assertion in one step.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> 메서드는 어설션을 찾아서 반환하고 제거하는 과정을 한 단계로 수행합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Modifies the binding stack or the contract by either adding a required custom <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;</ph> property or by modifying the <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">필요한 사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph>를 <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;</ph> 속성에 추가하거나 <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType&gt;</ph> 속성을 수정하여 바인딩 스택 또는 계약을 수정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Step 2 is important.</source>
          <target state="translated">2단계는 중요한 단계입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>After all policy importers have been called, WCF checks for the existence of any policy assertions that remain.</source>
          <target state="translated">모든 정책 가져오기를 호출 된 후에 WCF 남아 있는 정책 어설션이 있는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>If one exists, WCF assumes that the policy import was unsuccessful and does not import the associated binding.</source>
          <target state="translated">있는 경우 WCF에서는 정책 가져오기가 실패 하 고 관련된 바인딩을 가져오지 않습니다 가정 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method to locate, return, and remove the assertion in one step.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> 메서드를 사용하여 어설션을 찾아서 반환하고 제거하는 작업을 한 단계로 수행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The following code example shows the client application configuration file to load the custom policy importer when the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType&gt;</ph> is invoked.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType&gt;</ph>가 호출될 때 사용자 지정 정책 가져오기를 로드하는 클라이언트 응용 프로그램 구성 파일을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver&gt;</ph> to download and resolve metadata into description objects.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver&gt;</ph>를 사용하여 메타데이터를 설명 개체로 다운로드하고 확인하는 방법을 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>