<Type Name="TransactedBatchingBehavior" FullName="System.ServiceModel.Description.TransactedBatchingBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62f85847b0ee45676f0eec7f6084ee0b58ae1475" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39810513" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TransactedBatchingBehavior : System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TransactedBatchingBehavior extends System.Object implements class System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.TransactedBatchingBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class TransactedBatchingBehavior&#xA;Implements IEndpointBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactedBatchingBehavior : System::ServiceModel::Description::IEndpointBehavior" />
  <TypeSignature Language="F#" Value="type TransactedBatchingBehavior = class&#xA;    interface IEndpointBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IEndpointBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d102c-101">트랜잭션 수신을 지원하는 전송에 대해 받기 작업을 최적화하는 동작을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d102c-101">Represents a behavior that optimizes the receive operations for transports that support transactional receives.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d102c-102">이 동작으로 구성된 전송에서 여러 개의 받기 작업을 한 번의 트랜잭션으로 일괄 처리하도록 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-102">A transport that is configured with this behavior attempts to batch several receive operations into one transaction.</span></span> <span data-ttu-id="d102c-103">이렇게 하면 모든 받기 작업에서 트랜잭션을 만들고 이를 커밋하는 비용을 줄일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-103">By doing so, the relatively high cost of creating a transaction and committing it in every receive operation is avoided.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d102c-104">다음 예제에서는 구성 파일에서 트랜잭션된 일괄 처리 동작을 서비스에 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-104">The following example shows how to add the transacted batching behavior to a service in a configuration file.</span></span>  
  
 [!code-xml[UETransactedBatchingConfig#0](~/samples/snippets/csharp/VS_Snippets_CFX/uetransactedbatchingcode/common/serviceapp.config#0)] 
  
 <span data-ttu-id="d102c-105">다음 예제에서는 코드에서 트랜잭션된 일괄 처리 동작을 서비스에 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-105">The following example shows how to add the transacted batching behavior to a service in code.</span></span>  
  
 [!code-csharp[UETransactedBatchingCode#0](~/samples/snippets/csharp/VS_Snippets_CFX/uetransactedbatchingcode/cs/service.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactedBatchingBehavior (int maxBatchSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 maxBatchSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TransactedBatchingBehavior.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (maxBatchSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactedBatchingBehavior(int maxBatchSize);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.TransactedBatchingBehavior : int -&gt; System.ServiceModel.Description.TransactedBatchingBehavior" Usage="new System.ServiceModel.Description.TransactedBatchingBehavior maxBatchSize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maxBatchSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxBatchSize">
          <span data-ttu-id="d102c-106">일괄 처리할 수 있는 최대 받기 작업 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-106">The maximum number of receive operations that can be batched together.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d102c-107">지정된 일괄 처리 크기를 사용하여 <see cref="T:System.ServiceModel.Description.TransactedBatchingBehavior" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Description.TransactedBatchingBehavior" /> class with the specified batch size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d102c-108">생성자로 전달되는 `maxBatchSize` 값은 참고로만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-108">The `maxBatchSize` value passed into the constructor is only a hint.</span></span> <span data-ttu-id="d102c-109">`maxBatchSize`에 도달하기 전에 모든 메시지가 수신될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-109">It is possible that all messages are received before reaching the `maxBatchSize`.</span></span> <span data-ttu-id="d102c-110">이 경우에는 다른 메시지를 받기 위해 무한정 대기하는 일이 없어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-110">When that occurs, it is unnecessary to wait indefinitely for another message to be received.</span></span> <span data-ttu-id="d102c-111">이를 방지 하려면 WCF 일괄 처리를 초기 커밋 하 고 추가 메시지를 수신 하는 새 일괄 처리를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-111">To prevent this from happening, WCF commits the batch early and open a new batch to receive additional messages.</span></span> <span data-ttu-id="d102c-112">수신할 메시지가 없고 트랜잭션 시간 제한 값의 20%가 경과하면 일괄 처리가 커밋됩니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-112">The batch is committed if there are no messages to be received and 20 percent of the transaction time-out value has elapsed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d102c-113">다음 코드에서는 일괄적으로 처리할 최대 메시지 수를 지정하여 <xref:System.ServiceModel.Description.TransactedBatchingBehavior>의 새 인스턴스를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-113">The following code shows how to create a new instance of <xref:System.ServiceModel.Description.TransactedBatchingBehavior> specifying the maximum number of messages to be processed in a batch.</span></span>  
  
 [!code-csharp[UETransactedBatchingCode#1](~/samples/snippets/csharp/VS_Snippets_CFX/uetransactedbatchingcode/cs/service.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d102c-114">
            <paramref name="MaxBatchSize" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-114">
              <paramref name="MaxBatchSize" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxBatchSize">
      <MemberSignature Language="C#" Value="public int MaxBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.TransactedBatchingBehavior.MaxBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBatchSize : int with get, set" Usage="System.ServiceModel.Description.TransactedBatchingBehavior.MaxBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d102c-115">한 트랜잭션으로 일괄 처리할 수 있는 최대 받기 작업 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-115">Gets or sets the maximum number of receive operations that can be batched together in one transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d102c-116">한 트랜잭션으로 일괄 처리할 수 있는 최대 받기 작업 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-116">The maximum number of receive operations that can be batched together in one transaction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d102c-117">`maxBatchSize` 값은 힌트로만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-117">The `maxBatchSize` value is only a hint.</span></span> <span data-ttu-id="d102c-118">`maxBatchSize`에 도달하기 전에 모든 메시지가 수신될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-118">It is possible that all messages are received before reaching the `maxBatchSize`.</span></span> <span data-ttu-id="d102c-119">이 경우에는 다른 메시지를 받기 위해 무한정 대기하는 일이 없어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-119">When that occurs, it is unnecessary to wait indefinitely for another message to be received.</span></span> <span data-ttu-id="d102c-120">이를 방지 하려면 WCF 일괄 처리를 초기 커밋 하 고 추가 메시지를 수신 하는 새 일괄 처리를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-120">To prevent this from happening, WCF commits the batch early and open a new batch to receive additional messages.</span></span> <span data-ttu-id="d102c-121">수신할 메시지가 없고 트랜잭션 시간 제한 값의 20%가 경과하면 일괄 처리가 커밋됩니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-121">The batch is committed if there are no messages to be received and 20 percent of the transaction time-out value has elapsed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d102c-122">다음 코드에서는 <xref:System.ServiceModel.Description.TransactedBatchingBehavior.MaxBatchSize%2A> 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-122">The following code shows how to set the <xref:System.ServiceModel.Description.TransactedBatchingBehavior.MaxBatchSize%2A> property.</span></span>  
  
 [!code-csharp[UETransactedBatchingCode#2](~/samples/snippets/csharp/VS_Snippets_CFX/uetransactedbatchingcode/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d102c-123">
            <paramref name="MaxBatchSize" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-123">
              <paramref name="MaxBatchSize" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters) = System::ServiceModel::Description::IEndpointBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">
          <span data-ttu-id="d102c-124">동작 설정이 적용되는 서비스 끝점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-124">A service endpoint where behavior settings are applied.</span>
          </span>
        </param>
        <param name="bindingParameters">
          <span data-ttu-id="d102c-125">팩터리를 빌드하기 위해 바인딩 요소에서 사용되는 정보를 저장하는 바인딩 매개 변수 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-125">A collection of binding parameters that store information used by binding elements to build factories.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d102c-126">지정된 서비스 끝점에 바인딩 설정을 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-126">Applies binding settings to the specified service endpoint.</span>
          </span>
          <span data-ttu-id="d102c-127">이 메서드는 상속될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-127">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d102c-128">지정된 서비스 끝점에 바인딩 매개 변수를 추가할 수 있도록 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-128">Enables you to add additional binding parameters to the specified service endpoint.</span></span> <span data-ttu-id="d102c-129">사용자 지정 바인딩으로 작업할 때 주로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-129">This is normally used when working with a custom binding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Dispatcher.ClientRuntime behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Dispatcher.ClientRuntime behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ behavior) = System::ServiceModel::Description::IEndpointBehavior::ApplyClientBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="behavior" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">
          <span data-ttu-id="d102c-130">동작 설정이 적용되는 서비스 끝점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-130">A service endpoint where behavior settings are applied.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="d102c-131">트랜잭션 일괄 처리 동작을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-131">Contains the transaction batching behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d102c-132">지정된 서비스 끝점에 트랜잭션 일괄 처리 동작 설정을 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-132">Applies transaction batching behavior settings to the specified service endpoint.</span>
          </span>
          <span data-ttu-id="d102c-133">이 메서드는 상속될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-133">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher) = System::ServiceModel::Description::IEndpointBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">
          <span data-ttu-id="d102c-134">동작 설정이 적용되는 서비스 끝점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-134">A service endpoint where behavior settings are applied.</span>
          </span>
        </param>
        <param name="endpointDispatcher">
          <span data-ttu-id="d102c-135">메시지 디스패치를 위한 끝점 디스패치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-135">An endpoint dispatching for dispatching messages</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d102c-136">끝점 디스패처를 지정된 서비스 끝점에 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-136">Associates an endpoint dispatcher with the specified service endpoint.</span>
          </span>
          <span data-ttu-id="d102c-137">이 메서드는 상속될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-137">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d102c-138">이 메서드는 끝점 디스패처를 사용 하 여 서비스 끝점을 연결 하는 WCF에 의해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-138">This method is called by WCF to associate a service endpoint with an endpoint dispatcher.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.Validate">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.Validate (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.Validate(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.Validate(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint) = System::ServiceModel::Description::IEndpointBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">
          <span data-ttu-id="d102c-139">일괄 처리 동작의 유효성을 검사할 서비스 끝점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-139">A service endpoint for which batching behavior is validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d102c-140">트랜잭션된 받기 작업을 지원하는 바인딩에 대해서만 트랜잭션된 일괄 처리를 적용할 수 있는지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-140">Ensures that transacted batching is applicable only for the bindings that support transacted receive operation.</span>
          </span>
          <span data-ttu-id="d102c-141">이 메서드는 상속될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d102c-141">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d102c-142">이 메서드는 일괄 처리를 트랜잭션 지원 작업을 수신 하는 바인딩 용 으로만 사용할 수 있도록 하는 WCF에 의해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d102c-142">This method is called by WCF to ensure that batching is available only for bindings that support transacted receive operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>