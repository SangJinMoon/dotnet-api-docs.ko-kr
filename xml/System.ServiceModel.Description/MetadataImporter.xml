<Type Name="MetadataImporter" FullName="System.ServiceModel.Description.MetadataImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7b40037f4585b2bf531e80054f3fcc987ddde0a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataImporter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1856b-101">
        <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 메타데이터를 가져옵니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1856b-101">Imports metadata into <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1856b-102">서비스 메타데이터를 가져오려면 <xref:System.ServiceModel.Description.MetadataImporter> 추상 클래스의 구현을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-102">Use an implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class to import service metadata.</span></span> <span data-ttu-id="1856b-103"><xref:System.ServiceModel.Description.MetadataImporter> 클래스에서 파생되는 형식은 [!INCLUDE[indigo1](~/includes/indigo1-md.md)]에서 WS-Policy 가져오기 논리를 사용하는 메타데이터 형식 가져오기에 대한 지원을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-103">Types that derive from the <xref:System.ServiceModel.Description.MetadataImporter> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in [!INCLUDE[indigo1](~/includes/indigo1-md.md)].</span></span>  
  
 <span data-ttu-id="1856b-104"><xref:System.ServiceModel.Description.MetadataImporter> 구현에서는 <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType> 개체의 서비스 메타데이터에 연결된 정책 식을 수집합니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-104">A <xref:System.ServiceModel.Description.MetadataImporter> implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="1856b-105"><xref:System.ServiceModel.Description.MetadataImporter>는 메타데이터를 가져올 때 <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> 속성의 <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> 인터페이스 구현을 호출하여 정책을 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-105">The <xref:System.ServiceModel.Description.MetadataImporter> then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1856b-106"><xref:System.ServiceModel.Description.MetadataImporter> 인스턴스의 <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> 속성에 <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> 인터페이스의 사용자 지정 구현을 추가하여 <xref:System.ServiceModel.Description.MetadataImporter>로 새 정책 어설션 가져오기에 대한 지원을 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-106">You can add support for importing new policy assertions to a <xref:System.ServiceModel.Description.MetadataImporter> by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property on a <xref:System.ServiceModel.Description.MetadataImporter> instance.</span></span> <span data-ttu-id="1856b-107">또는 응용 프로그램 구성 파일에 정책 가져오기 확장을 등록할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-107">Alternatively, you can register your policy import extension in your application configuration file.</span></span>  
  
 <span data-ttu-id="1856b-108"><xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> 형식은 <xref:System.ServiceModel.Description.MetadataImporter>에 포함된 [!INCLUDE[indigo2](~/includes/indigo2-md.md)] 추상 클래스의 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-108">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type is the implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class included with [!INCLUDE[indigo2](~/includes/indigo2-md.md)].</span></span> <span data-ttu-id="1856b-109"><xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> 형식은 <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> 개체에 번들로 제공되는 연결된 정책과 함께 WSDL 메타데이터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-109">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> object.</span></span>  
  
 <span data-ttu-id="1856b-110"><xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> 인터페이스를 구현한 다음 <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> 인스턴스의 <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> 속성에 이 구현을 추가하여 WSDL 확장 가져오기에 대한 지원을 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-110">You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> instance.</span></span> <span data-ttu-id="1856b-111"><xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType>에서 응용 프로그램 구성 파일에 등록된 <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> 인터페이스의 구현을 로드할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-111">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface registered in your application configuration file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1856b-112"><xref:System.ServiceModel.Description.MetadataImporter> 생성자는 내부용이므로 이 버전의 <xref:System.ServiceModel.Description.MetadataImporter>에서 파생시킬 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-112">Because the <xref:System.ServiceModel.Description.MetadataImporter> constructor is internal, you cannot derive from <xref:System.ServiceModel.Description.MetadataImporter> in this version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1856b-113">다음 예제에서는 <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> 파생 클래스를 사용하여 메타데이터를 사용자 지정 상태로 가져온 다음, <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> 속성을 검사하고, 가져온 메타데이터를 관리되는 형식으로 컴파일한 후 그 결과를 코드 파일로 저장하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-113">The following example shows the use of the <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> derived class to import metadata using custom state, checking the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property, compiling imported metadata to managed types and saving the result to a code file.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt; Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.MetadataConversionError&gt; Errors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Collection(Of MetadataConversionError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ Errors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1856b-114">메타데이터를 가져오는 과정에서 오류가 발생했는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1856b-114">Gets a value that indicates whether there were errors importing the metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1856b-115">
            <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> 개체의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1856b-115">A collection of <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1856b-116">메타데이터를 가져온 후와 메타데이터를 사용하기 전에 반드시 <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> 속성을 확인하십시오.</span><span class="sxs-lookup"><span data-stu-id="1856b-116">Always check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property after importing metadata and before using the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1856b-117">파생 클래스에서 재정의되는 경우 메타데이터에서 가져온 계약 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1856b-117">When overridden in a derived class, returns a collection of contracts imported from the metadata.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1856b-118">메타데이터에서 가져온 계약입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1856b-118">The contracts imported from the metadata.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1856b-119">파생 클래스에서 재정의되는 경우 메타데이터의 모든 끝점을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1856b-119">When overridden in a derived class, returns all endpoints in the metadata.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1856b-120">서비스에서 게시하는 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1856b-120">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects that are published by a service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1856b-121">가져온 메타데이터의 모든 끝점을 반환하려면 <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> 메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-121">Implement the <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> method to return all endpoints in the imported metadata.</span></span> <span data-ttu-id="1856b-122">가져온 끝점에 관리되는 형식 정보가 없기 때문에 서비스 끝점으로 가져온 메타데이터는 런타임 또는 내보내기 메타데이터를 만드는 데 사용될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-122">Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information.</span></span> <span data-ttu-id="1856b-123">메타데이터를 사용하여 클라이언트 또는 서비스 런타임을 만들거나 메타데이터를 생성하려면 먼저 메타데이터에서 코드를 생성하여 컴파일한 후 <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType>를 사용하여 해당 형식 정보로 새로운 <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A> 개체를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-123">To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KnownContracts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt; KnownContracts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, class System.ServiceModel.Description.ContractDescription&gt; KnownContracts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.KnownContracts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KnownContracts As Dictionary(Of XmlQualifiedName, ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ KnownContracts { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1856b-124">가져오기에 알려진 이름을 기준으로 계약 사전을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1856b-124">Gets a dictionary of contracts by name that the importer knows about.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1856b-125">정규화된 XML 이름으로 나열된 계약 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1856b-125">A dictionary of contracts listed by XML qualified name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1856b-126">가져오기에서 참조할 수 있는 계약 설명과 연결된 XML 이름을 추가하거나 제거하려면 <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-126">Use the <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> property to add or remove contract descriptions and their associated XML names that the importer can reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PolicyImportExtensions As KeyedByTypeCollection(Of IPolicyImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ PolicyImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1856b-127">가져오기에서 정책 어설션을 처리하기 위해 호출하는 정책 가져오기 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1856b-127">Gets a collection of policy importers that the importer calls to process policy assertions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1856b-128">
            <see cref="T:System.ServiceModel.Description.MetadataImporter" />에서 정책 어설션을 처리하는 데 사용되는 정책 가져오기 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1856b-128">A collection of policy importers that the <see cref="T:System.ServiceModel.Description.MetadataImporter" /> uses to process policy assertions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1856b-129">메타데이터의 정책 어설션을 처리하기 위해 호출되는 정책 가져오기를 추가하거나 제거하려면 <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-129">Use the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> property to add or remove policy importers that are invoked to process policy assertions in the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;object,object&gt; State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;object, object&gt; State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Dictionary(Of Object, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ State { System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1856b-130">메타데이터 가져오기에 사용되는 개체 컬렉션을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1856b-130">Gets or sets a collection of objects used in the importing of metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1856b-131">형식이 키로 지정된 개체 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1856b-131">A dictionary of objects keyed by type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1856b-132">메타데이터 가져오기에 사용되는 개체를 추가하거나 제거하려면 `State` 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-132">Use the `State` property to add or remove objects used in the importing of metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1856b-133">다음 예제에서는 <xref:System.ServiceModel.Description.MetadataImporter.State%2A> 속성을 통해 사용자 지정 <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType>를 추가함으로써 특정 방식으로 데이터 구조를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1856b-133">The following example shows the use of the <xref:System.ServiceModel.Description.MetadataImporter.State%2A> property to add a custom <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType> to import data structures in a particular way.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>