<Type Name="SymScope" FullName="System.Diagnostics.SymbolStore.SymScope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5dc7e4a48b4e4c767b9f3f75b4dd301d32a07c5f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36675221" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SymScope : System.Diagnostics.SymbolStore.SymScopeBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolScope" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymScope extends System.Diagnostics.SymbolStore.SymScopeBase implements class System.Diagnostics.SymbolStore.ISymbolScope, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymScope" />
  <TypeSignature Language="VB.NET" Value="Public Class SymScope&#xA;Inherits SymScopeBase&#xA;Implements IDisposable, ISymbolScope" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymScope : System::Diagnostics::SymbolStore::SymScopeBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolScope" />
  <TypeSignature Language="F#" Value="type SymScope = class&#xA;    inherit SymScopeBase&#xA;    interface ISymbolScope&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymScopeBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolScope</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="21461-101">
        <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />에 들어 있는 어휘 범위를 나타내며, 부모 및 자식 범위는 물론 범위의 시작 및 종료 오프셋에 액세스할 수 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="21461-101">Represents a lexical scope within <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />, providing access to the start and end offsets of the scope, as well as its child and parent scopes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21461-102"><xref:System.Diagnostics.SymbolStore.SymScope> 클래스도 현재 범위 내에 정의 된 모든 로컬에 대 한 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="21461-102">The <xref:System.Diagnostics.SymbolStore.SymScope> class also provides access to all locals defined within the current scope.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymScope (System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope* pScope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope* pScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymScope(System::Diagnostics::SymbolStore::Private::ISymUnmanagedScope* pScope);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymScope : nativeptr&lt;System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope&gt; -&gt; System.Diagnostics.SymbolStore.SymScope" Usage="new System.Diagnostics.SymbolStore.SymScope pScope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pScope" Type="System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*" />
      </Parameters>
      <Docs>
        <param name="pScope">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="symScope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="21461-103">
            <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> 클래스의 현재 인스턴스에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-103">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="symScope.Dispose A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="21461-104">관리되는 리소스와 관리되지 않는 리소스를 해제하려면 <see langword="true" />이고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-104">
              <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21461-105">
            <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> 클래스의 현재 인스턴스에서 사용하는 관리되는 리소스와 관리되지 않는 리소스를 해제하기 위해 <see cref="M:System.Diagnostics.SymbolStore.SymScope.Dispose" /> 및 <see cref="M:System.Diagnostics.SymbolStore.SymScope.Finalize" /> 메서드에 의해 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-105">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymScope.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymScope.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21461-106">공개적으로만이 메서드는 <xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A> 및 <xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A> 방식의이 메서드를 직접 호출 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="21461-106">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOffset">
      <MemberSignature Language="C#" Value="public virtual int EndOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EndOffset" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymScope.EndOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EndOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EndOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EndOffset : int" Usage="System.Diagnostics.SymbolStore.SymScope.EndOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21461-107">현재 어휘 범위의 종료 오프셋을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-107">Gets the end offset of the current lexical scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21461-108">종료 MSIL(Microsoft Intermediate Language) 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-108">The ending Microsoft intermediate language (MSIL) offset.</span>
          </span>
          <span data-ttu-id="21461-109">현재 어휘 범위의 메서드 시작 부분부터의 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-109">The offset is from the beginning of the method of the current lexical scope.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymScope ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="symScope.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="21461-110">가비지 수집에 의해 <see cref="T:System.Diagnostics.SymbolStore.SymScope" />이(가) 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-110">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21461-111">이 메서드를 재정의 <xref:System.Object.Finalize%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="21461-111">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="21461-112">응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 `Finalize` 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="21461-112">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolScope[] GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolScope[] GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildren () As ISymbolScope()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolScope ^&gt; ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Diagnostics.SymbolStore.ISymbolScope[]&#xA;override this.GetChildren : unit -&gt; System.Diagnostics.SymbolStore.ISymbolScope[]" Usage="symScope.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolScope[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="21461-113">현재 어휘 범위의 자식 어휘 범위를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-113">Gets the child lexical scopes of the current lexical scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21461-114">현재 어휘 범위에 포함되는 어휘 범위입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-114">The lexical scopes enclosed by the current lexical scope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="21461-115">메모리가 부족하여 요청을 만족시킬 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-115">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocals">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetLocals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolVariable[] GetLocals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.GetLocals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocals () As ISymbolVariable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolVariable ^&gt; ^ GetLocals();" />
      <MemberSignature Language="F#" Value="abstract member GetLocals : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]&#xA;override this.GetLocals : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]" Usage="symScope.GetLocals " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolVariable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="21461-116">현재 어휘 범위의 지역 변수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-116">Gets the local variables within the current lexical scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21461-117">현재 어휘 범위의 지역 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-117">The local variables within the current lexical scope.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21461-118">지역 변수는 임의의 순서로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="21461-118">The local variables are returned in no particular order.</span></span> <span data-ttu-id="21461-119">지역 변수는 현재 범위 내 주소 변경 되 면 해당 변수가 포함 된 여러 번 각각 오프셋된 범위가 다른</span><span class="sxs-lookup"><span data-stu-id="21461-119">If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="21461-120">메모리가 부족하여 요청을 만족시킬 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-120">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymScope.GetNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaces () As ISymbolNamespace()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolNamespace ^&gt; ^ GetNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaces : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace[]&#xA;override this.GetNamespaces : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace[]" Usage="symScope.GetNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolNamespace[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="21461-121">모든 경우에 <see cref="T:System.NotSupportedException" />을(를) throw합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-121">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21461-122">모든 경우에 <see cref="T:System.NotSupportedException" />을(를) throw합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-122">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod Method { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SymbolStore.ISymbolMethod Method" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymScope.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Method As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::ISymbolMethod ^ Method { System::Diagnostics::SymbolStore::ISymbolMethod ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Method : System.Diagnostics.SymbolStore.ISymbolMethod" Usage="System.Diagnostics.SymbolStore.SymScope.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21461-123">현재 어휘 범위를 포함하는 메서드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-123">Gets the method that contains the current lexical scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21461-124">현재 어휘 범위를 포함하는 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-124">The method that contains the current lexical scope.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolScope Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SymbolStore.ISymbolScope Parent" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymScope.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As ISymbolScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::ISymbolScope ^ Parent { System::Diagnostics::SymbolStore::ISymbolScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Diagnostics.SymbolStore.ISymbolScope" Usage="System.Diagnostics.SymbolStore.SymScope.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21461-125">현재 범위의 부모 어휘 범위를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-125">Gets the parent lexical scope of the current scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21461-126">현재 범위를 포함하는 어휘 범위입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-126">The enclosing lexical scope of the current scope.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartOffset">
      <MemberSignature Language="C#" Value="public virtual int StartOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartOffset" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymScope.StartOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StartOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int StartOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.StartOffset : int" Usage="System.Diagnostics.SymbolStore.SymScope.StartOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21461-127">현재 어휘 범위의 시작 오프셋을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-127">Gets the start offset of the current lexical scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21461-128">시작 MSIL(Microsoft Intermediate Language) 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-128">The starting Microsoft intermediate language (MSIL) offset.</span>
          </span>
          <span data-ttu-id="21461-129">현재 어휘 범위의 메서드 시작 부분부터의 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21461-129">The offset is from the beginning of the method of the current lexical scope.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>