<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventHandlerService.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f6f3d74a53f6d95724b1bcdb80e4c00dfb59d7fa.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6f3d74a53f6d95724b1bcdb80e4c00dfb59d7fa</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Design.EventHandlerService">
          <source>Provides a systematic way to manage event handlers for the current document.</source>
          <target state="translated">현재 문서의 이벤트 처리기를 관리하는 체계적인 방법을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Design.EventHandlerService">
          <source>Developers may want to be able to write code in one place that handles events of a certain type.</source>
          <target state="translated">개발자가 특정 종류의 이벤트를 처리 하는 한 곳에서 코드를 작성할 수 있게 되기를 원하는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Design.EventHandlerService">
          <source>Also, developers may need to globally change the behavior of the handlers for specific events or types of events, which may be distributed among designer components.</source>
          <target state="translated">또한 개발자가 전체적으로 특정 이벤트 또는 유형의 디자이너 구성 요소 간에 분산 될 수 있는 이벤트에 대 한 처리기의 동작을 변경 해야 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Design.EventHandlerService">
          <source>The designers for a typical project are many different objects so it can be useful to list and store reference to these events from a common place.</source>
          <target state="translated">일반적인 프로젝트에 대 한 디자이너는 다양 한 개체 목록 및 공통 위치에서 이러한 이벤트에 대 한 참조를 저장 하는 데 유용 될 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Design.EventHandlerService">
          <source>This service implements an "event stack" that contains the current set of event handlers.</source>
          <target state="translated">이 서비스는 이벤트 처리기의 현재 집합을 포함 하는 "이벤트 스택을"을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Design.EventHandlerService">
          <source>The stack may have a variety of different types of handlers on the stack.</source>
          <target state="translated">스택에 다양 한 종류의 처리기는 스택의 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Design.EventHandlerService">
          <source>For example, a designer might push, or add, a keyboard handler and a mouse handler onto the stack.</source>
          <target state="translated">예를 들어 디자이너 푸시에 또는 키보드 처리기 및 스택으로 마우스 처리기 추가 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Design.EventHandlerService">
          <source>When a designer requests an event handler, the service will find the topmost handler on the stack that matches the class you requested.</source>
          <target state="translated">디자이너는 이벤트 처리기를 요청 하면 서비스 요청한 클래스와 일치 하는 스택의 맨 위에 있는 처리기를 찾이 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Design.EventHandlerService">
          <source>This way the service can be extended to any eventing scheme, and it also allows specific types of event handlers to be replaced.</source>
          <target state="translated">이러한 방식으로 서비스는 모든 이벤트 체계로으로 확장할 수 있습니다 및 특정 형식의 이벤트 처리기를 바꿀 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Design.EventHandlerService">
          <source>For example, you can replace mouse event handlers without affecting menu event handlers or keyboard event handlers.</source>
          <target state="translated">예를 들어 메뉴 이벤트 처리기 또는 키보드 이벤트 처리기에 영향을 주지 않고 마우스 이벤트 처리기를 바꿀 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> which is being designed.</source>
          <target state="translated">디자인되고 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Design.EventHandlerService" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Design.EventHandlerService" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
          <source>Fires an OnEventHandlerChanged event.</source>
          <target state="translated">OnEventHandlerChanged 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
          <source>Gets the control to which event handlers are attached.</source>
          <target state="translated">이벤트 처리기가 연결되는 컨트롤을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> which was attached through the constructor.</source>
          <target state="translated">생성자를 통해 연결된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
          <source>The type of the handler to get.</source>
          <target state="translated">가져올 처리기의 형식입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
          <source>Gets the currently active event handler of the specified type.</source>
          <target state="translated">지정된 형식의 현재 활성 이벤트 처리기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
          <source>An instance of the handler, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no handler of the requested type.</source>
          <target state="translated">처리기의 인스턴스이거나, 요청된 형식의 처리기가 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
          <source>You should never cache this value because other components are free to change it.</source>
          <target state="translated">다른 구성 요소는 임의로 변경할 수 있으므로이 값을 캐시 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
          <source>This call is fairly quick, however, especially for cases when you are always asking for the same type of handler.</source>
          <target state="translated">하지만이 호출은 매우 빠릅니다 항상 동일한 형식의 처리기가 요청 됩니다 하는 경우에 특히 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
          <source>The handler to remove from the stack.</source>
          <target state="translated">스택에서 제거할 처리기입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
          <source>Pops the given handler off of the stack.</source>
          <target state="translated">지정된 처리기를 스택에서 팝합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
          <source>If the handler is not the topmost component on the stack, this will pop all handlers up to and including handler.</source>
          <target state="translated">처리기 스택의 맨 위 구성 요소가 없는 경우 모든 최대 처리기 및 포함 하 여 이벤트 처리기를 팝 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
          <source>The handler to add to the stack.</source>
          <target state="translated">스택에 추가할 처리기입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
          <source>Pushes a new event handler on the stack.</source>
          <target state="translated">새 이벤트 처리기를 스택에 푸시합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
          <source>This handler will be used by all components that request a compatible handler type.</source>
          <target state="translated">이 처리기는 호환 되는 처리기 유형을 요청 하는 모든 구성 요소에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
          <source>If this handler does not support the requested type, the next handler on the stack will be used.</source>
          <target state="translated">이 처리기는 요청된 된 형식의 지원 하지 않으면 스택의 다음 처리기 사용 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>