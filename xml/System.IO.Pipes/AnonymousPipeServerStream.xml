<Type Name="AnonymousPipeServerStream" FullName="System.IO.Pipes.AnonymousPipeServerStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f79e272db701f012912103823d00ec3d830fa8c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AnonymousPipeServerStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnonymousPipeServerStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.AnonymousPipeServerStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnonymousPipeServerStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnonymousPipeServerStream sealed : System::IO::Pipes::PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d9fe8-101">동기 및 비동기 읽기/쓰기 작업을 모두 지원하는 익명 파이프 주위의 스트림을 노출합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9fe8-101">Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9fe8-102">익명 파이프 안전 제공 시키고 프로세스 자식 및 부모 간의 프로세스 간 통신을 보호 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-102">Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</span></span> <span data-ttu-id="d9fe8-103"><xref:System.IO.Pipes.AnonymousPipeServerStream> 클래스를 보내거나 자식 프로세스에서 정보를 수신 하는 부모 프로세스를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-103">The <xref:System.IO.Pipes.AnonymousPipeServerStream> class enables a parent process to send or receive information from a child process.</span></span>  
  
 <span data-ttu-id="d9fe8-104">익명 파이프는 일반적으로 부모 및 자식 프로세스 간에 데이터를 전송 하는 명명 되지 않은 단방향 파이프 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-104">Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</span></span> <span data-ttu-id="d9fe8-105">익명 파이프는 항상 로컬입니다. 네트워크를 통해 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-105">Anonymous pipes are always local; they cannot be used over a network.</span></span> <span data-ttu-id="d9fe8-106">A <xref:System.IO.Pipes.PipeDirection> 값 <xref:System.IO.Pipes.PipeDirection.InOut> 익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-106">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="d9fe8-107">익명 파이프를 지원 하지 않는 <xref:System.IO.Pipes.PipeTransmissionMode.Message> 읽기 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-107">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read modes.</span></span>  
  
 <span data-ttu-id="d9fe8-108">익명 파이프의 클라이언트 쪽을 호출 하 여 서버 쪽에서 제공 하는 파이프 핸들에서 만들어야 합니다는 <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-108">The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> method.</span></span> <span data-ttu-id="d9fe8-109">그런 다음 문자열은 클라이언트 프로세스를 만들 때 매개 변수로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-109">The string is then passed as a parameter when creating the client process.</span></span> <span data-ttu-id="d9fe8-110">클라이언트 프로세스에서 다음에 전달 된 <xref:System.IO.Pipes.AnonymousPipeClientStream> 으로 생성자는 `pipeHandleAsString` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-110">From the client process, it is then passed to the <xref:System.IO.Pipes.AnonymousPipeClientStream> constructor as the `pipeHandleAsString` parameter.</span></span>  
  
 <span data-ttu-id="d9fe8-111"><xref:System.IO.Pipes.AnonymousPipeServerStream> 개체가 사용 하 여 클라이언트 핸들을 삭제 해야 합니다는 <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> 메서드는 클라이언트 종료 시 알림을 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-111">The <xref:System.IO.Pipes.AnonymousPipeServerStream> object must dispose the client handle using the <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method in order to be notified when the client exits.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9fe8-112">에 대 한 [!INCLUDE[winxppro](~/includes/winxppro-md.md)] 및 [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], 최대 10 개의 파이프는 네트워크를 통해 동시에 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-112">For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9fe8-113">다음 예제는 익명 파이프를 사용하여 부모 프로세스에서 자식 프로세스로 문자열을 보내는 방법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-113">The following example demonstrates a way to send a string from a parent process to a child process using anonymous pipes.</span></span> <span data-ttu-id="d9fe8-114">이 예제는 <xref:System.IO.Pipes.PipeDirection.Out>의 <xref:System.IO.Pipes.PipeDirection> 값을 사용하여 부모 프로세스에서 <xref:System.IO.Pipes.AnonymousPipeServerStream> 개체를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-114">This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="d9fe8-115">또한 만듭니다는 <xref:System.IO.Pipes.AnonymousPipeClientStream> 개체와 자식 프로세스에서는 <xref:System.IO.Pipes.PipeDirection> 값 <xref:System.IO.Pipes.PipeDirection.In>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-115">It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span> <span data-ttu-id="d9fe8-116">그런 다음, 부모 프로세스는 사용자가 제공한 문자열을 자식 프로세스로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-116">The parent process then sends a user-supplied string to the child process.</span></span> <span data-ttu-id="d9fe8-117">문자열을 콘솔에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-117">The string is displayed to the console.</span></span>  
  
 <span data-ttu-id="d9fe8-118">이 예제는 사용 하는 서버 프로세스에는 <xref:System.IO.Pipes.AnonymousPipeServerStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-118">This example is for the server process, which uses the <xref:System.IO.Pipes.AnonymousPipeServerStream> class.</span></span> <span data-ttu-id="d9fe8-119">파이프 클라이언트와 서버 모두에 대 한 코드를 포함 한 전체 코드 예제를 보려면 [하는 방법: 로컬 프로세스 간 통신에 사용 하 여 익명 파이프](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-119">For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9fe8-120">
            <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-120">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9fe8-121">
            <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-121">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9fe8-122">에 대 한 <xref:System.IO.Pipes.AnonymousPipeServerStream> 없는 생성자는 <xref:System.IO.Pipes.PipeDirection> 매개 변수는 기본 방향은 <xref:System.IO.Pipes.PipeDirection.Out>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-122">For <xref:System.IO.Pipes.AnonymousPipeServerStream> constructors without a <xref:System.IO.Pipes.PipeDirection> parameter, the default direction is <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="d9fe8-123">A <xref:System.IO.Pipes.PipeDirection> 값 <xref:System.IO.Pipes.PipeDirection.InOut> 익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-123">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="d9fe8-124">이 생성자는 <xref:System.IO.Pipes.AnonymousPipeServerStream> 파이프 보안 없음, 기본 버퍼 크기를 가진 개체를 및 <xref:System.IO.HandleInheritability> 값 <xref:System.IO.HandleInheritability.None>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-124">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size, no pipe security, and a <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="d9fe8-125">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-125">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d9fe8-126">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-126">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="d9fe8-127">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-127">One of the enumeration values that determines the direction of the pipe.</span>
          </span>
          <span data-ttu-id="d9fe8-128">익명 파이프는 한 방향으로만 지정할 수 있으므로 <c>방향</c>을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-128">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9fe8-129">지정된 파이프 방향을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-129">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9fe8-130">A <xref:System.IO.Pipes.PipeDirection> 값 <xref:System.IO.Pipes.PipeDirection.InOut> 익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-130">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="d9fe8-131">이 생성자는 <xref:System.IO.Pipes.AnonymousPipeServerStream> 파이프 보안 없음, 기본 버퍼 크기를 가진 개체를 및 <xref:System.IO.HandleInheritability> 값 <xref:System.IO.HandleInheritability.None>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-131">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size, no pipe security, and a <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d9fe8-132">
            <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-132">
              <paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="d9fe8-133">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-133">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d9fe8-134">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-134">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, inheritability As HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="d9fe8-135">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-135">One of the enumeration values that determines the direction of the pipe.</span>
          </span>
          <span data-ttu-id="d9fe8-136">익명 파이프는 한 방향으로만 지정할 수 있으므로 <c>방향</c>을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-136">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="d9fe8-137">자식 프로세스가 기본 핸들을 상속할 수 있는지 여부를 결정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-137">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span>
          </span>
          <span data-ttu-id="d9fe8-138">
            <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />로 설정해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-138">Must be set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9fe8-139">지정된 파이프 방향 및 상속 모드를 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다. </span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-139">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction and inheritability mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9fe8-140">A <xref:System.IO.Pipes.PipeDirection> 값 <xref:System.IO.Pipes.PipeDirection.InOut> 익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-140">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="d9fe8-141">이 생성자는 <xref:System.IO.Pipes.AnonymousPipeServerStream> 기본 버퍼 크기 및 파이프 보안이 없는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-141">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size and no pipe security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9fe8-142">다음 예제에서는 익명 파이프를 사용 하는 자식 프로세스에는 부모 프로세스에서 문자열을 보내는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-142">The following example demonstrates a method to send a string from a parent process to a child process using anonymous pipes.</span></span> <span data-ttu-id="d9fe8-143">이 예제에서는 <xref:System.IO.Pipes.AnonymousPipeServerStream> 인 부모 프로세스에서 개체가 생성 되는 <xref:System.IO.Pipes.PipeDirection> 값 <xref:System.IO.Pipes.PipeDirection.Out>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-143">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d9fe8-144">
            <paramref name="inheritability" />가 <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />로 설정되어 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-144">
              <paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d9fe8-145">
            <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-145">
              <paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="d9fe8-146">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-146">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d9fe8-147">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-147">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, class Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, class Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, serverSafePipeHandle As SafePipeHandle, clientSafePipeHandle As SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, Microsoft::Win32::SafeHandles::SafePipeHandle ^ serverSafePipeHandle, Microsoft::Win32::SafeHandles::SafePipeHandle ^ clientSafePipeHandle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="serverSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
        <Parameter Name="clientSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="d9fe8-148">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-148">One of the enumeration values that determines the direction of the pipe.</span>
          </span>
          <span data-ttu-id="d9fe8-149">익명 파이프는 한 방향으로만 지정할 수 있으므로 <c>방향</c>을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-149">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </param>
        <param name="serverSafePipeHandle">
          <span data-ttu-id="d9fe8-150">이 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체가 캡슐화할 파이프의 SafeHandle입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-150">A safe handle for the pipe that this <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="clientSafePipeHandle">
          <span data-ttu-id="d9fe8-151">
            <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체의 SafeHandle입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-151">A safe handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9fe8-152">지정된 파이프 핸들을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-152">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class from the specified pipe handles.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9fe8-153">A <xref:System.IO.Pipes.PipeDirection> 값 <xref:System.IO.Pipes.PipeDirection.InOut> 익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-153">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9fe8-154">
            <paramref name="serverSafePipeHandle" />또는 <paramref name="clientSafePipeHandle" />이 잘못된 핸들인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-154">
              <paramref name="serverSafePipeHandle" /> or <paramref name="clientSafePipeHandle" /> is an invalid handle.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9fe8-155">
            <paramref name="serverSafePipeHandle" /> 또는 <paramref name="clientSafePipeHandle" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-155">
              <paramref name="serverSafePipeHandle" /> or <paramref name="clientSafePipeHandle" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d9fe8-156">
            <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-156">
              <paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d9fe8-157">디스크 오류 등의 I/O 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-157">An I/O error, such as a disk error, has occurred.</span>
          </span>
          <span data-ttu-id="d9fe8-158">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-158">-or-</span>
          </span>
          <span data-ttu-id="d9fe8-159">스트림이 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-159">The stream has been closed.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="d9fe8-160">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-160">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d9fe8-161">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-161">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, inheritability As HandleInheritability, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="d9fe8-162">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-162">One of the enumeration values that determines the direction of the pipe.</span>
          </span>
          <span data-ttu-id="d9fe8-163">익명 파이프는 한 방향으로만 지정할 수 있으므로 <c>방향</c>을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-163">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="d9fe8-164">자식 프로세스가 기본 핸들을 상속할 수 있는지 여부를 결정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-164">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span>
          </span>
          <span data-ttu-id="d9fe8-165">
            <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />로 설정해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-165">Must be set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="d9fe8-166">버퍼의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-166">The size of the buffer.</span>
          </span>
          <span data-ttu-id="d9fe8-167">이 값은 0보다 크거나 같아야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-167">This value must be greater than or equal to 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9fe8-168">지정된 파이프 방향, 상속 모드 및 버퍼 크기를 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다. </span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-168">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction, inheritability mode, and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9fe8-169">A <xref:System.IO.Pipes.PipeDirection> 값 <xref:System.IO.Pipes.PipeDirection.InOut> 익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-169">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="d9fe8-170">이 생성자는 <xref:System.IO.Pipes.AnonymousPipeServerStream> 파이프 보안이 없는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-170">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object without pipe security.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d9fe8-171">
            <paramref name="inheritability" />가 <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />로 설정되어 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-171">
              <paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          </span>
          <span data-ttu-id="d9fe8-172">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-172">-or-</span>
          </span>
          <span data-ttu-id="d9fe8-173">
            <paramref name="bufferSize" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-173">
              <paramref name="bufferSize" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d9fe8-174">
            <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-174">
              <paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="d9fe8-175">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-175">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d9fe8-176">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-176">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability, int32 bufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability, int bufferSize, System::IO::Pipes::PipeSecurity ^ pipeSecurity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="d9fe8-177">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-177">One of the enumeration values that determines the direction of the pipe.</span>
          </span>
          <span data-ttu-id="d9fe8-178">익명 파이프는 한 방향으로만 지정할 수 있으므로 <c>방향</c>을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-178">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="d9fe8-179">자식 프로세스가 기본 핸들을 상속할 수 있는지 여부를 결정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-179">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="d9fe8-180">버퍼의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-180">The size of the buffer.</span>
          </span>
          <span data-ttu-id="d9fe8-181">이 값은 0보다 크거나 같아야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-181">This value must be greater than or equal to 0.</span>
          </span>
        </param>
        <param name="pipeSecurity">
          <span data-ttu-id="d9fe8-182">파이프의 액세스 제어 및 감사 보안을 결정하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-182">An object that determines the access control and audit security for the pipe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9fe8-183">지정된 파이프 방향, 상속 모드, 버퍼 크기 및 파이프 보안을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-183">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction, inheritability mode, buffer size, and pipe security.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9fe8-184">A <xref:System.IO.Pipes.PipeDirection> 값 <xref:System.IO.Pipes.PipeDirection.InOut> 익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-184">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d9fe8-185">
            <paramref name="inheritability" />가 <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />로 설정되어 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-185">
              <paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          </span>
          <span data-ttu-id="d9fe8-186">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-186">-or-</span>
          </span>
          <span data-ttu-id="d9fe8-187">
            <paramref name="bufferSize" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-187">
              <paramref name="bufferSize" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d9fe8-188">
            <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-188">
              <paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="d9fe8-189">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-189">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d9fe8-190">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-190">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ClientSafePipeHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientSafePipeHandle As SafePipeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafePipeHandle ^ ClientSafePipeHandle { Microsoft::Win32::SafeHandles::SafePipeHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafePipeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9fe8-191">현재 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체에 연결된 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체에 대한 안전한 핸들을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-191">Gets the safe handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object that is currently connected to the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9fe8-192">현재 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체에 연결된 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체의 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-192">A handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object that is currently connected to the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9fe8-193"><xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> 클라이언트 프로세스에 대 한 클라이언트 핸들 경과 된 후 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-193">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after a client handle has been passed to a client process.</span></span> <span data-ttu-id="d9fe8-194">이 메서드를 호출 하지는 <xref:System.IO.Pipes.AnonymousPipeServerStream> 개체 통지를 받지 못할 클라이언트를 삭제 하는 경우 해당 <xref:System.IO.Pipes.PipeStream> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-194">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeLocalCopyOfClientHandle">
      <MemberSignature Language="C#" Value="public void DisposeLocalCopyOfClientHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisposeLocalCopyOfClientHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisposeLocalCopyOfClientHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisposeLocalCopyOfClientHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9fe8-195">
            <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체 핸들의 로컬 복사본을 종료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-195">Closes the local copy of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9fe8-196"><xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> 클라이언트에 클라이언트 핸들이 경과 된 후 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-196">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after the client handle has been passed to the client.</span></span> <span data-ttu-id="d9fe8-197">이 메서드를 호출 하지는 <xref:System.IO.Pipes.AnonymousPipeServerStream> 개체 통지를 받지 못할 클라이언트를 삭제 하는 경우 해당 <xref:System.IO.Pipes.PipeStream> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-197">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9fe8-198">다음 예제에서는 익명 파이프를 사용 하 여 부모 프로세스에서 자식 프로세스에는 문자열을 보낼 수 있는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-198">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="d9fe8-199">이 예제에서는 <xref:System.IO.Pipes.AnonymousPipeServerStream> 인 부모 프로세스에서 개체가 생성 되는 <xref:System.IO.Pipes.PipeDirection> 값 <xref:System.IO.Pipes.PipeDirection.Out>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-199">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AnonymousPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AnonymousPipeServerStream ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9fe8-200">가비지 컬렉션에 의해 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 인스턴스가 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-200">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> instance is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientHandleAsString">
      <MemberSignature Language="C#" Value="public string GetClientHandleAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetClientHandleAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientHandleAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetClientHandleAsString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9fe8-201">연결된 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체의 핸들을 문자열로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-201">Gets the connected <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9fe8-202">연결된 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체의 핸들을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-202">A string that represents the connected <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9fe8-203"><xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> 클라이언트 프로세스에 대 한 클라이언트 핸들 경과 된 후 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-203">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after a client handle has been passed to a client process.</span></span> <span data-ttu-id="d9fe8-204">이 메서드를 호출 하지는 <xref:System.IO.Pipes.AnonymousPipeServerStream> 개체 통지를 받지 못할 클라이언트를 삭제 하는 경우 해당 <xref:System.IO.Pipes.PipeStream> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-204">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9fe8-205">다음 예제에서는 익명 파이프를 사용 하 여 부모 프로세스에서 자식 프로세스에는 문자열을 보낼 수 있는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-205">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="d9fe8-206">이 예제에서는 <xref:System.IO.Pipes.AnonymousPipeServerStream> 인 부모 프로세스에서 개체가 생성 되는 <xref:System.IO.Pipes.PipeDirection> 값 <xref:System.IO.Pipes.PipeDirection.Out>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-206">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode ReadMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode ReadMode {  void set(System::IO::Pipes::PipeTransmissionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9fe8-207">
            <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체에 대한 읽기 모드를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-207">Sets the reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span>
          </span>
          <span data-ttu-id="d9fe8-208">익명 파이프의 경우 전송 모드가 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-208">For anonymous pipes, transmission mode must be <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9fe8-209">
            <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체에 대한 읽기 모드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-209">The reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9fe8-210">익명 파이프를 지원 하지 않는 <xref:System.IO.Pipes.PipeTransmissionMode.Message> 읽기 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-210">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9fe8-211">다음 예제에서는 익명 파이프를 사용 하 여 부모 프로세스에서 자식 프로세스에는 문자열을 보낼 수 있는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-211">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="d9fe8-212">이 예제는 <xref:System.NotSupportedException> 걸러진 시기는 <xref:System.IO.Pipes.AnonymousPipeServerStream.ReadMode%2A> 속성이로 설정 되어 <xref:System.IO.Pipes.PipeTransmissionMode.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-212">In this example, the <xref:System.NotSupportedException> is caught when the <xref:System.IO.Pipes.AnonymousPipeServerStream.ReadMode%2A> property is set to <xref:System.IO.Pipes.PipeTransmissionMode.Message>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d9fe8-213">전송 모드가 올바르지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-213">The transmission mode is not valid.</span>
          </span>
          <span data-ttu-id="d9fe8-214">익명 파이프의 경우 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />만 지원됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-214">For anonymous pipes, only <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> is supported.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d9fe8-215">속성이 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />로 설정되며, 이는 익명 파이프를 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-215">The property is set to <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />, which is not supported for anonymous pipes.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d9fe8-216">연결이 끊어졌거나 다른 I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-216">The connection is broken or another I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d9fe8-217">파이프가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-217">The pipe is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransmissionMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode TransmissionMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TransmissionMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode TransmissionMode { System::IO::Pipes::PipeTransmissionMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9fe8-218">현재 파이프가 지원하는 파이프 전송 모드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-218">Gets the pipe transmission mode that is supported by the current pipe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9fe8-219">현재 파이프에서 지원하는 <see cref="T:System.IO.Pipes.PipeTransmissionMode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9fe8-219">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> that is supported by the current pipe.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9fe8-220">익명 파이프를 지원 하지 않는 <xref:System.IO.Pipes.PipeTransmissionMode.Message> 읽기 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-220">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9fe8-221">다음 예제에서는 익명 파이프를 사용 하 여 부모 프로세스에서 자식 프로세스에는 문자열을 보낼 수 있는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-221">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="d9fe8-222">이 예제에서는 <xref:System.IO.Pipes.AnonymousPipeServerStream> 부모 프로세스에서 개체가 생성 되 고 <xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A> 속성은 콘솔에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d9fe8-222">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process and the <xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A> property is displayed to the console.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>