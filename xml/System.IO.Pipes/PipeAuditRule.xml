<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PipeAuditRule.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59bffe29051a3967f2459f0217c81f7c9c6072199.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bffe29051a3967f2459f0217c81f7c9c6072199</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>Represents an abstraction of an access control entry (ACE) that defines an audit rule for a pipe.</source>
          <target state="translated">파이프에 대한 감사 규칙을 정의하는 ACE(액세스 제어 항목)를 추상화하여 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>Audit rules determine when and how actions performed on system objects are logged.</source>
          <target state="translated">감사 규칙 시스템 개체에 수행 하는 동작이 기록 된 시기와 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to perform auditing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> 클래스 액세스 (읽기, 쓰기 및 등)를 제공 하려면 유형의 사용자 계정을 지정 하는 기본 액세스 제어 항목 (ACE)에 대 한 추상화를 나타냅니다. 감사를 수행할지 여부 및 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>This class can specify how audit rules are inherited from and propagated to objects.</source>
          <target state="translated">이 클래스는 감사 규칙은에서 상속 되며,과 개체에 전파 하는 방법을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>To allow file auditing on computers that are running Windows NT or later operating systems, the Audit Access Security policy must be enabled; by default, this policy is set to <bpt id="p1">**</bpt>No Auditing<ept id="p1">**</ept>.</source>
          <target state="translated">Windows NT 또는 이상 운영 체제를 실행 하는 컴퓨터에서 감사 파일을 허용 하려면 액세스 보안 감사 정책을 설정 해야 합니다. 기본적으로이 정책 설정은 <bpt id="p1">**</bpt>감사 안 함<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>To enable the Audit Access Security policy, perform the following steps:</source>
          <target state="translated">액세스 보안 감사 정책을 사용 하려면 다음 단계를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>Click the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> button and then point to <bpt id="p2">**</bpt>All Programs<ept id="p2">**</ept>.</source>
          <target state="translated">클릭는 <bpt id="p1">**</bpt>시작<ept id="p1">**</ept> 단추 및 가리킨 <bpt id="p2">**</bpt>모든 프로그램<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>Point to <bpt id="p1">**</bpt>Administrative Tools<ept id="p1">**</ept> and then click <bpt id="p2">**</bpt>Local Security Policy<ept id="p2">**</ept>.</source>
          <target state="translated">가리킨 <bpt id="p1">**</bpt>관리 도구<ept id="p1">**</ept> 클릭 하 고 <bpt id="p2">**</bpt>로컬 보안 정책<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>In the Local Security Settings window, expand the Local Policies folder and left-click the Audit Policy folder.</source>
          <target state="translated">로컬 보안 설정 창에서 로컬 정책 폴더를 확장 하 고 감사 정책 폴더를 마우스 왼쪽 단추로 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>Double-click the <bpt id="p1">**</bpt>Audit object access<ept id="p1">**</ept> entry in the right pane of the Local Security Settings window to display the <bpt id="p2">**</bpt>Audit object access Properties<ept id="p2">**</ept> dialog box.</source>
          <target state="translated">두 번 클릭는 <bpt id="p1">**</bpt>개체 액세스 감사<ept id="p1">**</ept> 항목을 표시 하기 위해 로컬 보안 설정 창 오른쪽 창에는 <bpt id="p2">**</bpt>감사 개체 액세스 속성<ept id="p2">**</ept> 대화 상자.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>Select the <bpt id="p1">**</bpt>Success<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Failure<ept id="p2">**</ept> boxes to log successes or failures.</source>
          <target state="translated">선택 된 <bpt id="p1">**</bpt>성공<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>실패<ept id="p2">**</ept> 상자를 성공 또는 실패를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>Note that an audit rule for a user account requires a corresponding access rule for the same user account.</source>
          <target state="translated">사용자 계정에 대 한 감사 규칙 한다는 동일한 사용자 계정에 대 한 해당 액세스 규칙을 참고 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> class to create a new audit rule.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> 새 감사 규칙을 만드는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>You can persist this rule using the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class.</source>
          <target state="translated">사용 하 여이 규칙을 유지할 수 있습니다는 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.PipeAuditRule">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAuditRule" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAuditRule" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> object that encapsulates a reference to a user account.</source>
          <target state="translated">사용자 계정에 대한 참조를 캡슐화하는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAccessRights" /&gt;</ph> values that specifies the type of operation associated with the access rule.</source>
          <target state="translated">액세스 규칙과 관련된 작업 형식을 지정하는 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAccessRights" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> values that specifies when to perform auditing.</source>
          <target state="translated">감사를 수행할 시점을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAuditRule" /&gt;</ph> class for a user account specified in a <ph id="ph2">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAuditRule" /&gt;</ph> 개체에 지정된 사용자 계정에 대해 <ph id="ph2">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
          <source>Use this constructor to create an audit rule that can be persisted using the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class.</source>
          <target state="translated">이 생성자를 사용 하 여 지속할 수 있는 감사 규칙을 만드는를 사용 하 여 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 클래스.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
          <source>Audit rules determine when and how actions performed on system objects are logged.</source>
          <target state="translated">감사 규칙 시스템 개체에 수행 하는 동작이 기록 된 시기와 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
          <source>The name of the user account.</source>
          <target state="translated">사용자 계정의 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAccessRights" /&gt;</ph> values that specifies the type of operation associated with the access rule.</source>
          <target state="translated">액세스 규칙과 관련된 작업 형식을 지정하는 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAccessRights" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> values that specifies when to perform auditing.</source>
          <target state="translated">감사를 수행할 시점을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAuditRule" /&gt;</ph> class for a named user account.</source>
          <target state="translated">명명된 사용자 계정에 대해 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAuditRule" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
          <source>Use this constructor to create an audit rule that can be persisted using the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class.</source>
          <target state="translated">이 생성자를 사용 하 여 지속할 수 있는 감사 규칙을 만드는를 사용 하 여 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 클래스.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
          <source>Audit rules determine when and how actions performed on system objects are logged.</source>
          <target state="translated">감사 규칙 시스템 개체에 수행 하는 동작이 기록 된 시기와 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeAuditRule.PipeAccessRights">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAccessRights" /&gt;</ph> flags that are associated with the current <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeAuditRule" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAccessRights" /&gt;</ph> 개체와 관련된 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeAuditRule" /&gt;</ph> 플래그를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeAuditRule.PipeAccessRights">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAccessRights" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeAccessRights" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>