<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NamedPipeClientStream.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5145ed8417b729beaf7802c52d9b3f51577c3b254.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">145ed8417b729beaf7802c52d9b3f51577c3b254</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>Exposes a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> around a named pipe, which supports both synchronous and asynchronous read and write operations.</source>
          <target state="translated">동기 및 비동기 읽기/쓰기 작업을 모두 지원하는 명명된 파이프 주위의 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>을 노출합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>Named pipes provide one-way or duplex pipes for communication between a pipe server and one or more pipe clients.</source>
          <target state="translated">명명 된 파이프 파이프 서버와 하나 이상의 파이프 클라이언트 간의 통신에 대 한 단방향 또는 이중 파이프를 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>Named pipes can be used for interprocess communication locally or over a network.</source>
          <target state="translated">로컬 또는 네트워크를 통해 명명 된 파이프를 프로세스 간 통신에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>A single pipe name can be shared by multiple <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> objects.</source>
          <target state="translated">여러 하나의 파이프 이름을 공유할 수 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>Any process can act as either a named pipe server or client, or both.</source>
          <target state="translated">모든 프로세스는 명명된 된 파이프 서버 또는 클라이언트 또는 둘 다로 작동할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>For <ph id="ph1">[!INCLUDE[winxppro](~/includes/winxppro-md.md)]</ph> and <ph id="ph2">[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]</ph>, a maximum of 10 pipes can simultaneously connect over the network.</source>
          <target state="translated">에 대 한 <ph id="ph1">[!INCLUDE[winxppro](~/includes/winxppro-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]</ph>, 최대 10 개의 파이프는 네트워크를 통해 동시에 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>The following example demonstrates a way to send a string from a parent process to a child process on the same computer using named pipes.</source>
          <target state="translated">다음 예제에서는 자식 프로세스에 동일한 컴퓨터를 사용 하 여 명명 된 파이프 부모 프로세스에서 문자열을 보내는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>This example creates a <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> object in a parent process.</source>
          <target state="translated">이 예제에서는 만듭니다는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> 부모 프로세스에서 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> object has a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> 개체에는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> 값 <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>The server then waits for a <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> object in a child process to connect to it.</source>
          <target state="translated">서버에 대 한 후 대기는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> 자식 프로세스에 연결 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>In this example, both processes are on the same computer and the <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> object has a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</source>
          <target state="translated">이 예제에서는 두 프로세스 모두 같은 컴퓨터에 있는 및 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> 개체에는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> 값 <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>The parent process then sends a user-supplied string to the child process.</source>
          <target state="translated">그런 다음, 부모 프로세스는 사용자가 제공한 문자열을 자식 프로세스로 보냅니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>The string is displayed to the console.</source>
          <target state="translated">문자열을 콘솔에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>This example is for the client process, which connects to the server process.</source>
          <target state="translated">이 예제는 서버 프로세스에 연결 하는 클라이언트 프로세스를 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>For the entire code sample, including the code for both the pipe client and server, see <bpt id="p1">[</bpt>How to: Use Named Pipes for Network Interprocess Communication<ept id="p1">](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md)</ept>.</source>
          <target state="translated">파이프 클라이언트와 서버 모두에 대 한 코드를 포함 한 전체 코드 샘플을 참조 하십시오. <bpt id="p1">[</bpt>하는 방법: 네트워크 프로세스 간 통신에 사용 하 여 명명 된 파이프<ept id="p1">](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
          <source>The name of the pipe.</source>
          <target state="translated">파이프의 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> class with the specified pipe name.</source>
          <target state="translated">지정된 파이프 이름을 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
          <source>This constructor uses the following default values:</source>
          <target state="translated">이 생성자는 다음과 같은 기본값을 사용합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
          <source>A default server name of ".".</source>
          <target state="translated">기본 서버 이름은 "."입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
          <source>A default <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> 값 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
          <source>A default <ph id="ph1">&lt;xref:System.IO.Pipes.PipeOptions&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeOptions.None&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeOptions&gt;</ph> 값 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeOptions.None&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
          <source>A default <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> value of <ph id="ph2">&lt;xref:System.Security.Principal.TokenImpersonationLevel.None&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> 값 <ph id="ph2">&lt;xref:System.Security.Principal.TokenImpersonationLevel.None&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
          <source>A default <ph id="ph1">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.IO.HandleInheritability&gt;</ph> 값 <ph id="ph2">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> is a zero-length string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph>이 빈 문자열인 경우</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> is set to "anonymous".</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph>이 "익명"으로 설정된 경우</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
          <source>The name of the remote computer to connect to, or "." to specify the local computer.</source>
          <target state="translated">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
          <source>The name of the pipe.</source>
          <target state="translated">파이프의 이름입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> class with the specified pipe and server names.</source>
          <target state="translated">지정된 파이프 및 서버 이름을 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
          <source>This constructor uses the following default values:</source>
          <target state="translated">이 생성자는 다음과 같은 기본값을 사용합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
          <source>A default <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> 값 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
          <source>A default <ph id="ph1">&lt;xref:System.IO.Pipes.PipeOptions&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeOptions.None&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeOptions&gt;</ph> 값 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeOptions.None&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
          <source>A default <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> value of <ph id="ph2">&lt;xref:System.Security.Principal.TokenImpersonationLevel.None&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> 값 <ph id="ph2">&lt;xref:System.Security.Principal.TokenImpersonationLevel.None&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
          <source>A default <ph id="ph1">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.IO.HandleInheritability&gt;</ph> 값 <ph id="ph2">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph> is a zero-length string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph>가 길이가 0인 문자열인 경우</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> is set to "anonymous".</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph>이 "익명"으로 설정된 경우</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>The name of the remote computer to connect to, or "." to specify the local computer.</source>
          <target state="translated">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>The name of the pipe.</source>
          <target state="translated">파이프의 이름입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> class with the specified pipe and server names, and the specified pipe direction.</source>
          <target state="translated">지정된 파이프와 서버 이름 및 지정된 파이프 방향을 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>This constructor uses the following default values:</source>
          <target state="translated">이 생성자는 다음과 같은 기본값을 사용합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>A default <ph id="ph1">&lt;xref:System.IO.Pipes.PipeOptions&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeOptions.None&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeOptions&gt;</ph> 값 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeOptions.None&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>A default <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> value of <ph id="ph2">&lt;xref:System.Security.Principal.TokenImpersonationLevel.None&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> 값 <ph id="ph2">&lt;xref:System.Security.Principal.TokenImpersonationLevel.None&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>A default <ph id="ph1">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.IO.HandleInheritability&gt;</ph> 값 <ph id="ph2">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>The following example demonstrates a method to send a string from a parent process to a child process using named pipes.</source>
          <target state="translated">다음 예제에서는 자식 프로세스를 사용 하 여 명명 된 파이프 부모 프로세스에서 문자열을 보내는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>This example creates a <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> object in a child process, which then connects to a pipe on the local computer.</source>
          <target state="translated">이 예제에서는 만듭니다는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> 로컬 컴퓨터에 파이프에 연결 하는 자식 프로세스에서 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>The server example can be seen in the <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> class.</source>
          <target state="translated">서버 예제를 볼 수는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> classes.</source>
          <target state="translated">이 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph> is a zero-length string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph>가 길이가 0인 문자열인 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> is set to "anonymous".</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph>이 "익명"으로 설정된 경우</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that the handle was opened asynchronously; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">핸들이 비동기 방식으로 열린 것을 표시하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>, 표시하지 않으려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that the pipe is connected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">파이프가 연결된 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>, 그렇지 않은 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>A safe handle for the pipe that this <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> 개체가 캡슐화할 파이프의 SafeHandle입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> class for the specified pipe handle with the specified pipe direction.</source>
          <target state="translated">지정된 파이프 방향을 사용하여 지정된 파이프 핸들에 대한 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>The stream has been closed.</source>
          <target state="translated">스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;paramref name="safePipeHandle" /&gt;</ph> is not a valid handle.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="safePipeHandle" /&gt;</ph>는 유효한 핸들이 아닙니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;paramref name="safePipeHandle" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="safePipeHandle" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source>The name of the remote computer to connect to, or "." to specify the local computer.</source>
          <target state="translated">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source>The name of the pipe.</source>
          <target state="translated">파이프의 이름입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source>One of the enumeration values that determines how to open or create the pipe.</source>
          <target state="translated">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> class with the specified pipe and server names, and the specified pipe direction and pipe options.</source>
          <target state="translated">지정된 파이프와 서버 이름 및 지정된 파이프 방향과 파이프 옵션을 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source>This constructor uses the following default values:</source>
          <target state="translated">이 생성자는 다음과 같은 기본값을 사용합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source>A default <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> value of <ph id="ph2">&lt;xref:System.Security.Principal.TokenImpersonationLevel.None&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> 값 <ph id="ph2">&lt;xref:System.Security.Principal.TokenImpersonationLevel.None&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source>A default <ph id="ph1">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.IO.HandleInheritability&gt;</ph> 값 <ph id="ph2">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph> is a zero-length string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph>가 길이가 0인 문자열인 경우</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> is set to "anonymous".</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph>이 "익명"으로 설정된 경우</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source><ph id="ph1">&lt;paramref name="options" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeOptions" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="options" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeOptions" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source>The name of the remote computer to connect to, or "." to specify the local computer.</source>
          <target state="translated">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source>The name of the pipe.</source>
          <target state="translated">파이프의 이름입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the enumeration values that determines how to open or create the pipe.</source>
          <target state="translated">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the enumeration values that determines the security impersonation level.</source>
          <target state="translated">보안 가장 수준을 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> class with the specified pipe and server names, and the specified pipe direction, pipe options, and security impersonation level.</source>
          <target state="translated">지정된 파이프와 서버 이름, 지정된 파이프 방향, 파이프 옵션 및 보안 가장 수준을 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source>This constructor uses a default <ph id="ph1">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.</source>
          <target state="translated">이 생성자는 기본 <ph id="ph1">&lt;xref:System.IO.HandleInheritability&gt;</ph> 값 <ph id="ph2">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph> is a zero-length string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph>가 길이가 0인 문자열인 경우</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> is set to "anonymous".</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph>이 "익명"으로 설정된 경우</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="options" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeOptions" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="options" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeOptions" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="impersonationLevel" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="impersonationLevel" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>The name of the remote computer to connect to, or "." to specify the local computer.</source>
          <target state="translated">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>The name of the pipe.</source>
          <target state="translated">파이프의 이름입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>One of the enumeration values that specifies the desired access rights of the pipe.</source>
          <target state="translated">파이프에 대해 원하는 액세스 권한을 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>One of the enumeration values that determines how to open or create the pipe.</source>
          <target state="translated">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>One of the enumeration values that determines the security impersonation level.</source>
          <target state="translated">보안 가장 수준을 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.</source>
          <target state="translated">기본 핸들이 자식 프로세스로 상속되는지 여부를 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> class with the specified pipe and server names, and the specified pipe options, security impersonation level, and inheritability mode.</source>
          <target state="translated">지정된 파이프와 서버 이름, 지정된 파이프 옵션, 보안 가장 수준 및 상속 모드를 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>The pipe direction for this constructor is determined by the <ph id="ph1">`desiredAccessRights`</ph> parameter.</source>
          <target state="translated">이 생성자에 대 한 파이프 방향을 따라 사용자가 <ph id="ph1">`desiredAccessRights`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>If the <ph id="ph1">`desiredAccessRights`</ph> value is <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.ReadData&gt;</ph>, the pipe direction will be <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`desiredAccessRights`</ph> 값은 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.ReadData&gt;</ph>, 파이프 방향은 <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>If the value of <ph id="ph1">`desiredAccessRights`</ph> is <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.WriteData&gt;</ph>, the pipe direction will be <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</source>
          <target state="translated">하는 경우의 값 <ph id="ph1">`desiredAccessRights`</ph> 은 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.WriteData&gt;</ph>, 파이프 방향은 <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>If the value of <ph id="ph1">`desiredAccessRights`</ph> includes both <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.ReadData&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Pipes.PipeAccessRights.WriteData&gt;</ph>, the pipe direction will be <ph id="ph4">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph>.</source>
          <target state="translated">하는 경우의 값 <ph id="ph1">`desiredAccessRights`</ph> 모두 포함 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.ReadData&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.Pipes.PipeAccessRights.WriteData&gt;</ph>, 파이프 방향은 <ph id="ph4">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph> is a zero-length string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph>가 길이가 0인 문자열인 경우</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> is set to "anonymous".</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph>이 "익명"으로 설정된 경우</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="options" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeOptions" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="options" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeOptions" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="impersonationLevel" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="impersonationLevel" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>The name of the remote computer to connect to, or "." to specify the local computer.</source>
          <target state="translated">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>The name of the pipe.</source>
          <target state="translated">파이프의 이름입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>One of the enumeration values that determines how to open or create the pipe.</source>
          <target state="translated">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>One of the enumeration values that determines the security impersonation level.</source>
          <target state="translated">보안 가장 수준을 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.</source>
          <target state="translated">기본 핸들이 자식 프로세스로 상속되는지 여부를 결정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> class with the specified pipe and server names, and the specified pipe direction, pipe options, security impersonation level, and inheritability mode.</source>
          <target state="translated">지정된 파이프와 서버 이름, 지정된 파이프 방향, 파이프 옵션, 보안 가장 수준 및 상속 모드를 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph> is a zero-length string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="serverName" /&gt;</ph>가 길이가 0인 문자열인 경우</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph> is set to "anonymous".</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeName" /&gt;</ph>이 "익명"으로 설정된 경우</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="options" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeOptions" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="options" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeOptions" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="impersonationLevel" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="impersonationLevel" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>Connects to a waiting server.</source>
          <target state="translated">대기 중인 서버에 연결합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect">
          <source>Connects to a waiting server with an infinite time-out value.</source>
          <target state="translated">무한 시간 제한 값을 사용하여 대기 중인 서버에 연결합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect">
          <source>This method calls the <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29&gt;</ph> method with an infinite time-out value.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29&gt;</ph> 메서드는 무한 시간 제한 값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect">
          <source>This method waits for a pipe instance to become available.</source>
          <target state="translated">이 메서드는 파이프 인스턴스를 사용할 수 있을 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect">
          <source><ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A&gt;</ph> might return before <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph> is called from the <ph id="ph3">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> object, but <ph id="ph4">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph> will not return until <ph id="ph5">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A&gt;</ph> has returned.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A&gt;</ph> 전에 반환 될 수 <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph> 에서 호출 되는 <ph id="ph3">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> 개체를 하지만 <ph id="ph4">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph> 될 때까지 반환 되지 것입니다 <ph id="ph5">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A&gt;</ph> 반환 했습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect">
          <source>Any data written to the pipe after a <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> object has connected, but before the server has called <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph>, will be available to the server following the call to <ph id="ph3">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph>.</source>
          <target state="translated">파이프에 쓴 데이터는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> 개체가 연결 서버가 호출 되기 전에 <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph>를를 호출 하면 서버에 사용할 수 있습니다 <ph id="ph3">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect">
          <source>The following example demonstrates a method to send a string from a parent process to a child process using named pipes.</source>
          <target state="translated">다음 예제에서는 자식 프로세스를 사용 하 여 명명 된 파이프 부모 프로세스에서 문자열을 보내는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect">
          <source>This example creates a <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> object in a child process, which then connects to a pipe on the local computer.</source>
          <target state="translated">이 예제에서는 만듭니다는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> 로컬 컴퓨터에 파이프에 연결 하는 자식 프로세스에서 개체입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect">
          <source>The server example can be seen in the <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> class.</source>
          <target state="translated">서버 예제를 볼 수는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> classes.</source>
          <target state="translated">이 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect">
          <source>The client is already connected.</source>
          <target state="translated">클라이언트가 이미 연결되어 있습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
          <source>The number of milliseconds to wait for the server to respond before the connection times out.</source>
          <target state="translated">연결 제한 시간이 초과되기 전에 서버 응답을 기다릴 시간(밀리초)입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
          <source>Connects to a waiting server within the specified time-out period.</source>
          <target state="translated">지정된 시간 제한 기간 내에 대기 서버에 연결합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
          <source>This method waits for a pipe instance to become available.</source>
          <target state="translated">이 메서드는 파이프 인스턴스를 사용할 수 있을 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A&gt;</ph> might return before <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph> is called from the <ph id="ph3">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph>, but <ph id="ph4">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph> will not return until <ph id="ph5">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A&gt;</ph> has returned.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A&gt;</ph> 전에 반환 될 수 <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph> 에서 호출 되는 <ph id="ph3">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph>, 하지만 <ph id="ph4">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph> 될 때까지 반환 되지 것입니다 <ph id="ph5">&lt;xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A&gt;</ph> 반환 했습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
          <source>You set the <ph id="ph1">`timeout`</ph> parameter to <ph id="ph2">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> to specify an infinite time-out value.</source>
          <target state="translated">설정한는 <ph id="ph1">`timeout`</ph> 매개 변수를 <ph id="ph2">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> 무한 시간 제한 값을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
          <source>Any data written to the pipe after a <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> object has connected, but before the server has called <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph>, will be available to the server following the call to <ph id="ph3">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph>.</source>
          <target state="translated">파이프에 쓴 데이터는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> 개체가 연결 서버가 호출 되기 전에 <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph>를를 호출 하면 서버에 사용할 수 있습니다 <ph id="ph3">&lt;xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
          <source>Could not connect to the server within the specified <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> period.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 기간 내에 서버에 연결할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than 0 and not set to <ph id="ph2">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph>이 0보다 작고 <ph id="ph2">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>로 설정되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
          <source>The client is already connected.</source>
          <target state="translated">클라이언트가 이미 연결되어 있습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
          <source>The server is connected to another client and the time-out period has expired.</source>
          <target state="translated">서버가 다른 클라이언트에 연결되었고 시간 초과 기간이 만료 되었습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.NamedPipeClientStream">
          <source>A task that represents the asynchronous connect operation.</source>
          <target state="translated">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync">
          <source>Asynchronously connects to a waiting server with an infinite timeout period.</source>
          <target state="translated">무한한 제한 시간을 사용하여 대기 중인 서버에 비동기 방식으로 연결합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync">
          <source>A task that represents the asynchronous connect operation.</source>
          <target state="translated">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)">
          <source>The number of milliseconds to wait for the server to respond before the connection times out.</source>
          <target state="translated">연결 제한 시간이 초과되기 전에 서버 응답을 기다릴 시간(밀리초)입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)">
          <source>Asynchronously connects to a waiting server within the specified timeout period.</source>
          <target state="translated">지정된 제한 시간 내에 대기 중인 서버에 비동기 방식으로 연결합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)">
          <source>A task that represents the asynchronous connect operation.</source>
          <target state="translated">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">취소 요청을 모니터링할 토큰입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)">
          <source>The default value is <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)">
          <source>Asynchronously connects to a waiting server and monitors cancellation requests.</source>
          <target state="translated">대기 중인 서버에 비동기 방식으로 연결하고 취소 요청을 모니터링합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous connect operation.</source>
          <target state="translated">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
          <source>The number of milliseconds to wait for the server to respond before the connection times out.</source>
          <target state="translated">연결 제한 시간이 초과되기 전에 서버 응답을 기다릴 시간(밀리초)입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">취소 요청을 모니터링할 토큰입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
          <source>The default value is <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
          <source>Asynchronously connects to a waiting server within the specified timeout period and monitors cancellation requests.</source>
          <target state="translated">지정된 제한 시간 내에 대기 중인 서버에 비동기 방식으로 연결하고 취소 요청을 모니터링합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous connect operation.</source>
          <target state="translated">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.NamedPipeClientStream.Finalize">
          <source>Releases unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> instance is reclaimed by garbage collection.</source>
          <target state="translated">가비지 컬렉션에 의해 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> 인스턴스가 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
          <source>Gets the number of server instances that share the same pipe name.</source>
          <target state="translated">같은 파이프 이름을 공유하는 서버 인스턴스의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
          <source>The number of server instances that share the same pipe name.</source>
          <target state="translated">같은 파이프 이름을 공유하는 서버 인스턴스의 수입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
          <source>This property returns the number of server instances for the <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> object that the current <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> object has a handle to or is connected to.</source>
          <target state="translated">이 속성에 대 한 서버 인스턴스의 수를 반환 합니다.는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> 개체를 현재 <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> 개체에 대 한 핸들을가지고 있거나에 연결 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
          <source>If the current <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> object has not yet connected to a named pipe server, or if the current pipe handle has not yet been set, this property throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">하는 경우 현재 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> 개체가 명명 된 파이프 서버에 아직 연결 되지 또는 현재 파이프 핸들이 아직 설정 하지 않은 경우이 속성에서 throw 한 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
          <source>The following example demonstrates a method to send a string from a parent process to a child process using named pipes.</source>
          <target state="translated">다음 예제에서는 자식 프로세스를 사용 하 여 명명 된 파이프 부모 프로세스에서 문자열을 보내는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
          <source>In this example, a <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> object is created in a child process, which then connects to a pipe on the local computer.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> 개체가 로컬 컴퓨터에 파이프에 연결 하는 자식 프로세스에서 만들어집니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
          <source>The server example can be seen in the <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> class.</source>
          <target state="translated">서버 예제를 볼 수는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> classes.</source>
          <target state="translated">이 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
          <source>The pipe handle has not been set.</source>
          <target state="translated">파이프 핸들이 설정되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
          <source>The current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> object has not yet connected to a <ph id="ph2">&lt;see cref="T:System.IO.Pipes.NamedPipeServerStream" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.NamedPipeClientStream" /&gt;</ph> 개체가 아직 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.NamedPipeServerStream" /&gt;</ph> 개체에 연결되지 않은 경우</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
          <source>The pipe is broken or an I/O error occurred.</source>
          <target state="translated">파이프가 끊어졌거나 I/O 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
          <source>The underlying pipe handle is closed.</source>
          <target state="translated">내부 파이프 핸들이 닫혔습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>