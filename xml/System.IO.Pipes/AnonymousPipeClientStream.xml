<Type Name="AnonymousPipeClientStream" FullName="System.IO.Pipes.AnonymousPipeClientStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fba035a7dca59e962ecaf3705ecc7f52ba48e867" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52230032" /></Metadata><TypeSignature Language="C#" Value="public sealed class AnonymousPipeClientStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnonymousPipeClientStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.AnonymousPipeClientStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnonymousPipeClientStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnonymousPipeClientStream sealed : System::IO::Pipes::PipeStream" />
  <TypeSignature Language="F#" Value="type AnonymousPipeClientStream = class&#xA;    inherit PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d5754-101">지 원하는 동기 및 비동기 읽기 및 쓰기 작업에는 익명 파이프 스트림의 클라이언트 측을 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-101">Exposes the client side of an anonymous pipe stream, which supports both synchronous and asynchronous read and write operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5754-102">익명 파이프 안전 하 게 제공 시키고 자식 및 부모 간의 프로세스 간 통신 프로세스를 보호 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-102">Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</span></span> <span data-ttu-id="d5754-103"><xref:System.IO.Pipes.AnonymousPipeClientStream> 클래스에 연결 하 고 부모 프로세스를 사용 하 여 정보를 교환 하는 자식 프로세스를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-103">The <xref:System.IO.Pipes.AnonymousPipeClientStream> class enables a child process to connect to and exchange information with a parent process.</span></span>  
  
 <span data-ttu-id="d5754-104">익명 파이프는 일반적으로 부모 및 자식 프로세스 간에 데이터를 전송 하는 명명 되지 않은, 단방향 파이프 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-104">Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</span></span> <span data-ttu-id="d5754-105">익명 파이프는 항상 로컬입니다. 네트워크를 통해 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-105">Anonymous pipes are always local; they cannot be used over a network.</span></span> <span data-ttu-id="d5754-106">A <xref:System.IO.Pipes.PipeDirection> 의 값 <xref:System.IO.Pipes.PipeDirection.InOut> 익명 파이프는 단방향 정의 되기 때문에 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-106">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="d5754-107">익명 파이프를 지원 하지 않는 <xref:System.IO.Pipes.PipeTransmissionMode.Message> 읽기 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-107">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read modes.</span></span>  
  
 <span data-ttu-id="d5754-108">익명 파이프의 클라이언트 쪽을 호출 하 여 서버 쪽에서 제공 하는 파이프 핸들에서 만들어야 합니다를 <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d5754-108">The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> method.</span></span> <span data-ttu-id="d5754-109">그러면 클라이언트 프로세스를 만들 때 문자열 매개 변수로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-109">The string is then passed as a parameter when creating the client process.</span></span> <span data-ttu-id="d5754-110">에 전달 되는 클라이언트 프로세스에서의 <xref:System.IO.Pipes.AnonymousPipeClientStream> 으로 생성자는 `pipeHandleAsString` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-110">From the client process, it is passed to the <xref:System.IO.Pipes.AnonymousPipeClientStream> constructor as the `pipeHandleAsString` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5754-111">에 대 한 [!INCLUDE[winxppro](~/includes/winxppro-md.md)] 고 [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], 최대 10 개의 파이프는 네트워크를 통해 동시에 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-111">For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5754-112">다음 예제에서는 익명 파이프를 사용 하 여 부모 프로세스에서 자식 프로세스로 문자열을 보내는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-112">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="d5754-113">이 예제는 <xref:System.IO.Pipes.PipeDirection.Out>의 <xref:System.IO.Pipes.PipeDirection> 값을 사용하여 부모 프로세스에서 <xref:System.IO.Pipes.AnonymousPipeServerStream> 개체를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-113">This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="d5754-114">도 만듭니다는 <xref:System.IO.Pipes.AnonymousPipeClientStream> 사용 하 여 자식 프로세스에서 개체를 <xref:System.IO.Pipes.PipeDirection> 의 값 <xref:System.IO.Pipes.PipeDirection.In>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-114">It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span> <span data-ttu-id="d5754-115">그런 다음, 부모 프로세스는 사용자가 제공한 문자열을 자식 프로세스로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-115">The parent process then sends a user-supplied string to the child process.</span></span> <span data-ttu-id="d5754-116">문자열을 콘솔에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-116">The string is displayed to the console.</span></span>  
  
 <span data-ttu-id="d5754-117">이 예제에서는 서버 프로세스에 의해 시작 되는 클라이언트 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-117">This example is for the client process, which is started by the server process.</span></span> <span data-ttu-id="d5754-118">클라이언트 코드에서 결과 실행 파일 이름을 `pipeClient.exe` 이 예제를 실행할 때 서버 실행 파일과 동일한 디렉터리에 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-118">Name the resulting executable from the client code `pipeClient.exe` and copy it to the same directory as the server executable when you run this example.</span></span> <span data-ttu-id="d5754-119">파이프 클라이언트와 서버 모두에 대 한 코드를 포함 한 전체 코드 예제를 보려면 [방법: 로컬 프로세스 간 통신에 익명 파이프를 사용 하 여](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-119">For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5754-120"><see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-120">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (string pipeHandleAsString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeHandleAsString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeHandleAsString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::String ^ pipeHandleAsString);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeClientStream : string -&gt; System.IO.Pipes.AnonymousPipeClientStream" Usage="new System.IO.Pipes.AnonymousPipeClientStream pipeHandleAsString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pipeHandleAsString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipeHandleAsString"><span data-ttu-id="d5754-121">파이프 핸들을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-121">A string that represents the pipe handle.</span></span></param>
        <summary><span data-ttu-id="d5754-122">새 인스턴스를 초기화 합니다 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 파이프 핸들의 지정 된 문자열 표현 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-122">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class with the specified string representation of the pipe handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5754-123">없는 생성자는 <xref:System.IO.Pipes.PipeDirection> 매개 변수를 기본 방향은 <xref:System.IO.Pipes.PipeDirection.In>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-123">For constructors without a <xref:System.IO.Pipes.PipeDirection> parameter, the default direction is <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5754-124">다음 예제에서는 익명 파이프를 사용 하 여 부모 프로세스에서 자식 프로세스로 문자열을 보내는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-124">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="d5754-125">이 예제는 <xref:System.IO.Pipes.AnonymousPipeClientStream> 개체 자식 프로세스에서 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-125">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process.</span></span>  
  
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d5754-126"><paramref name="pipeHandleAsString" /> 유효한 파이프 핸들이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d5754-126"><paramref name="pipeHandleAsString" /> is not a valid pipe handle.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="d5754-127">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-127">for full trust for the immediate caller.</span></span> <span data-ttu-id="d5754-128">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-128">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, class Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::IO::Pipes::PipeDirection direction, Microsoft::Win32::SafeHandles::SafePipeHandle ^ safePipeHandle);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeClientStream : System.IO.Pipes.PipeDirection * Microsoft.Win32.SafeHandles.SafePipeHandle -&gt; System.IO.Pipes.AnonymousPipeClientStream" Usage="new System.IO.Pipes.AnonymousPipeClientStream (direction, safePipeHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="safePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="d5754-129">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-129">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="d5754-130">익명 파이프 가능 한 방향으로 하므로 <paramref name="direction" /> 로 설정할 수 없습니다 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-130">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="safePipeHandle"><span data-ttu-id="d5754-131">Safehandle은 파이프에 대 한이 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체가 캡슐화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-131">A safe handle for the pipe that this <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object will encapsulate.</span></span></param>
        <summary><span data-ttu-id="d5754-132">새 인스턴스를 초기화 합니다 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 지정된 된 핸들에서 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-132">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class from the specified handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5754-133">A <xref:System.IO.Pipes.PipeDirection> 의 값 <xref:System.IO.Pipes.PipeDirection.InOut> 익명 파이프는 단방향 정의 되기 때문에 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-133">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5754-134">다음 예제에서는 익명 파이프를 사용 하 여 부모 프로세스에서 자식 프로세스로 문자열을 보내는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-134">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="d5754-135">이 예는 <xref:System.IO.Pipes.AnonymousPipeClientStream> 개체와 자식 프로세스에서 생성 됩니다는 <xref:System.IO.Pipes.PipeDirection> 값 <xref:System.IO.Pipes.PipeDirection.In>.</span><span class="sxs-lookup"><span data-stu-id="d5754-135">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5754-136"><paramref name="safePipeHandle" />는 유효한 핸들이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-136"><paramref name="safePipeHandle" /> is not a valid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5754-137"><paramref name="safePipeHandle" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5754-137"><paramref name="safePipeHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d5754-138"><paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-138"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d5754-139">디스크 오류와 같은 I/O 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-139">An I/O error, such as a disk error, has occurred.</span></span>  
  
<span data-ttu-id="d5754-140">또는</span><span class="sxs-lookup"><span data-stu-id="d5754-140">-or-</span></span> 
<span data-ttu-id="d5754-141">스트림이 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-141">The stream has been closed.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="d5754-142">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-142">for full trust for the immediate caller.</span></span> <span data-ttu-id="d5754-143">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-143">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, string pipeHandleAsString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, string pipeHandleAsString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, pipeHandleAsString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::IO::Pipes::PipeDirection direction, System::String ^ pipeHandleAsString);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeClientStream : System.IO.Pipes.PipeDirection * string -&gt; System.IO.Pipes.AnonymousPipeClientStream" Usage="new System.IO.Pipes.AnonymousPipeClientStream (direction, pipeHandleAsString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="pipeHandleAsString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="d5754-144">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-144">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="d5754-145">익명 파이프 가능 한 방향으로 하므로 <paramref name="direction" /> 로 설정할 수 없습니다 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-145">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="pipeHandleAsString"><span data-ttu-id="d5754-146">파이프 핸들을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-146">A string that represents the pipe handle.</span></span></param>
        <summary><span data-ttu-id="d5754-147">새 인스턴스를 초기화 합니다 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 지정 된 파이프 방향과 파이프 핸들의 문자열 표현을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-147">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class with the specified pipe direction and a string representation of the pipe handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5754-148">A <xref:System.IO.Pipes.PipeDirection> 의 값 <xref:System.IO.Pipes.PipeDirection.InOut> 익명 파이프는 단방향 정의 되기 때문에 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-148">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5754-149">다음 예제에서는 익명 파이프를 사용 하 여 부모 프로세스에서 자식 프로세스로 문자열을 보내는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-149">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="d5754-150">이 예는 <xref:System.IO.Pipes.AnonymousPipeClientStream> 개체와 자식 프로세스에서 생성 됩니다는 <xref:System.IO.Pipes.PipeDirection> 값 <xref:System.IO.Pipes.PipeDirection.In>.</span><span class="sxs-lookup"><span data-stu-id="d5754-150">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5754-151"><paramref name="pipeHandleAsString" /> 잘못 된 핸들이입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-151"><paramref name="pipeHandleAsString" /> is an invalid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5754-152"><paramref name="pipeHandleAsString" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d5754-152"><paramref name="pipeHandleAsString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d5754-153"><paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-153"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="d5754-154">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-154">for full trust for the immediate caller.</span></span> <span data-ttu-id="d5754-155">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-155">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AnonymousPipeClientStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AnonymousPipeClientStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="anonymousPipeClientStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5754-156">가비지 컬렉션에 의해 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 인스턴스가 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-156">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode ReadMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode ReadMode {  void set(System::IO::Pipes::PipeTransmissionMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReadMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeClientStream.ReadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5754-157">에 대 한 읽기 모드를 설정 합니다 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-157">Sets the reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span></span></summary>
        <value><span data-ttu-id="d5754-158">합니다 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 에 대 한는 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-158">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5754-159">익명 파이프를 지원 하지 않는 <xref:System.IO.Pipes.PipeTransmissionMode.Message> 읽기 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-159">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5754-160">다음 예제에서는 익명 파이프를 사용 하 여 부모 프로세스에서 자식 프로세스로 문자열을 보내는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-160">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="d5754-161">이 예제는 <xref:System.IO.Pipes.AnonymousPipeClientStream> 개체 자식 프로세스에서 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-161">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process.</span></span> <span data-ttu-id="d5754-162">합니다 <xref:System.NotSupportedException> 때 발견 되는 <xref:System.IO.Pipes.AnonymousPipeClientStream.ReadMode%2A> 속성이 <xref:System.IO.Pipes.PipeTransmissionMode.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-162">The <xref:System.NotSupportedException> is caught when the <xref:System.IO.Pipes.AnonymousPipeClientStream.ReadMode%2A> property is set to <xref:System.IO.Pipes.PipeTransmissionMode.Message>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d5754-163">전송 모드가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-163">The transmission mode is not valid.</span></span> <span data-ttu-id="d5754-164">익명 파이프의 경우만 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-164">For anonymous pipes, only <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> is supported.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d5754-165">전송 모드는 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-165">The transmission mode is <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d5754-166">연결이 끊어졌거나 다른 I/O 오류가 발생 한 경우</span><span class="sxs-lookup"><span data-stu-id="d5754-166">The connection is broken or another I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d5754-167">파이프가 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-167">The pipe is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransmissionMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode TransmissionMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TransmissionMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode TransmissionMode { System::IO::Pipes::PipeTransmissionMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TransmissionMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5754-168">현재 파이프가 지원하는 파이프 전송 모드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-168">Gets the pipe transmission mode supported by the current pipe.</span></span></summary>
        <value><span data-ttu-id="d5754-169"><see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 현재 파이프가 지 합니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-169">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> supported by the current pipe.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5754-170">익명 파이프를 지원 하지 않는 <xref:System.IO.Pipes.PipeTransmissionMode.Message> 읽기 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-170">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5754-171">다음 예제에서는 익명 파이프를 사용 하 여 부모 프로세스에서 자식 프로세스로 문자열을 보내는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-171">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="d5754-172">이 예제는 <xref:System.IO.Pipes.AnonymousPipeClientStream> 자식 프로세스에서 개체를 만들 및 <xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A> 콘솔에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d5754-172">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process and the <xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A> is displayed to the console.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>