<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PipeSecurity.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51eead0220ae9da892b78cf71ae96a98169946116.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1eead0220ae9da892b78cf71ae96a98169946116</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.PipeSecurity">
          <source>Represents the access control and audit security for a pipe.</source>
          <target state="translated">파이프에 대한 액세스 제어 및 감사 보안을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class specifies the access rights for a pipe and how access attempts are audited.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 파이프 및 액세스 시도 감사 하는 방법에 대 한 액세스 권한을 지정 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>This class represents access and audit rights as a set of rules.</source>
          <target state="translated">이 클래스는 규칙의 집합으로 액세스 및 감사 권한을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>Each access rule is represented by a <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> object, while each audit rule is represented by a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> object.</source>
          <target state="translated">각 액세스 규칙으로 표시 됩니다는 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> 개체를 나타내는 각 감사 규칙이 동안는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class is an abstraction of the underlying Microsoft Windows file security system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 클래스는 기본 Microsoft Windows 파일 보안 시스템 추상화입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.</source>
          <target state="translated">이 시스템에서 각 파이프에 파이프에 대 한 액세스를 제어 하는 임의 액세스 제어 목록 (DACL) 및 시스템 액세스 제어 목록 (SACL) 감사가 수행 되는 액세스 제어 시도 지정 하는 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> 클래스는 Dacl과 Sacl을 구성 하는 액세스 제어 항목 (Ace)의 추상화 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 클래스를 숨기는 대부분의 Dacl과 Sacl 세부; ACE 순서를 지정 하거나 null DACL 걱정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 검색, 추가, DACL 및 파이프의 SACL을 나타내는 액세스 규칙을 변경 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>To persist new or changed access or audit rules to a pipe, use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</ph> method.</source>
          <target state="translated">를 새로 추가 되거나 변경에 대 한 액세스를 유지 하거나 감사 파이프에 대 한 규칙은 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>To retrieve access or audit rules from an existing file, use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</ph> method.</source>
          <target state="translated">기존 파일에서 액세스 또는 감사 규칙을 검색하려면 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>This constructor creates an empty <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object that is not based on an existing pipe.</source>
          <target state="translated">이 생성자는 빈 만듭니다 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 기존 파이프를 기반으로 하지 않는 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>You can then populate the object with access control information and apply it to a pipe.</source>
          <target state="translated">다음 파이프에 적용할을 액세스 제어 정보를 사용 하 여 개체를 채울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>You can add access or audit rules to the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object using the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph> method.</source>
          <target state="translated">액세스 권한을 추가 하거나 감사 규칙 수는 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 를 사용 하 여 개체는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>You can remove access or audit rules using the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method.</source>
          <target state="translated">액세스 권한을 제거 하거나 감사를 사용 하 여 규칙 수는 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>To persist new or changed access or audit rules to a pipe, use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</ph> method.</source>
          <target state="translated">를 새로 추가 되거나 변경에 대 한 액세스를 유지 하거나 감사 파이프에 대 한 규칙은 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>To retrieve access or audit rules from an existing file, use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</ph> method.</source>
          <target state="translated">기존 파일에서 액세스 또는 감사 규칙을 검색하려면 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeSecurity.AccessRightType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the securable object that is associated with the current <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 개체와 관련된 보안 개체의 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AccessRightType">
          <source>The type of the securable object that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 보안 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AccessRightType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph> property and return the type they use to represent access rights.</source>
          <target state="translated">파생 된 클래스는 <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 재정의 클래스는 <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph> 속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AccessRightType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The identity that the access rule applies to.</source>
          <target state="translated">액세스 규칙이 적용되는 ID입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>It must be an object that can be cast as a <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object.</source>
          <target state="translated">이는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 개체로 캐스팅할 수 있는 개체여야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The access mask of this rule.</source>
          <target state="translated">이 규칙의 액세스 마스크입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</source>
          <target state="translated">액세스 마스크는 익명 비트의 32비트 컬렉션으로, 비트의 의미는 개별 통합자가 정의합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this rule is inherited from a parent container; otherwise false.</source>
          <target state="translated">이 규칙이 부모 컨테이너에서 상속되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.InheritanceFlags" /&gt;</ph> values that specifies the inheritance properties of the access rule.</source>
          <target state="translated">액세스 규칙의 상속 속성을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.InheritanceFlags" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.PropagationFlags" /&gt;</ph> values that specifies whether inherited access rules are automatically propagated.</source>
          <target state="translated">상속된 액세스 규칙을 자동으로 전파할지 여부를 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.PropagationFlags" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The propagation flags are ignored if <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> is set to <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>으로 설정되면 전파 플래그는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Specifies the valid access control type.</source>
          <target state="translated">유효한 액세스 제어 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> class with the specified values.</source>
          <target state="translated">지정된 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> object that this method creates.</source>
          <target state="translated">이 메서드가 만드는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The recommended way to create access control rules is to use the constructors of the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> class.</source>
          <target state="translated">권장 하는 액세스 제어 규칙을 만드는 방법은의 생성자를 사용 하 여 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph> 또는 <ph id="ph4">&lt;paramref name="type" /&gt;</ph>에 잘못된 값을 지정하는 경우</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>가 0입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> nor of a type, such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph>, that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph>의 형식이 <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>도 아니고 <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> 형식으로 변환할 수 있는 <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 같은 형식도 아닌 경우</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeSecurity.AccessRuleType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object that is associated with the access rules of the current <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 개체의 액세스 규칙과 관련된 개체의 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AccessRuleType">
          <source>The type of the object that is associated with the access rules of the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체의 액세스 규칙과 관련된 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AccessRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph> property and return the type they use to represent access rights.</source>
          <target state="translated">파생 된 클래스는 <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 재정의 클래스는 <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph> 속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AccessRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The access rule to add.</source>
          <target state="translated">추가할 액세스 규칙입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 DACL(임의 액세스 제어 목록)에 액세스 규칙을 추가합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph> method adds a new rule to the list of rules that a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object contains.If an access control list (ACL) already exists for the specified rule, the <ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph> method will still add the rule, with one exception: a <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> object that is created using the <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value supersedes an object that is created using the <ph id="ph6">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph> 메서드 규칙 목록에 새 규칙을 추가 하는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 개체에 포함 되어 있습니다. 지정된 된 규칙에 대 한 액세스 제어 목록 (ACL)을 이미 있는 경우는 <ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph> 메서드 예외적으로 규칙을 계속 추가 합니다:는 <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> 를 사용 하 여 만든 개체는 <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> 값은 를사용하여만든개체를대체합니다.<ph id="ph6">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The audit rule to add.</source>
          <target state="translated">추가할 감사 규칙입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>Adds an audit rule to the System Access Control List (SACL)that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 SACL(시스템 액세스 제어 목록)에 감사 규칙을 추가합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A&gt;</ph> method adds a new audit rule to the list of rules that a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object contains.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A&gt;</ph> 메서드 규칙 목록에 새 감사 규칙을 추가 하는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 개체에 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>If an audit rule already exists for the specified rule, the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A&gt;</ph> method will still add the rule.</source>
          <target state="translated">지정된 된 규칙에 대 한 감사 규칙이 이미 있는 경우는 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A&gt;</ph> 메서드는 규칙을 계속 추가 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The identity that the access rule applies to.</source>
          <target state="translated">액세스 규칙이 적용되는 ID입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>It must be an object that can be cast as a <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object.</source>
          <target state="translated">이는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 개체로 캐스팅할 수 있는 개체여야 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The access mask of this rule.</source>
          <target state="translated">이 규칙의 액세스 마스크입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</source>
          <target state="translated">액세스 마스크는 익명 비트의 32비트 컬렉션으로, 비트의 의미는 개별 통합자가 정의합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this rule is inherited from a parent container; otherwise, false..</source>
          <target state="translated">이 규칙이 부모 컨테이너에서 상속되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.InheritanceFlags" /&gt;</ph> values that specifies the inheritance properties of the access rule.</source>
          <target state="translated">액세스 규칙의 상속 속성을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.InheritanceFlags" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.PropagationFlags" /&gt;</ph> values that specifies whether inherited access rules are automatically propagated.</source>
          <target state="translated">상속된 액세스 규칙을 자동으로 전파할지 여부를 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.PropagationFlags" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The propagation flags are ignored if <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> is set to <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>으로 설정되면 전파 플래그는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> values that specifies the valid access control type.</source>
          <target state="translated">유효한 액세스 제어 형식을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> class with the specified values.</source>
          <target state="translated">지정된 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> object that this method creates.</source>
          <target state="translated">이 메서드가 만드는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The recommended way to create audit rules is to use the constructors of the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> class.</source>
          <target state="translated">권장 하는 감사 규칙을 만드는 방법은의 생성자를 사용 하 여 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The <ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="flags" /&gt;</ph> properties specify an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph> 또는 <ph id="ph4">&lt;paramref name="flags" /&gt;</ph> 속성에 잘못된 값을 지정한 경우</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The <ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The <ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> property is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> 속성이 0인 경우</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The <ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> property is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> nor of a type, such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph>, that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 형식도 아니고 <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> 형식으로 변환할 수 있는 <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 같은 형식도 아닌 경우</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeSecurity.AuditRuleType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object associated with the audit rules of the current <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 개체의 감사 규칙과 관련된 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AuditRuleType">
          <source>The type of the object that is associated with the audit rules of the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체의 감사 규칙과 관련된 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AuditRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph> property and return the type they use to represent access rights.</source>
          <target state="translated">파생 된 클래스는 <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> 재정의 클래스는 <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph> 속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AuditRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.PipeSecurity">
          <source>Saves the specified sections of the security descriptor that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 보안 설명자의 지정된 섹션을 영구 저장소에 저장합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)">
          <source>The handle of the securable object that the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object is associated with.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체가 관련된 보안 개체의 핸들입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)">
          <source>Saves the specified sections of the security descriptor that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 보안 설명자의 지정된 섹션을 영구 저장소에 저장합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.Persist(System.String)">
          <source>The name of the securable object that the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object is associated with.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 보안 개체의 이름입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.Persist(System.String)">
          <source>Saves the specified sections of the security descriptor that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 보안 설명자의 지정된 섹션을 영구 저장소에 저장합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The access rule to remove.</source>
          <target state="translated">제거할 액세스 규칙입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 DACL(임의 액세스 제어 목록)에서 액세스 규칙을 제거합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation is successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">작업에 성공하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method removes either all matching <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules or all matching <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> access rules from the current <ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> 메서드 제거 일치 <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> 액세스 규칙 또는 일치 하는 모든 <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> 액세스 규칙에서 현재 <ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>For example, you can use this method to remove all <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules for a user by passing a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> object created using the <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, and a user account.</source>
          <target state="translated">예를 들어 모든 제거 하려면이 방법을 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> 전달 하 여 사용자에 대 한 액세스는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> 사용 하 여 만든 개체는 <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> 값의 <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> 값 및 사용자 계정입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method removes any deny rules that specify the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value or the <ph id="ph3">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> 지정 하는 모든 거부 규칙을 제거 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> 값 또는 <ph id="ph3">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
          <source>The access rule to remove.</source>
          <target state="translated">제거할 액세스 규칙입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
          <source>Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 DACL(임의 액세스 제어 목록)에서 지정된 액세스 규칙을 제거합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method removes either all matching <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules or all matching <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> access rules from the current <ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> 메서드 제거 일치 <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> 액세스 규칙 또는 일치 하는 모든 <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> 액세스 규칙에서 현재 <ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
          <source>For example, you can use this method to remove all <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules for a user by passing a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> object created using the <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, and a user account.</source>
          <target state="translated">예를 들어 모든 제거 하려면이 방법을 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> 전달 하 여 사용자에 대 한 액세스는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> 사용 하 여 만든 개체는 <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> 값의 <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> 값 및 사용자 계정입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method removes any deny rules that specify the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value or the <ph id="ph3">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> 지정 하는 모든 거부 규칙을 제거 하는 메서드는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> 값 또는 <ph id="ph3">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The audit rule to remove.</source>
          <target state="translated">제거할 감사 규칙입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>Removes an audit rule from the System Access Control List (SACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 SACL(시스템 액세스 제어 목록)에서 감사 규칙을 제거합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the audit rule was removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph></source>
          <target state="translated">감사 규칙이 성공적으로 제거되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A&gt;</ph> method removes either all matching <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rules or all matching <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> audit rules from the current <ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A&gt;</ph> 메서드 제거 일치 <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> 감사 규칙 또는 일치 하는 모든 <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> 감사는 현재 규칙 <ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>For example, you can use this method to remove all <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rules for a user by passing a <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> object created using the <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id="ph4">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value, and a user account.</source>
          <target state="translated">예를 들어 모든 제거 하려면이 방법을 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> 전달 하 여 사용자에 대 한 규칙을 감사는 <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> 사용 하 여 만든 개체는 <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> 값의 <ph id="ph4">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> 값 및 사용자 계정입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>When you do this, the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A&gt;</ph> method removes any deny rules that specify the <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value or the <ph id="ph3">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> value.</source>
          <target state="translated">이렇게 하면는 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A&gt;</ph> 지정 하는 모든 거부 규칙을 제거 하는 메서드는 <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> 값 또는 <ph id="ph3">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
          <source>The audit rule to remove.</source>
          <target state="translated">제거할 감사 규칙입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
          <source>Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 SACL(시스템 액세스 제어 목록)에서 지정된 감사 규칙과 동일한 보안 식별자가 있는 모든 감사 규칙을 제거합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A&gt;</ph> method removes all audit rules for the specified user.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A&gt;</ph> 메서드는 지정된 된 사용자에 대 한 모든 감사 규칙을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
          <source>It ignores all values in the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> object except the user account.</source>
          <target state="translated">모든 값은 무시는 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> 사용자 계정 제외한 개체입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>The audit rule to remove.</source>
          <target state="translated">제거할 감사 규칙입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 SACL(시스템 액세스 제어 목록)에서 지정된 감사 규칙을 제거합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> method removes the specified matching <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rule or the specified matching <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> audit rule from the current <ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> 메서드는 일치 하는 지정 된 제거 <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> 감사 규칙이 나 특정 <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> 현재에서 감사 규칙 <ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>For example, you can use this method to remove a specified <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rule for a user by passing a <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> object created using the <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id="ph4">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value, and a user account.</source>
          <target state="translated">지정 된 제거 하려면이 메서드를 사용할 수는 예를 들어 <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> 전달 하 여 사용자에 대 한 감사 규칙은 <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> 사용 하 여 만든 개체는 <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> 값의 <ph id="ph4">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> 값 및 사용자 계정입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>When you do this, the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> method removes only a deny rule that specifies the <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value.</source>
          <target state="translated">이렇게 하면는 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> 메서드 제거는 거부 규칙을 지정 하는 <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>It does not remove any deny rules that specify the <ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> value.</source>
          <target state="translated">지정 된 거부 규칙을 제거 하지 않습니다는 <ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The access rule to add.</source>
          <target state="translated">추가할 액세스 규칙입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object and then adds the specified access rule.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 DACL(임의 액세스 제어 목록)에서 모든 액세스 규칙을 제거한 다음 지정된 액세스 규칙을 추가합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <ph id="ph2">`rule`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph> 메서드를 지정 된 액세스 제어 목록 (ACL) 규칙을 추가 하거나 일치 하는 동일한 모든 ACL 규칙을 덮어씁니다는 <ph id="ph2">`rule`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>For example, if the <ph id="ph1">`rule`</ph> parameter specifies a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value and the <ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, the identical rule will be overwritten.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">`rule`</ph> 매개 변수 지정는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> 값 및 <ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph> 찾으면 동일한 ACL 규칙을 지정 하는 <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> 값을 동일한 규칙 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>If the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value, the identical rule will also be overwritten.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph> 찾으면 동일한 ACL 규칙을 지정 하는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> 값을 동일한 규칙도 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The rule to set.</source>
          <target state="translated">설정할 규칙입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 DACL(임의 액세스 제어 목록)에서 액세스 규칙을 설정합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights&gt;</ph> value of the <ph id="ph3">`rule`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph> 메서드를 지정 된 액세스 제어 목록 (ACL) 규칙을 추가 하거나 일치 하는 동일한 모든 ACL 규칙을 덮어씁니다는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights&gt;</ph> 의 값은 <ph id="ph3">`rule`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>For example, if the <ph id="ph1">`rule`</ph> parameter specifies a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value and the <ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, the identical rule will be overwritten.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">`rule`</ph> 매개 변수 지정는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> 값 및 <ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph> 찾으면 동일한 ACL 규칙을 지정 하는 <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> 값을 동일한 규칙 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>If the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value, the identical rule will not be overwritten.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph> 찾으면 동일한 ACL 규칙을 지정 하는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> 값을 동일한 규칙 하지 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The rule to set.</source>
          <target state="translated">설정할 규칙입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>Sets an audit rule in the System Access Control List (SACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 개체와 관련된 SACL(시스템 액세스 제어 목록)에서 감사 규칙을 설정합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph> method adds the specified audit rule or overwrites any identical audit rules that match the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights&gt;</ph> value of the <ph id="ph3">`rule`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph> 메서드는 지정 된 감사 규칙을 추가 하거나 일치 하는 모든 동일한 감사 규칙을 덮어씁니다는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights&gt;</ph> 의 값은 <ph id="ph3">`rule`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>For example, if the <ph id="ph1">`rule`</ph> parameter specifies a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value and the <ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph> method finds an identical audit rule that specifies the <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, the identical rule will be overwritten.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">`rule`</ph> 매개 변수 지정는 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> 값 및 <ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph> 메서드를 지정 하는 동일한 감사 규칙 찾습니다는 <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> 값을 동일한 규칙 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>If the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph> method finds an identical audit rule that specifies the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value, the identical rule will not be overwritten.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph> 찾으면 지정 하는 동일한 감사 규칙의 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> 값을 동일한 규칙 하지 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>