<Type Name="ProfileOptimization" FullName="System.Runtime.ProfileOptimization">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="858f0245329b150023b79f4536c24c775356f272" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36532965" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ProfileOptimization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileOptimization extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ProfileOptimization" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileOptimization" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileOptimization abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileOptimization = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>이전 컴파일 중 생성된 프로필을 기반으로, 실행될 가능성이 높은 메서드에 대해 백그라운드 컴파일을 수행함으로써 JIT(just-in-time) 컴파일러를 필요로 하는 응용 프로그램에서 응용 프로그램 도메인의 시작 성능을 향상시킵니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  프로필 기반 최적화는 다중 코어 컴퓨터가 필요합니다. 메서드는 다른 컴퓨터에서 무시 됩니다.  
  
 응용 프로그램 도메인에서 프로필 기반 최적화를 시작 될 때마다 이전 사용 하는 동안 만들어진 프로필은 읽기입니다. 프로필의 정보는 시작 하는 동안 실행 될 가능성이 가장 하는 메서드를 식별 하 여 백그라운드 컴파일 데 사용 됩니다. 다중 코어 컴퓨터에서이 높아집니다. 메서드는 이미 가능성 주 응용 프로그램 스레드는 JIT 컴파일러를 호출 하지 않아도 되도록 필요할 때 컴파일됩니다.  
  
 프로필 파일을 사용할 때마다 덮어쓰기에 대 한 메서드를 시작 하는 동안 사용할 가장 최근의 정보가 항상 포함 합니다.  
  
 최적화 프로필 응용 프로그램 도메인 시작에 제한 되지 않습니다. JIT 컴파일러를 많이 사용 해야 하는 모든 활동에 대해 사용할 수 있습니다. 이러한 각 활동에는 자체 프로필이 되도록 응용 프로그램 도메인에 대 한 여러 프로필을 유지할 수 있습니다.  
  
 응용 프로그램 도메인에서 최적화 프로필을 사용 하려면 호출 해야 합니다는 <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> 메서드 프로필이 저장 된 폴더를 지정 합니다. 폴더가 이미 있어야 합니다. 프로필을 사용 하려면 호출 된 <xref:System.Runtime.ProfileOptimization.StartProfile%2A> 메서드 프로 파일의 파일 이름을 지정 합니다. 파일이 이전에 기록 되지 않았습니다 처음 사용할 때 만들어집니다. 에서는 프로필을 만들 성능 혜택 첫 번째 시간은 없습니다.  
  
 프로필 기반 최적화는 메서드가 실행 되는 순서를 변경 하지 않습니다. 메서드는 백그라운드 스레드에서 실행 되지 않습니다. 메서드는 컴파일되지만 호출 되지 것 하기만 하면 사용 되지 않습니다. 프로필 파일을 손상 되었거나 (예를 들어 없기 때문에 폴더)에 지정된 된 폴더에 쓸 수 없는 경우, 최적화 프로 파일링 하지 않고 프로그램 실행이 계속 됩니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetProfileRoot">
      <MemberSignature Language="C#" Value="public static void SetProfileRoot (string directoryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProfileRoot(string directoryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetProfileRoot (directoryPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetProfileRoot(System::String ^ directoryPath);" />
      <MemberSignature Language="F#" Value="static member SetProfileRoot : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.SetProfileRoot directoryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directoryPath">현재 응용 프로그램 도메인에 대한 프로필 파일이 저장되는 폴더의 전체 경로입니다.</param>
        <summary>현재 응용 프로그램 도메인에 대한 최적화 프로파일링을 사용하도록 설정하고 최적화 프로파일 파일이 저장되는 폴더를 설정합니다. 단일 코어 컴퓨터에서 메서드는 무시됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하기 전에이 메서드를 호출 해야 합니다는 <xref:System.Runtime.ProfileOptimization.StartProfile%2A> 현재 응용 프로그램 도메인에서 처음으로 메서드. 호출 하는 경우 <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> 두 번 이상 동일한 응용 프로그램 도메인에 대 한 모든 호출의 첫 번째 이후은 무시 됩니다.  
  
 지정한 폴더가 이미 있어야 합니다. 존재 하지 않는 경우이 메서드를 호출을 만들지 않고, 발생 하지 프로 파일링 합니다.  
  
 여러 코어를 갖지 않는 컴퓨터에서이 메서드는 무시 됩니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="StartProfile">
      <MemberSignature Language="C#" Value="public static void StartProfile (string profile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartProfile(string profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.StartProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartProfile (profile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartProfile(System::String ^ profile);" />
      <MemberSignature Language="F#" Value="static member StartProfile : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.StartProfile profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="profile">사용할 프로필의 파일 이름입니다.</param>
        <summary>백그라운드 스레드에서 지정한 프로필 파일에 이전에 기록되었던 메서드의 JIT(just-in-time) 컴파일을 시작합니다. 현재 메서드 사용을 기록하는 프로세스를 시작합니다. 이 프로세스에서는 나중에 지정된 프로필 파일을 덮어씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 된 프로필에서 지정한 폴더에 있는 경우는 <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> 메서드를 포함 된 정보는 백그라운드 스레드에서 메서드가 컴파일됩니다 순서를 결정 하는 데 사용 됩니다. <xref:System.Runtime.ProfileOptimization.StartProfile%2A> 메서드 사용의 기록 시작 이미 존재 하지 않는 경우 메서드는 프로필을 만듭니다.  
  
 기본 응용 프로그램 스레드 또는 백그라운드 스레드에서 컴파일할 여부에 관계 없이 실제로 호출 되는 방법에만 기록 됩니다. 메서드는 응용 프로그램의 백그라운드 스레드가 컴파일된가 전에 호출 해야 하는 경우 기본 응용 프로그램 스레드에서 컴파일됩니다.  
  
 녹음/녹화 수행 하는 코드는 메서드에 컴파일된다는 백그라운드 스레드 및 주 스레드의 컴파일되는 메서드를 포함 하는 속도 추적 합니다. 때 속도 미만으로 떨어질 미리 결정 된 수준 녹음 중지 합니다. JIT 컴파일 속도 미리 결정 된 상한을 초과 하는 경우에 기록을 중지 합니다.  
  
 경우는 <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> 은 현재 어플리케이션 도메인에 대 한 메서드가 호출 되지 않은 컴퓨터에 여러 개의 코어가 없는 경우 또는 <xref:System.Runtime.ProfileOptimization.StartProfile%2A> 메서드는 영향을 주지 않습니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
  </Members>
</Type>