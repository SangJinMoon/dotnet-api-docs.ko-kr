<Type Name="GCSettings" FullName="System.Runtime.GCSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0baf797ee3c7130da2de1bdbad1affd3838bdcef" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30488837" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class GCSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit GCSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.GCSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class GCSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class GCSettings abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>현재 프로세스의 가비지 컬렉션 설정을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Runtime.GCSettings.IsServerGC%2A> 속성을 서버 가비지 수집이 현재 프로세스에 대해 설정 되어 있는지 확인 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsServerGC">
      <MemberSignature Language="C#" Value="public static bool IsServerGC { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsServerGC" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.GCSettings.IsServerGC" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsServerGC As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsServerGC { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버 가비지 컬렉션이 설정되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          서버 가비지 수집이 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서버 가비지 수집에 대 한 내용은의 "워크스테이션 및 서버 가비지 수집" 섹션을 참조 하십시오. [가비지 수집 기본 사항](~/docs/standard/garbage-collection/fundamentals.md)합니다.  
  
 서버 가비지 수집을 사용 하지 않는 경우 워크스테이션 가비지 컬렉션은 적용 (동시 컬렉션 사용 또는)입니다. 서버 가비지 컬렉션은 다중 프로세서 컴퓨터 에서만 사용할 수 있습니다.  
  
 관리 되지 않는 호스트 서버 가비지 수집을 요청할 수 및 호스트 요청 구성 파일 설정을 재정의 합니다. 호스트 가비지 수집의 유형을 지정 하지 않는 경우 서버 가비지 컬렉션을 지정 하는 구성 파일 설정을 사용할 수 있습니다. 이 설정은 컴퓨터 구성 파일에 없는 응용 프로그램 구성 파일에만 유효 합니다. (참조 [구성 앱](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f)). 다음 예제에서는 서버 가비지 수집을 사용 하는 샘플 응용 프로그램 구성 파일의 내용을 보여 줍니다.  
  
```  
<configuration>  
  <runtime>  
    <gcServer enabled="true" />  
  </runtime>  
</configuration>  
```  
  
   
  
## Examples  
 다음 예제에서는 호스트 컴퓨터를 서버 또는 워크스테이션 가비지 수집 사용 중인지를 나타냅니다.  
  
 [!code-csharp[Environment.IsServerGC#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.IsServerGC/CS/isg.cs#1)]
 [!code-vb[Environment.IsServerGC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.IsServerGC/VB/isg.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeObjectHeapCompactionMode">
      <MemberSignature Language="C#" Value="public static System.Runtime.GCLargeObjectHeapCompactionMode LargeObjectHeapCompactionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.GCLargeObjectHeapCompactionMode LargeObjectHeapCompactionMode" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LargeObjectHeapCompactionMode As GCLargeObjectHeapCompactionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::GCLargeObjectHeapCompactionMode LargeObjectHeapCompactionMode { System::Runtime::GCLargeObjectHeapCompactionMode get(); void set(System::Runtime::GCLargeObjectHeapCompactionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLargeObjectHeapCompactionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[.NET Framework 4.5.1 이상 버전에서 지원됨]  
  
 전체 차단 가비지 수집이 대형 개체 힙(LOH)을 압축할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>전체 차단 가비지 수집 중 LOH를 압축할지 여부를 나타내는 열거형 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 LOH 85, 000 바이트 이상인 필요로 하는 큰 개체 (예: 배열)에 대 한 메모리 할당에 사용 됩니다. 큰 메모리 블록을 복사의 성능 영향 때문에 가비지 수집기가 일반적으로 비우고 LOH 비활성 개체가 점유 된 및에 대 한 앞으로 요청을 충족 하기 위해 다시 사용할 수 있는 메모리 위치 목록을 만드는 작업이 포함 된 큰 개체에 대 한 메모리의 할당입니다. 그러나 광범위 하 게 하는 앱에서 사용 하 여 LOH의 메모리 조각화 수 또한 성능이 저하 임시 개체를 저장 합니다. 이 경우에 사용할 수는 <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> 가비지 수집 중 LOH를 단순히 스윕 대신 압축 하는 속성입니다.  
  
 기본값은 <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> 속성은 <xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>, 가비지 컬렉션 중 LOH 압축 되지 않습니다 나타냅니다. 속성의 값을 할당 하는 경우 <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>는 다음 전체 차단 가비지 컬렉션 중 LOH를 압축 하 고 속성 값으로 다시 설정 됩니다 <xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>합니다.  
  
> [!NOTE]
>  백그라운드 가비지 컬렉션 되지 차단 합니다. 즉, 설정 하는 경우는 <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> 속성을 <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>, 이후에 발생 하는 2 컬렉션 LOH 압축 하지는 않는 모든 배경을 생성 합니다. 만 첫 번째 차단 세대 2 컬렉션 LOH를 압축합니다.  
  
 후의 <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> 속성이로 설정 되어 <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>, 다음 전체 차단 가비지 수집 (및 LOH 압축) 결정 되지 않은 나중에 발생 합니다. 다음과 같은 코드를 사용 하 여 즉시 LOH를 압축할 수 있습니다.  
  
 [!code-csharp[System.Runtime.GCSettings#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.gcsettings/cs/lohcompactionmode1.cs#1)]
 [!code-vb[System.Runtime.GCSettings#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.gcsettings/vb/lohcompactionmode1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.GCLargeObjectHeapCompactionMode" />
      </Docs>
    </Member>
    <Member MemberName="LatencyMode">
      <MemberSignature Language="C#" Value="public static System.Runtime.GCLatencyMode LatencyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.GCLatencyMode LatencyMode" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.GCSettings.LatencyMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LatencyMode As GCLatencyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::GCLatencyMode LatencyMode { System::Runtime::GCLatencyMode get(); void set(System::Runtime::GCLatencyMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>가비지 컬렉션에 대한 현재 대기 모드를 가져오거나 설정합니다.</summary>
        <value>대기 모드를 지정하는 열거형 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 하 여 응용 프로그램에서 가비지 수집의 개입 수준을 줄일 수 있습니다는 <xref:System.Runtime.GCLatencyMode> 를 <xref:System.Runtime.GCLatencyMode.LowLatency> 중요 한 작업 중입니다. 등의 작업이 완료 되 면 메모리를 늘리기 위해 더 많은 개체를 회수할 수 있도록 더 높은 대기 시간 모드를 반환 합니다.  
  
 값을 설정 하는 일반적으로 <xref:System.Runtime.GCSettings.LatencyMode%2A> 가비지 수집기의 대기 시간 모드를 정의 하는 속성입니다. 그러나 할당 하 여 비 GC 지역 대기 시간 모드를 설정할 수 없습니다는 <xref:System.Runtime.GCLatencyMode.NoGCRegion?displayProperty=nameWithType> 열거형 값의 <xref:System.Runtime.GCSettings.LatencyMode%2A> 속성입니다. 대신, 호출의 <xref:System.GC.TryStartNoGCRegion%2A?displayProperty=nameWithType> 비 GC 지역 대기 시간 모드를 시작 하는 메서드를 호출는 <xref:System.GC.EndNoGCRegion%2A?displayProperty=nameWithType> 을 끝냅니다.  
  
 참조 [대기 시간 모드](~/docs/standard/garbage-collection/latency.md) 가비지 수집에 대 한 런타임 구성 설정의 기본 값에 미치는 영향에 대해서는 <xref:System.Runtime.GCLatencyMode> 열거형입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Runtime.GCSettings.LatencyMode" /> 속성이 잘못된 값으로 설정됩니다.  
  
 또는  
  
 <see cref="P:System.Runtime.GCSettings.LatencyMode" /> 속성을 <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" />으로 설정할 수 없습니다.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
  </Members>
</Type>