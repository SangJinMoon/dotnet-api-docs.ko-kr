<Type Name="PrintQueueStream" FullName="System.Printing.PrintQueueStream">
  <TypeSignature Language="C#" Value="public class PrintQueueStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintQueueStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintQueueStream" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintQueueStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintQueueStream : System::IO::Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9b87f-101">인쇄 대기열에 스풀링된 인쇄 작업을 나타내는 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-101">A stream that represents a spooled print job in a print queue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b87f-102">이 클래스를 사용 하 여 스풀 파일을 자동으로 포함 되지 않는 장치 관련 정보를 작성 하는 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 스풀러 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-102">Use this class to write device specific information to a spool file that is not automatically included by the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] spooler.</span></span> <span data-ttu-id="9b87f-103">스풀 파일 인지 확인 해야 하는 물론, [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] 또는 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-103">Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)].</span></span> <span data-ttu-id="9b87f-104">사용 하는 경우는 <xref:System.Byte> 배열에 사용할 수도 있습니다 두 오버 로드는 <xref:System.Printing.PrintQueue.AddJob%2A> 메서드 및 <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> 스풀 파일에 쓸 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-104">If you prefer working with a <xref:System.Byte> array, you can also use two of the overloads of the <xref:System.Printing.PrintQueue.AddJob%2A> method and the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property to write to the spool file.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9b87f-105">내에서 클래스는 <xref:System.Printing> Windows 서비스 또는 ASP.NET 응용 프로그램 또는 서비스 내에서 사용 하기 위해 네임 스페이스를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-105">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="9b87f-106">이러한 응용 프로그램 종류 중 하나에서 이러한 클래스를 사용 하는 동안 예기치 않은 문제가 발생할 수 있습니다, 그리고 감소와 같은 서비스 성능 및 런타임 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-106">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="9b87f-107">Windows Forms 응용 프로그램에서 인쇄 하는 경우 참조는 <xref:System.Drawing.Printing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-107">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b87f-108"><see cref="T:System.Printing.PrintQueueStream" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-108">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueueStream (System.Printing.PrintQueue printQueue, string printJobName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintQueue printQueue, string printJobName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueueStream(System::Printing::PrintQueue ^ printQueue, System::String ^ printJobName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
        <Parameter Name="printJobName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="printQueue"><span data-ttu-id="9b87f-109">스트림의 내용을 제공하는 인쇄 작업을 호스팅하는 <see cref="T:System.Printing.PrintQueue" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-109">The <see cref="T:System.Printing.PrintQueue" /> that hosts the print job that provides the content of the stream.</span></span></param>
        <param name="printJobName"><span data-ttu-id="9b87f-110">스트림의 내용을 제공하는 인쇄 작업의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-110">The name of the print job that provides the content of the stream.</span></span></param>
        <summary><span data-ttu-id="9b87f-111">지정된 <see cref="T:System.Printing.PrintQueueStream" />에서 호스팅되는 지정된 인쇄 작업에 대해 <see cref="T:System.Printing.PrintQueue" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-111">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueStream" /> class for the specified print job that is hosted in the specified <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueueStream (System.Printing.PrintQueue printQueue, string printJobName, bool commitDataOnClose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintQueue printQueue, string printJobName, bool commitDataOnClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueueStream(System::Printing::PrintQueue ^ printQueue, System::String ^ printJobName, bool commitDataOnClose);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
        <Parameter Name="printJobName" Type="System.String" />
        <Parameter Name="commitDataOnClose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="printQueue"><span data-ttu-id="9b87f-112">스트림의 내용을 제공하는 인쇄 작업을 호스팅하는 <see cref="T:System.Printing.PrintQueue" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-112">The <see cref="T:System.Printing.PrintQueue" /> that hosts the print job that provides the content of the stream.</span></span></param>
        <param name="printJobName"><span data-ttu-id="9b87f-113">스트림의 내용을 제공하는 인쇄 작업의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-113">The name of the print job that provides the content of the stream.</span></span></param>
        <param name="commitDataOnClose">
          <span data-ttu-id="9b87f-114"><see cref="M:System.Printing.PrintQueueStream.Close" /> 메서드가 호출될 때 <see cref="T:System.Printing.PrintQueueStream" />의 데이터를 커밋하려면 <see langword="true" />이고, 그렇지 않으면<see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-114"><see langword="true" /> to commit data in the <see cref="T:System.Printing.PrintQueueStream" /> when the <see cref="M:System.Printing.PrintQueueStream.Close" /> method is called; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9b87f-115">스트림이 닫힐 때 <see cref="T:System.Printing.PrintQueueStream" />의 데이터를 커밋할지 여부를 나타내는 표시와 함께, 지정된 <see cref="T:System.Printing.PrintQueue" />에서 호스팅되는 지정된 인쇄 작업에 대해 <see cref="T:System.Printing.PrintQueueStream" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-115">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueStream" /> class for the specified print job that is hosted in the specified <see cref="T:System.Printing.PrintQueue" />, with an indication of whether data in the <see cref="T:System.Printing.PrintQueueStream" /> should be committed when the stream is closed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueueStream (System.Printing.PrintQueue printQueue, string printJobName, bool commitDataOnClose, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintQueue printQueue, string printJobName, bool commitDataOnClose, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueueStream(System::Printing::PrintQueue ^ printQueue, System::String ^ printJobName, bool commitDataOnClose, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
        <Parameter Name="printJobName" Type="System.String" />
        <Parameter Name="commitDataOnClose" Type="System.Boolean" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="printQueue"><span data-ttu-id="9b87f-116">스트림의 내용을 제공하는 인쇄 작업을 호스팅하는 <see cref="T:System.Printing.PrintQueue" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-116">The <see cref="T:System.Printing.PrintQueue" /> that hosts the print job that provides the content of the stream.</span></span></param>
        <param name="printJobName"><span data-ttu-id="9b87f-117">스트림의 내용을 제공하는 인쇄 작업의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-117">The name of the print job that provides the content of the stream.</span></span></param>
        <param name="commitDataOnClose">
          <span data-ttu-id="9b87f-118"><see cref="M:System.Printing.PrintQueueStream.Close" /> 메서드가 호출될 때 <see cref="T:System.Printing.PrintQueueStream" />의 데이터를 커밋하려면 <see langword="true" />이고, 그렇지 않으면<see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-118"><see langword="true" /> to commit data in the <see cref="T:System.Printing.PrintQueueStream" /> when the <see cref="M:System.Printing.PrintQueueStream.Close" /> method is called; otherwise, <see langword="false" />.</span></span></param>
        <param name="printTicket"><span data-ttu-id="9b87f-119">인쇄 작업의 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-119">The settings of the print job.</span></span></param>
        <summary><span data-ttu-id="9b87f-120">스트림이 닫힐 때 <see cref="T:System.Printing.PrintQueueStream" />의 데이터를 커밋할지 여부를 나타내는 지정된 설정 및 표시와 함께, 지정된 <see cref="T:System.Printing.PrintQueue" />에서 호스팅되는 지정된 인쇄 작업에 대해 <see cref="T:System.Printing.PrintQueueStream" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-120">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueStream" /> class for the specified print job that is hosted in the specified <see cref="T:System.Printing.PrintQueue" />, with the specified settings and an indication of whether data in the <see cref="T:System.Printing.PrintQueueStream" /> should be committed when the stream is closed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9b87f-121">데이터를 쓸 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-121">The buffer from which to write data.</span></span></param>
        <param name="offset"><span data-ttu-id="9b87f-122">쓰기를 시작할 버퍼의 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-122">The byte offset in the buffer from which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="9b87f-123">쓸 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-123">The maximum number of bytes to write.</span></span></param>
        <param name="callback"><span data-ttu-id="9b87f-124">쓰기 작업이 완료되면 호출되는 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-124">An asynchronous callback, which is called when the writing operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="9b87f-125">이 비동기 쓰기 요청을 다른 요청과 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-125">A user-provided object that distinguishes this asynchronous writing request from other requests.</span></span></param>
        <summary><span data-ttu-id="9b87f-126">비동기 쓰기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-126">Begins an asynchronous write operation.</span></span></summary>
        <returns><span data-ttu-id="9b87f-127">보류 중인 비동기 쓰기를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-127">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous write, which might still be pending.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueueStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b87f-128">스트림에서 읽기를 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-128">Gets a value that indicates whether the stream supports reading.</span></span></summary>
        <value>
          <span data-ttu-id="9b87f-129">읽기가 지원되면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-129"><see langword="true" /> if reading is supported; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueueStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b87f-130">읽기/쓰기 위치를 스트림의 새 위치로 이동하는 검색을 스트림에서 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-130">Gets a value that indicates whether the stream supports seeking, which is moving the read/write position to a new position in the stream.</span></span></summary>
        <value>
          <span data-ttu-id="9b87f-131">검색이 지원되면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-131"><see langword="true" /> if seeking is supported; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueueStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b87f-132">스트림에서 쓰기를 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-132">Gets a value that indicates whether the stream supports writing.</span></span></summary>
        <value>
          <span data-ttu-id="9b87f-133">쓰기가 지원되면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-133"><see langword="true" /> if writing is supported; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b87f-134">스트림을 닫고 스트림과 연결된 소켓, 파일 핸들 등의 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-134">Closes the stream and releases any resources, such as sockets and file handles, that are associated with it.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">To be added.</param>
        <summary><span data-ttu-id="9b87f-135"><see cref="T:System.Printing.PrintQueueStream" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-135">Releases the unmanaged resources that are used by the <see cref="T:System.Printing.PrintQueueStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b87f-136">이 메서드는 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9b87f-136">This method is called by the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="9b87f-137">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 로 설정 하는 명명 되지 않은 부울 매개 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-137">`Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`.</span></span> <span data-ttu-id="9b87f-138"><xref:System.Object.Finalize%2A> 호출 `Dispose` 로 설정 명명 되지 않은 부울 매개 변수와 함께 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-138"><xref:System.Object.Finalize%2A> invokes `Dispose` with the unnamed Boolean parameter set to `false`.</span></span>  
  
 <span data-ttu-id="9b87f-139">부울 매개 변수 명명 되지 않은 경우 `true`,이 메서드는 관리 개체가 보유 하 고 있는 모든 리소스를 해제 합니다.이 <xref:System.Printing.PrintQueueStream> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-139">When the unnamed Boolean parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.Printing.PrintQueueStream> references.</span></span> <span data-ttu-id="9b87f-140">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-140">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9b87f-141"><see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-141"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="9b87f-142">재정의 하는 경우 <see langword="Dispose(Boolean)" />이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 하십시오 <see langword="Dispose" />합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-142">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that were previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="9b87f-143">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-143">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="9b87f-144">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-144">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="9b87f-145">보류 중인 비동기 I/O 요청에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-145">A reference to the pending asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="9b87f-146">비동기 쓰기 작업을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-146">Ends an asynchronous write operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b87f-147"><xref:System.Printing.PrintQueueStream.EndWrite%2A> 정확히 한 번만 호출 해야 모든 <xref:System.IAsyncResult> 에 대 한 호출에서 반환 되는 <xref:System.Printing.PrintQueueStream.BeginWrite%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-147"><xref:System.Printing.PrintQueueStream.EndWrite%2A> must be called exactly once on every <xref:System.IAsyncResult> that is returned from a call to <xref:System.Printing.PrintQueueStream.BeginWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~PrintQueueStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!PrintQueueStream ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b87f-148">가비지 수집기에서 <see cref="T:System.Printing.PrintQueueStream" />을 회수하기 전에 <see cref="T:System.Printing.PrintQueueStream" />이 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-148">Enables a <see cref="T:System.Printing.PrintQueueStream" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Printing.PrintQueueStream" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b87f-149">이 메서드는 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-149">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9b87f-150">응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 `Finalize` 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9b87f-150">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="9b87f-151">자세한 내용은 참조 [Finalize 메서드 및 소멸자](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md), 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-151">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b87f-152">이 스트림에 대한 모든 버퍼를 지우고 버퍼링된 모든 데이터를 기본 장치에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-152">Clears all the buffers for this stream and writes any buffered data to the underlying device.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlePackagingProgressEvent">
      <MemberSignature Language="C#" Value="public void HandlePackagingProgressEvent (object sender, System.Windows.Xps.Packaging.PackagingProgressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HandlePackagingProgressEvent(object sender, class System.Windows.Xps.Packaging.PackagingProgressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HandlePackagingProgressEvent (sender As Object, e As PackagingProgressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void HandlePackagingProgressEvent(System::Object ^ sender, System::Windows::Xps::Packaging::PackagingProgressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Xps.Packaging.PackagingProgressEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="9b87f-153">이벤트 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-153">The source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="9b87f-154">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-154">The event data.</span></span></param>
        <summary><span data-ttu-id="9b87f-155"><see cref="T:System.Printing.PrintQueueStream" />를 처리하여 <see cref="E:System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent" />이 패키징 진행률에 응답할 수 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-155">Enables the <see cref="T:System.Printing.PrintQueueStream" /> to respond to the packaging progress by handling the <see cref="E:System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Windows.Xps.Packaging" />
      </Docs>
    </Member>
    <Member MemberName="JobIdentifier">
      <MemberSignature Language="C#" Value="public int JobIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 JobIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueueStream.JobIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobIdentifier As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int JobIdentifier { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b87f-156">인쇄 작업의 ID 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-156">Gets the ID number of the print job.</span></span></summary>
        <value><span data-ttu-id="9b87f-157">ID 번호를 나타내는 <see cref="T:System.Int32" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-157">An <see cref="T:System.Int32" /> that represents an ID number.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueueStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b87f-158">스트림의 길이(바이트)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-158">Gets the length of the stream in bytes.</span></span></summary>
        <value><span data-ttu-id="9b87f-159"><see cref="T:System.Int64" /> 바이트에서 스트림의 길이 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-159">An <see cref="T:System.Int64" /> that represents the length of the stream in bytes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueueStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b87f-160">스트림 내의 현재 읽기/쓰기 위치를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-160">Gets or sets the current read/write position in the stream.</span></span></summary>
        <value><span data-ttu-id="9b87f-161"><see cref="T:System.Int64" /> 스트림 내의 현재 위치를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-161">An <see cref="T:System.Int64" /> that represents the current position in the stream.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9b87f-162">바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-162">An array of bytes.</span></span></param>
        <param name="offset"><span data-ttu-id="9b87f-163">스트림에서 읽은 데이터를 저장하기 시작하려는 버퍼의 0부터 시작하는 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-163">The zero-based byte offset in the buffer where you want to begin storing the data that is read from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="9b87f-164">스트림에서 읽을 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-164">The maximum number of bytes to be read from the stream.</span></span></param>
        <summary><span data-ttu-id="9b87f-165">스트림에서 바이트 시퀀스를 읽고 읽은 바이트 수만큼 스트림에서 읽기/쓰기 위치를 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-165">Reads a sequence of bytes from the stream and advances the read/write position in the stream by the number of bytes that were read.</span></span></summary>
        <returns><span data-ttu-id="9b87f-166">버퍼로 읽어들인 총 바이트 수가 있는 <see cref="T:System.Int32" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-166">An <see cref="T:System.Int32" /> that holds the total number of bytes that are read into the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b87f-167">반환 값은 대부분의 바이트를 현재 사용할 수 없는 경우 요청 된 바이트 수보다 작을 수 있습니다. 또는 읽기/쓰기 위치가 스트림 끝에 있으면 수 영 (0) 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-167">The return value can be less than the number of requested bytes if that many bytes are not currently available; or the number can be zero (0) if the read/write position is at the end of the stream.</span></span>  
  
 <span data-ttu-id="9b87f-168">이 메서드가 반환 될 때 `buffer` 사이의 값을 지정된 된 바이트 배열을 포함 `offset` 및 (오프셋 + 개수-1) 원본에서 읽은 바이트로 대체 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-168">When this method returns, `buffer` contains the specified byte array and the values between `offset` and (offset + count - 1) are replaced by the bytes that are read from the source.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="9b87f-169">원본 매개 변수에 상대적인 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-169">A byte offset that is relative to the origin parameter.</span></span></param>
        <param name="origin"><span data-ttu-id="9b87f-170">새 위치를 가져오는 데 사용되는 참조 위치를 나타내는 <see cref="T:System.IO.SeekOrigin" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-170">A value of type <see cref="T:System.IO.SeekOrigin" /> that indicates the reference point that is used to obtain the new position.</span></span></param>
        <summary><span data-ttu-id="9b87f-171">스트림 내에서 읽기/쓰기 위치를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-171">Sets the read/write position within the stream.</span></span></summary>
        <returns><span data-ttu-id="9b87f-172">새 읽기/쓰기 위치를 나타내는 <see cref="T:System.Int64" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-172">An <see cref="T:System.Int64" /> that represents the new read/write position.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9b87f-173">필요한 현재 스트림의 길이(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-173">The needed length, in bytes, of the current stream.</span></span></param>
        <summary><span data-ttu-id="9b87f-174">스트림의 길이를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-174">Sets the length of the stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b87f-175">스트림이 쓰기와 검색을 모두 지원 해야 <xref:System.Printing.PrintQueueStream.SetLength%2A> 에서 실행 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-175">A stream must support both writing and seeking for <xref:System.Printing.PrintQueueStream.SetLength%2A> to work.</span></span>  
  
 <span data-ttu-id="9b87f-176">사용 하 여는 <xref:System.Printing.PrintQueueStream.CanWrite%2A> 속성을 현재 인스턴스가 쓰기를 지원 하는지 확인 하 고 사용 하 여는 <xref:System.Printing.PrintQueueStream.CanSeek%2A> 검색을 지원 하는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-176">Use the <xref:System.Printing.PrintQueueStream.CanWrite%2A> property to determine whether the current instance supports writing, and use the <xref:System.Printing.PrintQueueStream.CanSeek%2A> property to determine whether seeking is supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9b87f-177">스트림에 복사할 바이트의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-177">An array of bytes from which to copy to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="9b87f-178">스트림으로 바이트 복사를 시작할 <c>buffer</c>의 바이트 오프셋(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-178">The zero-based byte offset in the <c>buffer</c> where you want to begin copying bytes to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="9b87f-179">스트림에 쓸 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-179">The number of bytes to write to the stream.</span></span></param>
        <summary><span data-ttu-id="9b87f-180">스트림에 바이트 시퀀스를 쓰고 쓴 바이트 수만큼 스트림에서 읽기/쓰기 위치를 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="9b87f-180">Writes a sequence of bytes to the stream and advances the read/write position in the stream by the number of bytes that are written.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>