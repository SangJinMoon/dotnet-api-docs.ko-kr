<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PrintQueueCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d41868ea0c51c10f784288ce1dc5981416f22315.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d41868ea0c51c10f784288ce1dc5981416f22315</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintQueueCollection">
          <source>Represents a collection of <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph> 개체의 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintQueueCollection">
          <source>Classes within the <ph id="ph1">&lt;xref:System.Printing&gt;</ph> namespace are not supported for use within a Windows service or ASP.NET application or service.</source>
          <target state="translated">내에서 클래스는 <ph id="ph1">&lt;xref:System.Printing&gt;</ph> Windows 서비스 또는 ASP.NET 응용 프로그램 또는 서비스 내에서 사용 하기 위해 네임 스페이스를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintQueueCollection">
          <source>Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</source>
          <target state="translated">이러한 응용 프로그램 종류 중 하나에서 이러한 클래스를 사용 하는 동안 예기치 않은 문제가 발생할 수 있습니다, 그리고 감소와 같은 서비스 성능 및 런타임 예외입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintQueueCollection">
          <source>If you want to print from a Windows Forms application, see the <ph id="ph1">&lt;xref:System.Drawing.Printing&gt;</ph> namespace.</source>
          <target state="translated">Windows Forms 응용 프로그램에서 인쇄 하는 경우 참조는 <ph id="ph1">&lt;xref:System.Drawing.Printing&gt;</ph> 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintQueueCollection">
          <source>The following example shows how to use this collection to test a printer's capabilities and configure a print job to take advantage of them.</source>
          <target state="translated">다음 예제에서는이 컬렉션에서 프린터의 기능을 테스트 하 고을 활용 하기 위해 인쇄 작업을 구성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintQueueCollection">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[])">
          <source>The print server that hosts the collection.</source>
          <target state="translated">컬렉션을 호스팅하는 인쇄 서버입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[])">
          <source>The properties of the collection members that are initialized.</source>
          <target state="translated">초기화되는 컬렉션 멤버의 속성입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph> class for the specified <ph id="ph2">&lt;see cref="T:System.Printing.PrintServer" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Printing.PrintServer" /&gt;</ph>에 대한 <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[])">
          <source>Only the properties that are listed in the string array are initialized.</source>
          <target state="translated">문자열 배열에 나열 된 속성에 대해서만 초기화 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[],System.Printing.EnumeratedPrintQueueTypes[])">
          <source>The print server that hosts the collection.</source>
          <target state="translated">컬렉션을 호스팅하는 인쇄 서버입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[],System.Printing.EnumeratedPrintQueueTypes[])">
          <source>The properties of the collection members that are initialized.</source>
          <target state="translated">초기화되는 컬렉션 멤버의 속성입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[],System.Printing.EnumeratedPrintQueueTypes[])">
          <source>An array that specifies the types of print queues that are included in the collection.</source>
          <target state="translated">컬렉션에 포함되는 인쇄 대기열의 형식을 지정하는 배열입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[],System.Printing.EnumeratedPrintQueueTypes[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph> class for the specified <ph id="ph2">&lt;see cref="T:System.Printing.PrintServer" /&gt;</ph>, containing only the print server's queues of the specified <ph id="ph3">&lt;see cref="T:System.Printing.EnumeratedPrintQueueTypes" /&gt;</ph>.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph>에 대해 <ph id="ph2">&lt;see cref="T:System.Printing.PrintServer" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다. 여기에는 지정된 <ph id="ph3">&lt;see cref="T:System.Printing.EnumeratedPrintQueueTypes" /&gt;</ph>의 인쇄 서버 대기열만 포함됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[],System.Printing.EnumeratedPrintQueueTypes[])">
          <source>Only the properties that are listed in the string array are initialized.</source>
          <target state="translated">문자열 배열에 나열 된 속성에 대해서만 초기화 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.Add(System.Printing.PrintQueue)">
          <source>The print queue that is added.</source>
          <target state="translated">추가되는 인쇄 대기열입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.Add(System.Printing.PrintQueue)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph> to the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph>를 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources that are being used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph>, and optionally releases the managed resources that are being used.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고 현재 사용되고 있는 관리되는 리소스를 선택적으로 해제합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the unnamed Boolean parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 로 설정 하는 명명 되지 않은 부울 매개 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with the parameter set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">`Dispose`</ph> 로 설정 하는 매개 변수와 함께 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)">
          <source>When the Boolean parameter is <ph id="ph1">`true`</ph>, this method releases all resources that are held by any managed objects that this <ph id="ph2">&lt;xref:System.Printing.PrintQueueCollection&gt;</ph> references.</source>
          <target state="translated">부울 매개 변수 인 경우 <ph id="ph1">`true`</ph>,이 메서드는 관리 개체가 보유 하 고 있는 모든 리소스를 해제 합니다.이 <ph id="ph2">&lt;xref:System.Printing.PrintQueueCollection&gt;</ph> 참조 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose()`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>를 재정의할 때 이전 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Finalize 메서드를 재정의<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.GetEnumerator">
          <source>Returns an object that implements the generic <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface that has been closed with <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>로 닫은 제네릭 <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph> 인터페이스를 구현하는 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.GetEnumerator">
          <source>An object that implements the generic <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> and that can iterate through the <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph> objects that the <ph id="ph3">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph> contains.</source>
          <target state="translated">제네릭 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>를 구현하며 <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph>에 들어 있는 <ph id="ph3">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph> 개체를 통해 반복 처리할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.GetEnumerator">
          <source>We recommend that you use the <ph id="ph1">`foreach`</ph> statement to iterate through all members of the collection.</source>
          <target state="translated">사용 하는 것이 좋습니다는 <ph id="ph1">`foreach`</ph> 컬렉션의 모든 구성원을 반복 하는 문입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.GetEnumerator">
          <source>Use <ph id="ph1">&lt;xref:System.Printing.PrintQueueCollection.GetEnumerator%2A&gt;</ph> only when you need to customize iteration, such as by skipping every other member.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Printing.PrintQueueCollection.GetEnumerator%2A&gt;</ph> 모든 다른 멤버를 건너뛰어 반복와 같은 사용자 지정 해야 할 때만 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.GetEnumerator">
          <source>The following example shows how to use this method to test a printer's capabilities and configure a print job to take advantage of them.</source>
          <target state="translated">다음 예에서는 프린터의 기능을 테스트 하 고 인쇄 작업 활용을 구성 하려면이 메서드를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.GetNonGenericEnumerator">
          <source>Gets an object that implements the non-generic <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface.</source>
          <target state="translated">제네릭이 아닌 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 인터페이스를 구현하는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueCollection.GetNonGenericEnumerator">
          <source>An object that implements the non-generic <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> and that can iterate through the <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph> objects that the <ph id="ph3">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph> contains.</source>
          <target state="translated">제네릭이 아닌 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>를 구현하며 <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph>에 들어 있는 <ph id="ph3">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph> 개체를 통해 반복 처리할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.GetNonGenericEnumerator">
          <source>We recommend that you use the <ph id="ph1">`foreach`</ph> statement to iterate through all members of the collection.</source>
          <target state="translated">사용 하는 것이 좋습니다는 <ph id="ph1">`foreach`</ph> 컬렉션의 모든 구성원을 반복 하는 문입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.GetNonGenericEnumerator">
          <source>Use your own enumerator object only when you need to customize iteration, such as by skipping every other member.</source>
          <target state="translated">모든 다른 멤버를 건너뛰어 반복을와 같은 사용자 지정 하려는 경우에 자신의 열거자 개체를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.GetNonGenericEnumerator">
          <source>If you need your own enumerator, we recommend that you use the generic, type-safe function <ph id="ph1">&lt;xref:System.Printing.PrintQueueCollection.GetEnumerator%2A&gt;</ph> instead of <ph id="ph2">&lt;xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A&gt;</ph>.</source>
          <target state="translated">사용자 고유의 열거자 해야 할 경우 일반, 형식이 안전한 함수를 사용 하는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Printing.PrintQueueCollection.GetEnumerator%2A&gt;</ph> 대신 <ph id="ph2">&lt;xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueCollection.GetNonGenericEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A&gt;</ph> is public only to fulfill the requirements of the <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface, which is implemented by this collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A&gt;</ph> 의 요구 사항을 처리 하는 데에 public이 고 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 이 컬렉션에서 구현 하는 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintQueueCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueCollection" /&gt;</ph>에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintQueueCollection.SyncRoot">
          <source>A <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that can be used to synchronize access to the collection.</source>
          <target state="translated">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>