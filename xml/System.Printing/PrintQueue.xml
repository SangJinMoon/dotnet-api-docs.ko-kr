<Type Name="PrintQueue" FullName="System.Printing.PrintQueue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb1976976260bc0eda6c5e17f79dac8241f0e28f" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52606639" /></Metadata><TypeSignature Language="C#" Value="public class PrintQueue : System.Printing.PrintSystemObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PrintQueue extends System.Printing.PrintSystemObject" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintQueue&#xA;Inherits PrintSystemObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintQueue : System::Printing::PrintSystemObject" />
  <TypeSignature Language="F#" Value="type PrintQueue = class&#xA;    inherit PrintSystemObject" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="def6e-101">프린터 및 인쇄 작업을 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-101">Manages printers and print jobs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-102">일부 속성은 <xref:System.Printing.PrintQueue> 컴퓨터에서 실행 되는 인쇄 큐 유틸리티의 특성을 개체 나타내지만 다른 기능이 나 프린터 자체의 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-102">Some properties of the <xref:System.Printing.PrintQueue> object represent characteristics of the print queue utility that runs on the computer, but others represent features or states of the printer itself.</span></span> <span data-ttu-id="def6e-103">예를 들어 <xref:System.Printing.PrintQueue.NumberOfJobs%2A> 인쇄 큐의 특징은 있지만 <xref:System.Printing.PrintQueue.Location%2A> 프린터의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-103">For example, <xref:System.Printing.PrintQueue.NumberOfJobs%2A> is a characteristic of the print queue, but <xref:System.Printing.PrintQueue.Location%2A> is a property of the printer.</span></span> <span data-ttu-id="def6e-104">방법으로 전달 해야 하는 다양 한 사용자 주의가 필요한 지 여부 등 프린터의 속성을 <xref:System.Printing.PrintQueue.Refresh%2A> 프린터 자체의 메서드를에 <xref:System.Printing.PrintQueue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-104">Many of the properties of the printer, such as whether it needs user attention, need to be passed, by means of the <xref:System.Printing.PrintQueue.Refresh%2A> method, from the printer itself to the <xref:System.Printing.PrintQueue> object.</span></span> <span data-ttu-id="def6e-105">해당 속성 하기 전에이 작업을 수행할 수 해야 (<xref:System.Printing.PrintQueue.NeedUserIntervention%2A>) 프로그램에서 읽힙니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-105">This should be done before the corresponding property (<xref:System.Printing.PrintQueue.NeedUserIntervention%2A>) is read by your program.</span></span> <span data-ttu-id="def6e-106">프로그램의 하나 이상의 속성의 값을 변경 하는 경우 마찬가지로 <xref:System.Printing.PrintQueue> 개체 변경은 컴퓨터의 실제 인쇄 큐 유틸리티를 쓸 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-106">Similarly, when your program changes the values of one or more properties of a <xref:System.Printing.PrintQueue> object, the change must be written to the actual print queue utility on the computer.</span></span> <span data-ttu-id="def6e-107">이 작업을 수행 합니다 <xref:System.Printing.PrintQueue.Commit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="def6e-107">Do this with the <xref:System.Printing.PrintQueue.Commit%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="def6e-108">내에서 클래스를 <xref:System.Printing> 네임 스페이스는 Windows 서비스 또는 ASP.NET 응용 프로그램 또는 서비스 내에서 사용 하 여 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-108">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="def6e-109">이러한 응용 프로그램 형식 중 하나에서 이러한 클래스를 사용 하는 동안 예기치 않은 문제가 발생할 수 있습니다, 그리고 감소와 같은 서비스 성능 및 런타임 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-109">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="def6e-110">Windows Forms 응용 프로그램에서 인쇄 하려는 경우 참조는 <xref:System.Drawing.Printing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-110">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Printing.PrintServer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="def6e-111"><see cref="T:System.Printing.PrintQueue" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-111">Initializes a new instance of the <see cref="T:System.Printing.PrintQueue" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="def6e-112">인쇄 큐를 호스팅하는 인쇄 서버입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-112">The print server to host the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="def6e-113">인쇄 대기열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-113">The name of the print queue.</span></span></param>
        <summary><span data-ttu-id="def6e-114">새 인스턴스를 초기화 <see cref="T:System.Printing.PrintQueue" /> 지정 된 클래스 <see cref="T:System.Printing.PrintServer" /> 및 큐 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-114">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" /> and queue name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-115"><xref:System.Printing.PrintQueue> 생성자를 포함 하지 않는 한 <xref:System.Printing.PrintSystemDesiredAccess> 매개 변수 기본값으로 <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-115"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, int32 printSchemaVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, int printSchemaVersion);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * int -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, printSchemaVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="printSchemaVersion" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="def6e-116">인쇄 큐를 호스팅하는 인쇄 서버입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-116">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="def6e-117">인쇄 대기열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-117">The name of the print queue.</span></span></param>
        <param name="printSchemaVersion"><span data-ttu-id="def6e-118">사용할 Print Schema의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-118">The version of the Print Schema to use.</span></span></param>
        <summary><span data-ttu-id="def6e-119">새 인스턴스를 초기화 <see cref="T:System.Printing.PrintQueue" /> 지정 된 클래스 <see cref="T:System.Printing.PrintServer" />, 큐 이름 및 스키마 버전을 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-119">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and print schema version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-120"><xref:System.Printing.PrintQueue> 생성자를 포함 하지 않는 한 <xref:System.Printing.PrintSystemDesiredAccess> 매개 변수 기본값으로 <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-120"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter  default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 <span data-ttu-id="def6e-121">합니다 [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) Windows Vista와 함께 릴리스된 버전은 "1".</span><span class="sxs-lookup"><span data-stu-id="def6e-121">The [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is "1".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, valuetype System.Printing.PrintQueueIndexedProperty[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::Printing::PrintQueueIndexedProperty&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * System.Printing.PrintQueueIndexedProperty[] -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.Printing.PrintQueueIndexedProperty[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="def6e-122">인쇄 큐를 호스팅하는 인쇄 서버입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-122">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="def6e-123">인쇄 대기열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-123">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="def6e-124">배열을 <see cref="T:System.Printing.PrintQueueIndexedProperty" /> 초기화 속성 값을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-124">An array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values that specifies the property values to initialize.</span></span></param>
        <summary><span data-ttu-id="def6e-125">새 인스턴스를 초기화 <see cref="T:System.Printing.PrintQueue" /> 지정 된 클래스 <see cref="T:System.Printing.PrintServer" />, 큐 이름 및 배열을 <see cref="T:System.Printing.PrintQueueIndexedProperty" /> 를 초기화할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-125">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values to initialize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-126"><xref:System.Printing.PrintQueue> 생성자를 포함 하지 않는 한 <xref:System.Printing.PrintSystemDesiredAccess> 매개 변수 기본값으로 <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-126"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 <span data-ttu-id="def6e-127">사용 하 여 생성자를 사용 하 여 `propertyFilter` 매개 변수 성능이 향상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-127">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="def6e-128">인쇄 큐를 호스팅하는 인쇄 서버입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-128">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="def6e-129">인쇄 대기열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-129">The name of the print queue.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="def6e-130">프로그램에 필요한 인쇄 큐의 액세스 형식을 지정하는 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-130">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="def6e-131">새 인스턴스를 초기화 <see cref="T:System.Printing.PrintQueue" /> 지정 된 클래스 <see cref="T:System.Printing.PrintServer" />, 큐 이름 및 원하는 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-131">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and desired access.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="def6e-132"><paramref name="desiredAccess" /> 에 적용할 수 있는 값을 <see cref="T:System.Printing.PrintServer" /> 개체가 아니라는 <see cref="T:System.Printing.PrintQueue" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-132"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="def6e-133">예를 들어, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />을 입력합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-133">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::String ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * string[] -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="def6e-134">인쇄 큐를 호스팅하는 인쇄 서버입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-134">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="def6e-135">인쇄 대기열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-135">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="def6e-136">배열 초기화 하는 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-136">An array of the names of properties to initialize.</span></span></param>
        <summary><span data-ttu-id="def6e-137">새 인스턴스를 초기화 <see cref="T:System.Printing.PrintQueue" /> 지정 된 클래스 <see cref="T:System.Printing.PrintServer" />, 큐 이름 및 초기화할 속성 이름의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-137">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and array of property names to initialize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-138"><xref:System.Printing.PrintQueue> 생성자를 포함 하지 않는 한 <xref:System.Printing.PrintSystemDesiredAccess> 매개 변수 기본값으로 <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-138"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 <span data-ttu-id="def6e-139">사용 하 여 생성자를 사용 하 여 `propertyFilter` 매개 변수 성능이 향상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-139">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, int32 printSchemaVersion, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, int printSchemaVersion, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * int * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, printSchemaVersion, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="printSchemaVersion" Type="System.Int32" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="def6e-140">인쇄 큐를 호스팅하는 인쇄 서버입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-140">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="def6e-141">인쇄 대기열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-141">The name of the print queue.</span></span></param>
        <param name="printSchemaVersion"><span data-ttu-id="def6e-142">사용할 Print Schema의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-142">The version of the Print Schema to use.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="def6e-143">프로그램에 필요한 인쇄 큐의 액세스 형식을 지정하는 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-143">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="def6e-144">새 인스턴스를 초기화 <see cref="T:System.Printing.PrintQueue" /> 지정 된 클래스 <see cref="T:System.Printing.PrintServer" />, 큐 이름, 스키마 버전 및 원하는 액세스를 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-144">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, print schema version, and desired access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-145">합니다 [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) Windows Vista와 함께 릴리스된 버전은 "1".</span><span class="sxs-lookup"><span data-stu-id="def6e-145">The [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is "1".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="def6e-146"><paramref name="desiredAccess" /> 에 적용할 수 있는 값을 <see cref="T:System.Printing.PrintServer" /> 개체가 아니라는 <see cref="T:System.Printing.PrintQueue" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-146"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="def6e-147">예를 들어, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />을 입력합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-147">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, valuetype System.Printing.PrintQueueIndexedProperty[] propertyFilter, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::Printing::PrintQueueIndexedProperty&gt; ^ propertyFilter, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * System.Printing.PrintQueueIndexedProperty[] * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.Printing.PrintQueueIndexedProperty[]" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="def6e-148">인쇄 큐를 호스팅하는 인쇄 서버입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-148">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="def6e-149">인쇄 대기열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-149">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="def6e-150">배열을 <see cref="T:System.Printing.PrintQueueIndexedProperty" /> 초기화할 속성을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-150">An array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values that specifies the properties to initialize.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="def6e-151">프로그램에 필요한 인쇄 큐의 액세스 형식을 지정하는 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-151">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="def6e-152">새 인스턴스를 초기화 <see cref="T:System.Printing.PrintQueue" /> 지정 된 클래스 <see cref="T:System.Printing.PrintServer" />, 큐 이름, 배열 <see cref="T:System.Printing.PrintQueueIndexedProperty" /> 초기화 및 원하는 액세스 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-152">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class with the specified <see cref="T:System.Printing.PrintServer" />, queue name, array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values to initialize, and desired access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-153">사용 하 여 생성자를 사용 하 여 `propertyFilter` 매개 변수 성능이 향상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-153">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="def6e-154"><paramref name="desiredAccess" /> 에 적용할 수 있는 값을 <see cref="T:System.Printing.PrintServer" /> 개체가 아니라는 <see cref="T:System.Printing.PrintQueue" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-154"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="def6e-155">예를 들어, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />을 입력합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-155">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::String ^&gt; ^ propertyFilter, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * string[] * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="def6e-156">인쇄 큐를 호스팅하는 인쇄 서버입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-156">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="def6e-157">인쇄 대기열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-157">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="def6e-158">배열 초기화 하는 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-158">An array of the names of properties to initialize.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="def6e-159">프로그램에 필요한 인쇄 큐의 액세스 형식을 지정하는 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-159">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="def6e-160">새 인스턴스를 초기화 <see cref="T:System.Printing.PrintQueue" /> 지정 된 클래스 <see cref="T:System.Printing.PrintServer" />, 큐 이름, 속성 필터 및 원하는 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-160">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, property filter, and desired access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-161">사용 하 여 생성자를 사용 하 여 `propertyFilter` 매개 변수 성능이 향상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-161">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="def6e-162"><paramref name="desiredAccess" /> 에 적용할 수 있는 값을 <see cref="T:System.Printing.PrintServer" /> 개체가 아니라는 <see cref="T:System.Printing.PrintQueue" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-162"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="def6e-163">예를 들어, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />을 입력합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-163">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddJob">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="def6e-164">새 인쇄 작업을 큐에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-164">Inserts a new print job into the queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-165">일시 중지 된 큐 또는 큐의 맨 위에 도달할 때에 오류 상태 작업을 인쇄 하지 않으면 이것이 인쇄 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-165">Unless the queue is paused or in an error state, the job prints when it reaches the top of the queue, so this is a printing function.</span></span>  
  
 <span data-ttu-id="def6e-166">인쇄 하는 다른 방법 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 포함 된 <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> 대화 상자 및 여러 열려 있지 않아도 사용할 수 있는 메서드를 <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> 및 <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> 의 메서드는 <xref:System.Windows.Xps.XpsDocumentWriter>.</span><span class="sxs-lookup"><span data-stu-id="def6e-166">Other ways to print in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob () As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob();" />
      <MemberSignature Language="F#" Value="member this.AddJob : unit -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="def6e-167">삽입 내용이 새 (일반적으로 이름이 지정된 됨) 인쇄 작업에는 <see cref="T:System.Byte" /> 큐에 배열.</span><span class="sxs-lookup"><span data-stu-id="def6e-167">Inserts a new (generically named) print job, whose content is a <see cref="T:System.Byte" /> array, into the queue.</span></span></summary>
        <returns><span data-ttu-id="def6e-168"><see cref="T:System.Printing.PrintSystemJobInfo" /> 인쇄 작업 및 해당 상태를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-168">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-169">이 메서드를 사용 하 여 스풀 파일에서 자동으로 포함 되지 않은 장치 관련 정보를 쓸는 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 스풀러 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-169">Use this method to write device specific information, to a spool file, that is not automatically included by the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] spooler.</span></span> <span data-ttu-id="def6e-170">스풀 파일 인지 알아야 할 당연히 [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] 또는 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-170">Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)].</span></span> <span data-ttu-id="def6e-171">사용 하려는 경우는 <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]를 사용할 수는 <xref:System.Printing.PrintQueueStream> 대신이 메서드는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-171">If you prefer to work with the <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], you can use the <xref:System.Printing.PrintQueueStream> class instead of this method.</span></span>  
  
 <span data-ttu-id="def6e-172">후는 <xref:System.Printing.PrintQueue.AddJob%2A> 작성 해야 메서드를 호출를 <xref:System.Byte> 배열를 <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> 의 속성을 <xref:System.Printing.PrintSystemJobInfo> 에서 반환 하는 <xref:System.Printing.PrintQueue.AddJob%2A> 없는 인쇄 작업은 생성 또는.</span><span class="sxs-lookup"><span data-stu-id="def6e-172">After the <xref:System.Printing.PrintQueue.AddJob%2A> method has been called, you must write a <xref:System.Byte> array to the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property of the <xref:System.Printing.PrintSystemJobInfo> that is returned by <xref:System.Printing.PrintQueue.AddJob%2A> or no print job is created.</span></span> <span data-ttu-id="def6e-173">이 배열은 프린터 중인 및 일시 중지 되지 경우 출력 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-173">This array is what prints if the printer is working and is not paused.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="def6e-174">경우는 <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> 사용 하 여 닫혀 있지 않습니다 <xref:System.IO.Stream.Close%2A> 는 스레드가 종료 되기 전에 <xref:System.Printing.PrintQueue.AddJob%2A> 호출 되는 <xref:System.InvalidOperationException> 스풀러 스레드를 통해 제어를 얻을 수 없기 때문에 해당 스레드가 종료 될 때 throw 되는 <xref:System.IO.Stream> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-174">If the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> is not closed with <xref:System.IO.Stream.Close%2A> before the end of the thread in which <xref:System.Printing.PrintQueue.AddJob%2A> is called, then an <xref:System.InvalidOperationException> is thrown when that thread ends because the spooler thread cannot gain control over the <xref:System.IO.Stream> object.</span></span>  
  
 <span data-ttu-id="def6e-175">인쇄 대기열에 있는 [!INCLUDE[TLA#tla_gui](~/includes/tlasharptla-gui-md.md)], 작업 이름이 "System 문서 인쇄"입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-175">In the print queue's [!INCLUDE[TLA#tla_gui](~/includes/tlasharptla-gui-md.md)], the job has the name "Print System Document".</span></span> <span data-ttu-id="def6e-176">작업에 다른 이름을 지정 하려면 사용 된 <xref:System.Printing.PrintQueue.AddJob%28System.String%29> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-176">To give the job a different name, use the <xref:System.Printing.PrintQueue.AddJob%28System.String%29> overload.</span></span>  
  
 <span data-ttu-id="def6e-177">인쇄 하는 다른 방법 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 포함 된 <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> 대화 상자 및 여러 열려 있지 않아도 사용할 수 있는 메서드를 <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> 및 <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> 의 메서드는 <xref:System.Windows.Xps.XpsDocumentWriter>.</span><span class="sxs-lookup"><span data-stu-id="def6e-177">Other ways to print in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-178">다음 예제에서는 사용 하는 방법을 보여 줍니다 <xref:System.Printing.PrintQueue.AddJob> 보낼는 <xref:System.Byte> 배열 인쇄 대기열입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-178">The following example shows how to use <xref:System.Printing.PrintQueue.AddJob> to send a <xref:System.Byte> array to a print queue.</span></span> <span data-ttu-id="def6e-179">이 코드를 검색 하 고 일반 텍스트를 인쇄할 수 있는 프린터 에서만 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-179">This code only works with printers that can detect and print plain text.</span></span> <span data-ttu-id="def6e-180">그 중 일부에 다음이 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-180">Some of them cannot.</span></span>  
  
 [!code-csharp[WriteToSpoolFile#AddUnnamedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/WriteToSpoolFile/CSharp/Program.cs#addunnamedjob)]
 [!code-vb[WriteToSpoolFile#AddUnnamedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WriteToSpoolFile/visualbasic/program.vb#addunnamedjob)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob (jobName As String) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob jobName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="def6e-181">인쇄 작업의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-181">The name of the print job.</span></span></param>
        <summary><span data-ttu-id="def6e-182">내용이 하는 새 인쇄 작업을 삽입 한 <see cref="T:System.Byte" /> 큐에 배열.</span><span class="sxs-lookup"><span data-stu-id="def6e-182">Inserts a new print job, whose content is a <see cref="T:System.Byte" /> array, into the queue.</span></span></summary>
        <returns><span data-ttu-id="def6e-183"><see cref="T:System.Printing.PrintSystemJobInfo" /> 인쇄 작업 및 해당 상태를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-183">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-184">이 메서드를 사용 하 여 스풀 파일에서 자동으로 포함 되지 않은 장치 관련 정보를 쓸는 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 스풀러 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-184">Use this method to write device specific information, to a spool file, that is not automatically included by the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] spooler.</span></span> <span data-ttu-id="def6e-185">스풀 파일 인지 알아야 할 당연히 [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] 또는 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-185">Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)].</span></span> <span data-ttu-id="def6e-186">사용 하려는 경우는 <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]를 사용할 수는 <xref:System.Printing.PrintQueueStream> 대신이 메서드는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-186">If you prefer to work with the <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], you can use the <xref:System.Printing.PrintQueueStream> class instead of this method.</span></span>  
  
 <span data-ttu-id="def6e-187">후는 <xref:System.Printing.PrintQueue.AddJob%2A> 작성 해야 메서드를 호출를 <xref:System.Byte> 배열를 <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> 의 속성을 <xref:System.Printing.PrintSystemJobInfo> 에서 반환 하는 <xref:System.Printing.PrintQueue.AddJob%2A> 없는 인쇄 작업은 생성 또는.</span><span class="sxs-lookup"><span data-stu-id="def6e-187">After the <xref:System.Printing.PrintQueue.AddJob%2A> method has been called, you must write a <xref:System.Byte> array to the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property of the <xref:System.Printing.PrintSystemJobInfo> that is returned by <xref:System.Printing.PrintQueue.AddJob%2A> or no print job is created.</span></span> <span data-ttu-id="def6e-188">이 배열은 프린터 중인 및 일시 중지 되지 경우 출력 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-188">This array is what prints if the printer is working and is not paused.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="def6e-189">경우는 <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> 사용 하 여 닫혀 있지 않습니다 <xref:System.IO.Stream.Close%2A> 는 스레드가 종료 되기 전에 <xref:System.Printing.PrintQueue.AddJob%2A> 호출 되는 <xref:System.InvalidOperationException> 스풀러 스레드를 통해 제어를 얻을 수 없기 때문에 해당 스레드가 종료 될 때 throw 되는 <xref:System.IO.Stream> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-189">If the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> is not closed with <xref:System.IO.Stream.Close%2A> before the end of the thread in which <xref:System.Printing.PrintQueue.AddJob%2A> is called, then an <xref:System.InvalidOperationException> is thrown when that thread ends because the spooler thread cannot gain control over the <xref:System.IO.Stream> object.</span></span>  
  
 <span data-ttu-id="def6e-190">인쇄 하는 다른 방법 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 포함 된 <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> 대화 상자 및 여러 열려 있지 않아도 사용할 수 있는 메서드를 <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> 및 <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> 의 메서드는 <xref:System.Windows.Xps.XpsDocumentWriter>.</span><span class="sxs-lookup"><span data-stu-id="def6e-190">Other ways to print in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-191">다음 예제에서는 사용 하는 방법을 보여 줍니다 <xref:System.Printing.PrintQueue.AddJob%28System.String%29> 에 파일을 읽을 수는 <xref:System.Byte> 배열 및 배열 인쇄 큐에 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-191">The following example shows how to use <xref:System.Printing.PrintQueue.AddJob%28System.String%29> to read a file into a <xref:System.Byte> array and send the array to a print queue.</span></span> <span data-ttu-id="def6e-192">이 코드는 c: 드라이브의 루트에서 test.txt 라는 파일 있다고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-192">This code assumes that there is a file called test.txt in the root of the C: drive.</span></span> <span data-ttu-id="def6e-193">이 코드를 검색 하 고 일반 텍스트를 인쇄할 수 있는 프린터 에서만 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-193">This code only works with printers that can detect and print plain text.</span></span> <span data-ttu-id="def6e-194">그 중 일부에 다음이 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-194">Some of them cannot.</span></span>  
  
 [!code-csharp[WriteToSpoolFile#AddNamedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/WriteToSpoolFile/CSharp/Program.cs#addnamedjob)]
 [!code-vb[WriteToSpoolFile#AddNamedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WriteToSpoolFile/visualbasic/program.vb#addnamedjob)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string * System.Printing.PrintTicket -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob (jobName, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="def6e-195">경로 이름을 인쇄 중인 문서.</span><span class="sxs-lookup"><span data-stu-id="def6e-195">The path and name of the document that is being printed.</span></span></param>
        <param name="printTicket"><span data-ttu-id="def6e-196">인쇄 작업의 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-196">The settings of the print job.</span></span></param>
        <summary><span data-ttu-id="def6e-197">에 대 한 새 인쇄 작업을 삽입는 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 큐로 문서를 지정 된 이름과 설정을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-197">Inserts a new print job for an [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Document into the queue, and gives it the specified name and settings.</span></span></summary>
        <returns><span data-ttu-id="def6e-198"><see cref="T:System.Printing.PrintSystemJobInfo" /> 인쇄 작업 및 해당 상태를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-198">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-199">자세한 내용은 <xref:System.Printing.PrintQueue.AddJob%28System.String%29>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="def6e-199">For more information, see <xref:System.Printing.PrintQueue.AddJob%28System.String%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName, string documentPath, bool fastCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob (jobName As String, documentPath As String, fastCopy As Boolean) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName, System::String ^ documentPath, bool fastCopy);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string * string * bool -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob (jobName, documentPath, fastCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="documentPath" Type="System.String" />
        <Parameter Name="fastCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="def6e-200">인쇄 작업의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-200">The name of the print job.</span></span></param>
        <param name="documentPath"><span data-ttu-id="def6e-201">경로 이름을 인쇄 중인 문서.</span><span class="sxs-lookup"><span data-stu-id="def6e-201">The path and name of the document that is being printed.</span></span></param>
        <param name="fastCopy"><span data-ttu-id="def6e-202"><see langword="true" /> 페이지 별로 진행 상태 피드백이 하지 않고 파일 올바른지 유효성을 검사 하지 않고 빠르게 스풀링하 [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]이 고, 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-202"><see langword="true" /> to spool quickly without page-by-page progress feedback and without validating that the file is valid [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="def6e-203">에 대 한 새 인쇄 작업을 삽입 한 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 문서 큐에는 지정 된 이름을 할당 하 고 있는지 여부를 확인 해야 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-203">Inserts a new print job for an [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Document into the queue, gives it the specified name, and specifies whether or not it should be validated.</span></span></summary>
        <returns><span data-ttu-id="def6e-204"><see cref="T:System.Printing.PrintSystemJobInfo" /> 인쇄 작업 및 해당 상태를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-204">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-205">하는 경우 `fastCopy` 됩니다 `true`, 프린터 이어야 합니다는 [인쇄 개요](~/docs/framework/wpf/advanced/printing-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-205">If `fastCopy` is `true`, then the printer must be an [Printing Overview](~/docs/framework/wpf/advanced/printing-overview.md).</span></span> <span data-ttu-id="def6e-206">그렇지 않을 경우는 <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> 메서드에서 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-206">If it is not, the <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> method throws an exception.</span></span>  
  
 <span data-ttu-id="def6e-207">하는 경우 `fastCopy` 는 `false`, XPSDrv 프린터를 사용 하는 데 필요한 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-207">If `fastCopy` is `false`, then it is not necessary to use an XPSDrv printer.</span></span> <span data-ttu-id="def6e-208">[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] 큐에 추가 되는 파일 예: PCL 또는 포스트 스크립트 프린터의 페이지 설명 언어로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-208">The [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] file being added to the queue is converted to the printer's page description language, such as PCL or Postscript.</span></span> <span data-ttu-id="def6e-209">그러나 이런이 종류의 인쇄에 대 한 호출을 사용 하면 [!INCLUDE[TLA#tla_com](~/includes/tlasharptla-com-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-209">However, this kind of printing makes a call to [!INCLUDE[TLA#tla_com](~/includes/tlasharptla-com-md.md)].</span></span> <span data-ttu-id="def6e-210">에 대 한 호출 [!INCLUDE[TLA2#tla_com](~/includes/tla2sharptla-com-md.md)] 호출 스레드는 단일 스레드 아파트 있어야 (<xref:System.Threading.ApartmentState.STA>) 대신 다중 스레드 아파트 (<xref:System.Threading.ApartmentState.MTA>)에서 기본값인 [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] 2.0 이상.</span><span class="sxs-lookup"><span data-stu-id="def6e-210">The call to [!INCLUDE[TLA2#tla_com](~/includes/tla2sharptla-com-md.md)] requires that the calling thread have a single-threaded apartment (<xref:System.Threading.ApartmentState.STA>) instead of multiple-threaded apartment (<xref:System.Threading.ApartmentState.MTA>) which is the default in [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] 2.0 and later.</span></span> <span data-ttu-id="def6e-211">(한 스레드 및 아파트 상태에 자세한 내용은 [관리 되는 스레딩과 관리 되지 않는 스레딩](https://msdn.microsoft.com/library/db425c20-4b2f-4433-bf96-76071c7881e5), 및 <xref:System.Threading.ApartmentState>.) 이 작업을 수행 하는 방법은 두 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-211">(For more on threading and apartment states, see [Managed and Unmanaged Threading](https://msdn.microsoft.com/library/db425c20-4b2f-4433-bf96-76071c7881e5), and <xref:System.Threading.ApartmentState>.) There are two ways of doing this:</span></span>  
  
-   <span data-ttu-id="def6e-212">가장 간단한 방법은 추가 하는 것은 <xref:System.STAThreadAttribute> (즉, "`[System.STAThreadAttribute()]`") 응용 프로그램의 첫 번째 줄 바로 위에 `Main` 메서드 (일반적으로 "`static void Main(string[] args)`").</span><span class="sxs-lookup"><span data-stu-id="def6e-212">The simplest way is to add the <xref:System.STAThreadAttribute> (that is, "`[System.STAThreadAttribute()]`") just above the first line of the application's `Main` method (usually "`static void Main(string[] args)`").</span></span>  
  
-   <span data-ttu-id="def6e-213">필요한 경우에 `Main` 스레드의 아파트 상태를 <xref:System.Threading.ApartmentState.MTA>에 대 한 호출을 포함할 수 있습니다 <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> 아파트 상태가 되어 별도 스레드에서 <xref:System.Threading.ApartmentState.STA> 사용 하 여 <xref:System.Threading.Thread.SetApartmentState%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-213">If you need your `Main` thread's apartment state to be <xref:System.Threading.ApartmentState.MTA>, you can house the call to <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> in a separate thread whose apartment state is set to <xref:System.Threading.ApartmentState.STA> with <xref:System.Threading.Thread.SetApartmentState%2A>.</span></span> <span data-ttu-id="def6e-214">아래 예제에서는 두 번째 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-214">The example below illustrates this second technique.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="def6e-215">적용할 수 없습니다는 <xref:System.STAThreadAttribute> 를 제외한 모든 메서드에 `Main` 사용할 수 없습니다 <xref:System.Threading.Thread.SetApartmentState%2A> 에 대 한는 `Main` 스레드입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-215">You cannot apply the <xref:System.STAThreadAttribute> to any method except `Main` and you cannot use <xref:System.Threading.Thread.SetApartmentState%2A> for the `Main` thread.</span></span>  
  
 <span data-ttu-id="def6e-216">인쇄 하는 다른 방법 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 포함 된 <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> 대화 상자 및 여러 열려 있지 않아도 사용할 수 있는 메서드를 <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> 및 <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> 의 메서드는 <xref:System.Windows.Xps.XpsDocumentWriter>.</span><span class="sxs-lookup"><span data-stu-id="def6e-216">Other ways to print in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-217">다음 예제에서는 사용 하는 방법을 보여 줍니다 <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> 인쇄 모든 일괄 처리는 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 디렉터리의 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-217">The following example shows how to use <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> to batch print all the [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] files in a directory.</span></span>  
  
 [!code-csharp[BatchPrintXPSFiles#BatchPrintXPSFiles](~/samples/snippets/csharp/VS_Snippets_Wpf/BatchPrintXPSFiles/CSharp/Program.cs#batchprintxpsfiles)]
 [!code-vb[BatchPrintXPSFiles#BatchPrintXPSFiles](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BatchPrintXPSFiles/visualbasic/program.vb#batchprintxpsfiles)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.ApartmentState" />
        <altmember cref="T:System.STAThreadAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/e78b14f1-e487-43cd-9c6d-1a07483f1730"><span data-ttu-id="def6e-218">.NET Framework에 COM 구성 요소 노출</span><span class="sxs-lookup"><span data-stu-id="def6e-218">Exposing COM Components to the .NET Framework</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="def6e-219">isXPS 규칙 도구</span><span class="sxs-lookup"><span data-stu-id="def6e-219">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName, string documentPath, bool fastCopy, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName, System::String ^ documentPath, bool fastCopy, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string * string * bool * System.Printing.PrintTicket -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob (jobName, documentPath, fastCopy, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="documentPath" Type="System.String" />
        <Parameter Name="fastCopy" Type="System.Boolean" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="def6e-220">경로 이름을 인쇄 중인 문서.</span><span class="sxs-lookup"><span data-stu-id="def6e-220">The path and name of the document that is being printed.</span></span></param>
        <param name="documentPath"><span data-ttu-id="def6e-221">경로 이름을 인쇄 중인 문서.</span><span class="sxs-lookup"><span data-stu-id="def6e-221">The path and name of the document that is being printed.</span></span></param>
        <param name="fastCopy"><span data-ttu-id="def6e-222"><see langword="true" /> 페이지 별로 진행 상태 피드백이 하지 않고 파일 올바른지 유효성을 검사 하지 않고 빠르게 스풀링하 [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]이 고, 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-222"><see langword="true" /> to spool quickly without page-by-page progress feedback and without validating that the file is valid [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]; otherwise, <see langword="false" />.</span></span></param>
        <param name="printTicket"><span data-ttu-id="def6e-223">인쇄 작업의 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-223">The settings of the print job.</span></span></param>
        <summary><span data-ttu-id="def6e-224">에 대 한 새 인쇄 작업을 삽입 한 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 문서 큐로 제공 지정한 이름 및 설정 하 고 있는지 여부를 확인 해야 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-224">Inserts a new print job for an [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Document into the queue, gives it the specified name and settings, and specifies whether or not it should be validated.</span></span></summary>
        <returns><span data-ttu-id="def6e-225"><see cref="T:System.Printing.PrintSystemJobInfo" /> 인쇄 작업 및 해당 상태를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-225">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-226">자세한 내용은 <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="def6e-226">For more information, see <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AveragePagesPerMinute">
      <MemberSignature Language="C#" Value="public virtual int AveragePagesPerMinute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AveragePagesPerMinute" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.AveragePagesPerMinute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AveragePagesPerMinute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AveragePagesPerMinute { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AveragePagesPerMinute : int" Usage="System.Printing.PrintQueue.AveragePagesPerMinute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-227">분당 페이지에서 측정 되는 프린터의 속도를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-227">Gets the speed of the printer measured in pages per minute.</span></span></summary>
        <value><span data-ttu-id="def6e-228">프린터의 분당 평균 페이지를 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-228">The average pages printed per minute of the printer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientPrintSchemaVersion">
      <MemberSignature Language="C#" Value="public int ClientPrintSchemaVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientPrintSchemaVersion" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.ClientPrintSchemaVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientPrintSchemaVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientPrintSchemaVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientPrintSchemaVersion : int" Usage="System.Printing.PrintQueue.ClientPrintSchemaVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-229"><see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">인쇄 스키마</see>의 버전을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-229">Gets the version of the <see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">Print Schema</see>.</span></span></summary>
        <value><span data-ttu-id="def6e-230">버전을 [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) 사용에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-230">The version of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) in use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-231">합니다 [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) Windows Vista와 함께 릴리스된 버전은 1입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-231">The [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is 1.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=186397"><span data-ttu-id="def6e-232">인쇄 스키마</span><span class="sxs-lookup"><span data-stu-id="def6e-232">Print Schema</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public virtual string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Printing.PrintQueue.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-233">프린터에 대 한 설명을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-233">Gets or sets a comment about the printer.</span></span></summary>
        <value><span data-ttu-id="def6e-234">프린터에 대 한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-234">A comment about the printer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-235">주석은 Windows 프린터 목록에는 Windows 공용 인쇄 대화 상자에서 사용자에 게 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-235">The comment is visible to users in the Windows printer list and on the Windows common print dialog.</span></span> <span data-ttu-id="def6e-236">프린터의 이름, 모델 또는; 동일한 장소에서 볼 수 있는 위치 속성에 포함 되지 않은 정보를 제공할 수 있습니다. 예를 들어, "예약 급여 부서 오후 3 시에서 오후 4 시 사이 대 한 합니다."</span><span class="sxs-lookup"><span data-stu-id="def6e-236">It can provide information not contained in the printer's name, model, or location properties, which are also visible in the same places; for example, "Reserved for Payroll Dept. between 3 pm and 4 pm."</span></span> <span data-ttu-id="def6e-237">(의 <xref:System.Printing.PrintQueue.Description%2A> 속성을 사용 하면 응용 프로그램에서 표시 하지 않는 한 사용자가 볼 수 있는 정보를 저장할 수 있습니다.)</span><span class="sxs-lookup"><span data-stu-id="def6e-237">(The <xref:System.Printing.PrintQueue.Description%2A> property enables you to store information that users cannot view unless your application makes it visible.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberSignature Language="F#" Value="override this.Commit : unit -&gt; unit" Usage="printQueue.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="def6e-238">현재 속성을 작성 합니다 <see cref="T:System.Printing.PrintQueue" /> 인쇄 서버의 실제 인쇄 큐 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-238">Writes the current properties of the <see cref="T:System.Printing.PrintQueue" /> object to the actual print queue on the print server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-239">프로그램의 속성에는 변경 내용을 <xref:System.Printing.PrintQueue> 개체가 실제로 적용 하려면 프로그램이 실행 될 때까지 <xref:System.Printing.PrintQueue.Commit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="def6e-239">Changes that your program makes to the properties of a <xref:System.Printing.PrintQueue> object do not actually take effect until the program executes the <xref:System.Printing.PrintQueue.Commit%2A> method.</span></span>  
  
 <span data-ttu-id="def6e-240">메서드는 필요 합니다 <xref:System.Printing.PrintQueue> 개체를 사용 하 여 만들 수 <xref:System.Printing.PrintSystemDesiredAccess.AdministratePrinter> 권한.</span><span class="sxs-lookup"><span data-stu-id="def6e-240">The method requires that the <xref:System.Printing.PrintQueue> object be created with <xref:System.Printing.PrintSystemDesiredAccess.AdministratePrinter> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-241">다음 예제에서는 두 인쇄 티켓을 병합 하는 동안이 메서드를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-241">The following example shows how to use this method while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="def6e-242">커밋할 수 없습니다 속성 중 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-242">Some of the properties could not be committed.</span></span></exception>
        <exception cref="T:System.Printing.PrintCommitAttributesException"><span data-ttu-id="def6e-243">커밋할 수 없습니다 속성 중 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-243">Some of the properties could not be committed.</span></span>  
  
<span data-ttu-id="def6e-244">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="def6e-244">\- or -</span></span> 
<span data-ttu-id="def6e-245"><see cref="T:System.Printing.PrintQueue" /> 충분 한 권한이 있는 개체가 생성 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-245">The <see cref="T:System.Printing.PrintQueue" /> object was not created with sufficient rights.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Refresh" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateXpsDocumentWriter">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="def6e-246"><see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-246">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="def6e-247">isXPS 규칙 도구</span><span class="sxs-lookup"><span data-stu-id="def6e-247">isXPS Conformance Tool</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (ByRef documentImageableArea As PrintDocumentImageableArea) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::Printing::PrintDocumentImageableArea ^ % documentImageableArea);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter :  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter documentImageableArea" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="documentImageableArea"><span data-ttu-id="def6e-248">장치가 인쇄할 수 있는 페이지 영역의 크기를 포함 하는 개체에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-248">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="def6e-249">데이터 형식에 없는 public 생성자가 있으므로이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-249">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="def6e-250">만듭니다는 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 개체 Windows 공용 인쇄 대화 상자를 열고 반환을 <see langword="ref" /> (<see langword="ByRef" /> Visual basic에서) 인쇄 허용 영역 및 미디어의 크기에 대 한 정보를 나타내는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-250">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="def6e-251"><see cref="T:System.Windows.Xps.XpsDocumentWriter" /> XPS 데이터를 스트림에 쓰는 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-251">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="def6e-252">이 매개 변수는 <see langword="null" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-252">This can be <see langword="null" />.</span></span> <span data-ttu-id="def6e-253">(매개 변수 <paramref name="documentImageableArea" /> 되는 <see langword="ref" /> [<see langword="ByRef" /> Visual Basic의] 초를 나타내는 하므로 메서드에 의해 초기화 되는 매개 변수 반환 된 항목입니다.)</span><span class="sxs-lookup"><span data-stu-id="def6e-253">(The parameter <paramref name="documentImageableArea" /> is a <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameter that is initialized by the method, so it represents a second returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-254">대부분의 프린터 용지 그립을 각 페이지 가장자리 주위에 남겨 두 공간이 인치 분기 및 프린터를 통해 이동 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-254">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="def6e-255">그렇지 않으면 토너 문서 흐름 메커니즘을 생일 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-255">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="def6e-256">인쇄할 수 있는 영역 "인쇄 허용 영역이입니다."</span><span class="sxs-lookup"><span data-stu-id="def6e-256">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="def6e-257">형식 <xref:System.Printing.PrintDocumentImageableArea> 공용 생성자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-257">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="def6e-258">따라서 변수의 `documentImageableArea` 선언 하 고 할당 해야 `null` 만 메서드에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-258">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="def6e-259">이 메서드를 표시 한 <xref:System.Windows.Controls.PrintDialog> 사용자의 입력을 요구 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-259">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="def6e-260">사용자가 프린터, 용지 크기 및 방향을 선택 하 고 대화 상자를 닫은 후 `documentImageableArea` 실제 개체가 발생 지점과 해당 속성 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-260">After the user has selected a printer, paper size, and orientation and closed the dialog, `documentImageableArea` points to an actual object and its properties are initialized.</span></span>  
  
 <span data-ttu-id="def6e-261">반환 값은 사용자를 취소 하거나 대화 상자를 닫습니다, `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-261">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="def6e-262">결과적으로, 반환 값 검사 `null` 응용 프로그램에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-262">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="def6e-263">isXPS 규칙 도구</span><span class="sxs-lookup"><span data-stu-id="def6e-263">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (System.Printing.PrintQueue printQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(class System.Printing.PrintQueue printQueue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::Printing::PrintQueue ^ printQueue);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : System.Printing.PrintQueue -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter printQueue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
      </Parameters>
      <Docs>
        <param name="printQueue"><span data-ttu-id="def6e-264">XPS 문서를 인쇄 하려면 인쇄 대기열입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-264">A print queue to print the XPS document.</span></span></param>
        <summary><span data-ttu-id="def6e-265">만듭니다는 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 개체 및 지정된 된 인쇄 큐를 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-265">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object and associates it with the specified print queue.</span></span></summary>
        <returns><span data-ttu-id="def6e-266"><see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 는 XPS 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-266">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes to an XPS stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="def6e-267">다음 예제에서는 만들려면이 메서드를 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Xps.XpsDocumentWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-267">The following example shows how to use this method to create an <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
 [!code-csharp[XpsPrint#PrintQueueSnip](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsPrint/CSharp/XpsPrintHelper.cs#printqueuesnip)]
 [!code-vb[XpsPrint#PrintQueueSnip](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsPrint/visualbasic/xpsprinthelper.vb#printqueuesnip)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="def6e-268">isXPS 규칙 도구</span><span class="sxs-lookup"><span data-stu-id="def6e-268">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref double width, ref double height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(float64&amp; width, float64&amp; height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (ByRef width As Double, ByRef height As Double) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(double % width, double % height);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter :  *  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" RefType="ref" />
        <Parameter Name="height" Type="System.Double" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="def6e-269">XPS 문서의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-269">The width of the XPS document.</span></span></param>
        <param name="height"><span data-ttu-id="def6e-270">XPS 문서의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-270">The height of the XPS document.</span></span></param>
        <summary><span data-ttu-id="def6e-271">만듭니다는 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 지정된 된 크기를 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-271">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object with the specified dimensions.</span></span></summary>
        <returns><span data-ttu-id="def6e-272"><see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 는 XPS 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-272">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes to an XPS stream.</span></span> <span data-ttu-id="def6e-273">이 매개 변수는 <see langword="null" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-273">This can be <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-274">이 메서드를 표시 한 <xref:System.Windows.Controls.PrintDialog> 사용자의 입력을 요구 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-274">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="def6e-275">반환 값은 사용자를 취소 하거나 대화 상자를 닫습니다, `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-275">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="def6e-276">결과적으로, 반환 값 검사 `null` 응용 프로그램에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-276">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="def6e-277">isXPS 규칙 도구</span><span class="sxs-lookup"><span data-stu-id="def6e-277">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(string jobDescription, class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (jobDescription As String, ByRef documentImageableArea As PrintDocumentImageableArea) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::String ^ jobDescription, System::Printing::PrintDocumentImageableArea ^ % documentImageableArea);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : string *  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (jobDescription, documentImageableArea)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobDescription" Type="System.String" />
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="jobDescription"><span data-ttu-id="def6e-278">인쇄 작업의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-278">A name for the print job.</span></span> <span data-ttu-id="def6e-279">Windows 인쇄 사용자 인터페이스에 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-279">It appears in the Windows printing user interface.</span></span></param>
        <param name="documentImageableArea"><span data-ttu-id="def6e-280">장치가 인쇄할 수 있는 페이지 영역의 크기를 포함 하는 개체에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-280">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="def6e-281">데이터 형식에 없는 public 생성자가 있으므로이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-281">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="def6e-282">만듭니다는 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 개체, Windows 공용 인쇄 대화 상자를 엽니다 (및 해당 작업 설명이)를 반환 하 고는 <see langword="ref" /> (<see langword="ByRef" /> Visual Basic에서) 인쇄 허용 영역 및 미디어의 크기에 대 한 정보를 나타내는 매개 변수 .</span><span class="sxs-lookup"><span data-stu-id="def6e-282">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog (and provides it a job description) and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="def6e-283"><see cref="T:System.Windows.Xps.XpsDocumentWriter" /> XPS 데이터를 스트림에 쓰는 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-283">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="def6e-284">이 매개 변수는 <see langword="null" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-284">This can be <see langword="null" />.</span></span> <span data-ttu-id="def6e-285">(매개 변수 <paramref name="documentImageableArea" /> 되는 <see langword="ref" /> [<see langword="ByRef" /> Visual Basic의] 초를 나타내는 하므로 메서드에 의해 초기화 되는 매개 변수 반환 된 항목입니다.)</span><span class="sxs-lookup"><span data-stu-id="def6e-285">(The parameter <paramref name="documentImageableArea" /> is a <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameter that is initialized by the method, so it represents a second returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-286">대부분의 프린터 용지 그립을 각 페이지 가장자리 주위에 남겨 두 공간이 인치 분기 및 프린터를 통해 이동 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-286">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="def6e-287">그렇지 않으면 토너 문서 흐름 메커니즘을 생일 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-287">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="def6e-288">인쇄할 수 있는 영역 "인쇄 허용 영역이입니다."</span><span class="sxs-lookup"><span data-stu-id="def6e-288">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="def6e-289">형식 <xref:System.Printing.PrintDocumentImageableArea> 공용 생성자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-289">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="def6e-290">따라서 변수의 `documentImageableArea` 선언 하 고 할당 해야 `null` 만 메서드에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-290">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="def6e-291">이 메서드를 표시 한 <xref:System.Windows.Controls.PrintDialog> 사용자의 입력을 요구 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-291">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="def6e-292">사용자가 프린터, 용지 크기 및 방향을 선택 하 고 대화 상자를 닫은 후 `documentImageableArea` 실제 개체가 발생 지점과 해당 속성 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-292">After the user has selected a printer, paper size, and orientation and closed the dialog, `documentImageableArea` points to an actual object, and its properties are initialized.</span></span>  
  
 <span data-ttu-id="def6e-293">반환 값은 사용자를 취소 하거나 대화 상자를 닫습니다, `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-293">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="def6e-294">결과적으로, 반환 값 검사 `null` 응용 프로그램에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-294">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="def6e-295">isXPS 규칙 도구</span><span class="sxs-lookup"><span data-stu-id="def6e-295">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea, valuetype System.Windows.Controls.PageRangeSelection&amp; pageRangeSelection, valuetype System.Windows.Controls.PageRange&amp; pageRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (ByRef documentImageableArea As PrintDocumentImageableArea, ByRef pageRangeSelection As PageRangeSelection, ByRef pageRange As PageRange) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::Printing::PrintDocumentImageableArea ^ % documentImageableArea, System::Windows::Controls::PageRangeSelection % pageRangeSelection, System::Windows::Controls::PageRange % pageRange);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter :  *  *  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (documentImageableArea, pageRangeSelection, pageRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
        <Parameter Name="pageRangeSelection" Type="System.Windows.Controls.PageRangeSelection" RefType="ref" />
        <Parameter Name="pageRange" Type="System.Windows.Controls.PageRange" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="documentImageableArea"><span data-ttu-id="def6e-296">장치가 인쇄할 수 있는 페이지 영역의 크기를 포함 하는 개체에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-296">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="def6e-297">데이터 형식에 없는 public 생성자가 있으므로이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-297">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <param name="pageRangeSelection"><span data-ttu-id="def6e-298">모든 페이지 또는 사용자가 지정한 범위만 인쇄할지 여부를 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-298">A value that specifies whether to print all pages or only a range that is specified by the user.</span></span></param>
        <param name="pageRange"><span data-ttu-id="def6e-299">인쇄 되는 페이지의 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-299">The range of pages that is printed.</span></span></param>
        <summary><span data-ttu-id="def6e-300">만듭니다는 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 개체는 Windows 공용 인쇄 대화 상자를 엽니다, 대화 상자 페이지 범위와 인쇄 작업에 대 한 설명을 제공 및 반환을 <see langword="ref" /> (<see langword="ByRef" /> Visual basic에서)에 대 한 정보를 나타내는 매개 변수는 인쇄 허용 영역 및 미디어의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-300">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog, provides the dialog with a page range and a description of the print job, and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="def6e-301"><see cref="T:System.Windows.Xps.XpsDocumentWriter" /> XPS 데이터를 스트림에 쓰는 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-301">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="def6e-302">이 매개 변수는 <see langword="null" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-302">This can be <see langword="null" />.</span></span> <span data-ttu-id="def6e-303">(매개 변수 <paramref name="documentImageableArea" />, <paramref name="pageRangeSelection" />, 및 <paramref name="pageRange" /> 는 모두 <see langword="ref" /> [<see langword="ByRef" /> Visual basic에서] 사용자가 초기화 되 고 각각 나타내는 추가 항목에 반환 된 대화 상자를 닫을 때 반환 되는 매개 변수.)</span><span class="sxs-lookup"><span data-stu-id="def6e-303">(The parameters <paramref name="documentImageableArea" />, <paramref name="pageRangeSelection" />, and <paramref name="pageRange" /> are all <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameters that are initialized by the user and returned when the dialog is closed, so each represents an additional returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-304">대부분의 프린터 용지 그립을 각 페이지 가장자리 주위에 남겨 두 공간이 인치 분기 및 프린터를 통해 이동 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-304">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="def6e-305">그렇지 않으면 토너 문서 흐름 메커니즘을 생일 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-305">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="def6e-306">인쇄할 수 있는 영역 "인쇄 허용 영역이입니다."</span><span class="sxs-lookup"><span data-stu-id="def6e-306">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="def6e-307">형식 <xref:System.Printing.PrintDocumentImageableArea> 공용 생성자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-307">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="def6e-308">따라서 변수의 `documentImageableArea` 선언 하 고 할당 해야 `null` 만 메서드에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-308">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="def6e-309">이 메서드를 표시 한 <xref:System.Windows.Controls.PrintDialog> 사용자의 입력을 요구 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-309">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="def6e-310">사용자 (프린터, 용지, 방향 및 페이지 범위를 선택) 대화 상자에서 인쇄 작업을 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-310">The user configures his print job on the dialog (including selecting a printer, paper size, orientation, and page range).</span></span> <span data-ttu-id="def6e-311">대화 상자를 닫으면 `pageRangeSelection` 하 고 `pageRange` 값이 있는 및 `documentImageableArea` 속성이 초기화 되는 실제 개체를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-311">When the dialog is closed, `pageRangeSelection` and `pageRange` have values, and `documentImageableArea` points to an actual object whose properties are initialized.</span></span>  
  
 <span data-ttu-id="def6e-312">반환 값은 사용자를 취소 하거나 대화 상자를 닫습니다, `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-312">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="def6e-313">결과적으로, 반환 값 검사 `null` 응용 프로그램에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-313">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="def6e-314">isXPS 규칙 도구</span><span class="sxs-lookup"><span data-stu-id="def6e-314">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(string jobDescription, class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea, valuetype System.Windows.Controls.PageRangeSelection&amp; pageRangeSelection, valuetype System.Windows.Controls.PageRange&amp; pageRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (jobDescription As String, ByRef documentImageableArea As PrintDocumentImageableArea, ByRef pageRangeSelection As PageRangeSelection, ByRef pageRange As PageRange) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::String ^ jobDescription, System::Printing::PrintDocumentImageableArea ^ % documentImageableArea, System::Windows::Controls::PageRangeSelection % pageRangeSelection, System::Windows::Controls::PageRange % pageRange);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : string *  *  *  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (jobDescription, documentImageableArea, pageRangeSelection, pageRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobDescription" Type="System.String" />
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
        <Parameter Name="pageRangeSelection" Type="System.Windows.Controls.PageRangeSelection" RefType="ref" />
        <Parameter Name="pageRange" Type="System.Windows.Controls.PageRange" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="jobDescription"><span data-ttu-id="def6e-315">인쇄 작업의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-315">A name for the print job.</span></span> <span data-ttu-id="def6e-316">Windows 인쇄 사용자 인터페이스에 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-316">It appears in the Windows printing user interface.</span></span></param>
        <param name="documentImageableArea"><span data-ttu-id="def6e-317">장치가 인쇄할 수 있는 페이지 영역의 크기를 포함 하는 개체에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-317">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="def6e-318">데이터 형식에 없는 public 생성자가 있으므로이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-318">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <param name="pageRangeSelection"><span data-ttu-id="def6e-319">모든 페이지 또는 사용자가 지정한 범위만 인쇄할지 여부를 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-319">A value that specifies whether to print all pages or only a range that is specified by the user.</span></span></param>
        <param name="pageRange"><span data-ttu-id="def6e-320">인쇄 되는 페이지의 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-320">The range of pages that is printed.</span></span></param>
        <summary><span data-ttu-id="def6e-321">만듭니다는 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 개체는 Windows 공용 인쇄 대화 상자를 엽니다 페이지 범위를 사용 하 여 대화 상자를 제공 하 고 반환 된 <see langword="ref" /> (<see langword="ByRef" /> Visual Basic의) 인쇄 허용 영역 및 크기에 대 한 정보를 나타내는 매개 변수는 미디어입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-321">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog, provides the dialog with a page range, and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="def6e-322"><see cref="T:System.Windows.Xps.XpsDocumentWriter" /> XPS 데이터를 스트림에 쓰는 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-322">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="def6e-323">이 매개 변수는 <see langword="null" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-323">This can be <see langword="null" />.</span></span> <span data-ttu-id="def6e-324">(매개 변수 <paramref name="documentImageableArea" />, <paramref name="pageRangeSelection" />, 및 <paramref name="pageRange" /> 는 모두 <see langword="ref" /> [<see langword="ByRef" /> Visual basic에서] 사용자가 초기화 되 고 각각 나타내는 추가 항목에 반환 된 대화 상자를 닫을 때 반환 되는 매개 변수.)</span><span class="sxs-lookup"><span data-stu-id="def6e-324">(The parameters <paramref name="documentImageableArea" />, <paramref name="pageRangeSelection" />, and <paramref name="pageRange" /> are all <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameters that are initialized by the user and returned when the dialog is closed, so each represents an additional returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-325">대부분의 프린터 용지 그립을 각 페이지 가장자리 주위에 남겨 두 공간이 인치 분기 및 프린터를 통해 이동 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-325">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="def6e-326">그렇지 않으면 토너 문서 흐름 메커니즘을 생일 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-326">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="def6e-327">인쇄할 수 있는 영역 "인쇄 허용 영역이입니다."</span><span class="sxs-lookup"><span data-stu-id="def6e-327">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="def6e-328">형식 <xref:System.Printing.PrintDocumentImageableArea> 공용 생성자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-328">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="def6e-329">따라서 변수의 `documentImageableArea` 선언 하 고 할당 해야 `null` 만 메서드에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-329">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="def6e-330">이 메서드를 표시 한 <xref:System.Windows.Controls.PrintDialog> 사용자의 입력을 요구 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-330">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="def6e-331">사용자 (프린터, 용지, 방향 및 페이지 범위를 선택) 대화 상자에서 인쇄 작업을 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-331">The user configures his print job on the dialog (including selecting a printer, paper size, orientation, and page range).</span></span> <span data-ttu-id="def6e-332">대화 상자를 닫으면 `pageRangeSelection` 하 고 `pageRange` 값이 있는 및 `documentImageableArea` 속성이 초기화 되는 실제 개체를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-332">When the dialog is closed, `pageRangeSelection` and `pageRange` have values, and `documentImageableArea` points to an actual object whose properties are initialized.</span></span>  
  
 <span data-ttu-id="def6e-333">반환 값은 사용자를 취소 하거나 대화 상자를 닫습니다, `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-333">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="def6e-334">결과적으로, 반환 값 검사 `null` 응용 프로그램에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-334">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="def6e-335">isXPS 규칙 도구</span><span class="sxs-lookup"><span data-stu-id="def6e-335">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentJobSettings">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobSettings CurrentJobSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintJobSettings CurrentJobSettings" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.CurrentJobSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentJobSettings As PrintJobSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintJobSettings ^ CurrentJobSettings { System::Printing::PrintJobSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentJobSettings : System.Printing.PrintJobSettings" Usage="System.Printing.PrintQueue.CurrentJobSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-336">현재 인쇄 작업에 대 한 구성 설정이 포함 된 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-336">Gets an object that contains the configuration settings for the current print job.</span></span></summary>
        <value><span data-ttu-id="def6e-337"><see cref="T:System.Printing.PrintJobSettings" /> 현재 인쇄 작업의 설정을 포함 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-337">A <see cref="T:System.Printing.PrintJobSettings" /> value that holds the settings of the currently printing job.</span></span> <span data-ttu-id="def6e-338">이러한 설정에는 작업 및 작업에 대 한 참조에 대 한 설명을 포함 <see cref="T:System.Printing.PrintTicket" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-338">These settings include a description of the job and a reference to the job's <see cref="T:System.Printing.PrintTicket" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Printing.PrintTicket" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPrintTicket">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintTicket DefaultPrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintTicket DefaultPrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.DefaultPrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultPrintTicket As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintTicket ^ DefaultPrintTicket { System::Printing::PrintTicket ^ get(); void set(System::Printing::PrintTicket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPrintTicket : System.Printing.PrintTicket with get, set" Usage="System.Printing.PrintQueue.DefaultPrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-339">와 연결 된 기본 프린터 옵션을 가져오거나 설정 합니다. <see cref="T:System.Printing.PrintQueue" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-339">Gets or sets the default printer options associated with this <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <value><span data-ttu-id="def6e-340">기본값 <see cref="T:System.Printing.PrintTicket" /> ; 인쇄 대기열 또는 <see langword="null" /> 인쇄 대기열에 오류가 발생 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="def6e-340">The default <see cref="T:System.Printing.PrintTicket" /> for the print queue; or <see langword="null" /> if an error has occurred in the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-341">기본값 <xref:System.Printing.PrintTicket> 와 같은 인쇄 작업 옵션을 지정 합니다 <xref:System.Printing.PrintTicket.CopyCount%2A>, <xref:System.Printing.PrintTicket.PageOrientation%2A>, <xref:System.Printing.PrintTicket.Duplexing%2A>, <xref:System.Printing.PrintTicket.Stapling%2A>, 등입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-341">The default <xref:System.Printing.PrintTicket> specifies print job options such as <xref:System.Printing.PrintTicket.CopyCount%2A>, <xref:System.Printing.PrintTicket.PageOrientation%2A>, <xref:System.Printing.PrintTicket.Duplexing%2A>, <xref:System.Printing.PrintTicket.Stapling%2A>, and others.</span></span>  
  
 <span data-ttu-id="def6e-342">각 <xref:System.Printing.PrintQueue> 자체 유지 관리 <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-342">Each <xref:System.Printing.PrintQueue> maintains its own <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>.</span></span>  
  
 <span data-ttu-id="def6e-343">정상 작동에서 합니다 <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> 속성이 반환을 <xref:System.Printing.PrintTicket>입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-343">In normal operation the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> property returns a <xref:System.Printing.PrintTicket>.</span></span>  <span data-ttu-id="def6e-344">경우는 <xref:System.Printing.PrintQueue> 잘못 된 상태를 감지 <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-344">If the <xref:System.Printing.PrintQueue> detects an invalid state, <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> returns `null`.</span></span>  <span data-ttu-id="def6e-345">하는 경우 <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> 반환 `null`, 응용 프로그램은이 인쇄 큐에서 오류가 발생 하는 정보 제공 용 이므로 사용자 대화 상자를 표시 하 고 다른 인쇄 큐로 이동 하는 출력을 사용 하 여 인쇄 작업을 다시 시작 해야 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-345">If <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> returns `null`, the application should display an informational user dialog that an error has occurred on this print queue and that the print job should be restarted with the output directed to a different print queue.</span></span>  
  
 <span data-ttu-id="def6e-346">가져오거나 설정 합니다 <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> 속성을 확인 하지 않습니다는 <xref:System.Printing.PrintTicket>합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-346">Getting or setting the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> property does not validate the <xref:System.Printing.PrintTicket>.</span></span>  <span data-ttu-id="def6e-347">합니다 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> 메서드를 유효성 검사에 사용할 수는 <xref:System.Printing.PrintTicket>합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-347">The <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> method can be used to validate a <xref:System.Printing.PrintTicket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-348">다음 예제에서는 기회로 활용 하는 프린터 기능을 테스트 하 고 인쇄 작업을 구성 하는 동안이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-348">The following example shows how to use this property while testing a printer's capabilities and configuring a print job to take advantage of them.</span></span>  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintQueue.UserPrintTicket" />
        <altmember cref="P:System.Printing.PrintQueue.DefaultPriority" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPriority">
      <MemberSignature Language="C#" Value="public virtual int DefaultPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultPriority" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.DefaultPriority" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DefaultPriority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPriority : int with get, set" Usage="System.Printing.PrintQueue.DefaultPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-349">큐에 추가할 각 새 인쇄 작업에 지정 된 기본 우선 순위를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-349">Gets or sets the default priority that is given to each new print job added to the queue.</span></span></summary>
        <value><span data-ttu-id="def6e-350">큐에 추가 하는 인쇄 작업에 대 한 기본 우선 순위입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-350">The default priority for print jobs added to the queue.</span></span> <span data-ttu-id="def6e-351">1에서 99 까지의 범위를 사용할 수 있는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-351">Possible values range from 1 through 99.</span></span> <span data-ttu-id="def6e-352">기본값은 1입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-352">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-353">인쇄 큐에 입력 되 면 사용자가 인쇄 작업의 우선 순위를 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-353">A print job's priority can be changed by users after it enters the print queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Printing.PrintQueue.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-354">인쇄 큐의 설명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-354">Gets a description of the print queue.</span></span></summary>
        <value><span data-ttu-id="def6e-355">인쇄 대기열의 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-355">A description of the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-356">큐를 만들면 큐 이름, 모델 및 위치를 쉼표로 구분 하 여 구성 되는 세 부분 문자열에 대 한 설명 기본값은입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-356">When the queue is created, the description defaults to a three part string that consists of the queue name, model, and location separated by commas.</span></span> <span data-ttu-id="def6e-357">대비를 <xref:System.Printing.PrintQueue.Description%2A> 속성을 <xref:System.Printing.PrintQueue.Comment%2A> 공용 인쇄 대화 상자와 프린터 및 팩스는 사용자에 게 표시 되는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-357">Contrast the <xref:System.Printing.PrintQueue.Description%2A> property with the <xref:System.Printing.PrintQueue.Comment%2A> property which is visible to users in the common print dialog and the Printers and Faxes list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Printing.PrintQueue.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-358">큐의 전체 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-358">Gets the complete name of the queue.</span></span></summary>
        <value><span data-ttu-id="def6e-359">인쇄 대기열의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-359">The complete name of the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-360">로컬 인쇄 서버의 인쇄 대기열이이 속성의이 값은 동일 <xref:System.Printing.PrintQueue.Name%2A>, 그렇지 않으면 여기에 전체 UNC (Universal Naming Convention) 이름이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-360">For print queues on the local print server, this property's value is identical to <xref:System.Printing.PrintQueue.Name%2A>, otherwise it includes the full UNC (Universal Naming Convention) name.</span></span>  
  
 <span data-ttu-id="def6e-361">합니다 <xref:System.Printing.PrintQueue> 개체에는 쓰기 가능한 <xref:System.Printing.PrintQueue.Name%2A> 고 <xref:System.Printing.PrintQueue.ShareName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-361">The <xref:System.Printing.PrintQueue> object also has writeable <xref:System.Printing.PrintQueue.Name%2A> and <xref:System.Printing.PrintQueue.ShareName%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-362">다음 예제에서는 두 인쇄 티켓을 병합 하는 동안이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-362">The following example shows how to use this property while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo GetJob (int jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo GetJob(int32 jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetJob(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetJob (jobId As Integer) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ GetJob(int jobId);" />
      <MemberSignature Language="F#" Value="member this.GetJob : int -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.GetJob jobId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="jobId"><span data-ttu-id="def6e-363">큐에서 작업의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-363">The number of the job in the queue.</span></span></param>
        <summary><span data-ttu-id="def6e-364">지정한 ID 번호를 사용 하 여 인쇄 작업을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-364">Gets the print job with the specified ID number.</span></span></summary>
        <returns><span data-ttu-id="def6e-365"><see cref="T:System.Printing.PrintSystemJobInfo" /> 작업 및 해당 상태 속성을 지정 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-365">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that specifies the properties of the job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-366">사용할 수도 있습니다는 <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType> 같은 목적을 위해 메서드.</span><span class="sxs-lookup"><span data-stu-id="def6e-366">You can also use the <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType> method for the same purpose.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-367">다음 예제에서는 인쇄 작업 문제를 진단 하는 경우이 메서드를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-367">The following example shows how to use this method when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Get(System.Printing.PrintQueue,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrintCapabilities">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="def6e-368">가져옵니다는 <see cref="T:System.Printing.PrintCapabilities" /> 프린터나 컬러로 인쇄 또는 양면 인쇄 수 있는지 여부와 같은 장치 기능을 식별 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-368">Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer or device, such as whether it prints in color or is capable of two-sided printing.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrintCapabilities">
      <MemberSignature Language="C#" Value="public System.Printing.PrintCapabilities GetPrintCapabilities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintCapabilities GetPrintCapabilities() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintCapabilities () As PrintCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintCapabilities ^ GetPrintCapabilities();" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilities : unit -&gt; System.Printing.PrintCapabilities" Usage="printQueue.GetPrintCapabilities " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintCapabilities</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="def6e-369">가져옵니다는 <see cref="T:System.Printing.PrintCapabilities" /> 프린터의 기능을 식별 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-369">Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer.</span></span></summary>
        <returns><span data-ttu-id="def6e-370"><see cref="T:System.Printing.PrintCapabilities" /> 프린터 수 및 양면 복사, 자동 스테이플링 등을 지정 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-370">A <see cref="T:System.Printing.PrintCapabilities" /> object that specifies what the printer can and cannot do, such as two-sided coping or automatic stapling.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="def6e-371">다음 예제에서는 두 인쇄 티켓을 병합 하는 동안이 메서드를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-371">The following example shows how to use this method while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="def6e-372"><see cref="T:System.Printing.PrintCapabilities" /> 개체를 검색할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-372">The <see cref="T:System.Printing.PrintCapabilities" /> object could not be retrieved.</span></span></exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="def6e-373">인쇄 기능을 가져오는 데 필요한 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-373">for permission to get print capabilities.</span></span> <span data-ttu-id="def6e-374">연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span><span class="sxs-lookup"><span data-stu-id="def6e-374">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPrintCapabilities">
      <MemberSignature Language="C#" Value="public System.Printing.PrintCapabilities GetPrintCapabilities (System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintCapabilities GetPrintCapabilities(class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintCapabilities ^ GetPrintCapabilities(System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilities : System.Printing.PrintTicket -&gt; System.Printing.PrintCapabilities" Usage="printQueue.GetPrintCapabilities printTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintCapabilities</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="printTicket"><span data-ttu-id="def6e-375">인쇄 기능 보고 되는 기준을 제공 하는 인쇄 티켓입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-375">A print ticket that provides the basis on which the print capabilities are reported.</span></span></param>
        <summary><span data-ttu-id="def6e-376">가져옵니다는 <see cref="T:System.Printing.PrintCapabilities" /> 프린터의 기능을 식별 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-376">Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer.</span></span></summary>
        <returns><span data-ttu-id="def6e-377"><see cref="T:System.Printing.PrintCapabilities" /> 프린터 수 및 양면 복사, 자동 스테이플링 등을 지정 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-377">A <see cref="T:System.Printing.PrintCapabilities" /> object that specifies what the printer can and cannot do, such as two-sided coping or automatic stapling.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-378"><xref:System.Printing.PrintTicket> 매개 변수는 생성 하는 기준으로 사용 된 <xref:System.Printing.PrintCapabilities> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-378">The <xref:System.Printing.PrintTicket> parameter is used as the basis on which to construct the <xref:System.Printing.PrintCapabilities> object.</span></span> <span data-ttu-id="def6e-379">예를 들어 입력 bin 1 b만 입력된 함 2에서에서 미디어 유형을 C 지원 및 프린터 미디어 유형 A만을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-379">For example, suppose the printer supported only media types A and B from input bin 1 and it only supported media type C from input bin 2.</span></span> <span data-ttu-id="def6e-380">경우는 `printTicket` 매개 변수를 입력된 함 1을 지정 하면 <xref:System.Printing.PrintCapabilities> 개체 반환 되는 3 개의 미디어 형식을 모두를 포함 하지만 형식 C "제한"으로 보고할 수</span><span class="sxs-lookup"><span data-stu-id="def6e-380">If the `printTicket` parameter specified input bin 1, then the <xref:System.Printing.PrintCapabilities> object that is returned would include all three media types, but it would report type C as "constrained."</span></span> <span data-ttu-id="def6e-381">경우는 `printTicket` 매개 변수를 입력된 함 2를 지정 하면 <xref:System.Printing.PrintCapabilities> 개체 반환 되는 3 개의 미디어 형식을 모두를 포함 하지만 형식 A 및 B "제한" 보고할 수</span><span class="sxs-lookup"><span data-stu-id="def6e-381">If the `printTicket` parameter specified input bin 2, then the <xref:System.Printing.PrintCapabilities> object that is returned would include all three media types, but it would report types A and B as "constrained."</span></span> <span data-ttu-id="def6e-382">참조 된 [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) 제약 조건에 대 한 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-382">See the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) for more information on constraints.</span></span>  
  
 <span data-ttu-id="def6e-383">하는 경우 `printTicket` 됩니다 `null`, <xref:System.Printing.PrintQueue.UserPrintTicket%2A> 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-383">If `printTicket` is `null`, the <xref:System.Printing.PrintQueue.UserPrintTicket%2A> is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="def6e-384"><see cref="T:System.Printing.PrintCapabilities" /> 개체를 검색할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-384">The <see cref="T:System.Printing.PrintCapabilities" /> object could not be retrieved.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="def6e-385"><paramref name="printTicket" /> 형식이 잘못 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-385"><paramref name="printTicket" /> is not well-formed.</span></span></exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="def6e-386">인쇄 기능을 가져오는 데 필요한 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-386">for permission to get print capabilities.</span></span> <span data-ttu-id="def6e-387">연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span><span class="sxs-lookup"><span data-stu-id="def6e-387">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrintCapabilitiesAsXml">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="def6e-388">[인쇄 스키마](https://go.microsoft.com/fwlink/?LinkId=186397)를 따르는 XML 스트림으로 프린터 기능을 지정하는 <see cref="T:System.IO.MemoryStream" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-388">Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities as an XML stream that complies with the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-389">사용 하는 XML 스키마 "PrintCapabilities"의 일부 라고 합니다 [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) 시스템입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-389">The XML schema used is called "PrintCapabilities," a part of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrintCapabilitiesAsXml">
      <MemberSignature Language="C#" Value="public System.IO.MemoryStream GetPrintCapabilitiesAsXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryStream GetPrintCapabilitiesAsXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilitiesAsXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintCapabilitiesAsXml () As MemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryStream ^ GetPrintCapabilitiesAsXml();" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilitiesAsXml : unit -&gt; System.IO.MemoryStream" Usage="printQueue.GetPrintCapabilitiesAsXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="def6e-390">[인쇄 스키마](https://go.microsoft.com/fwlink/?LinkId=186397)를 따르는 XML 스트림으로 프린터 기능을 지정하는 <see cref="T:System.IO.MemoryStream" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-390">Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities as an XML stream that complies with the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span></summary>
        <returns><span data-ttu-id="def6e-391"><see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">인쇄 스키마</see> 시스템의 일부인 XML 스키마 “PrintCapabilities”를 사용하여 프린터 기능을 지정하는 <see cref="T:System.IO.MemoryStream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-391">A <see cref="T:System.IO.MemoryStream" /> specifying the printer's capabilities by using the XML schema "PrintCapabilities," a part of the <see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">Print Schema</see> system.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="def6e-392">인쇄 기능을 검색할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-392">The print capabilities could not be retrieved.</span></span></exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="def6e-393">인쇄 기능을 가져오는 데 필요한 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-393">for permission to get print capabilities.</span></span> <span data-ttu-id="def6e-394">연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span><span class="sxs-lookup"><span data-stu-id="def6e-394">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPrintCapabilitiesAsXml">
      <MemberSignature Language="C#" Value="public System.IO.MemoryStream GetPrintCapabilitiesAsXml (System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryStream GetPrintCapabilitiesAsXml(class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryStream ^ GetPrintCapabilitiesAsXml(System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilitiesAsXml : System.Printing.PrintTicket -&gt; System.IO.MemoryStream" Usage="printQueue.GetPrintCapabilitiesAsXml printTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="printTicket"><span data-ttu-id="def6e-395">인쇄 기능 보고 되는 기준을 제공 하는 인쇄 티켓입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-395">A print ticket that provides the basis on which the print capabilities are reported.</span></span></param>
        <summary><span data-ttu-id="def6e-396">[인쇄 스키마](https://go.microsoft.com/fwlink/?LinkId=186397)를 따르는 XML 형식으로 프린터 기능을 지정하는 <see cref="T:System.IO.MemoryStream" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-396">Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities in an XML format that complies with the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span></summary>
        <returns><span data-ttu-id="def6e-397"><see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">인쇄 스키마</see> 시스템의 일부인 XML 스키마 “PrintCapabilities”를 사용하여 프린터 기능을 지정하는 <see cref="T:System.IO.MemoryStream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-397">A <see cref="T:System.IO.MemoryStream" /> specifying the printer's capabilities by using the XML schema "PrintCapabilities," a part of the <see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">Print Schema</see> system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-398"><xref:System.Printing.PrintTicket> 매개 변수는 인쇄 기능 XML을 생성 하는 기준으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-398">The <xref:System.Printing.PrintTicket> parameter is used as the basis on which to construct the print capabilities XML.</span></span> <span data-ttu-id="def6e-399">예를 들어 입력 bin 1 b만 입력된 함 2에서에서 미디어 유형을 C 지원 및 프린터 미디어 유형 A만을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-399">For example, suppose the printer supported only media types A and B from input bin 1 and it only supported media type C from input bin 2.</span></span> <span data-ttu-id="def6e-400">경우는 `printTicket` 매개 변수를 입력된 함 1을 지정 다음 인쇄 기능 XML 반환 되는 3 개의 미디어 형식을 모두를 포함 하지만 형식 C "제한"으로 보고할 수</span><span class="sxs-lookup"><span data-stu-id="def6e-400">If the `printTicket` parameter specified input bin 1, then the print capabilities XML that is returned would include all three media types, but it would report type C as "constrained."</span></span> <span data-ttu-id="def6e-401">경우는 `printTicket` 매개 변수를 입력된 함 2를 지정 다음 인쇄 기능 XML 반환 되는 3 개의 미디어 형식을 모두를 포함 하지만 형식 A 및 B "제한"으로 보고 됩니다</span><span class="sxs-lookup"><span data-stu-id="def6e-401">If the `printTicket` parameter specified input bin 2, then the print capabilities XML that is returned would include all three media types, but it would report types A and B as "constrained."</span></span> <span data-ttu-id="def6e-402">참조 된 [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) 제약 조건에 대 한 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-402">See the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) for more information on constraints.</span></span>  
  
 <span data-ttu-id="def6e-403">하는 경우 `printTicket` 됩니다 `null`, <xref:System.Printing.PrintQueue.UserPrintTicket%2A> 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-403">If `printTicket` is `null`, the <xref:System.Printing.PrintQueue.UserPrintTicket%2A> is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="def6e-404">인쇄 기능을 검색할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-404">The print capabilities could not be retrieved.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="def6e-405"><paramref name="printTicket" /> 형식이 잘못 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-405"><paramref name="printTicket" /> is not well-formed.</span></span></exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="def6e-406">인쇄 기능을 가져오는 데 필요한 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-406">for permission to get print capabilities.</span></span> <span data-ttu-id="def6e-407">연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span><span class="sxs-lookup"><span data-stu-id="def6e-407">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPrintJobInfoCollection">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobInfoCollection GetPrintJobInfoCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintJobInfoCollection GetPrintJobInfoCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintJobInfoCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintJobInfoCollection () As PrintJobInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintJobInfoCollection ^ GetPrintJobInfoCollection();" />
      <MemberSignature Language="F#" Value="member this.GetPrintJobInfoCollection : unit -&gt; System.Printing.PrintJobInfoCollection" Usage="printQueue.GetPrintJobInfoCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="def6e-408">포함 된 컬렉션을 만듭니다는 <see cref="T:System.Printing.PrintSystemJobInfo" /> 큐에서 각 작업에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-408">Creates a collection that contains a <see cref="T:System.Printing.PrintSystemJobInfo" /> object for each job in the queue.</span></span></summary>
        <returns><span data-ttu-id="def6e-409">반환 된 <see cref="T:System.Printing.PrintJobInfoCollection" /> 의 <see cref="T:System.Printing.PrintSystemJobInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-409">Returns a <see cref="T:System.Printing.PrintJobInfoCollection" /> of <see cref="T:System.Printing.PrintSystemJobInfo" /> objects.</span></span> <span data-ttu-id="def6e-410">큐에서 각 작업에 대해 하나씩 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-410">There is one for each job in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="def6e-411">다음 예제에서는 큐의 모든 작업에 동일한 작업을 수행 하는 경우이 메서드를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-411">The following example shows how to use this method when performing the same action on every job in a queue.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPaperProblem">
      <MemberSignature Language="C#" Value="public bool HasPaperProblem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPaperProblem" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.HasPaperProblem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPaperProblem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPaperProblem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPaperProblem : bool" Usage="System.Printing.PrintQueue.HasPaperProblem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-412">프린터는 지정 되지 않은 용지 문제가 있는 경우를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-412">Gets a value that indicates if the printer is having an unspecified paper problem.</span></span></summary>
        <value><span data-ttu-id="def6e-413"><see langword="true" /> 지정 되지 않은 용지 문제가; 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-413"><see langword="true" /> if there is an unspecified paper problem; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-414">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-414">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 <span data-ttu-id="def6e-415">합니다 <xref:System.Printing.PrintQueue> 개체에는 <xref:System.Printing.PrintQueue.IsPaperJammed%2A> 고 <xref:System.Printing.PrintQueue.IsOutOfPaper%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-415">The <xref:System.Printing.PrintQueue> object also has <xref:System.Printing.PrintQueue.IsPaperJammed%2A> and <xref:System.Printing.PrintQueue.IsOutOfPaper%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-416">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-416">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasToner">
      <MemberSignature Language="C#" Value="public bool HasToner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasToner" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.HasToner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasToner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasToner { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasToner : bool" Usage="System.Printing.PrintQueue.HasToner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-417">프린터 토너 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-417">Gets a value that indicates if the printer has toner.</span></span></summary>
        <value><span data-ttu-id="def6e-418"><see langword="true" /> 현재 프린터에 토너가; 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-418"><see langword="true" /> if the current printer has toner; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-419">일부 프린터 제조업체 토너 부족을 나타내기 위해이 신호를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-419">Some printer manufacturers may use this signal to indicate that toner is not low.</span></span> <span data-ttu-id="def6e-420">토너 카트리지 임을 나타내려면 있고 올바르게 삽입 사용 하는 동안 사용할 수 있습니다 다른 <xref:System.Printing.PrintQueue.IsTonerLow%2A> 토너 부족을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-420">Others may use it to indicate that the toner cartridge is present and properly inserted while using <xref:System.Printing.PrintQueue.IsTonerLow%2A> to indicate that toner is low.</span></span>  
  
 <span data-ttu-id="def6e-421">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-421">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-422">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-422">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingPrintServer">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintServer HostingPrintServer { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintServer HostingPrintServer" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.HostingPrintServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HostingPrintServer As PrintServer" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::Printing::PrintServer ^ HostingPrintServer {  public:&#xA;System::Printing::PrintServer ^ get(); protected:&#xA; void set(System::Printing::PrintServer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostingPrintServer : System.Printing.PrintServer with get, set" Usage="System.Printing.PrintQueue.HostingPrintServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintServer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-423">보호 된 인쇄 대기열을 제어 하는 인쇄 서버를 설정 하거나 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-423">Gets or sets (protected) the print server that controls the print queue.</span></span></summary>
        <value><span data-ttu-id="def6e-424">이름 및 기타 속성에는 <see cref="T:System.Printing.PrintServer" /> 인쇄 큐를 호스팅하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-424">The name and other properties of the <see cref="T:System.Printing.PrintServer" /> that is hosting the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-425">파생 된 클래스로이 속성을 설정할 수 있습니다 <xref:System.Printing.PrintQueue> 속성의 setter 이므로 `protected`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-425">This property can be set only by a class that derives from <xref:System.Printing.PrintQueue> because the property's setter is `protected`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InPartialTrust">
      <MemberSignature Language="C#" Value="public bool InPartialTrust { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPartialTrust" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.InPartialTrust" />
      <MemberSignature Language="VB.NET" Value="Public Property InPartialTrust As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InPartialTrust { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InPartialTrust : bool with get, set" Usage="System.Printing.PrintQueue.InPartialTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-426">큐가 더 높은 수준의 신뢰를 부분적으로 신뢰할 수 있는 모드에서 작동 하는지 여부를 나타내는 값을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-426">Gets or sets a value that indicates whether the queue is operating in a partially trusted mode, a higher level of trust.</span></span></summary>
        <value><span data-ttu-id="def6e-427"><see langword="true" /> 큐가 부분적으로 신뢰할 수 있는 모드로 작동 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-427"><see langword="true" /> if the queue is operating in a partially trusted mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-428">경우는 <xref:System.Printing.PrintQueue.InPartialTrust%2A> 속성은 `true`, 프로그램을 만들 수 없습니다는 <xref:System.Printing.PrintQueue> 프린터에 대 한 전체 인쇄 권한이 없을 경우이 프린터를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-428">When the <xref:System.Printing.PrintQueue.InPartialTrust%2A> property is `true`, your program cannot create a <xref:System.Printing.PrintQueue> object that represents this printer unless the user has full printing permissions for the printer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDispose">
      <MemberSignature Language="C#" Value="protected override sealed void InternalDispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InternalDispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.InternalDispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub InternalDispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InternalDispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.InternalDispose : bool -&gt; unit" Usage="printQueue.InternalDispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="def6e-429">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-429"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="def6e-430"><see cref="T:System.Printing.PrintQueue" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-430">Releases the unmanaged resources used by the <see cref="T:System.Printing.PrintQueue" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBidiEnabled">
      <MemberSignature Language="C#" Value="public bool IsBidiEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBidiEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsBidiEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBidiEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBidiEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBidiEnabled : bool" Usage="System.Printing.PrintQueue.IsBidiEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-431">프린터에서 양방향 통신을 사용 되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-431">Gets a value that indicates whether bidirectional communication with the printer is enabled.</span></span></summary>
        <value><span data-ttu-id="def6e-432"><see langword="true" /> 프린터에서 양방향 통신을 사용 하면 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-432"><see langword="true" /> if bidirectional communication with the printer is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Printing.PrintQueue.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-433">인쇄 장치가 사용 중인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-433">Gets a value that indicates whether the printing device is busy.</span></span></summary>
        <value><span data-ttu-id="def6e-434"><see langword="true" /> 장치가 있는 경우 사용 중입니다. 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-434"><see langword="true" /> if the device is busy; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-435">사용 중인 반드시 인쇄 작업을 처리 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-435">Busy does not necessarily mean that it is processing a print job.</span></span> <span data-ttu-id="def6e-436">장치 조합 프린터/팩스/복사기 인 경우 다음이 수 팩스 수도 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-436">If the device is a combination printer/fax/copier, then it might be faxing or copying.</span></span> <span data-ttu-id="def6e-437">비교는 <xref:System.Printing.PrintQueue.IsProcessing%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-437">Compare with the <xref:System.Printing.PrintQueue.IsProcessing%2A> property.</span></span>  
  
 <span data-ttu-id="def6e-438">장치는이 의미를 사용 하 여 신호를 지원 하지 않습니다 경우는 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-438">If the device does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDevQueryEnabled">
      <MemberSignature Language="C#" Value="public bool IsDevQueryEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDevQueryEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsDevQueryEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDevQueryEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDevQueryEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDevQueryEnabled : bool" Usage="System.Printing.PrintQueue.IsDevQueryEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-439">큐 문서와 프린터 구성이 일치 하지 않을 때 문서 보유 하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-439">Gets a value that indicates whether the queue holds documents when document and printer configurations do not match.</span></span></summary>
        <value><span data-ttu-id="def6e-440"><see langword="true" /> 큐에 일치 하지 않는 구성을 포함 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-440"><see langword="true" /> if the queue holds mismatched configurations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirect">
      <MemberSignature Language="C#" Value="public bool IsDirect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirect" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsDirect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirect : bool" Usage="System.Printing.PrintQueue.IsDirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-441">첫 번째 프린터 또는 스풀 문서에 직접 인쇄 대기열이 있는지 여부를 나타내는 값을 가져옵니다 및 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-441">Gets a value that indicates whether the queue prints directly to the printer or spools documents first and then prints them.</span></span></summary>
        <value><span data-ttu-id="def6e-442"><see langword="true" /> 큐에서 프린터로 직접 인쇄 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-442"><see langword="true" /> if the queue prints directly to the printer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-443">이 속성은 Windows 공용 인쇄 대화 상자를 통해서만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-443">This property can be set only through the Windows common print dialog.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDoorOpened">
      <MemberSignature Language="C#" Value="public bool IsDoorOpened { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDoorOpened" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsDoorOpened" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDoorOpened As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDoorOpened { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDoorOpened : bool" Usage="System.Printing.PrintQueue.IsDoorOpened" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-444">문을 프린터에서 열려 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-444">Gets a value that indicates whether a door is open on the printer.</span></span></summary>
        <value><span data-ttu-id="def6e-445"><see langword="true" /> 덮개가 열려; 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-445"><see langword="true" /> if a door is open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-446">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-446">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-447">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-447">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public bool IsHidden { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHidden" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsHidden" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHidden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHidden { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHidden : bool" Usage="System.Printing.PrintQueue.IsHidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-448">응용 프로그램의 사용자 인터페이스에서 인쇄 큐가 숨겨져 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-448">Gets a value that indicates whether the print queue is hidden in your application's user interface.</span></span></summary>
        <value><span data-ttu-id="def6e-449"><see langword="true" /> Windows 사용자 인터페이스에서 인쇄 큐가 숨겨져 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-449"><see langword="true" /> if the print queue is hidden in the Windows user interface; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-450">숨길 수 없습니다 자동으로 인쇄 대기열이이 속성을 설정 하는 경우 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-450">You do not automatically hide the print queue when you set this property to `true`.</span></span> <span data-ttu-id="def6e-451">계속 프로그램 프로그램 인터페이스에서 큐 목록에 나타나지 않으면 있는지 확인 하는 단계를 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-451">Your program still must take steps to make sure it does not appear in any list of queues in the program's interface.</span></span>  
  
 <span data-ttu-id="def6e-452">프린터 및 팩스 목록 등의 Windows 사용자 인터페이스에서 인쇄 큐를 숨길 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-452">Print queues cannot be hidden in the Windows user interface, such as the Printers and Faxes list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInError">
      <MemberSignature Language="C#" Value="public bool IsInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInError" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInError : bool" Usage="System.Printing.PrintQueue.IsInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-453">프린터 또는 장치에 오류 조건이 인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-453">Gets a value that indicates whether the printer or device is in an error condition.</span></span></summary>
        <value><span data-ttu-id="def6e-454"><see langword="true" /> 장치가 있는 경우에 오류 조건이; 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-454"><see langword="true" /> if the device is in an error condition; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-455">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-455">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-456">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-456">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitializing">
      <MemberSignature Language="C#" Value="public bool IsInitializing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitializing" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsInitializing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitializing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitializing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitializing : bool" Usage="System.Printing.PrintQueue.IsInitializing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-457">프린터가 자체 초기화 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-457">Gets a value that indicates whether the printer is initializing itself.</span></span></summary>
        <value><span data-ttu-id="def6e-458"><see langword="true" /> 프린터가; 초기화 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-458"><see langword="true" /> if the printer is initializing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-459">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-459">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIOActive">
      <MemberSignature Language="C#" Value="public bool IsIOActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIOActive" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsIOActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIOActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIOActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIOActive : bool" Usage="System.Printing.PrintQueue.IsIOActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-460">프린터가 데이터 또는 신호를 보내는 수신 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-460">Gets a value that indicates whether the printer is receiving or sending data or signals.</span></span></summary>
        <value><span data-ttu-id="def6e-461"><see langword="true" /> 프린터를 보내거나 받는지; 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-461"><see langword="true" /> if the printer is receiving or sending; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-462">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-462">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManualFeedRequired">
      <MemberSignature Language="C#" Value="public bool IsManualFeedRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManualFeedRequired" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsManualFeedRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsManualFeedRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManualFeedRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsManualFeedRequired : bool" Usage="System.Printing.PrintQueue.IsManualFeedRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-463">프린터를 수동으로 현재 인쇄 작업에 대 한 용지 공급 해야 하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-463">Gets a value that indicates whether the printer needs to be manually fed paper for the current print job.</span></span></summary>
        <value><span data-ttu-id="def6e-464"><see langword="true" /> 프린터 해야 수동으로 용지를 공급 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-464"><see langword="true" /> if the printer needs to be manually fed paper; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-465">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-465">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNotAvailable">
      <MemberSignature Language="C#" Value="public bool IsNotAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNotAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsNotAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNotAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNotAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNotAvailable : bool" Usage="System.Printing.PrintQueue.IsNotAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-466">프린터를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-466">Gets a value that indicates whether the printer is available.</span></span></summary>
        <value><span data-ttu-id="def6e-467"><see langword="true" /> 프린터가 사용할 수 있습니다. 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-467"><see langword="true" /> if the printer is available; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-468">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-468">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-469">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-469">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffline : bool" Usage="System.Printing.PrintQueue.IsOffline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-470">프린터가 오프 라인 인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-470">Gets a value that indicates whether the printer is offline.</span></span></summary>
        <value><span data-ttu-id="def6e-471"><see langword="true" /> 프린터; 오프 라인 상태인 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-471"><see langword="true" /> if the printer is offline; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-472">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-472">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-473">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-473">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutOfMemory">
      <MemberSignature Language="C#" Value="public bool IsOutOfMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutOfMemory" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOutOfMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOutOfMemory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOutOfMemory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutOfMemory : bool" Usage="System.Printing.PrintQueue.IsOutOfMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-474">메모리가 부족 합니다. 프린터 인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-474">Gets a value that indicates whether the printer is out of memory.</span></span></summary>
        <value><span data-ttu-id="def6e-475"><see langword="true" /> 프린터에 메모리 부족 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-475"><see langword="true" /> if the printer is out of memory; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-476">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-476">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-477">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-477">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutOfPaper">
      <MemberSignature Language="C#" Value="public bool IsOutOfPaper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutOfPaper" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOutOfPaper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOutOfPaper As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOutOfPaper { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutOfPaper : bool" Usage="System.Printing.PrintQueue.IsOutOfPaper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-478">프린터를 현재 작업에 필요한 크기의 용지를 사용 하 여 다시 로드 해야 하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-478">Gets a value that indicates whether the printer needs to be reloaded with paper of the size required for the current job.</span></span></summary>
        <value><span data-ttu-id="def6e-479"><see langword="true" /> 프린터; 다시 로드 해야 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-479"><see langword="true" /> if the printer needs to be reloaded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-480">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-480">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-481">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-481">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutputBinFull">
      <MemberSignature Language="C#" Value="public bool IsOutputBinFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutputBinFull" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOutputBinFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOutputBinFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOutputBinFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutputBinFull : bool" Usage="System.Printing.PrintQueue.IsOutputBinFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-482">프린터의 출력 영역 오버플로가 발생할 위험이 인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-482">Gets a value that indicates whether the output area of the printer is in danger of overflowing.</span></span></summary>
        <value><span data-ttu-id="def6e-483"><see langword="true" /> 프린터의 출력 영역이 꽉; 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-483"><see langword="true" /> if the output area of the printer is full; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-484">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-484">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-485">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-485">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaperJammed">
      <MemberSignature Language="C#" Value="public bool IsPaperJammed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaperJammed" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPaperJammed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaperJammed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaperJammed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaperJammed : bool" Usage="System.Printing.PrintQueue.IsPaperJammed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-486">문서의 현재 시트는 프린터에 걸렸는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-486">Gets a value that indicates whether the current sheet of paper is stuck in the printer.</span></span></summary>
        <value><span data-ttu-id="def6e-487"><see langword="true" /> 용지; 걸린 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-487"><see langword="true" /> if the paper is stuck; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-488">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-488">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-489">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-489">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPaused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaused : bool" Usage="System.Printing.PrintQueue.IsPaused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-490">인쇄 큐를 일시 중지 되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-490">Gets a value that indicates whether the print queue has been paused.</span></span></summary>
        <value><span data-ttu-id="def6e-491"><see langword="true" /> 인쇄 큐를 일시 중지 된 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-491"><see langword="true" /> if the print queue has been paused; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-492">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-492">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-493">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-493">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPendingDeletion">
      <MemberSignature Language="C#" Value="public bool IsPendingDeletion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPendingDeletion" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPendingDeletion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPendingDeletion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPendingDeletion { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPendingDeletion : bool" Usage="System.Printing.PrintQueue.IsPendingDeletion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-494">프린터가 인쇄 작업을 삭제 하 고 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-494">Gets a value that indicates whether the printer is in the process of deleting a print job.</span></span></summary>
        <value><span data-ttu-id="def6e-495"><see langword="true" /> 프린터; 작업을 삭제 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-495"><see langword="true" /> if the printer is deleting a job; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-496">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-496">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPowerSaveOn">
      <MemberSignature Language="C#" Value="public bool IsPowerSaveOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPowerSaveOn" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPowerSaveOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPowerSaveOn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPowerSaveOn { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPowerSaveOn : bool" Usage="System.Printing.PrintQueue.IsPowerSaveOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-497">프린터가 절전 모드 인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-497">Gets a value that indicates whether the printer is in power save mode.</span></span></summary>
        <value><span data-ttu-id="def6e-498"><see langword="true" /> 프린터가 절전 모드 저장 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-498"><see langword="true" /> if the printer is in power save mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-499">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-499">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrinting">
      <MemberSignature Language="C#" Value="public bool IsPrinting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrinting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPrinting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrinting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrinting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrinting : bool" Usage="System.Printing.PrintQueue.IsPrinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-500">작업을 인쇄 하 고 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-500">Gets a value that indicates whether a job is printing.</span></span></summary>
        <value><span data-ttu-id="def6e-501"><see langword="true" /> 작업을 인쇄 하 고 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-501"><see langword="true" /> if a job is printing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-502">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-502">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProcessing">
      <MemberSignature Language="C#" Value="public bool IsProcessing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsProcessing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsProcessing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsProcessing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsProcessing : bool" Usage="System.Printing.PrintQueue.IsProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-503">프린터가 인쇄 작업을 처리 하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-503">Gets a value that indicates whether the printer is processing a print job.</span></span></summary>
        <value><span data-ttu-id="def6e-504"><see langword="true" /> 프린터가 인쇄 작업;을 처리 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-504"><see langword="true" /> if the printer is processing a print job; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-505">일부 프린터 제조업체 덜 구체적인 대신이 신호는 지원 <xref:System.Printing.PrintQueue.IsBusy%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-505">Some printer manufacturers support this signal instead of the less specific <xref:System.Printing.PrintQueue.IsBusy%2A>.</span></span>  
  
 <span data-ttu-id="def6e-506">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-506">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublished">
      <MemberSignature Language="C#" Value="public bool IsPublished { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublished" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPublished" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublished As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublished { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublished : bool" Usage="System.Printing.PrintQueue.IsPublished" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-507">프린터가 다른 네트워크 사용자에 게 표시 되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-507">Gets a value that indicates whether the printer is visible to other network users.</span></span></summary>
        <value><span data-ttu-id="def6e-508"><see langword="true" /> 프린터가 다른 네트워크 사용자에 게 표시 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-508"><see langword="true" /> if the printer is visible to other network users; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQueued">
      <MemberSignature Language="C#" Value="public bool IsQueued { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsQueued" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsQueued" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsQueued As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsQueued { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsQueued : bool" Usage="System.Printing.PrintQueue.IsQueued" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-509">프린터를 지원 하는지 둘 이상의 인쇄 작업을 사용 하 여 큐에 한 번에 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-509">Gets a value that indicates whether the printer can support a queue with more than one print job in it at a time.</span></span></summary>
        <value><span data-ttu-id="def6e-510"><see langword="true" /> 프린터 큐에서 여러 인쇄 작업을 지원할 수 있는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-510"><see langword="true" /> if the printer can support the queuing of multiple print jobs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-511">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-511">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRawOnlyEnabled">
      <MemberSignature Language="C#" Value="public bool IsRawOnlyEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRawOnlyEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsRawOnlyEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRawOnlyEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRawOnlyEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRawOnlyEnabled : bool" Usage="System.Printing.PrintQueue.IsRawOnlyEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-512">인쇄 큐 인쇄 스풀러 Windows 응용 프로그램에서 더 빠른 데이터 흐름을 수 있는 EMF (Enhanced Meta File)를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-512">Gets a value that indicates whether the print queue can use EMF (Enhanced Meta File) that enables faster data flow from a printing application to the Windows spooler.</span></span></summary>
        <value><span data-ttu-id="def6e-513"><see langword="true" /> 프린터가 EMF 인쇄;를 사용할 수 없는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-513"><see langword="true" /> if the printer cannot use EMF printing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServerUnknown">
      <MemberSignature Language="C#" Value="public bool IsServerUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServerUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsServerUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsServerUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsServerUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServerUnknown : bool" Usage="System.Printing.PrintQueue.IsServerUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-514">프린터가 오류 상태 인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-514">Gets a value that indicates whether the printer is in an error state.</span></span></summary>
        <value><span data-ttu-id="def6e-515"><see langword="true" /> 프린터의 경우 오류 상태입니다. 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-515"><see langword="true" /> if in the printer is in an error state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-516">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-516">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsShared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsShared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsShared { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShared : bool" Usage="System.Printing.PrintQueue.IsShared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-517">프린터가 네트워크 상의 다른 컴퓨터에서 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-517">Gets a value that indicates whether the printer is available for use by other computers on the network.</span></span></summary>
        <value><span data-ttu-id="def6e-518"><see langword="true" /> 프린터가; 공유 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-518"><see langword="true" /> if the printer is shared; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-519">이 속성은 Windows 공용 인쇄 대화 상자를 사용 하 여 설정할 수만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-519">This property can only be set with the Windows common print dialog.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTonerLow">
      <MemberSignature Language="C#" Value="public bool IsTonerLow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTonerLow" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsTonerLow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTonerLow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTonerLow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTonerLow : bool" Usage="System.Printing.PrintQueue.IsTonerLow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-520">프린터 토너 부족 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-520">Gets a value that indicates whether the printer is running short of toner.</span></span></summary>
        <value><span data-ttu-id="def6e-521"><see langword="true" /> 프린터 토너; 실행 중인 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-521"><see langword="true" /> if the printer is running short of toner; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-522">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-522">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 <span data-ttu-id="def6e-523">합니다 <xref:System.Printing.PrintQueue> 개체에는 <xref:System.Printing.PrintQueue.HasToner%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-523">The <xref:System.Printing.PrintQueue> object also has a <xref:System.Printing.PrintQueue.HasToner%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-524">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-524">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWaiting">
      <MemberSignature Language="C#" Value="public bool IsWaiting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWaiting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsWaiting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWaiting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWaiting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWaiting : bool" Usage="System.Printing.PrintQueue.IsWaiting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-525">큐를 추가할 작업을 기다리는 지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-525">Gets a value that indicates whether the queue is waiting for a job to be added.</span></span></summary>
        <value><span data-ttu-id="def6e-526"><see langword="true" /> 큐는 작업에 대 한 대기 중인 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-526"><see langword="true" /> if the queue is waiting for a job; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-527">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-527">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWarmingUp">
      <MemberSignature Language="C#" Value="public bool IsWarmingUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWarmingUp" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsWarmingUp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWarmingUp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWarmingUp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWarmingUp : bool" Usage="System.Printing.PrintQueue.IsWarmingUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-528">프린터를 준비 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-528">Gets a value that indicates whether the printer is warming up.</span></span></summary>
        <value><span data-ttu-id="def6e-529"><see langword="true" /> 프린터; 등록 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-529"><see langword="true" /> if the printer is warming up; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-530">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-530">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXpsDevice">
      <MemberSignature Language="C#" Value="public bool IsXpsDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXpsDevice" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsXpsDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXpsDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXpsDevice { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXpsDevice : bool" Usage="System.Printing.PrintQueue.IsXpsDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-531">프린터의 드라이버가 [인쇄 개요](~/docs/framework/wpf/advanced/printing-overview.md)에 따라 작성되어 페이지 설명 언어로 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-531">Gets a value that indicates whether the printer's driver is built on the [Printing Overview](~/docs/framework/wpf/advanced/printing-overview.md) so it uses [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] as its page description language.</span></span></summary>
        <value><span data-ttu-id="def6e-532"><see langword="true" /> 프린터를 사용 하는 경우는 [인쇄 개요](~/docs/framework/wpf/advanced/printing-overview.md)이 고, 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-532"><see langword="true" /> if the printer uses the [Printing Overview](~/docs/framework/wpf/advanced/printing-overview.md); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-533">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-533">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepPrintedJobs">
      <MemberSignature Language="C#" Value="public bool KeepPrintedJobs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepPrintedJobs" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.KeepPrintedJobs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepPrintedJobs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepPrintedJobs { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepPrintedJobs : bool" Usage="System.Printing.PrintQueue.KeepPrintedJobs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-534">큐가 인쇄 한 후 삭제 하는 대신 프린터 언어 파일을 저장 하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-534">Gets a value that indicates whether the queue is saving the printer language file instead of deleting it following printing.</span></span></summary>
        <value><span data-ttu-id="def6e-535"><see langword="true" /> 큐에 프린터 언어 파일을 저장 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-535"><see langword="true" /> if the queue is saving the printer language file; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-536">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-536">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual string Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Location : string with get, set" Usage="System.Printing.PrintQueue.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-537">프린터의 실제 위치를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-537">Gets or sets the printer's physical location.</span></span></summary>
        <value><span data-ttu-id="def6e-538">프린터의 실제 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-538">The printer's physical location.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="def6e-539">다음 예제에서는이 속성을 사용 하 여 사용할 수 있는 인쇄 대기열의 하위 집합을 나열 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-539">The following example shows how to use this property to list a subset of available print queues.</span></span>  
  
 [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CPP/Program.cpp#listsubsetofprintqueues)]
 [!code-csharp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CSharp/Program.cs#listsubsetofprintqueues)]
 [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/visualbasic/program.vb#listsubsetofprintqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPrintSchemaVersion">
      <MemberSignature Language="C#" Value="public static int MaxPrintSchemaVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxPrintSchemaVersion" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.MaxPrintSchemaVersion" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxPrintSchemaVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxPrintSchemaVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxPrintSchemaVersion : int" Usage="System.Printing.PrintQueue.MaxPrintSchemaVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-540">큐에서 사용할 수 있는 [인쇄 스키마](https://go.microsoft.com/fwlink/?LinkId=186397)의 허용되는 가장 최근 버전 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-540">Gets the most recent possible version number of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) that the queue can use.</span></span></summary>
        <value><span data-ttu-id="def6e-541">가장 최근 버전 번호를 [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) 큐에서 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-541">The most recent version number of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) that the queue can use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-542">버전을 [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) 1은 Windows Vista와 함께 릴리스된 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-542">The version of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) released with Windows Vista is 1.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=186397"><span data-ttu-id="def6e-543">인쇄 스키마</span><span class="sxs-lookup"><span data-stu-id="def6e-543">Print Schema</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="MergeAndValidatePrintTicket">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="def6e-544">두 개의 병합 <see cref="T:System.Printing.PrintTicket" />s 하 고 결과 보장 하는 <see cref="T:System.Printing.PrintTicket" /> 유효 하 고 프린터를 지원 하지 않는 인쇄 기능을 위해 묻지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-544">Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid and does not ask for any printing functionality that the printer does not support.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MergeAndValidatePrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Printing.ValidationResult MergeAndValidatePrintTicket(class System.Printing.PrintTicket basePrintTicket, class System.Printing.PrintTicket deltaPrintTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Function MergeAndValidatePrintTicket (basePrintTicket As PrintTicket, deltaPrintTicket As PrintTicket) As ValidationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::ValidationResult MergeAndValidatePrintTicket(System::Printing::PrintTicket ^ basePrintTicket, System::Printing::PrintTicket ^ deltaPrintTicket);" />
      <MemberSignature Language="F#" Value="member this.MergeAndValidatePrintTicket : System.Printing.PrintTicket * System.Printing.PrintTicket -&gt; System.Printing.ValidationResult" Usage="printQueue.MergeAndValidatePrintTicket (basePrintTicket, deltaPrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePrintTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="deltaPrintTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="basePrintTicket"><span data-ttu-id="def6e-545">첫 번째 인쇄 티켓입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-545">The first print ticket.</span></span></param>
        <param name="deltaPrintTicket"><span data-ttu-id="def6e-546">두 번째 인쇄 티켓입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-546">The second print ticket.</span></span> <span data-ttu-id="def6e-547">이 매개 변수는 <see langword="null" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-547">This can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="def6e-548">두 개의 병합 <see cref="T:System.Printing.PrintTicket" />s 하 고 결과 보장 하는 <see cref="T:System.Printing.PrintTicket" /> 유효 하 고 프린터를 지원 하지 않는 인쇄 기능을 위해 묻지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-548">Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid and does not ask for any printing functionality that the printer does not support.</span></span></summary>
        <returns><span data-ttu-id="def6e-549">A <see cref="T:System.Printing.ValidationResult" /> 포함 하는 병합 된 <see cref="T:System.Printing.PrintTicket" /> 및 실행 가능성을 보장 하기 위해 변경 해야 설정 여부를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-549">A <see cref="T:System.Printing.ValidationResult" /> that includes the merged <see cref="T:System.Printing.PrintTicket" /> and an indication of whether any of its settings had to be changed to guarantee viability.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-550">메서드를 통해 생성 즉, 인쇄 기능을 요청 하지 않는 티켓 프린터를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-550">The method produces a viable print ticket; that is, a ticket that does not request printing features that the printer does not support.</span></span> <span data-ttu-id="def6e-551">에 대해 두 개의 입력된 인쇄 티켓 않은지 먼저 확인 하는 메서드를 [인쇄 스키마](https://go.microsoft.com/fwlink/?LinkId=186397)합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-551">The method first validates the two input print tickets against the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span> <span data-ttu-id="def6e-552">하거나 올바르지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-552">If either is invalid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="def6e-553">두 티켓 다음 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-553">The two tickets are then merged.</span></span> <span data-ttu-id="def6e-554">특정 속성에 다른 값이 있는 경우 결과 병합 된 티켓 처음 사용 하 여 델타 티켓의 값.</span><span class="sxs-lookup"><span data-stu-id="def6e-554">If they have different values for a particular property then the resulting merged ticket initially uses the value of the delta ticket.</span></span>  
  
 <span data-ttu-id="def6e-555">병합 된 티켓 프린터의 실제 기능에 대해 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-555">The merged ticket is then checked against the actual capabilities of the printer.</span></span> <span data-ttu-id="def6e-556">있으면 티켓의 설정을 프린터 기능을 사용 하 여 호환 되지 않습니다. 다음 프린터 드라이버는 논리를 사용 하 여 이러한 설정을 변경 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-556">If any settings in the ticket are incompatible with the printer's capabilities, then the printer driver changes those settings by using whatever logic it wants.</span></span> <span data-ttu-id="def6e-557">일반적으로 사용자 또는 프린터의 기본 설정 값을 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-557">Typically, it substitutes the user's or printer's default value for the setting.</span></span> <span data-ttu-id="def6e-558">대체 값의 드라이버의 소스가 없는과 동일한 티켓이 `basePrintTicket`, 다음 병합 된 티켓 입력 티켓 둘 다에서 다른 몇 가지 설정이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-558">It the driver's source of substitute values is not the same ticket as `basePrintTicket`, then the merged ticket might have some settings that are different from both of the input tickets.</span></span> <span data-ttu-id="def6e-559">설정을 변경 하려면 프린터 드라이버에 있으면이 팩트에서 보고 되는 <xref:System.Printing.ValidationResult.ConflictStatus%2A> 의 속성은 <xref:System.Printing.ValidationResult>합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-559">If the printer driver has to change any settings then this fact is reported in the <xref:System.Printing.ValidationResult.ConflictStatus%2A> property of the <xref:System.Printing.ValidationResult>.</span></span>  
  
 <span data-ttu-id="def6e-560">인쇄 큐의 기본 설정에 따라 병합 및 유효성 검사를 설정 해야 합니다 `basePrintTicket` 에 <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> 또는 <xref:System.Printing.PrintQueue.UserPrintTicket%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-560">To merge and validate based on a print queue's default settings, you should set `basePrintTicket` to the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> or the <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</span></span>  
  
 <span data-ttu-id="def6e-561">합니다 `deltaPrintTicket` 매개 변수 수 있습니다 `null`있으며이 경우는 `basePrintTicket` 유효성 검사, 가능성을 확인 및 가능한 경우 변경 내용으로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-561">The `deltaPrintTicket` parameter can be `null`, in which case the `basePrintTicket` is validated, checked for viability, and returned, possibly with changes.</span></span>  
  
 <span data-ttu-id="def6e-562">이 오버 로드를 사용 하 여 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>모두를 `deltaPrintTicket` 및 <xref:System.Printing.PrintTicket> 에 <xref:System.Printing.ValidationResult> 작업 차원 범위의 반환 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-562">With this overload of <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>, both the `deltaPrintTicket` and the <xref:System.Printing.PrintTicket> in the <xref:System.Printing.ValidationResult> that is returned have job wide scope.</span></span> <span data-ttu-id="def6e-563">다른 범위를 지정 하려면이 메서드의 다른 오버 로드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-563">To specify a different scope use the other overload of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-564">다음 예제에서는이 메서드를 사용 하 여 두 인쇄 티켓을 병합 하 고 응답 하는 방법의 <xref:System.Printing.ValidationResult> 반환 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-564">The following example shows how to use this method to merge two print tickets and respond to the <xref:System.Printing.ValidationResult> that is returned.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="def6e-565">입력된 인쇄 티켓 중 하나 이상이 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-565">At least one of the input print tickets is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="def6e-566"><paramref name="basePrintTicket" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="def6e-566">The <paramref name="basePrintTicket" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="def6e-567">유효성 검사, 병합기 및 실행 가능성 확인 작업이 실패 했습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-567">The validation, merger, and viability checking operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MergeAndValidatePrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket, System.Printing.PrintTicketScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Printing.ValidationResult MergeAndValidatePrintTicket(class System.Printing.PrintTicket basePrintTicket, class System.Printing.PrintTicket deltaPrintTicket, valuetype System.Printing.PrintTicketScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function MergeAndValidatePrintTicket (basePrintTicket As PrintTicket, deltaPrintTicket As PrintTicket, scope As PrintTicketScope) As ValidationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::ValidationResult MergeAndValidatePrintTicket(System::Printing::PrintTicket ^ basePrintTicket, System::Printing::PrintTicket ^ deltaPrintTicket, System::Printing::PrintTicketScope scope);" />
      <MemberSignature Language="F#" Value="member this.MergeAndValidatePrintTicket : System.Printing.PrintTicket * System.Printing.PrintTicket * System.Printing.PrintTicketScope -&gt; System.Printing.ValidationResult" Usage="printQueue.MergeAndValidatePrintTicket (basePrintTicket, deltaPrintTicket, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePrintTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="deltaPrintTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="scope" Type="System.Printing.PrintTicketScope" />
      </Parameters>
      <Docs>
        <param name="basePrintTicket"><span data-ttu-id="def6e-568">첫 번째 인쇄 티켓입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-568">The first print ticket.</span></span></param>
        <param name="deltaPrintTicket"><span data-ttu-id="def6e-569">두 번째 인쇄 티켓입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-569">The second print ticket.</span></span> <span data-ttu-id="def6e-570">이 매개 변수는 <see langword="null" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-570">This can be <see langword="null" />.</span></span></param>
        <param name="scope"><span data-ttu-id="def6e-571">나타내는 값 여부를 범위의 <paramref name="deltaPrintTicket" />, 및에서 반환 된 인쇄 티켓의 범위는 <see cref="T:System.Printing.ValidationResult" />, 페이지, 문서, 전체 작업 인지 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-571">A value indicating whether the scope of <paramref name="deltaPrintTicket" />, and the scope of the print ticket returned in the <see cref="T:System.Printing.ValidationResult" />, is a page, a document, or the whole job.</span></span></param>
        <summary><span data-ttu-id="def6e-572">두 개의 병합 <see cref="T:System.Printing.PrintTicket" />s 하 고 결과 보장 하는 <see cref="T:System.Printing.PrintTicket" /> 유효, 프린터를 지원 하지 않는 하는 지정 된 범위로 제한 인쇄 기능을 위해 묻지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-572">Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid, does not ask for any printing functionality that the printer does not support, and is limited to the specified scope.</span></span></summary>
        <returns><span data-ttu-id="def6e-573">A <see cref="T:System.Printing.ValidationResult" /> 포함 하는 병합 된 <see cref="T:System.Printing.PrintTicket" /> 및 실행 가능성을 보장 하기 위해 변경 해야 설정 여부를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-573">A <see cref="T:System.Printing.ValidationResult" /> that includes the merged <see cref="T:System.Printing.PrintTicket" /> and an indication of whether any of its settings had to be changed to guarantee viability.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-574">메서드를 통해 생성 즉, 인쇄 기능을 요청 하지 않는 티켓 프린터를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-574">The method produces a viable print ticket; that is, a ticket that does not request printing features that the printer does not support.</span></span> <span data-ttu-id="def6e-575">에 대해 두 개의 입력된 인쇄 티켓 않은지 먼저 확인 하는 메서드를 [인쇄 스키마](https://go.microsoft.com/fwlink/?LinkId=186397)합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-575">The method first validates the two input print tickets against the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span> <span data-ttu-id="def6e-576">하거나 올바르지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-576">If either is invalid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="def6e-577">두 티켓 다음 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-577">The two tickets are then merged.</span></span> <span data-ttu-id="def6e-578">특정 속성에 다른 값이 있는 경우 결과 병합 된 티켓 처음 사용 하 여 델타 티켓의 값.</span><span class="sxs-lookup"><span data-stu-id="def6e-578">If they have different values for a particular property then the resulting merged ticket initially uses the value of the delta ticket.</span></span>  
  
 <span data-ttu-id="def6e-579">병합 된 티켓 프린터의 실제 기능에 대해 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-579">The merged ticket is then checked against the actual capabilities of the printer.</span></span> <span data-ttu-id="def6e-580">있으면 티켓의 설정을 프린터 기능을 사용 하 여 호환 되지 않습니다. 다음 프린터 드라이버는 논리를 사용 하 여 이러한 설정을 변경 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-580">If any settings in the ticket are incompatible with the printer's capabilities, then the printer driver changes those settings by using whatever logic it wants.</span></span> <span data-ttu-id="def6e-581">일반적으로 사용자 또는 프린터의 기본 설정 값을 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-581">Typically, it substitutes the user's or printer's default value for the setting.</span></span> <span data-ttu-id="def6e-582">대체 값의 드라이버의 소스가 없는과 동일한 티켓이 `basePrintTicket`, 다음 병합 된 티켓 입력 티켓 둘 다에서 다른 몇 가지 설정이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-582">It the driver's source of substitute values is not the same ticket as `basePrintTicket`, then the merged ticket might have some settings that are different from both of the input tickets.</span></span> <span data-ttu-id="def6e-583">설정을 변경 하려면 프린터 드라이버에 있으면이 팩트에서 보고 되는 <xref:System.Printing.ValidationResult.ConflictStatus%2A> 의 속성은 <xref:System.Printing.ValidationResult>합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-583">If the printer driver has to change any settings then this fact is reported in the <xref:System.Printing.ValidationResult.ConflictStatus%2A> property of the <xref:System.Printing.ValidationResult>.</span></span>  
  
 <span data-ttu-id="def6e-584">인쇄 큐의 기본 설정에 따라 병합 및 유효성 검사를 설정 해야 합니다 `basePrintTicket` 에 <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> 또는 <xref:System.Printing.PrintQueue.UserPrintTicket%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-584">To merge and validate based on a print queue's default settings, you should set `basePrintTicket` to the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> or the <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</span></span>  
  
 <span data-ttu-id="def6e-585">합니다 `deltaPrintTicket` 매개 변수 수 있습니다 `null`있으며이 경우는 `basePrintTicket` 유효성 검사, 가능성을 확인 및 가능한 경우 변경 내용으로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-585">The `deltaPrintTicket` parameter can be `null`, in which case the `basePrintTicket` is validated, checked for viability, and returned, possibly with changes.</span></span>  
  
 <span data-ttu-id="def6e-586">경우는 `scope` 에서 반환 된 인쇄 티켓 인 작업을 합니다 <xref:System.Printing.ValidationResult> 포함 될 수 있습니다 [인쇄 스키마](https://go.microsoft.com/fwlink/?LinkId=186397) 작업, 문서 및 페이지 접두사를 사용 하 여 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-586">If the `scope` is a job, then the print ticket returned in the <xref:System.Printing.ValidationResult> can include [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) parameters with Job, Document, and Page prefixes.</span></span> <span data-ttu-id="def6e-587">경우는 `scope` 이 문서에서 작업당 설정 `deltaPrintTicket` 무시 되 페이지 접두사 및 반환 된 티켓 문서를 사용 하 여 매개 변수를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-587">If the `scope` is a document, then per-job settings in `deltaPrintTicket` are ignored, and the returned ticket can include parameters with Document and Page prefixes.</span></span> <span data-ttu-id="def6e-588">경우는 `scope` 작업당 설정과 문서별 설정에서 다음 페이지는 `deltaPrintTicket` 무시 되 고 반환 된 티켓 페이지 접두사만을 사용 하 여 매개 변수를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-588">If the `scope` is a page, then the per-job settings and the per-document settings in `deltaPrintTicket` are ignored, and the returned ticket can include parameters with only the Page prefix.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="def6e-589">입력된 인쇄 티켓 중 하나 이상이 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-589">At least one of the input print tickets is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="def6e-590"><paramref name="basePrintTicket" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="def6e-590">The <paramref name="basePrintTicket" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="def6e-591">합니다 <paramref name="scope" /> 매개 변수에 유효한 없는 <see cref="T:System.Printing.PrintTicketScope" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-591">The <paramref name="scope" /> parameter does not have a valid <see cref="T:System.Printing.PrintTicketScope" /> value.</span></span></exception>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="def6e-592">유효성 검사, 병합기 및 실행 가능성 확인 작업이 실패 했습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-592">The validation, merger, and viability checking operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override sealed string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Printing.PrintQueue.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-593">인쇄 큐의 이름을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-593">Gets or sets the print queue's name.</span></span></summary>
        <value><span data-ttu-id="def6e-594">인쇄 대기열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-594">The name of the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-595">합니다 <xref:System.Printing.PrintQueue> 개체에는 읽기 전용 <xref:System.Printing.PrintQueue.FullName%2A> 속성과 쓰기 가능한 <xref:System.Printing.PrintQueue.ShareName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-595">The <xref:System.Printing.PrintQueue> object also has a read only <xref:System.Printing.PrintQueue.FullName%2A> property and a writeable <xref:System.Printing.PrintQueue.ShareName%2A> property.</span></span>  
  
 <span data-ttu-id="def6e-596">로컬 인쇄 서버의 큐에 대 한 <xref:System.Printing.PrintQueue.Name%2A> 고 <xref:System.Printing.PrintQueue.FullName%2A> 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-596">For queues on the local print server, <xref:System.Printing.PrintQueue.Name%2A> and <xref:System.Printing.PrintQueue.FullName%2A> are the same.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-597">다음 예제에서는이 속성을 사용 하 여 사용할 수 있는 인쇄 대기열의 하위 집합을 나열 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-597">The following example shows how to use this property to list a subset of available print queues.</span></span>  
  
 [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CPP/Program.cpp#listsubsetofprintqueues)]
 [!code-csharp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CSharp/Program.cs#listsubsetofprintqueues)]
 [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/visualbasic/program.vb#listsubsetofprintqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedUserIntervention">
      <MemberSignature Language="C#" Value="public bool NeedUserIntervention { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedUserIntervention" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.NeedUserIntervention" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NeedUserIntervention As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NeedUserIntervention { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NeedUserIntervention : bool" Usage="System.Printing.PrintQueue.NeedUserIntervention" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-598">프린터에 사용자 개입이의 주의가 필요한 지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-598">Gets a value that indicates whether the printer needs the attention of a human being.</span></span></summary>
        <value><span data-ttu-id="def6e-599"><see langword="true" /> 프린터에 사용자 개입이 필요 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-599"><see langword="true" /> if the printer needs human attention; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-600">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-600">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-601">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-601">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfJobs">
      <MemberSignature Language="C#" Value="public virtual int NumberOfJobs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfJobs" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.NumberOfJobs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfJobs As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfJobs { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfJobs : int" Usage="System.Printing.PrintQueue.NumberOfJobs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-602">인쇄 대기열에 있는 작업의 총 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-602">Gets the total number of jobs lined up in the print queue.</span></span></summary>
        <value><span data-ttu-id="def6e-603">큐에서 작업의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-603">The number of jobs in the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PagePunt">
      <MemberSignature Language="C#" Value="public bool PagePunt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PagePunt" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.PagePunt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagePunt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PagePunt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.PagePunt : bool" Usage="System.Printing.PrintQueue.PagePunt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-604">프린터가 현재 페이지를 인쇄할 수 인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-604">Gets a value that indicates whether the printer is unable to print the current page.</span></span></summary>
        <value><span data-ttu-id="def6e-605"><see langword="true" /> 프린터가 현재 페이지를 인쇄할 수 없는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-605"><see langword="true" /> if the printer is unable to print the current page; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-606">프린터가이 의미를 사용 하 여 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-606">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public virtual void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Pause();" />
      <MemberSignature Language="F#" Value="abstract member Pause : unit -&gt; unit&#xA;override this.Pause : unit -&gt; unit" Usage="printQueue.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="def6e-607">인쇄 큐를 일시 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-607">Pauses the print queue.</span></span> <span data-ttu-id="def6e-608">될 때까지 일시 중지 된 상태로 유지 됩니다 <see cref="M:System.Printing.PrintQueue.Resume" /> 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-608">It remains paused until <see cref="M:System.Printing.PrintQueue.Resume" /> is executed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="def6e-609">프린터를 일시 중지할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-609">The printer cannot be paused.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Resume" />
      </Docs>
    </Member>
    <Member MemberName="PrintingIsCancelled">
      <MemberSignature Language="C#" Value="public bool PrintingIsCancelled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintingIsCancelled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.PrintingIsCancelled" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintingIsCancelled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintingIsCancelled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PrintingIsCancelled : bool with get, set" Usage="System.Printing.PrintQueue.PrintingIsCancelled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-610">현재 인쇄 작업을 취소 되 고 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-610">Gets or sets a value that indicates whether the current print job is being cancelled.</span></span></summary>
        <value><span data-ttu-id="def6e-611"><see langword="true" /> 인쇄 작업이 취소 되었으면 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-611"><see langword="true" /> if the print job is being cancelled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public virtual int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Priority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : int with get, set" Usage="System.Printing.PrintQueue.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-612">동일한 인쇄 서버에서 호스트 되는 한 동일한 실제 프린터를 사용 하는 다른 인쇄 대기열을 기준으로 인쇄 대기열의 우선 순위를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-612">Gets or sets the priority of the print queue relative to other print queues that are hosted by the same print server and that use the same physical printer.</span></span></summary>
        <value><span data-ttu-id="def6e-613">인쇄 큐에 대 한 우선 순위입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-613">The priority for the print queue.</span></span> <span data-ttu-id="def6e-614">가능한 값은 1에서 99 까지의입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-614">Possible values are from 1 through 99.</span></span> <span data-ttu-id="def6e-615">기본값은 1입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-615">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-616">이 속성을 비교 합니다 <xref:System.Printing.PrintQueue.DefaultPriority%2A> 큐에 인쇄 작업의 상대적 우선 순위에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-616">Contrast this property with the <xref:System.Printing.PrintQueue.DefaultPriority%2A> property which is about the relative priority of print jobs in the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public virtual void Purge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Purge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Purge" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Purge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Purge();" />
      <MemberSignature Language="F#" Value="abstract member Purge : unit -&gt; unit&#xA;override this.Purge : unit -&gt; unit" Usage="printQueue.Purge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="def6e-617">인쇄 대기열에 있는 모든 작업을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-617">Removes all the jobs in the print queue.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="def6e-618">큐에서 일부 인쇄 작업을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-618">Some print jobs could not be removed from the queue.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QueueAttributes">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueueAttributes QueueAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintQueueAttributes QueueAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueueAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueAttributes As PrintQueueAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueueAttributes QueueAttributes { System::Printing::PrintQueueAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.QueueAttributes : System.Printing.PrintQueueAttributes" Usage="System.Printing.PrintQueue.QueueAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueueAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-619">인쇄 큐의 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-619">Gets the properties of the print queue.</span></span></summary>
        <value><span data-ttu-id="def6e-620"><see cref="T:System.Printing.PrintQueueAttributes" /> 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-620">A bitwise combination of the <see cref="T:System.Printing.PrintQueueAttributes" /> enumeration values.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueDriver">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintDriver QueueDriver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintDriver QueueDriver" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueueDriver" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueueDriver As PrintDriver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintDriver ^ QueueDriver { System::Printing::PrintDriver ^ get(); void set(System::Printing::PrintDriver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueueDriver : System.Printing.PrintDriver with get, set" Usage="System.Printing.PrintQueue.QueueDriver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintDriver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-621">큐에 대 한 프린터 드라이버를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-621">Gets or sets the printer driver for the queue.</span></span></summary>
        <value><span data-ttu-id="def6e-622"><see cref="T:System.Printing.PrintDriver" /> 큐를 사용 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-622">The <see cref="T:System.Printing.PrintDriver" /> that the queue uses.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuePort">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintPort QueuePort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintPort QueuePort" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueuePort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueuePort As PrintPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintPort ^ QueuePort { System::Printing::PrintPort ^ get(); void set(System::Printing::PrintPort ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueuePort : System.Printing.PrintPort with get, set" Usage="System.Printing.PrintQueue.QueuePort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintPort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-623">큐를 사용 하는 포트를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-623">Gets or sets the port that the queue uses.</span></span></summary>
        <value><span data-ttu-id="def6e-624"><see cref="T:System.Printing.PrintPort" /> 인쇄 큐에 할당 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-624">The <see cref="T:System.Printing.PrintPort" /> that is assigned to the print queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuePrintProcessor">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintProcessor QueuePrintProcessor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintProcessor QueuePrintProcessor" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueuePrintProcessor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueuePrintProcessor As PrintProcessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintProcessor ^ QueuePrintProcessor { System::Printing::PrintProcessor ^ get(); void set(System::Printing::PrintProcessor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueuePrintProcessor : System.Printing.PrintProcessor with get, set" Usage="System.Printing.PrintQueue.QueuePrintProcessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintProcessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-625">큐에서 사용 되는 인쇄 처리기를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-625">Gets or sets the print processor that the queue uses.</span></span></summary>
        <value><span data-ttu-id="def6e-626"><see cref="T:System.Printing.PrintProcessor" /> 큐를 사용 하는, WinPrint 등입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-626">The <see cref="T:System.Printing.PrintProcessor" /> that the queue uses, such as WinPrint or ModiPrint.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueStatus">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueueStatus QueueStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintQueueStatus QueueStatus" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueueStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueStatus As PrintQueueStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueueStatus QueueStatus { System::Printing::PrintQueueStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.QueueStatus : System.Printing.PrintQueueStatus" Usage="System.Printing.PrintQueue.QueueStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueueStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-627">프린터의 상태를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-627">Gets a value that represents the status of the printer.</span></span> <span data-ttu-id="def6e-628">"Warming up," "initializing", "printing" 등입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-628">These include "warming up," "initializing," "printing," and others.</span></span></summary>
        <value><span data-ttu-id="def6e-629">현재 <see cref="T:System.Printing.PrintQueueStatus" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-629">The current <see cref="T:System.Printing.PrintQueueStatus" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="def6e-630">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-630">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueattributes)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueattributes)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="printQueue.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="def6e-631">속성을 업데이트 합니다 <see cref="T:System.Printing.PrintQueue" /> 프린터와 컴퓨터에서 실행 되는 인쇄 큐 유틸리티의 값이 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-631">Updates the properties of the <see cref="T:System.Printing.PrintQueue" /> object with values from the printer and the print queue utility that runs on the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-632">프로그램 변경을 <xref:System.Printing.PrintQueue> 개체의 속성 손실 되는 경우 <xref:System.Printing.PrintQueue.Refresh%2A> 실행, 프린터 및 인쇄 큐에 기록한 <xref:System.Printing.PrintQueue.Commit%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-632">Changes your program makes to a <xref:System.Printing.PrintQueue> object's properties are lost when <xref:System.Printing.PrintQueue.Refresh%2A> executes, unless they have been written to the printer and print queue with <xref:System.Printing.PrintQueue.Commit%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-633">다음 예제는 가능한 오류 상태에 대 한 모든 프린터 설문 조사의 일환으로이 메서드를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-633">The following example shows how to use this method as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SurveyQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#surveyqueues)]
 [!code-csharp[PrinterStatusSurvey#SurveyQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#surveyqueues)]
 [!code-vb[PrinterStatusSurvey#SurveyQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#surveyqueues)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="def6e-634">일부 속성 수 새로 고칠 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-634">Some of the properties could not be refreshed.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Commit" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public virtual void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Resume();" />
      <MemberSignature Language="F#" Value="abstract member Resume : unit -&gt; unit&#xA;override this.Resume : unit -&gt; unit" Usage="printQueue.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="def6e-635">일시 중지 된 인쇄 큐를 다시 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-635">Restarts a print queue that was paused.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="def6e-636">다음 예제에서는이 메서드를 사용 하 여 일시 중지 된 인쇄 큐를 다시 시작 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-636">The following example shows how to use this method to resume a paused print queue.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#handlepausedjob)]
 [!code-csharp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#handlepausedjob)]
 [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#handlepausedjob)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="def6e-637">프린터를 다시 시작할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-637">The printer cannot resume.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Pause" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleCompletedJobsFirst">
      <MemberSignature Language="C#" Value="public bool ScheduleCompletedJobsFirst { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScheduleCompletedJobsFirst" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.ScheduleCompletedJobsFirst" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScheduleCompletedJobsFirst As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScheduleCompletedJobsFirst { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScheduleCompletedJobsFirst : bool" Usage="System.Printing.PrintQueue.ScheduleCompletedJobsFirst" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-638">첫 번째 작업의 스풀링이 완전히 완료 되지 후자 대기열에 들어간 경우에 작업을 완료 하는 인쇄 하는지 여부를 나타내는 값을 가져옵니다 또는 우선 순위가 높습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-638">Gets a value that indicates whether the printer prints jobs that have completed the spooling process before jobs that have not fully spooled even if the latter entered the queue first or have a higher priority.</span></span></summary>
        <value><span data-ttu-id="def6e-639"><see langword="true" /> 프린터가 인쇄 작업의 스풀링이 완전히 완료 되지 않으면 작업을 완료 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-639"><see langword="true" /> if the printer prints jobs that have completed the spooling process before jobs that have not fully spooled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorFile">
      <MemberSignature Language="C#" Value="public virtual string SeparatorFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SeparatorFile" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.SeparatorFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SeparatorFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorFile : string with get, set" Usage="System.Printing.PrintQueue.SeparatorFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-640">각 인쇄 작업의 시작 부분에 삽입 되는 파일의 경로 및 파일 이름을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-640">Gets or sets the path and file name of a file that is inserted at the beginning of each print job.</span></span></summary>
        <value><span data-ttu-id="def6e-641">구분 파일의 경로 및 파일 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-641">The path and file name of the separator file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-642">이 일반적으로 단일 페이지 파일로 쉽게 다른 인쇄 작업의 출력을 구분 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-642">This is normally a single-page file used to make it easier to separate the output of different print jobs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShareName">
      <MemberSignature Language="C#" Value="public virtual string ShareName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShareName" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.ShareName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShareName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ShareName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShareName : string with get, set" Usage="System.Printing.PrintQueue.ShareName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-643">공유 되는 경우 네트워크의 사용자가 표시 되는 프린터의 이름을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-643">Gets or sets a name for the printer that is seen by users on the network when it is shared.</span></span></summary>
        <value><span data-ttu-id="def6e-644">공유 프린터의 공개 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-644">The public name of a shared printer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-645">합니다 <xref:System.Printing.PrintQueue> 개체에는 읽기 전용 <xref:System.Printing.PrintQueue.FullName%2A> 속성과 쓰기 가능한 <xref:System.Printing.PrintQueue.Name%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-645">The <xref:System.Printing.PrintQueue> object also has a read only <xref:System.Printing.PrintQueue.FullName%2A> property and a writeable <xref:System.Printing.PrintQueue.Name%2A> property.</span></span> <span data-ttu-id="def6e-646">로컬 인쇄 서버의 큐에 대 한 이러한 속성에 동일한 값을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-646">For queues on the local print server, these properties have the same value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTimeOfDay">
      <MemberSignature Language="C#" Value="public virtual int StartTimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.StartTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StartTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int StartTimeOfDay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StartTimeOfDay : int with get, set" Usage="System.Printing.PrintQueue.StartTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-647">Utc (협정 세계시) (또한 호출된 그리니치 표준시 [GMT]), 프린터가 작업을 인쇄 하는 자정 이후의 시간 (분)으로 표현 된, 하루 중 시간을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-647">Gets or sets the earliest time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the printer will print a job.</span></span></summary>
        <value><span data-ttu-id="def6e-648">프린터를 먼저를 사용할 수 있게 하는 시간 (UTC) 자정 이후의 시간 (분)으로 표현 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-648">The time of day that the printer first becomes available, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="def6e-649">최대값은 1439입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-649">The maximum value is 1439.</span></span> <span data-ttu-id="def6e-650">프린터를 사용 하 여 처음 설치 될 때를 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 프린터 추가 마법사를 프린터 기본값으로 사용할 수 있는 상태로 항상 및이 속성이 모든 시간대에서 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-650">When a printer is first installed by using the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] Add Printer Wizard, the printer defaults to being available all the time, and this property returns 0 in all time zones.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-651">없으면 UTC 표준 시간대에서를 추가 하거나 표준 시간대에 대 한 정확한 시간을 가져오거나 설정할 60의 배수를 뺄 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-651">If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone.</span></span> <span data-ttu-id="def6e-652">예를 들어, North America의 태평양 표준시 시간대 및 일광 절약 시간제에가 없는 경우 효과 현지 시간 UTC 보다 8 시간 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-652">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="def6e-653">설정 하려면 <xref:System.Printing.PrintQueue.StartTimeOfDay%2A> 표준 시간대에서 오전 12 시에 설정한 오전 8 시 UTC는 480 (8 \* 60 =) 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-653">To set <xref:System.Printing.PrintQueue.StartTimeOfDay%2A> to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 \* 60).</span></span> <span data-ttu-id="def6e-654">또한 해야 시간이 24 시간 후에 0으로 롤오버 하는 (즉; 1439 분 후).</span><span class="sxs-lookup"><span data-stu-id="def6e-654">You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute).</span></span> <span data-ttu-id="def6e-655">표준 시간대에서 오후 6 시를 설정 하려면 설정한 오전 2 시 UTC로 120 (2 \* 60 =)는입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-655">To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \* 60).</span></span> <span data-ttu-id="def6e-656">참조 <xref:System.TimeZone>, <xref:System.TimeSpan>, 및 <xref:System.DateTime> 메서드를 조작 하는 유용한 표준 시간대에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-656">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.</span></span>  
  
 <span data-ttu-id="def6e-657">프린터를 사용할 수 항상이 속성 모든 표준 시간대에서 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-657">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-658">다음 예에서는 현재 프린터를 사용할 수 있는지 여부를 확인 하려면이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-658">The following example shows how to use this property to determine whether a printer is available at the present time.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#usingstartanduntiltimes)]
 [!code-csharp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#usingstartanduntiltimes)]
 [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#usingstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.UntilTimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="UntilTimeOfDay">
      <MemberSignature Language="C#" Value="public virtual int UntilTimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UntilTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.UntilTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UntilTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UntilTimeOfDay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UntilTimeOfDay : int with get, set" Usage="System.Printing.PrintQueue.UntilTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-659">Utc (협정 세계시) (또한 호출된 그리니치 표준시 [GMT]), 프린터가 작업을 인쇄 하는 자정 이후의 시간 (분)으로 표현 된 가장 늦은 시간을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-659">Gets or sets the latest time, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the printer will print a job.</span></span></summary>
        <value><span data-ttu-id="def6e-660">프린터가 더 이상 사용할 수 있는 시간 (UTC) 자정 이후의 시간 (분)으로 표현 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-660">The time of day that the printer is no longer available, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="def6e-661">최대값은 1439입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-661">The maximum value is 1439.</span></span> <span data-ttu-id="def6e-662">프린터를 사용 하 여 처음 설치 될 때를 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 프린터 추가 마법사를 프린터 기본값으로 사용할 수 있는 상태로 항상 및이 속성이 모든 시간대에서 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-662">When a printer is first installed by using the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] Add Printer Wizard, the printer defaults to being available all the time, and this property returns 0 in all time zones.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-663">없으면 UTC 표준 시간대에서를 추가 하거나 표준 시간대에 대 한 정확한 시간을 가져오거나 설정할 60의 배수를 뺄 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-663">If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone.</span></span> <span data-ttu-id="def6e-664">예를 들어, North America의 태평양 표준시 시간대 및 일광 절약 시간제에가 없는 경우 효과 현지 시간 UTC 보다 8 시간 됩니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-664">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="def6e-665">설정 하려면 <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A> 표준 시간대에서 오전 12 시에 설정한 오전 8 시 UTC는 480 (8 \* 60 =) 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-665">To set <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A> to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 \* 60).</span></span> <span data-ttu-id="def6e-666">또한 해야 해당 시간을 24 시간 (1439 분) 후 0으로 롤오버 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-666">You also must remember that time rolls over to zero after the 24th hour (the 1439th minute).</span></span> <span data-ttu-id="def6e-667">표준 시간대에서 오후 6 시를 설정 하려면 설정한 오전 2 시 UTC로 120 (2 \* 60 =)는입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-667">To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \* 60).</span></span> <span data-ttu-id="def6e-668">참조 <xref:System.TimeZone>, <xref:System.TimeSpan>, 및 <xref:System.DateTime> 메서드를 조작 하는 유용한 표준 시간대에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-668">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.</span></span>  
  
 <span data-ttu-id="def6e-669">프린터를 사용할 수 항상이 속성 모든 표준 시간대에서 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-669">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-670">다음 예에서는 현재 프린터를 사용할 수 있는지 여부를 확인 하려면이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-670">The following example shows how to use this property to determine whether a printer is available at the present time.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#usingstartanduntiltimes)]
 [!code-csharp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#usingstartanduntiltimes)]
 [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#usingstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.StartTimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="UserPrintTicket">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintTicket UserPrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintTicket UserPrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.UserPrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UserPrintTicket As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintTicket ^ UserPrintTicket { System::Printing::PrintTicket ^ get(); void set(System::Printing::PrintTicket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserPrintTicket : System.Printing.PrintTicket with get, set" Usage="System.Printing.PrintQueue.UserPrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="def6e-671">현재 사용자의 기본을 가져오거나 설정 합니다. <see cref="T:System.Printing.PrintTicket" /> 인쇄 작업에 대 한 자세한 정보를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-671">Gets or sets the current user's default <see cref="T:System.Printing.PrintTicket" /> object which contains detailed information about the print job.</span></span></summary>
        <value><span data-ttu-id="def6e-672">합니다 <see cref="T:System.Printing.PrintTicket" /> 현재 사용자에 대해 또는 <see langword="null" /> 사용자가 <see cref="T:System.Printing.PrintTicket" /> 지정 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-672">The <see cref="T:System.Printing.PrintTicket" /> for the current user, or <see langword="null" /> if a user <see cref="T:System.Printing.PrintTicket" /> has not been specified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="def6e-673">각 사용자가 자신의 기본 있습니다 <xref:System.Printing.PrintTicket>합니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-673">Each user can have his or her own default <xref:System.Printing.PrintTicket>.</span></span>  
  
 <span data-ttu-id="def6e-674">이 속성 수 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-674">This property can be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="def6e-675">다음 예제에서는 두 인쇄 티켓을 병합 하는 동안이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="def6e-675">The following example shows how to use this property while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintQueue.DefaultPrintTicket" />
      </Docs>
    </Member>
  </Members>
</Type>