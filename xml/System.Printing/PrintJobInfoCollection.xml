<Type Name="PrintJobInfoCollection" FullName="System.Printing.PrintJobInfoCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba5af5cba00ae3732bc39d44dce465a904352304" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30469087" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrintJobInfoCollection : System.Printing.PrintSystemObjects, IDisposable, System.Collections.Generic.IEnumerable&lt;System.Printing.PrintSystemJobInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintJobInfoCollection extends System.Printing.PrintSystemObjects implements class System.Collections.Generic.IEnumerable`1&lt;class System.Printing.PrintSystemJobInfo&gt;, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintJobInfoCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintJobInfoCollection&#xA;Inherits PrintSystemObjects&#xA;Implements IDisposable, IEnumerable(Of PrintSystemJobInfo)" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintJobInfoCollection : System::Printing::PrintSystemObjects, IDisposable, System::Collections::Generic::IEnumerable&lt;System::Printing::PrintSystemJobInfo ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObjects</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Printing.PrintSystemJobInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>하나 이상의 <see cref="T:System.Printing.PrintSystemJobInfo" /> 개체를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  내에서 클래스는 <xref:System.Printing> Windows 서비스 또는 ASP.NET 응용 프로그램 또는 서비스 내에서 사용 하기 위해 네임 스페이스를 사용할 수 없습니다. 이러한 응용 프로그램 종류 중 하나에서 이러한 클래스를 사용 하는 동안 예기치 않은 문제가 발생할 수 있습니다, 그리고 감소와 같은 서비스 성능 및 런타임 예외입니다.  
  
 Windows Forms 응용 프로그램에서 인쇄 하는 경우 참조는 <xref:System.Drawing.Printing> 네임 스페이스입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintJobInfoCollection (System.Printing.PrintQueue printQueue, string[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintQueue printQueue, string[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.#ctor(System.Printing.PrintQueue,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintJobInfoCollection(System::Printing::PrintQueue ^ printQueue, cli::array &lt;System::String ^&gt; ^ propertyFilter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="printQueue">인쇄 작업에서 컬렉션을 채우는 인쇄 큐입니다.</param>
        <param name="propertyFilter">
          <see cref="T:System.Printing.PrintSystemJobInfo" /> 개체의 속성 하위 집합 목록입니다.</param>
        <summary>지정한 <see cref="T:System.Printing.PrintJobInfoCollection" />에 있고 지정한 속성 필터에 나열된 속성에 있는 개체만 초기화하는 모든 작업에 대해 <see cref="T:System.Printing.PrintSystemJobInfo" /> 개체를 포함하는 <see cref="T:System.Printing.PrintQueue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Printing.PrintSystemJobInfo> 컬렉션의 개체에 나열 된 이러한 속성 으로만 초기화 되는 `propertyFilter`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Printing.PrintSystemJobInfo printObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Printing.PrintSystemJobInfo printObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.Add(System.Printing.PrintSystemJobInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (printObject As PrintSystemJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Printing::PrintSystemJobInfo ^ printObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printObject" Type="System.Printing.PrintSystemJobInfo" />
      </Parameters>
      <Docs>
        <param name="printObject">추가되는 개체입니다.</param>
        <summary>
          <see cref="T:System.Printing.PrintJobInfoCollection" />에 멤버를 추가합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">To be added.</param>
        <summary>
          <see cref="T:System.Printing.PrintJobInfoCollection" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드. `Dispose()` 보호 된 호출 `Dispose(Boolean)` 로 설정 하는 명명 되지 않은 부울 매개 `true`합니다. <xref:System.Object.Finalize%2A> 호출 `Dispose` 로 설정 하는 매개 변수와 함께 `false`합니다.  
  
 이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 부울 매개 변수가 true 이면이 <xref:System.Printing.PrintJobInfoCollection> 참조 합니다. 이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다. <see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
 에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerator&lt;System.Printing.PrintSystemJobInfo&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Printing.PrintSystemJobInfo&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator(Of PrintSystemJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Printing::PrintSystemJobInfo ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Printing.PrintSystemJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Collections.IEnumerator" />로 닫은 제네릭 <see cref="T:System.Printing.PrintSystemJobInfo" /> 인터페이스를 구현하는 개체를 가져옵니다.</summary>
        <returns>제네릭 <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현하며 <see cref="T:System.Printing.PrintSystemJobInfo" />에 들어 있는 <see cref="T:System.Printing.PrintJobInfoCollection" /> 개체를 통해 반복 처리할 수 있는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 것이 좋습니다는 `foreach` 컬렉션의 모든 구성원을 반복 하는 문입니다. 사용 하 여 <xref:System.Printing.PrintJobInfoCollection.GetEnumerator%2A> 모든 다른 멤버를 건너뛰어 반복와 같은 사용자 지정 해야 할 때만 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNonGenericEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetNonGenericEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetNonGenericEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNonGenericEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetNonGenericEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>제네릭이 아닌 <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현하는 개체를 가져옵니다.</summary>
        <returns>제네릭이 아닌 <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현하며 <see cref="T:System.Printing.PrintSystemJobInfo" />에 들어 있는 <see cref="T:System.Printing.PrintJobInfoCollection" /> 개체를 통해 반복 처리할 수 있는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 것이 좋습니다는 `foreach` 컬렉션의 모든 구성원을 반복 하는 문입니다. 모든 다른 멤버를 건너뛰어 반복을와 같은 사용자 지정 하려는 경우에 자신의 열거자 개체를 사용 합니다.  
  
 사용자 고유의 열거자 해야 할 경우 일반, 형식이 안전한 함수를 사용 하는 것이 좋습니다 <xref:System.Printing.PrintJobInfoCollection.GetEnumerator%2A> 대신 <xref:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator%2A>합니다. <xref:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator%2A> 의 요구 사항을 처리 하는 데에 public이 고 <xref:System.Collections.IEnumerable> 이 컬렉션에서 구현 하는 인터페이스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>