<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PrintSystemObject.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac551b35a7dda6fd535113870889c578063a0d45951.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51b35a7dda6fd535113870889c578063a0d45951</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintSystemObject">
          <source>Defines basic properties and methods that are common to the objects of the printing system.</source>
          <target state="translated">인쇄 시스템의 개체에 공통으로 적용되는 기본 속성과 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintSystemObject">
          <source>Classes that derive from this class represent such objects as print queues, print servers, and print jobs.</source>
          <target state="translated">이 클래스에서 파생된 클래스는 인쇄 큐, 인쇄 서버, 인쇄 작업 등과 같은 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>In addition to being the base class for print system objects, this class can be useful for calling methods when your application does not know or does not care what particular type of print system object it is using.</source>
          <target state="translated">인쇄 시스템 개체에 대 한 기본 클래스에 뿐이 클래스는 응용 프로그램를 알지 못하고 또는 인쇄 시스템 개체 사용 중인 어떤 특정 유형의 영향을 받지 않으며 메서드 호출에 대 한 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>For example, you could enumerate through a <ph id="ph1">&lt;xref:System.Printing.PrintSystemObjects&gt;</ph> collection of different object types, calling the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject.Commit%2A&gt;</ph> method on each of them in turn.</source>
          <target state="translated">예를 들어 열거할 수 있습니다는 <ph id="ph1">&lt;xref:System.Printing.PrintSystemObjects&gt;</ph> 다른 개체 형식, 호출의 컬렉션은 <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject.Commit%2A&gt;</ph> 에서 각 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>Classes within the <ph id="ph1">&lt;xref:System.Printing&gt;</ph> namespace are not supported for use within a Windows service or ASP.NET application or service.</source>
          <target state="translated">내에서 클래스는 <ph id="ph1">&lt;xref:System.Printing&gt;</ph> Windows 서비스 또는 ASP.NET 응용 프로그램 또는 서비스 내에서 사용 하기 위해 네임 스페이스를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</source>
          <target state="translated">이러한 응용 프로그램 종류 중 하나에서 이러한 클래스를 사용 하는 동안 예기치 않은 문제가 발생할 수 있습니다, 그리고 감소와 같은 서비스 성능 및 런타임 예외입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>If you want to print from a Windows Forms application, see the <ph id="ph1">&lt;xref:System.Drawing.Printing&gt;</ph> namespace.</source>
          <target state="translated">Windows Forms 응용 프로그램에서 인쇄 하는 경우 참조는 <ph id="ph1">&lt;xref:System.Drawing.Printing&gt;</ph> 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>If you derive a class from <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>, you may want to derive a collection of objects of that class from <ph id="ph2">&lt;see cref="T:System.Printing.PrintSystemObjects" /&gt;</ph>.</source>
          <target state="translated">클래스를 파생 하는 경우 <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>에서 해당 클래스의 개체의 컬렉션을 만들 수도 있습니다 <ph id="ph2">&lt;see cref="T:System.Printing.PrintSystemObjects" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintSystemObject">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.#ctor(System.Printing.PrintSystemObjectLoadMode)">
          <source>A value that specifies whether the properties of the object should be initialized when the object is loaded.</source>
          <target state="translated">개체가 로드될 때 속성이 초기화되어야 하는지 여부를 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.#ctor(System.Printing.PrintSystemObjectLoadMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Printing.PrintSystemObjectLoadMode" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>을 사용하여 <ph id="ph2">&lt;see cref="T:System.Printing.PrintSystemObjectLoadMode" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.BaseAttributeNames">
          <source>Gets the names of the attributes of the derived class.</source>
          <target state="translated">파생 클래스 특성의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.BaseAttributeNames">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 값의 배열입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Commit">
          <source>When overridden in a derived class, writes any changes that your program has made to the object's properties to the actual software or hardware component that the object represents.</source>
          <target state="translated">파생 클래스에서 재정의가 이루어지면 프로그램에서 변경된 모든 개체 속성 내용이 개체가 나타내는 실제 소프트웨어 또는 하드웨어 구성 요소에 기록되어야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Commit">
          <source>For example, when overridden by the <ph id="ph1">&lt;xref:System.Printing.PrintServer&gt;</ph> class, <ph id="ph2">&lt;xref:System.Printing.PrintServer.Commit%2A&gt;</ph> will write changes that are made to the <ph id="ph3">&lt;xref:System.Printing.PrintServer&gt;</ph> object's properties to the actual computer that the object represents.</source>
          <target state="translated">예를 들어에서 재정의 되 면는 <ph id="ph1">&lt;xref:System.Printing.PrintServer&gt;</ph> 클래스 <ph id="ph2">&lt;xref:System.Printing.PrintServer.Commit%2A&gt;</ph> 에 적용 된 변경 내용을 쓸는 <ph id="ph3">&lt;xref:System.Printing.PrintServer&gt;</ph> 개체가 나타내는 실제 컴퓨터에 대 한 개체의 속성입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Commit">
          <source>The following example shows how to use this method (called on a <ph id="ph1">&lt;xref:System.Printing.PrintQueue&gt;</ph> object, which overrides the method from <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>) as part of the process of merging print tickets.</source>
          <target state="translated">다음 예제에서는이 메서드를 사용 하는 방법을 보여 줍니다 (에서 호출 된 <ph id="ph1">&lt;xref:System.Printing.PrintQueue&gt;</ph> 개체에서 메서드를 재정의 하 <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>) 인쇄 티켓을 병합 하는 과정의 일환으로 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintSystemObject">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph>에 대한 마지막 참조를 해제하기 전에 반드시 <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> 개체의 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the unnamed Boolean parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 로 설정 하는 명명 되지 않은 부울 매개 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with the parameter set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">`Dispose`</ph> 로 설정 하는 매개 변수와 함께 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>When the Boolean parameter is <ph id="ph1">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> references.</source>
          <target state="translated">부울 매개 변수 인 경우 <ph id="ph1">`true`</ph>,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> 참조 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose()`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>를 재정의할 때 이전 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Finalize 메서드를 재정의<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Finalize">
          <source>Releases the resources that are being used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Finalize">
          <source>The <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Finalize%2A&gt;</ph> method acts as a safeguard to clean up resources in the event that the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject.Dispose%2A&gt;</ph> method is not called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Finalize%2A&gt;</ph> 메서드 리소스를 정리 하는 보호 기능이 역할에 <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject.Dispose%2A&gt;</ph> 메서드가 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Finalize">
          <source>You should implement the <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Finalize%2A&gt;</ph> method to clean up only unmanaged resources.</source>
          <target state="translated">구현 해야는 <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Finalize%2A&gt;</ph> 만 관리 되지 않는 리소스를 정리 하는 메서드.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Finalize">
          <source>You should not implement this method for managed objects, because the garbage collector cleans up managed resources automatically.</source>
          <target state="translated">관리 되는 리소스는 가비지 수집기가 자동으로 정리 하기 때문에 관리 되는 개체에 대 한이 메서드를 구현 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Initialize">
          <source>Initializes the properties of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>의 속성을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.InternalDispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.InternalDispose(System.Boolean)">
          <source>When overridden in a derived class, releases the unmanaged resources that are being used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>, and optionally releases the managed resources that are being used.</source>
          <target state="translated">파생 클래스에서 재정의가 이루어지면 <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>에서 사용 중인 관리되지 않는 리소스를 해제하고 사용 중인 관리되는 리소스를 선택적으로 해제합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintSystemObject.IsDisposed">
          <source>Gets or sets a value that indicates whether the object has been disposed.</source>
          <target state="translated">개체가 삭제되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object has been disposed; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">개체가 삭제되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintSystemObject.Name">
          <source>Gets the name of the object.</source>
          <target state="translated">개체의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.Name">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the name of the object.</source>
          <target state="translated">개체의 이름을 나타내는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintSystemObject.Parent">
          <source>Gets the parent of the object.</source>
          <target state="translated">개체의 부모를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.Parent">
          <source>Another <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          <target state="translated">다른 <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.Parent">
          <source>For example, the parent of a print queue is the print server that hosts the queue.</source>
          <target state="translated">예를 들어 인쇄 큐의 부모는 큐를 호스팅하는 인쇄 서버입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintSystemObject.PropertiesCollection">
          <source>Gets a collection of attribute and value pairs.</source>
          <target state="translated">특성 및 값 쌍 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.PropertiesCollection">
          <source>A <ph id="ph1">&lt;see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" /&gt;</ph> that contains attribute and value pairs.</source>
          <target state="translated">특성 및 값 쌍이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.PropertiesCollection">
          <source>The following example shows how to use this property to discover at run time the properties, and the types of those properties, of a print system object, without using reflection.</source>
          <target state="translated">다음 예제에서는 리플렉션을 사용 하지 않고 런타임에 속성과 인쇄 시스템 개체의 해당 속성의 형식을 검색 하려면이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Refresh">
          <source>When overridden in a derived class, updates the properties of an object of the derived class so that its values match the values of the actual software or hardware component that the object represents.</source>
          <target state="translated">파생 클래스에서 재정의가 이루어지면 파생 클래스의 개체 속성을 업데이트하여 개체가 나타내는 실제 소프트웨어 또는 하드웨어 구성 요소 값과 속성 값을 일치시켜야 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Refresh">
          <source>Any changes that you have made to the properties of an object of the derived class may be lost when the <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Refresh%2A&gt;</ph> of the derived class executes.</source>
          <target state="translated">파생된 클래스의 개체의 속성에 대 한 변경 내용을 손실 된 경우는 <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Refresh%2A&gt;</ph> 파생된 클래스의를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Refresh">
          <source>The loss will occur if the changes have not yet been written to the actual software or hardware component, by using the derived class' implementation of <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Commit%2A&gt;</ph>.</source>
          <target state="translated">변경 내용이 기록 되지 않은 아직 실제 소프트웨어 또는 하드웨어 구성 요소로 파생된 클래스의 구현을 사용 하 여 손실 경우 <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Commit%2A&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>