<Type Name="RibbonApplicationMenuItem" FullName="System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
  <TypeSignature Language="C#" Value="public class RibbonApplicationMenuItem : System.Windows.Controls.Ribbon.RibbonMenuItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RibbonApplicationMenuItem extends System.Windows.Controls.Ribbon.RibbonMenuItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class RibbonApplicationMenuItem&#xA;Inherits RibbonMenuItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class RibbonApplicationMenuItem : System::Windows::Controls::Ribbon::RibbonMenuItem" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Ribbon.RibbonMenuItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.Ribbon.RibbonApplicationMenuItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fe2d4-101"><see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" /> 컨트롤 안의 메뉴 항목을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-101">Represents a menu item inside a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2d4-102">일반적으로 사용 된 <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> 메뉴 항목을 클릭할 때 명령을 호출 하려면.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-102">You typically use a <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> to invoke a command when the menu item is clicked.</span></span> <span data-ttu-id="fe2d4-103">메뉴 항목과 함께 명령을 사용 하는 방법에 대 한 자세한 내용은 참조 [하는 방법: MenuItem에 명령을 추가](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370)합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-103">For more information about using commands with menu items, see [How to: Add a Command to a MenuItem](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370).</span></span>  
  
 <span data-ttu-id="fe2d4-104">A <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> 하위 메뉴를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-104">A <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> can have submenus.</span></span> <span data-ttu-id="fe2d4-105">하위 메뉴는 <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> 내에서 개체 이루어집니다는 <xref:System.Windows.Controls.ItemsControl.Items%2A> 컬렉션은 <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-105">The submenu of the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> is made up of the objects within the <xref:System.Windows.Controls.ItemsControl.Items%2A> collection of a <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>.</span></span> <span data-ttu-id="fe2d4-106">일반적으로 <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> 다른 포함 하도록 <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> 을 중첩 된 하위 메뉴를 만들 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-106">It is common for a <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> to contain other <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> objects to create nested submenus.</span></span>  
  
 <span data-ttu-id="fe2d4-107">A <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> 하위 메뉴를 포함할 수 없으며 명령을 호출할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-107">A <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> cannot have submenus and also invoke a command.</span></span> <span data-ttu-id="fe2d4-108">경우는 <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> 에 하위 메뉴가와 연결 된 명령에서 <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> 가 호출 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-108">If the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> has a submenu, the command associated with the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> is not invoked.</span></span> <span data-ttu-id="fe2d4-109">메뉴 머리글 역할 하며 명령을 호출 하는 컨트롤을 할 때 사용 된 <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-109">When you need a control that acts as a menu header and invokes a command, use a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span></span>  
  
 <span data-ttu-id="fe2d4-110">다음 그림은 리본 컨트롤에 대 한 응용 프로그램 메뉴를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-110">The following illustration shows the Application Menu for a ribbon control.</span></span> <span data-ttu-id="fe2d4-111">**열려**, **저장**, 및 **페이지 설정** 항목은의 예는 <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-111">The **Open**, **Save**, and **Page Setup** items are examples of the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> control.</span></span>  
  
 <span data-ttu-id="fe2d4-112">![응용 프로그램 메뉴 리본](~/add/media/wpfribbon-appmenu.png "응용 프로그램 메뉴 리본")</span><span class="sxs-lookup"><span data-stu-id="fe2d4-112">![Ribbon Application Menu](~/add/media/wpfribbon-appmenu.png "Ribbon Application Menu")</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe2d4-113">다음 예제에서는 앞에 표시 된 응용 프로그램 메뉴의 메뉴 항목을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-113">The following example shows the menu items of the Application Menu shown previously.</span></span> <span data-ttu-id="fe2d4-114"><xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> 개체에서 직접 호스트 되는 <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu> 및는 <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-114">The <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> objects are hosted directly in the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu> and in a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span></span>  
  
 [!code-xaml[Ribbon_Snippets#AppMenuItems](~/samples/snippets/csharp/VS_Snippets_Wpf/ribbon_snippets/cs/ribbonwindow1.xaml#appmenuitems)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonApplicationMenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RibbonApplicationMenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe2d4-115"><see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-115">Initializes a new instance of the <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe2d4-116">새 <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-116">Returns a new <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> object.</span></span></summary>
        <returns><span data-ttu-id="fe2d4-117"><see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> 컬렉션의 항목을 표시하는 데 사용되는 새로운 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 컨테이너 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-117">A new <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> container object that is used to display an item from the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fe2d4-118">테스트할 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-118">The item to test.</span></span></param>
        <summary><span data-ttu-id="fe2d4-119">지정된 항목이 해당 컨테이너인지(또는 해당 컨테이너가 될 수 있는지)를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-119">Returns a value that indicates whether the specified item is (or is eligible to be) its own container.</span></span></summary>
        <returns>
          <span data-ttu-id="fe2d4-120">항목이 <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />, <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /> 또는 <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />인 경우 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-120"><see langword="true" /> if the item is a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />, a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, a <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" />, or a <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As RibbonApplicationMenuItemLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Ribbon::RibbonApplicationMenuItemLevel Level { System::Windows::Controls::Ribbon::RibbonApplicationMenuItemLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe2d4-121">메뉴 항목을 표시할 수준 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-121">Gets a value that indicates at what level the menu item is displayed.</span></span></summary>
        <value><span data-ttu-id="fe2d4-122">메뉴 항목을 표시할 수준을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-122">One the enumeration values that specifies at what level the menu item is displayed.</span></span> <span data-ttu-id="fe2d4-123">등록된 기본값은 <see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-123">The registered default is <see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" />.</span></span> <span data-ttu-id="fe2d4-124">값에 영향을 줄 수 요소에 대 한 자세한 내용은 참조 [종속성 속성 값 우선 순위](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-124">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Level"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fe2d4-125">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="fe2d4-125">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fe2d4-126">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="fe2d4-126">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.LevelProperty>|  
|<span data-ttu-id="fe2d4-127">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="fe2d4-127">Metadata properties set to `true`</span></span>|<span data-ttu-id="fe2d4-128">없음</span><span class="sxs-lookup"><span data-stu-id="fe2d4-128">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LevelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LevelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LevelProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.LevelProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LevelProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LevelProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe2d4-129"><see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-129">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivatingKeyTip">
      <MemberSignature Language="C#" Value="protected override void OnActivatingKeyTip (System.Windows.Controls.ActivatingKeyTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnActivatingKeyTip(class System.Windows.Controls.ActivatingKeyTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnActivatingKeyTip(System.Windows.Controls.ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnActivatingKeyTip (e As ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnActivatingKeyTip(System::Windows::Controls::ActivatingKeyTipEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ActivatingKeyTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fe2d4-130">활성화에 대한 데이터를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-130">Contains data about the activation.</span></span></param>
        <summary><span data-ttu-id="fe2d4-131">KeyTip 또는 액셀러레이터 키를 누를 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-131">Called when the KeyTip or accelerator key is pressed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe2d4-132">새 템플릿이 적용될 때 <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />의 표시 트리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-132">Builds the visual tree for the <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> when a new template is applied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2d4-133">이 메서드는 응용 프로그램 코드 또는 레이아웃 과정 다시 빌드 같은 내부 프로세스가 <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> 메서드를 호출할 때마다 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-133">This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fe2d4-134">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-134">The event data.</span></span></param>
        <summary><span data-ttu-id="fe2d4-135"><see cref="E:System.Windows.UIElement.KeyDown" /> 이벤트에 대한 클래스 처리를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-135">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="fe2d4-136">항목을 표시하는 데 사용되는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-136">The element that is used to display the item.</span></span></param>
        <param name="item"><span data-ttu-id="fe2d4-137"><see cref="P:System.Windows.Controls.ItemsControl.Items" /> 컬렉션에서 표시할 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-137">The item to display from the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</span></span></param>
        <summary><span data-ttu-id="fe2d4-138">지정한 항목을 표시하기 위해 지정한 요소를 준비합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-138">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected override bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldApplyItemContainerStyle (container As DependencyObject, item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ShouldApplyItemContainerStyle(System::Windows::DependencyObject ^ container, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="fe2d4-139">컨테이너 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-139">The container element.</span></span></param>
        <param name="item"><span data-ttu-id="fe2d4-140">컨테이너가 포함할 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-140">The item that the container is for.</span></span></param>
        <summary><span data-ttu-id="fe2d4-141"><see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 또는 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 속성의 스타일을 지정된 항목의 컨테이너 요소에 적용할지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-141">Returns a value that indicates whether to apply the style from the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> or <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property to the container element of the specified item.</span></span></summary>
        <returns>
          <span data-ttu-id="fe2d4-142"><paramref name="container" />가 <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /> 또는 <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />일 경우 <see langword="false" />이며, 그 이외의 경우에는 기본 구현에서 반환한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fe2d4-142"><see langword="false" /> if <paramref name="container" /> is a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" />, or <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; otherwise, the value returned by the base implementation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>