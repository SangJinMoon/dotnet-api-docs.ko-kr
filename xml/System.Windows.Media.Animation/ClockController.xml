<Type Name="ClockController" FullName="System.Windows.Media.Animation.ClockController">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7f5db2fabcb7d8bd16865ae93253c3f12de7ee2" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52209609" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClockController : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClockController extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ClockController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClockController&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClockController sealed : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type ClockController = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a1800-101">대화형으로 <see cref="T:System.Windows.Media.Animation.Clock" />을 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-101">Interactively controls a <see cref="T:System.Windows.Media.Animation.Clock" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1800-102">사용 된 <xref:System.Windows.Media.Animation.ClockController> 대화형으로 시작, 일시 중지, 다시 시작, 검색, 건너뛰기, 중지 및 제거 하는 <xref:System.Windows.Media.Animation.Clock>.</span><span class="sxs-lookup"><span data-stu-id="a1800-102">Use a <xref:System.Windows.Media.Animation.ClockController> to interactively begin, pause, resume, seek, skip, stop, and remove a <xref:System.Windows.Media.Animation.Clock>.</span></span> <span data-ttu-id="a1800-103">루트 수준 클록만 대화형으로 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-103">You can only interactively control root-level clocks.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.Clock" />
    <altmember cref="P:System.Windows.Media.Animation.Clock.Controller" />
  </Docs>
  <Members>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="clockController.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1800-104">다음 눈금에서 시작할 대상 <see cref="P:System.Windows.Media.Animation.ClockController.Clock" />을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-104">Sets the target <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> to begin at the next tick.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1800-105">이 메서드를 사용 하면 대상 <xref:System.Windows.Media.Animation.Clock> 처럼 동작 하도록 해당 <xref:System.Windows.Media.Animation.Timeline> 개체의 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 다음 틱의 시간으로 설정 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-105">This method causes the target <xref:System.Windows.Media.Animation.Clock> to behave as though its <xref:System.Windows.Media.Animation.Timeline> object's <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> were set to the time of the next tick.</span></span> <span data-ttu-id="a1800-106">타임 라인의 실제 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 설정 무시 (되었지만 변경 되지 않습니다).</span><span class="sxs-lookup"><span data-stu-id="a1800-106">The timeline's actual <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> setting is ignored (but not changed).</span></span>  
  
 <span data-ttu-id="a1800-107">이 메서드는 대상 클록의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 에 <xref:System.Windows.Media.Animation.ClockState.Active>입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-107">This method changes the target clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="a1800-108"><xref:System.Windows.Media.Animation.ClockController.Begin%2A> 메서드를 일시 중지 된 시계를 다시 시작 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-108">The <xref:System.Windows.Media.Animation.ClockController.Begin%2A> method does not resume a paused clock.</span></span>  
  
 <span data-ttu-id="a1800-109">이 메서드는 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</span><span class="sxs-lookup"><span data-stu-id="a1800-109">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="a1800-110">파생 작업으로 적절 한 이벤트를도 발생 하지 않습니다 그때까지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-110">As a side-effect, the appropriate events will also not be raised until then.</span></span> <span data-ttu-id="a1800-111">이 메서드를 호출 합니다 <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-111">Calling this method triggers the <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Clock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.Clock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clock As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Clock { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.Animation.Clock" Usage="System.Windows.Media.Animation.ClockController.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1800-112">가져옵니다 합니다 <see cref="T:System.Windows.Media.Animation.Clock" /> 이 제어 <see cref="T:System.Windows.Media.Animation.ClockController" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-112">Gets the <see cref="T:System.Windows.Media.Animation.Clock" /> controlled by this <see cref="T:System.Windows.Media.Animation.ClockController" />.</span></span></summary>
        <value><span data-ttu-id="a1800-113">합니다 <see cref="T:System.Windows.Media.Animation.Clock" /> 이 제어 <see cref="T:System.Windows.Media.Animation.ClockController" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-113">The <see cref="T:System.Windows.Media.Animation.Clock" /> controlled by this <see cref="T:System.Windows.Media.Animation.ClockController" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="clockController.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1800-114">대상 <see cref="T:System.Windows.Media.Animation.Clock" />의 처리를 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-114">Stops the target <see cref="T:System.Windows.Media.Animation.Clock" /> from progressing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1800-115">일시 중지할 수 있습니다는 <xref:System.Windows.Media.Animation.Clock> clock 현재 상태 및 일시 중지에 관계 없이 현재 상태는 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-115">You can pause a <xref:System.Windows.Media.Animation.Clock> regardless of its current state, and pausing a clock does not change its current state.</span></span> <span data-ttu-id="a1800-116">시계를 일시 중지할 수 있지만 <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, 또는 <xref:System.Windows.Media.Animation.ClockState.Filling>합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-116">A clock can be paused while <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, or <xref:System.Windows.Media.Animation.ClockState.Filling>.</span></span> <span data-ttu-id="a1800-117">클록 일시 중지를 해제 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.ClockController.Resume%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a1800-117">The only way to unpause a clock is by using the <xref:System.Windows.Media.Animation.ClockController.Resume%2A> method.</span></span> <span data-ttu-id="a1800-118">시계를 암시적으로 일시 중지 자식 일시 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-118">Pausing a clock implicitly pauses its children.</span></span>  
  
 <span data-ttu-id="a1800-119">대상 클록 이미 일시 중지 되 면이 메서드를 호출 해도 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-119">Calling this method when the target clock is already paused has no effect.</span></span>  
  
 <span data-ttu-id="a1800-120">클록 트리거 일시 중지 된 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-120">Pausing a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="clockController.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1800-121">제거 합니다 <see cref="T:System.Windows.Media.Animation.Clock" /> 와 연결 된 <see cref="T:System.Windows.Media.Animation.ClockController" /> 애니메이션 효과 주는 속성에서.</span><span class="sxs-lookup"><span data-stu-id="a1800-121">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> associated with this <see cref="T:System.Windows.Media.Animation.ClockController" /> from the properties it animates.</span></span> <span data-ttu-id="a1800-122">Clock과 자식 clock 이러한 속성을 지정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-122">The clock and its child clocks will no longer affect these properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1800-123">이 메서드를 트리거하는 <xref:System.Windows.Media.Animation.Clock.RemoveRequested> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-123">This method triggers the <xref:System.Windows.Media.Animation.Clock.RemoveRequested> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1800-124">다음 예제에서는 제거 하 고 대화형으로 clock 제어 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-124">The following example shows how to remove and otherwise interactively control a clock.</span></span>  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="clockController.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1800-125">진행을 재개하기 위해 이전에 일시 중지된 <see cref="T:System.Windows.Media.Animation.Clock" />을 사용하도록 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-125">Enables a <see cref="T:System.Windows.Media.Animation.Clock" /> that was previously paused to resume progressing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1800-126">일시 중지 하거나 다시 시작할 수는 <xref:System.Windows.Media.Animation.Clock> clock의 현재 상태 및 일시 중지 하거나 재개에 관계 없이 현재 상태는 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-126">You can pause or resume a <xref:System.Windows.Media.Animation.Clock> regardless of its current state, and pausing or resuming a clock does not change its current state.</span></span> <span data-ttu-id="a1800-127">시계를 일시 중지할 수 있지만 <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, 또는 <xref:System.Windows.Media.Animation.ClockState.Filling>합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-127">A clock can be paused while <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, or <xref:System.Windows.Media.Animation.ClockState.Filling>.</span></span> <span data-ttu-id="a1800-128">일시 중지 된 시계를 다시 시작 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.ClockController.Resume%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a1800-128">The only way to resume a paused clock is by using the <xref:System.Windows.Media.Animation.ClockController.Resume%2A> method.</span></span> <span data-ttu-id="a1800-129">암시적으로 clock 자식을 다시 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-129">Resuming a clock implicitly resumes its children.</span></span> <span data-ttu-id="a1800-130">Clock 일시 중지 되지에 대해이 메서드를 호출 해도 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-130">Calling this method on a clock that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="a1800-131">일시 중지 된 클록 트리거를 다시 시작을 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-131">Resuming a paused clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="a1800-132">대상 클록의 시간으로 측정된 검색 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-132">The seek offset, measured in the target clock's time.</span></span> <span data-ttu-id="a1800-133">이 오프셋은 <paramref name="origin" />의 값에 따라 클록의 <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> 또는 <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />을 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-133">This offset is relative to the clock's <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> or <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />, depending on the value of <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="a1800-134">지정된 오프셋이 대상 클록의 <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> 또는 <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />을 기준으로 하는지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-134">A value that indicates whether the specified offset is relative to the target clock's <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> or <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />.</span></span></param>
        <summary><span data-ttu-id="a1800-135">다음 틱이 발생할 때 대상 <see cref="P:System.Windows.Media.Animation.ClockController.Clock" />을 지정된 크기만큼 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-135">Seeks the target <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> by the specified amount when the next tick occurs.</span></span> <span data-ttu-id="a1800-136">대상 클록이 중지된 경우 검색하면 다시 활성화됩니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-136">If the target clock is stopped, seeking makes it active again.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1800-137">Seek 작업 적용 되지 않습니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 계정에이 clock의 타임이 라인의 설정을: 시계는 해당 타임 라인에 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-137">Seek operations do not take the <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings of this clock's timeline into account: the clock is treated as though its timeline has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="a1800-138">이 메서드가 변경 시계의 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 에 <xref:System.Windows.Media.Animation.ClockState.Active>입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-138">This method changes the clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="a1800-139">이 메서드는 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</span><span class="sxs-lookup"><span data-stu-id="a1800-139">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="a1800-140">파생 작업으로 적절 한 이벤트를도 발생 하지 않습니다 그때까지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-140">As a side-effect, the appropriate events also will not be raised until then.</span></span>  
  
 <span data-ttu-id="a1800-141">스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-141">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="a1800-142">대상 클록에 자식이 해당 현재 그에 따라 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-142">If the target clock has children, their current time is updated accordingly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1800-143">다음 예제를 사용 하 여 검색 하는 방법을 보여 줍니다는 <xref:System.Windows.Media.Animation.ClockController>합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-143">The following example shows how to seek using a <xref:System.Windows.Media.Animation.ClockController>.</span></span>  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.TimeSeekOrigin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="a1800-144">대상 클록의 시간으로 측정된 검색 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-144">The seek offset, measured in the target clock's time.</span></span> <span data-ttu-id="a1800-145">이 오프셋은 <paramref name="origin" />의 값에 따라 클록의 <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> 또는 <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />을 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-145">This offset is relative to the clock's <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> or <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />, depending on the value of <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="a1800-146">지정된 오프셋이 대상 클록의 <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> 또는 <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />을 기준으로 하는지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-146">A value that indicates whether the specified offset is relative to the target clock's <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> or <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />.</span></span></param>
        <summary><span data-ttu-id="a1800-147">대상 검색 <see cref="T:System.Windows.Media.Animation.Clock" /> 즉시를 지정 된 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-147">Seeks the target <see cref="T:System.Windows.Media.Animation.Clock" /> by the specified amount immediately.</span></span> <span data-ttu-id="a1800-148">대상 클록이 중지된 경우 검색하면 다시 활성화됩니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-148">If the target clock is stopped, seeking makes it active again.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1800-149">Seek 작업 적용 되지 않습니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 계정에이 clock의 타임이 라인의 설정을: 시계는 해당 타임 라인에 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-149">Seek operations do not take the <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings of this clock's timeline into account: the clock is treated as though its timeline has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="a1800-150"><xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> clock 이며 마지막 클록 틱의 seeked에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-150"><xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> aligns the seeked time of the clock with the last clock tick.</span></span> <span data-ttu-id="a1800-151">값으로 인해 변경 내용을 반영 하도록 즉시 업데이트 됩니다 <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>이지만 화면 화면 업데이트 될 때까지 이러한 변경 내용은 반영 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-151">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, even though the screen will not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="a1800-152">대상 클록에 자식이 해당 현재 그에 따라 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-152">If the target clock has children, their current time is updated accordingly.</span></span>  
  
 <span data-ttu-id="a1800-153">이 메서드가 변경 시계의 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 에 <xref:System.Windows.Media.Animation.ClockState.Active>입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-153">This method changes the clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="a1800-154">스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-154">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1800-155">다음 예제에서는 둘 다를 <xref:System.Windows.Media.Animation.ClockController.Seek%2A> 하 고 <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> 의 메서드를 <xref:System.Windows.Media.Animation.ClockController>합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-155">The following example demonstrates both the <xref:System.Windows.Media.Animation.ClockController.Seek%2A> and <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> methods of a <xref:System.Windows.Media.Animation.ClockController>.</span></span>  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="clockController.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1800-156">대상 <see cref="T:System.Windows.Media.Animation.Clock" />의 현재 시간을 활성 기간의 끝까지 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-156">Advances the current time of the target <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1800-157">이 메서드는 대상 클록의 이동은 활성 기간의 끝에 현재 시간 이 시점에서 clock의 동작으로 지정 된를 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 설정은 해당 <xref:System.Windows.Media.Animation.Timeline>합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-157">This method advances the target clock's current time to the end of its active period; the clock's behavior at this point is specified by the <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting of its <xref:System.Windows.Media.Animation.Timeline>.</span></span> <span data-ttu-id="a1800-158">경우 타임 라인의 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 속성이 <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, 시계 채웁니다; 속성 설정 된 경우 <xref:System.Windows.Media.Animation.FillBehavior.Stop>, 시계 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-158">If the timeline's <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> property is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the clock fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the clock stops.</span></span>  
  
 <span data-ttu-id="a1800-159">이 메서드는 경우에만 적용 대상 클록의 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 는 <xref:System.Windows.Media.Animation.ClockState.Active>합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-159">This method has an effect only if the target clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> is <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="a1800-160">이 메서드는 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</span><span class="sxs-lookup"><span data-stu-id="a1800-160">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="a1800-161">파생 작업으로 적절 한 이벤트를도 발생 하지 않습니다 그때까지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-161">As a side-effect, the appropriate events also will not be raised until then.</span></span>  
  
 <span data-ttu-id="a1800-162">기간 트리거는 fill로 storyboard를 진행 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-162">Advancing a storyboard to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1800-163">대상 <see cref="T:System.Windows.Media.Animation.Clock" />의 대화형 속도를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-163">Gets or sets the interactive speed of the target <see cref="T:System.Windows.Media.Animation.Clock" />.</span></span></summary>
        <value><span data-ttu-id="a1800-164">대상 클록의 대화형 속도를 설명하는 0보다 큰 유한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-164">A finite value greater than zero that describes the interactive speed of the target clock.</span></span> <span data-ttu-id="a1800-165">이 값을 클록의 <see cref="T:System.Windows.Media.Animation.Timeline" />의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 값에 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-165">This value is multiplied against the value of the <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of the clock's <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span> <span data-ttu-id="a1800-166">예를 들어 타임라인의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />이 0.5이고 <see cref="T:System.Windows.Media.Animation.ClockController" /> 개체의 <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />가 3.0이면 타임라인은 1.5배 보통 속도(0.5\*3.0)로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-166">For example, if the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> is 0.5 and the <see cref="T:System.Windows.Media.Animation.ClockController" /> object's <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> is 3.0, the timeline moves at 1.5 times normal speed (0.5 \* 3.0).</span></span> <span data-ttu-id="a1800-167">기본값은 1.0입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-167">The default value is 1.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1800-168">이 속성은 다음 틱 까지는 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-168">Setting this property has no effect until the next tick.</span></span> <span data-ttu-id="a1800-169">이 속성을 설정 하 고 다음 하기 전에 해당 값을 가져올 경우 이전 값을 얻게 다음 틱 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-169">If you set this property and then get its value before the next tick occurs, you'll get the old value.</span></span> <span data-ttu-id="a1800-170">이 속성은 다음 틱 후 새 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-170">This property will return the new value after the next tick.</span></span>  
  
 <span data-ttu-id="a1800-171">이 속성을 설정할 기본 타임 라인의 값을 변경 하지 않습니다 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-171">Setting this property does not change the value of the underlying timeline's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>.</span></span>  
  
 <span data-ttu-id="a1800-172">대상 클록의 트리거이 속성을 설정할 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-172">Setting this property triggers the target clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="clockController.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1800-173">대상 <see cref="T:System.Windows.Media.Animation.Clock" />을 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-173">Stops the target <see cref="T:System.Windows.Media.Animation.Clock" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1800-174">이 메서드는 대상 클록의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 에 <xref:System.Windows.Media.Animation.Clock.Stopped%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-174">This method changes the target clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</span></span>  
  
 <span data-ttu-id="a1800-175">A <xref:System.Windows.Media.Animation.Clock.Stopped%2A> 시계를 사용 하 여 다시 시작할 수 있습니다 합니다 <xref:System.Windows.Media.Animation.ClockController.Begin%2A>를 <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, 또는 <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a1800-175">A <xref:System.Windows.Media.Animation.Clock.Stopped%2A> clock can be restarted by using the <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, or <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> method.</span></span>  
  
 <span data-ttu-id="a1800-176">이 메서드는 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</span><span class="sxs-lookup"><span data-stu-id="a1800-176">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="a1800-177">파생 작업으로 적절 한 이벤트를도 발생 하지 않습니다 그때까지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-177">As a side-effect, the appropriate events also will not be raised until then.</span></span>  
  
 <span data-ttu-id="a1800-178">클록 트리거를 중지 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> 이벤트 아닌는 <xref:System.Windows.Media.Animation.Clock.Completed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="a1800-178">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Clock.Completed> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>