<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClockController.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56a94d8bd0079bc66770268c57d92f5d1bd9a1c57.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a94d8bd0079bc66770268c57d92f5d1bd9a1c57</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.ClockController">
          <source>Interactively controls a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>.</source>
          <target state="translated">대화형으로 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>을 제어합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.ClockController">
          <source>Use a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph> to interactively begin, pause, resume, seek, skip, stop, and remove a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>.</source>
          <target state="translated">사용 하 여 한 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph> 대화형으로 시작, 일시 중지, 다시 시작, 검색, 건너뛰기, 중지 및 제거 하는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.ClockController">
          <source>You can only interactively control root-level clocks.</source>
          <target state="translated">루트 수준의 클럭만 대화형으로 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>Sets the target <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.ClockController.Clock" /&gt;</ph> to begin at the next tick.</source>
          <target state="translated">다음 눈금에서 시작할 대상 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.ClockController.Clock" /&gt;</ph>을 설정합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>This method causes the target <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> to behave as though its <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> object's <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> were set to the time of the next tick.</source>
          <target state="translated">이 메서드를 사용 하면 대상 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 것 처럼 동작 하도록 해당 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> 개체의 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> 다음 틱의 시간으로 설정 되었습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>The timeline's actual <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> setting is ignored (but not changed).</source>
          <target state="translated">타임 라인의 실제 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> 설정은 무시 됩니다 (이지만 변경 되지 않습니다).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>This method changes the target clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
          <target state="translated">이 메서드는 대상 클록의 변경 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph> method does not resume a paused clock.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph> 메서드 일시 중지 된 클록 다시 시작 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
          <target state="translated">이 메서드는 다음 번 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>As a side-effect, the appropriate events will also not be raised until then.</source>
          <target state="translated">파생 작업으로 적절 한 이벤트는 또한 발생 하지 그때 까지는.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>Calling this method triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.ClockController.Clock">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> controlled by this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 의해 제어되는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.Clock">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> controlled by this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 의해 제어되는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>Stops the target <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> from progressing.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 진행을 중지합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>You can pause a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> regardless of its current state, and pausing a clock does not change its current state.</source>
          <target state="translated">일시 중지할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> clock 해당 현재 상태와 일시 중지에 관계 없이 현재 상태는 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>A clock can be paused while <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph>.</source>
          <target state="translated">클록 일시 중지할 수 동안 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>The only way to unpause a clock is by using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Resume%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 클록 일시 중지를 해제 하는 유일한 방법은는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Resume%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>Pausing a clock implicitly pauses its children.</source>
          <target state="translated">클록을 암시적으로 일시 중지 자식을 일시 중지 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>Calling this method when the target clock is already paused has no effect.</source>
          <target state="translated">대상 클록 이미 일시 중지 된 경우이 메서드를 호출 해도 아무 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>Pausing a clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">클록 트리거 일시 중지는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Remove">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph> from the properties it animates.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>와 연결된 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph>을 애니메이션이 적용된 속성에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Remove">
          <source>The clock and its child clocks will no longer affect these properties.</source>
          <target state="translated">Clock과 자식 Clock은 더 이상 이러한 속성에 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Remove">
          <source>This method triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.RemoveRequested&gt;</ph> event.</source>
          <target state="translated">이 메서드를 트리거합니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.RemoveRequested&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Remove">
          <source>The following example shows how to remove and otherwise interactively control a clock.</source>
          <target state="translated">다음 예제에서는 클록 대화형으로 제어 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was previously paused to resume progressing.</source>
          <target state="translated">이전에 일시 중지된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>을 활성화하여 진행을 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>You can pause or resume a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> regardless of its current state, and pausing or resuming a clock does not change its current state.</source>
          <target state="translated">일시 중지 하거나 다시 시작할 수는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> clock의 현재 상태 및 일시 중지 하거나 재개 하는 것에 관계 없이 현재 상태는 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>A clock can be paused while <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph>.</source>
          <target state="translated">클록 일시 중지할 수 동안 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>The only way to resume a paused clock is by using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Resume%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 일시 중지 된 시계를 다시 시작 하는 유일한 방법은는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Resume%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>Resuming a clock implicitly resumes its children.</source>
          <target state="translated">암시적으로 clock 자식 다시 시작 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>Calling this method on a clock that is not paused has no effect.</source>
          <target state="translated">일시 중지 되지 않은 클록에서이 메서드를 호출 해도 아무 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>Resuming a paused clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">일시 중지 된 클록 트리거를 다시 시작은 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The seek offset, measured in the target clock's time.</source>
          <target state="translated">대상 클록의 시간으로 측정된 검색 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This offset is relative to the clock's <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph>, depending on the value of <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">이 오프셋은 <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>의 값에 따라 클록의 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph>을 기준으로 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A value that indicates whether the specified offset is relative to the target clock's <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph>.</source>
          <target state="translated">지정된 오프셋이 대상 Clock의 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph>을 기준으로 하는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeks the target <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.ClockController.Clock" /&gt;</ph> by the specified amount when the next tick occurs.</source>
          <target state="translated">다음 틱이 발생할 때 지정된 크기만큼 대상 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.ClockController.Clock" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>If the target clock is stopped, seeking makes it active again.</source>
          <target state="translated">대상 클록이 중지된 경우 검색하면 다시 활성화됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seek operations do not take the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings of this clock's timeline into account: the clock is treated as though its timeline has a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
          <target state="translated">Seek 작업을 사용 하지 않습니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> 이 시계의 타임이 라인의 설정을 고려: 클록의 타임 라인에 처럼 처리 되는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 1 및 0의 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This method changes the clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
          <target state="translated">이 메서드는 클록의 변경 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
          <target state="translated">이 메서드는 다음 번 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>As a side-effect, the appropriate events also will not be raised until then.</source>
          <target state="translated">파생 작업으로 적합 한 이벤트가 발생 하지 않습니다 그때 까지는 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeking a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 검색는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>If the target clock has children, their current time is updated accordingly.</source>
          <target state="translated">자식이 대상 클록의 현재 시간 그에 따라 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The following example shows how to seek using a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">다음 예제를 사용 하 여 검색 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The seek offset, measured in the target clock's time.</source>
          <target state="translated">대상 클록의 시간으로 측정된 검색 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This offset is relative to the clock's <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph>, depending on the value of <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">이 오프셋은 <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>의 값에 따라 클록의 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph>을 기준으로 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A value that indicates whether the specified offset is relative to the target clock's <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph>.</source>
          <target state="translated">지정된 오프셋이 대상 Clock의 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph>을 기준으로 하는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeks the target <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> by the specified amount immediately.</source>
          <target state="translated">지정된 크기만큼 대상 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>을 즉시 검색합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>If the target clock is stopped, seeking makes it active again.</source>
          <target state="translated">대상 클록이 중지된 경우 검색하면 다시 활성화됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seek operations do not take the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings of this clock's timeline into account: the clock is treated as though its timeline has a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
          <target state="translated">Seek 작업을 사용 하지 않습니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> 이 시계의 타임이 라인의 설정을 고려: 클록의 타임 라인에 처럼 처리 되는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 1 및 0의 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph> aligns the seeked time of the clock with the last clock tick.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph> seeked 시간을 마지막 클록 틱 효과 맞춥니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Values are immediately updated to reflect the changes due to <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph>, even though the screen will not reflect these changes until the screen updates.</source>
          <target state="translated">값이로 인해 변경 내용을 반영 하도록 업데이트 즉시 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph>함에도 불구 화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>If the target clock has children, their current time is updated accordingly.</source>
          <target state="translated">자식이 대상 클록의 현재 시간 그에 따라 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This method changes the clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
          <target state="translated">이 메서드는 클록의 변경 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeking a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 검색는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The following example demonstrates both the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph> methods of a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 모두는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>Advances the current time of the target <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> to the end of its active period.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 현재 시간을 활성 기간 끝으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>This method advances the target clock's current time to the end of its active period; the clock's behavior at this point is specified by the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> setting of its <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>.</source>
          <target state="translated">이 메서드는 대상 클록의 이동은 활성 기간의 끝으로 현재 시간 클록의이 시점으로 동작이 지정 되는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> 설정인 해당 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>If the timeline's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.FillBehavior.HoldEnd&gt;</ph>, the clock fills; if the property is set to <ph id="ph3">&lt;xref:System.Windows.Media.Animation.FillBehavior.Stop&gt;</ph>, the clock stops.</source>
          <target state="translated">경우 타임 라인의 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.FillBehavior.HoldEnd&gt;</ph>는 속성이로 설정 된 경우 클록 채웁니다; <ph id="ph3">&lt;xref:System.Windows.Media.Animation.FillBehavior.Stop&gt;</ph>, 클록 중지 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>This method has an effect only if the target clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
          <target state="translated">이 메서드는 경우에만 적용 대상 클록의 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> 은 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
          <target state="translated">이 메서드는 다음 번 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>As a side-effect, the appropriate events also will not be raised until then.</source>
          <target state="translated">파생 작업으로 적합 한 이벤트가 발생 하지 않습니다 그때 까지는 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>Advancing a storyboard to its fill period triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드의 채우기 기간 트리거 당기지는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>Gets or sets the interactive speed of the target <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 대화형 속도를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>A finite value greater than zero that describes the interactive speed of the target clock.</source>
          <target state="translated">대상 클록의 대화형 속도를 설명하는 0보다 큰 유한 값입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>This value is multiplied against the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> of the clock's <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph>.</source>
          <target state="translated">이 값은 Clock <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph> 값과 곱해집니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>For example, if the timeline's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> is 0.5 and the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph> object's <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /&gt;</ph> is 3.0, the timeline moves at 1.5 times normal speed (0.5 * 3.0).</source>
          <target state="translated">예를 들어, Timeline의 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph>가 0.5이고 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph> 개체의 <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /&gt;</ph>가 3.0이면 Timeline은 정상 속도의 1.5배로 이동합니다(0.5 * 3.0).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>The default value is 1.0.</source>
          <target state="translated">기본값은 1.0입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>Setting this property has no effect until the next tick.</source>
          <target state="translated">이 속성을 설정는 다음 틱까지 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>If you set this property and then get its value before the next tick occurs, you'll get the old value.</source>
          <target state="translated">이 속성을 설정 하 고 다음 하기 전에 해당 값을 가져올 경우 다음 틱이 발생할 이전 값을 얻게 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>This property will return the new value after the next tick.</source>
          <target state="translated">이 속성은 다음 틱 후 새 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>Setting this property does not change the value of the underlying timeline's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph>.</source>
          <target state="translated">이 속성을 설정 기본 타임 라인의 값을 변경 하지 않는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>Setting this property triggers the target clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">대상 클록의 트리거합니다이 속성을 설정할 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Stop">
          <source>Stops the target <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>을 중지합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Stop">
          <source>This method changes the target clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는 대상 클록의 변경 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Stop">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;</ph> clock can be restarted by using the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph> method.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;</ph> 시계를 사용 하 여 다시 시작할 수는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Stop">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
          <target state="translated">이 메서드는 다음 번 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Stop">
          <source>As a side-effect, the appropriate events also will not be raised until then.</source>
          <target state="translated">파생 작업으로 적합 한 이벤트가 발생 하지 않습니다 그때 까지는 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Stop">
          <source>Stopping a clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> events, but not the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event.</source>
          <target state="translated">클록 트리거 중지는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> 이벤트 하지 않고는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> 이벤트입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>