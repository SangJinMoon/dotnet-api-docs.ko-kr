<Type Name="HandoffBehavior" FullName="System.Windows.Media.Animation.HandoffBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b70ec3cdc83525372d47a6e63bfbac8f07c704a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37558577" /></Metadata><TypeSignature Language="C#" Value="public enum HandoffBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HandoffBehavior extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.HandoffBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Enum HandoffBehavior" />
  <TypeSignature Language="C++ CLI" Value="public enum class HandoffBehavior" />
  <TypeSignature Language="F#" Value="type HandoffBehavior = " />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="6343e-101">새 애니메이션이 이미 속성에 적용된 기존 애니메이션과 상호 작용하는 방법을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-101">Specifies how new animations interact with any existing ones that are already applied to a property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6343e-102">적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 모든 Compose를 사용 하 여 속성에 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 시계를 제거 하지 것입니다 자동으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-102">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using Compose, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove the clocks automatically.</span></span>  
  
 <span data-ttu-id="6343e-103">성능 문제를 방지는 많은 수의 Compose를 사용 하 여 clock 적용 하면 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-103">To avoid performance issues when you apply a large number of clocks using Compose, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="6343e-104">클록을 제거 하는 방법은 여러 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-104">There are several ways to remove a clock:</span></span>  
  
-   <span data-ttu-id="6343e-105">속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="6343e-105">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="6343e-106">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-106">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="6343e-107">이렇게 하면 해당 속성에서 모든 애니메이션 클록이 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-107">This will remove all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="6343e-108">특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-108">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="6343e-109">이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-109">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="6343e-110">루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-110">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="6343e-111">또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트를 발생 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-111">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be raised if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="6343e-112">이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-112">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="6343e-113">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-113">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="6343e-114">개체가 가비지 수집될 경우 해당 클록도 연결이 끊어지고 가비지가 수집됩니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-114">When an object is garbage collected, its clocks will also be disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="6343e-115">클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-115">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Compose">
      <MemberSignature Language="C#" Value="Compose" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Media.Animation.HandoffBehavior Compose = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.HandoffBehavior.Compose" />
      <MemberSignature Language="VB.NET" Value="Compose" />
      <MemberSignature Language="C++ CLI" Value="Compose" />
      <MemberSignature Language="F#" Value="Compose = 1" Usage="System.Windows.Media.Animation.HandoffBehavior.Compose" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.HandoffBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6343e-116">새 애니메이션을 컴퍼지션 체인의 끝에 추가하여 새 애니메이션이 기존 애니메이션과 결합됩니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-116">New animations are combined with existing animations by appending the new animations to the end of the composition chain.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SnapshotAndReplace">
      <MemberSignature Language="C#" Value="SnapshotAndReplace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Media.Animation.HandoffBehavior SnapshotAndReplace = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />
      <MemberSignature Language="VB.NET" Value="SnapshotAndReplace" />
      <MemberSignature Language="C++ CLI" Value="SnapshotAndReplace" />
      <MemberSignature Language="F#" Value="SnapshotAndReplace = 0" Usage="System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.HandoffBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6343e-117">새 애니메이션이 적용되는 속성에서 기존 애니메이션을 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="6343e-117">New animations replace any existing animations on the properties to which they are applied.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>