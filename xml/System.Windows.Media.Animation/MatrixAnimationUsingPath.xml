<Type Name="MatrixAnimationUsingPath" FullName="System.Windows.Media.Animation.MatrixAnimationUsingPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81738be51f6d0ab54f66f0928969a984635e2072" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36497822" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MatrixAnimationUsingPath : System.Windows.Media.Animation.MatrixAnimationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MatrixAnimationUsingPath extends System.Windows.Media.Animation.MatrixAnimationBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />
  <TypeSignature Language="VB.NET" Value="Public Class MatrixAnimationUsingPath&#xA;Inherits MatrixAnimationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class MatrixAnimationUsingPath : System::Windows::Media::Animation::MatrixAnimationBase" />
  <TypeSignature Language="F#" Value="type MatrixAnimationUsingPath = class&#xA;    inherit MatrixAnimationBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.MatrixAnimationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>애니메이션이 적용된 값을 생성하는 <see cref="T:System.Windows.Media.Matrix" />를 사용하여 <see cref="T:System.Windows.Media.PathGeometry" /> 속성 값에 애니메이션을 적용합니다. 이 애니메이션은 경로를 따라 시각적 개체를 이동하는 데 사용할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> 각도 단일 애니메이션 된 개체의 위치에 애니메이션 효과를 사용 하면 및 <xref:System.Windows.Media.MatrixTransform>합니다.  
  
 A <xref:System.Windows.Media.Animation.PointAnimationUsingPath> 목표에 애니메이션 효과 지정 하는 동안 선형 보간을 사용 하 여 적용 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathGeometry" />
    <altmember cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" />
    <altmember cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" />
    <altmember cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MatrixAnimationUsingPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MatrixAnimationUsingPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값은 없습니다 <xref:System.Windows.Media.PathGeometry>이므로 하나를 사용자 지정 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.MatrixAnimationUsingPath Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.MatrixAnimationUsingPath Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As MatrixAnimationUsingPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::MatrixAnimationUsingPath ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.MatrixAnimationUsingPath" Usage="matrixAnimationUsingPath.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.MatrixAnimationUsingPath</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 개체 값의 전체 복사본을 만들어 이 <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />의 수정 가능한 복제본을 만듭니다. 종속성 속성을 복사하는 경우 이 메서드는 더 이상 확인되지 않을 수도 있는 리소스 참조와 데이터 바인딩을 복사하지만 애니메이션이나 애니메이션의 현재 값은 복사하지 않습니다.</summary>
        <returns>현재 개체의 수정 가능한 복제본입니다. 소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true." />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable> 개체 (또는 모든 <xref:System.Windows.Freezable> 개체). 편의 위해이 메서드는 강력한 형식의 구현이 포함 된 상속 된 버전을 숨깁니다.  
  
 자세한 내용은 <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="matrixAnimationUsingPath.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />의 새 인스턴스를 만듭니다.</summary>
        <returns>새 인스턴스입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="DoesRotateWithTangent">
      <MemberSignature Language="C#" Value="public bool DoesRotateWithTangent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoesRotateWithTangent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />
      <MemberSignature Language="VB.NET" Value="Public Property DoesRotateWithTangent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoesRotateWithTangent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoesRotateWithTangent : bool with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>개체가 경로의 탄젠트를 따라 회전하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>개체가 경로의 탄젠트를 따라 회전하면 <see langword="true" />이고, 회전하지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 애니메이션 된 개체를 애니메이션 경로 따라 "슬라이드"으로 표시 하려면 원하는 속성을 사용 합니다.  
  
<a name="dependencyPropertyInfo_DoesRotateWithTangent"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoesRotateWithTangentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DoesRotateWithTangentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DoesRotateWithTangentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoesRotateWithTangentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DoesRotateWithTangentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DoesRotateWithTangentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Matrix GetCurrentValueCore (System.Windows.Media.Matrix defaultOriginValue, System.Windows.Media.Matrix defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Media.Matrix GetCurrentValueCore(valuetype System.Windows.Media.Matrix defaultOriginValue, valuetype System.Windows.Media.Matrix defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Matrix GetCurrentValueCore(System::Windows::Media::Matrix defaultOriginValue, System::Windows::Media::Matrix defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueCore : System.Windows.Media.Matrix * System.Windows.Media.Matrix * System.Windows.Media.Animation.AnimationClock -&gt; System.Windows.Media.Matrix" Usage="matrixAnimationUsingPath.GetCurrentValueCore (defaultOriginValue, defaultDestinationValue, animationClock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Windows.Media.Matrix" />
        <Parameter Name="defaultDestinationValue" Type="System.Windows.Media.Matrix" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">애니메이션에 명시적으로 설정된 자체 시작 값이 없을 때 사용되는 제안된 원점 값입니다.</param>
        <param name="defaultDestinationValue">애니메이션에 명시적으로 설정된 자체 끝 값이 없을 때 사용되는 제안된 대상 값입니다.</param>
        <param name="animationClock">애니메이션에서 사용되는 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 또는 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />를 생성하는 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />입니다.</param>
        <summary>
          <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />에서 결정된 대로 애니메이션이 적용되는 속성의 현재 값을 나타내는 값을 계산합니다.</summary>
        <returns>현재 애니메이션에 따라 결정된 속성의 계산된 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `defaultOriginValue` 은 첫 번째 컴퍼지션 체인에서이 값이 됩니다 (있는 경우) 스냅숏 값 또는 기본 속성 값; 그렇지 않으면이 값을 이전 애니메이션 체인에서 반환한 값은 <xref:System.Windows.Media.Animation.AnimationClock> 없는 < c4 > <xref:System.Windows.Media.Animation.Clock.Stopped%2A> 합니다.  
  
 `defaultDestinationValue` 경우 기준 값은 애니메이션 속성의 첫 번째 컴퍼지션 계층 이며 그렇지 않은 경우이 값은 이전 컴퍼지션 계층 속성에 대 한 애니메이션의 출력 값입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)" />
      </Docs>
    </Member>
    <Member MemberName="IsAdditive">
      <MemberSignature Language="C#" Value="public bool IsAdditive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAdditive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAdditive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAdditive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAdditive : bool with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대상 속성의 현재 값을 이 애니메이션의 시작 값에 추가할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>대상 속성의 현재 값을 이 애니메이션의 시작 값에 추가해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsAdditive"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
> [!NOTE]
>  이 종속성 속성은에서 식별자 필드를 제공 하므로 <xref:System.Windows.Media.Animation.AnimationTimeline> 고 다양 한 파생된 클래스에서 공유 합니다.  
  
   
  
## Examples  
 다음 예제에서는 두 개의 비슷한 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> 같은 사각형 애니메이션 효과를 애니메이션 합니다. 첫 번째 애니메이션의 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> 속성이로 설정 되어 `false`, 항상 사각형 (0, 0)에서 애니메이션 효과 되므로 애니메이션의 값을 시작 합니다. 두 번째 애니메이션에 동일한 대상 값 (자신의 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> 설정은 동일), 했지만 해당 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> 속성이로 설정 되어 `true`; 결과적으로, 애니메이션 애니메이션이 적용 되는 경우에 모든 위치에서 사각형을 적용 합니다.  
  
 [!code-xaml[PathAnimationGallery_snippet#MatrixAnimationUsingPathIsAdditiveExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/PathAnimationGallery_snippet/CS/matrixanimationusingpathisadditiveexample.xaml#matrixanimationusingpathisadditiveexamplewholepage)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAngleCumulative">
      <MemberSignature Language="C#" Value="public bool IsAngleCumulative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAngleCumulative" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAngleCumulative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAngleCumulative { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAngleCumulative : bool with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애니메이션 효과를 준 매트릭스의 회전 각도가 반복할 때마다 축적되는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>반복되는 동안 애니메이션의 회전 각도가 누적되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은로 설정 하는 경우 `true`, 애니메이션 효과 준된 행렬의 회전 각도가 반복 하는 애니메이션에 따라 누적 됩니다.  작은 호 더 이상, 누적 각도로 회전을 다시 시작 하지 않고 반복 될 때마다 지속적으로 회전 하 여 개체를 발생 합니다.  함께 사용 하면는 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A> 의 `true`, 개체 (사용자가 지정한 경로)에 따라 다름 반송 동안 전도 처럼 나타날 수 있습니다. 관련 내용은 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>를 참조하십시오.  
  
 경우이 속성을 설정 해도 효과가 없습니다 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A> 은 `false`합니다.  
  
 이 속성은 애니메이션 행렬의 각도 애니메이션 반복 하는 경우 누적 되는지 여부를 결정 해당 <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> ; 설정 되지는지 않습니다 오프셋이 애니메이션을 다시 시작할 때 누적 합니다. 애니메이션에 빌드 이전 애니메이션의 값을 해제 하는 방법에 대 한 정보를 참조 하십시오. <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>합니다.  
  
<a name="dependencyPropertyInfo_IsAngleCumulative"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
   
  
## Examples  
 다음 예제에서는 두 개의 비슷한 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> 같은 사각형 애니메이션 효과를 애니메이션 합니다. 두 애니메이션 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> 같으므로 회전 화면을 따라 오른쪽으로 이동 하 고 두 애니메이션을 4 번 반복 하도록 설정 하려면 사각형 설정 합니다. 첫 번째 애니메이션의 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> 속성이 `false`이므로 애니메이션 반복 될 때 사각형은 원래 각도로로 이동 합니다. 두 번째 애니메이션의 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> 속성이 `true`; 결과적으로, 원래 값으로 다시 이동 하는 것이 아니라 애니메이션 반복을 높이기 위해 사각형 각도 나타납니다.  
  
 [!code-xaml[PathAnimationGallery_snippet#MatrixAnimationUsingPathIsAngleCumulativeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/PathAnimationGallery_snippet/CS/matrixanimationusingpathisanglecumulativeexample.xaml#matrixanimationusingpathisanglecumulativeexamplewholepage)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />
      </Docs>
    </Member>
    <Member MemberName="IsAngleCumulativeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsAngleCumulativeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsAngleCumulativeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsAngleCumulativeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsAngleCumulativeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsAngleCumulativeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffsetCumulative">
      <MemberSignature Language="C#" Value="public bool IsOffsetCumulative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffsetCumulative" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOffsetCumulative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffsetCumulative { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOffsetCumulative : bool with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애니메이션 효과를 준 행렬에 의해 생성된 오프셋이 반복되는 동안 누적되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>애니메이션이 반복되는 동안 개체가 누적되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은로 설정 하는 경우 `true`, 애니메이션 효과 준된 매트릭스의 오프셋은 애니메이션 반복에 따라 누적 됩니다. 예를 들어 경로 작은 호 경우 애니메이션을 반복 설정 되어 있으면 누적 오프셋 개체를 화면에서 바운스 하도록 표시 하려면 발생 합니다.  
  
 이 속성은 애니메이션 행렬의 오프셋 때문에 애니메이션을 반복 하는 경우 누적 되는지 여부를 결정 해당 <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> ; 설정 되지는지 않습니다 오프셋이 애니메이션을 다시 시작할 때 누적 합니다. 애니메이션에 빌드 이전 애니메이션의 값을 해제 하는 방법에 대 한 정보를 참조 하십시오. <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>합니다.  
  
<a name="dependencyPropertyInfo_IsOffsetCumulative"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive" />
      </Docs>
    </Member>
    <Member MemberName="IsOffsetCumulativeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOffsetCumulativeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOffsetCumulativeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOffsetCumulativeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOffsetCumulativeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOffsetCumulativeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected override void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnChanged : unit -&gt; unit&#xA;override this.OnChanged : unit -&gt; unit" Usage="matrixAnimationUsingPath.OnChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />가 수정될 때 호출됩니다.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>이 메서드를 재정의 하는 방법에 대 한 정보를 참조 하십시오. <see cref="M:System.Windows.Freezable.OnChanged" />합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PathGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PathGeometry PathGeometry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.PathGeometry PathGeometry" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Property PathGeometry As PathGeometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::PathGeometry ^ PathGeometry { System::Windows::Media::PathGeometry ^ get(); void set(System::Windows::Media::PathGeometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathGeometry : System.Windows.Media.PathGeometry with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 애니메이션의 출력 값을 생성하는 데 사용된 기하 도형을 가져오거나 설정합니다.</summary>
        <value>이 애니메이션의 출력 값을 생성하는 데 사용된 기하 도형입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Media.PathGeometry> 곡선을 포함 하는 복잡 한 셰이프를 기술 할 수 및 수 있게 해 주는 호 애니메이션 입력에 대 한 복잡 한 도형을 지정 합니다. 자세한 내용은 [기하 도형 개요](~/docs/framework/wpf/graphics-multimedia/geometry-overview.md)를 참조하세요.  
  
<a name="dependencyPropertyInfo_PathGeometry"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.PathGeometry" />
      </Docs>
    </Member>
    <Member MemberName="PathGeometryProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PathGeometryProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PathGeometryProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathGeometryProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PathGeometryProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PathGeometryProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>