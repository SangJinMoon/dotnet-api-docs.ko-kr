<Type Name="Storyboard" FullName="System.Windows.Media.Animation.Storyboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="277dccf156343c8e0c972aed5cd1f2cf6e323c87" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48646420" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Storyboard : System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Storyboard extends System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Storyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Storyboard&#xA;Inherits ParallelTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class Storyboard : System::Windows::Media::Animation::ParallelTimeline" />
  <TypeSignature Language="F#" Value="type Storyboard = class&#xA;    inherit ParallelTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.ParallelTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="90353-101">해당 자식 애니메이션에 대한 정보를 대상으로 하는 개체 및 속성을 제공하는 컨테이너 타임라인입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="90353-101">A container timeline that provides object and property targeting information for its child animations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="interactively-controlling-storyboards"></a><span data-ttu-id="90353-102">스토리 보드를 대화형으로 제어</span><span class="sxs-lookup"><span data-stu-id="90353-102">Interactively Controlling Storyboards</span></span>  
 <span data-ttu-id="90353-103">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-103">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-104">태그에서 제어할 수 있는 스토리 보드를 만들려면를 지정 하면를 <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> 의 속성을 <xref:System.Windows.Media.Animation.BeginStoryboard> 개체 집합을 만든; 예제를 참조 하세요. [하는 방법: 제어는 Storyboard를 시작한 후 이벤트 트리거를 사용 하 여](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md).</span><span class="sxs-lookup"><span data-stu-id="90353-104">To make a storyboard controllable in markup, you specify the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> property of the <xref:System.Windows.Media.Animation.BeginStoryboard> object that creates it; for an example, see [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md).</span></span> <span data-ttu-id="90353-105">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-105">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-106">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-106">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="data-binding-and-animating-timelines"></a><span data-ttu-id="90353-107">데이터 바인딩 및 애니메이션 타임 라인</span><span class="sxs-lookup"><span data-stu-id="90353-107">Data Binding and Animating Timelines</span></span>  
 <span data-ttu-id="90353-108">대부분의 시간 표시 막대 속성에 데이터 바인딩 또는 애니메이션; 수 합니다. 그러나 타이밍 시스템이 작동 하는 방식 때문에 데이터 바인딩 또는 애니메이션 타임 라인 다른 데이터 처럼 작동 하지 바인딩 또는 애니메이션 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-108">Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.</span></span> <span data-ttu-id="90353-109">해당 동작을 이해 하려면 타임 라인을 활성화 하는 것을 이해할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-109">To understand their behavior, it helps to understand what it means to activate a timeline.</span></span>  
  
 <span data-ttu-id="90353-110">타임 라인 활성화 되 면 timeline과 자식 timeline의 복사본이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-110">When a timeline is activated, copies are made of the timeline and its child timelines.</span></span> <span data-ttu-id="90353-111">이러한 복사본은 고정 (읽기 전용 됨) 및 <xref:System.Windows.Media.Animation.Clock> 개체에서 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-111">These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them.</span></span> <span data-ttu-id="90353-112">이러한 클록은 대상 속성에 애니메이션 효과를 주는 실제 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-112">These clocks do the actual work of animating the targeted properties.</span></span> <span data-ttu-id="90353-113">일정을 사용 하는 경우 데이터 바인딩 또는 애니메이션이 적용 된 현재 값의 스냅숏을 수 해당 클록이 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-113">If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created.</span></span> <span data-ttu-id="90353-114">원래 일정 변경 하려면 계속 수 하는 경우에 해당 클록이 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-114">Even though the original timeline might continue to change, its clock does not.</span></span>  
  
 <span data-ttu-id="90353-115">데이터 바인딩 또는 애니메이션 변경 내용을 반영 하려면 타임 라인에 대 한 해당 클록이 다시 생성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-115">For a timeline to reflect data binding or animation changes, its clock must be re-created.</span></span> <span data-ttu-id="90353-116">클록은 다시를 자동으로 만들어지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-116">Clocks are not re-created for you automatically.</span></span> <span data-ttu-id="90353-117">다음은 타임라인 변경 내용을 적용하는 몇 가지 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-117">The following are several ways to apply timeline changes:</span></span>  
  
-   <span data-ttu-id="90353-118">타임 라인은 또는에 속하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>를 사용 하 여 해당 storyboard를 다시 적용 하 여 변경 내용을 반영 만들 수 있습니다를 <xref:System.Windows.Media.Animation.BeginStoryboard> 또는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-118">If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span> <span data-ttu-id="90353-119">부작용으로 애니메이션까지 다시 시작됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-119">This has the side effect of also restarting the animation.</span></span> <span data-ttu-id="90353-120">코드에서 사용할 수는 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 메서드 storyboard를 이전 위치로 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-120">In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.</span></span>  
  
-   <span data-ttu-id="90353-121">사용 하 여 속성에 직접 애니메이션을 적용 하는 경우는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> 메서드를 호출 합니다 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> 메서드를 다시 수정 된 애니메이션을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-121">If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that has been modified.</span></span>  
  
-   <span data-ttu-id="90353-122">클록 수준에서 직접 작업 하는 경우 새 클록 집합을 적용 만들고 이전 만든된 클록 집합을 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-122">If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.</span></span>  
  
 <span data-ttu-id="90353-123">애니메이션을 바인딩된 데이터의 예제를 참조 하세요 [키 스플라인 애니메이션 샘플](http://go.microsoft.com/fwlink/?LinkID=160011) 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-123">For an example of a data bound animation, see [Key Spline Animation Sample](http://go.microsoft.com/fwlink/?LinkID=160011) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Storyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Storyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-124">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-124">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Begin">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-125">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션 집합을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-125">Initiates the set of animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-126">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-126">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-127">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-127">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-128">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-128">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="storyboard.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-129">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-129">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-130">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-130">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="90353-131">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-131">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-132">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-132">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-133">사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-133">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="90353-134">이 메서드를 사용 하 여 시작 하는 스토리 보드는 일시 중지, 다시 시작 하거나 그렇지 않으면 시작한 후 대화형으로 제어할 수 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-134">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="90353-135">Storyboard를 제어할 수 있도록 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 또는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-135">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span>  
  
 <span data-ttu-id="90353-136">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-136">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-137">다음 예제에서는 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-137">The following example uses a storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="90353-138">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-138">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardExample.cs#frameworkcontentelementstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardexample.vb#frameworkcontentelementstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-139">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-139">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="90353-140">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-140">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-141">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-141">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-142">사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-142">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="90353-143">이 메서드를 사용 하 여 시작 하는 스토리 보드는 일시 중지, 다시 시작 하거나 그렇지 않으면 시작한 후 대화형으로 제어할 수 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-143">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="90353-144">Storyboard를 제어할 수 있도록 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> 또는 <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-144">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="90353-145">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-145">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-146">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-146">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="90353-147">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-147">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="90353-148">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-148">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-149">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-149">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-150">사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-150">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="90353-151">이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 `containingObject` 시작 스토리 보드를 사용 하는 대화형 메서드를 호출 하는 경우</span><span class="sxs-lookup"><span data-stu-id="90353-151">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="90353-152">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="90353-152">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="90353-153">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-153">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="90353-154">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-154">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-155">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-155">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="90353-156">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-156">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-157">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-157">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="90353-158">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-158">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="90353-159">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-159">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-160">지정된 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 통해 이 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />와 연결된 애니메이션을 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-160">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-161">적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-161">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="90353-162">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-162">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="90353-163">여러 가지 방법으로 클록을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-163">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="90353-164">속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-164">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="90353-165">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-165">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="90353-166">이 속성에서 모든 애니메이션 클록을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-166">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="90353-167">특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-167">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="90353-168">이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-168">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="90353-169">루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-169">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="90353-170">또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-170">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="90353-171">이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-171">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="90353-172">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-172">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="90353-173">개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-173">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="90353-174">클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-174">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-175">다음 예제에서는 합니다 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 사용자가, 및 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 클릭할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-175">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-176">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-176">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="90353-177">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-177">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="90353-178">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-178">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-179">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-179">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-180">사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-180">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="90353-181">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수</span><span class="sxs-lookup"><span data-stu-id="90353-181">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="90353-182">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="90353-182">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="90353-183">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-183">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="90353-184">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-184">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-185">지정된 <c>frameworkTemplate</c>을 적용한 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-185">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="90353-186">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-186">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="90353-187">애니메이션을 적용할 템플릿입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-187">The template to animate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-188">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-188">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-189">사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-189">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="90353-190">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="90353-190">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="90353-191">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-191">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="90353-192">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-192">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-193">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-193">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="90353-194">지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-194">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="90353-195">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-195">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-196">지정된 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 통해 이 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />와 연결된 애니메이션을 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-196">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="90353-197">다음 예제에서는 합니다 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 사용자가, 및 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 클릭할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-197">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-198">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-198">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="90353-199">지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-199">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="90353-200">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-200">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="90353-201">애니메이션을 시작한 후 제어(일시 중지)할 수 있는지 여부를 선언합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-201">Declares whether the animation is controllable (can be paused) once started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-202">지정된 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 통해 이 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />와 연결된 애니메이션을 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-202">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-203">대상된 속성에 이미 애니메이션이 적용 된 경우 지정 된 핸드 오프 동작을 사용 하 여 대체 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-203">If the targeted properties are already animated, they are replaced using the specified handoff behavior.</span></span>  
  
 <span data-ttu-id="90353-204">이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 `containingObject` 시작 스토리 보드를 사용 하는 대화형 메서드를 호출 하는 경우</span><span class="sxs-lookup"><span data-stu-id="90353-204">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="90353-205">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="90353-205">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="90353-206">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-206">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="90353-207">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-207">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="90353-208">사용 하 여 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="90353-208">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="90353-209">적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-209">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="90353-210">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-210">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="90353-211">여러 가지 방법으로 클록을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-211">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="90353-212">속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-212">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="90353-213">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-213">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="90353-214">이 속성에서 모든 애니메이션 클록을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-214">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="90353-215">특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-215">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="90353-216">이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-216">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="90353-217">루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-217">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="90353-218">또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-218">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="90353-219">이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-219">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="90353-220">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-220">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="90353-221">개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-221">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="90353-222">클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-222">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-223">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-223">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="90353-224">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-224">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 <span data-ttu-id="90353-225">다음 예제에서는 합니다 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 사용자가, 및 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 클릭할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-225">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-226">지정된 <c>frameworkTemplate</c>을 적용한 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-226">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="90353-227">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-227">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="90353-228">애니메이션을 적용할 템플릿입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-228">The template to animate.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="90353-229">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-229">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-230">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-230">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-231">사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-231">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="90353-232">이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 `containingObject` 시작 스토리 보드를 사용 하는 대화형 메서드를 호출 하는 경우</span><span class="sxs-lookup"><span data-stu-id="90353-232">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="90353-233">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="90353-233">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="90353-234">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-234">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="90353-235">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-235">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-236">지정된 <c>frameworkTemplate</c>을 적용한 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-236">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="90353-237">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-237">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="90353-238">애니메이션을 적용할 템플릿입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-238">The template to animate.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="90353-239">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-239">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-240">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-240">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-241">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="90353-241">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="90353-242">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-242">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="90353-243">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-243">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="90353-244">사용 하 여 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="90353-244">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="90353-245">적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-245">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="90353-246">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-246">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="90353-247">여러 가지 방법으로 클록을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-247">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="90353-248">속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-248">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="90353-249">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-249">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="90353-250">이 속성에서 모든 애니메이션 클록을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-250">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="90353-251">특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-251">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="90353-252">이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-252">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="90353-253">루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-253">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="90353-254">또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-254">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="90353-255">이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-255">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="90353-256">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-256">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="90353-257">개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-257">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="90353-258">클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-258">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-259">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-259">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="90353-260">지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-260">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="90353-261">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-261">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="90353-262">애니메이션을 시작한 후 제어(일시 중지)할 수 있는지 여부를 선언합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-262">Declares whether the animation is controllable (can be paused) once started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-263">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-263">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-264">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수</span><span class="sxs-lookup"><span data-stu-id="90353-264">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="90353-265">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="90353-265">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="90353-266">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-266">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="90353-267">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-267">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="90353-268">사용 하 여 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="90353-268">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="90353-269">적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-269">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="90353-270">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-270">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="90353-271">여러 가지 방법으로 클록을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-271">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="90353-272">속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-272">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="90353-273">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-273">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="90353-274">이 속성에서 모든 애니메이션 클록을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-274">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="90353-275">특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-275">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="90353-276">이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-276">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="90353-277">루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-277">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="90353-278">또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-278">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="90353-279">이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-279">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="90353-280">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-280">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="90353-281">개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-281">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="90353-282">클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-282">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-283">다음 예제에는 제어 가능한 storyboard를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="90353-283">The following example shows how to create a controllable storyboard.</span></span>  
  
 [!code-csharp[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animation_ovws_procedural_snip/CSharp/ControllableStoryboardExample.cs#controllablestoryboardexamplewholepage)]
 [!code-vb[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animation_ovws_procedural_snip/visualbasic/controllablestoryboardexample.vb#controllablestoryboardexamplewholepage)]  
  
 <span data-ttu-id="90353-284">다음 예제에서는 합니다 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 사용자가, 및 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 클릭할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-284">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-285">지정된 <c>frameworkTemplate</c>을 적용한 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-285">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="90353-286">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-286">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="90353-287">애니메이션을 적용할 템플릿입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-287">The template to animate.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="90353-288">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-288">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="90353-289">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-289">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-290">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-290">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-291">이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 `containingObject` 시작 스토리 보드를 사용 하는 대화형 메서드를 호출 하는 경우</span><span class="sxs-lookup"><span data-stu-id="90353-291">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="90353-292">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="90353-292">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="90353-293">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-293">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="90353-294">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-294">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="90353-295">사용 하 여 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="90353-295">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="90353-296">적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-296">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="90353-297">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-297">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="90353-298">여러 가지 방법으로 클록을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-298">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="90353-299">속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-299">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="90353-300">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-300">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="90353-301">이 속성에서 모든 애니메이션 클록을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-301">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="90353-302">특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-302">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="90353-303">이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-303">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="90353-304">루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-304">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="90353-305">또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-305">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="90353-306">이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-306">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="90353-307">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-307">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="90353-308">개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-308">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="90353-309">클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-309">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Storyboard Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Storyboard ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Storyboard" Usage="storyboard.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-310">이 개체 값의 전체 복사본을 만들어 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />의 수정 가능한 복제본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-310">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Storyboard" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="90353-311">종속성 속성을 복사하는 경우 이 메서드는 더 이상 확인되지 않을 수도 있는 리소스 참조와 데이터 바인딩을 복사하지만 애니메이션이나 애니메이션의 현재 값은 복사하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-311">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-312">현재 개체의 수정 가능한 복제본입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-312">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="90353-313">소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true." />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-313">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-314">수정 가능한 복사본을 만드는이 메서드는 사용 중지 <xref:System.Windows.Freezable> 개체 (또는 <xref:System.Windows.Freezable> 개체).</span><span class="sxs-lookup"><span data-stu-id="90353-314">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="90353-315">편의 위해이 메서드는 강력한 형식의 구현이 상속 된 버전을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="90353-315">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="90353-316">자세한 내용은 <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="90353-316">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="storyboard.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-317">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-317">Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-318">새 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-318">A new <see cref="T:System.Windows.Media.Animation.Storyboard" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-319">이 메서드는 내부적으로 호출 됩니다 <xref:System.Windows.Freezable.CreateInstance%2A> 의 새 인스턴스를 만들 때 합니다 <xref:System.Windows.Media.Animation.Storyboard> 복제는 다양 한 방법에 대 한 클래스 (같은 <xref:System.Windows.Freezable.Clone%2A> 고 <xref:System.Windows.Freezable.CloneCurrentValue%2A>).</span><span class="sxs-lookup"><span data-stu-id="90353-319">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A> when creating new instances of the <xref:System.Windows.Media.Animation.Storyboard> class for the various cloning methods (such as <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-320">다음 예제에서는 일반적인 구현은 <xref:System.Windows.Freezable.CreateInstanceCore%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-320">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="90353-321">모든 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 서브 클래스에서이 메서드를 구현 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="90353-321">Every <see cref="T:System.Windows.Media.Animation.Storyboard" /> subclass must implement this method.</span>
            </span>
            <span data-ttu-id="90353-322">일반적인 구현은 단순히 클래스 기본 생성자를 호출 하 고 결과 반환 하는 것입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="90353-322">Typical implementation is to simply call the class default constructor and return the result.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentGlobalSpeed">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-323">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-323">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-324">시계의 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 속도 실제 시간과 비교 하는 표본이 현재 진행 되는 속도입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-324">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="90353-325">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-325">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-326">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-326">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-327">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-327">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double GetCurrentGlobalSpeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentGlobalSpeed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentGlobalSpeed();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : unit -&gt; double" Usage="storyboard.GetCurrentGlobalSpeed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-328">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-328">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-329">현재 전역 속도입니다. 시계가 멈춘 경우 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-329">The current global speed, or 0 if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-330">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-330">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-331">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-331">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-332">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-332">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-333">현재 전역 속도이거나 시계가 멈춘 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-333">The current global speed, or <see langword="null" /> if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-334">시계의 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 속도 실제 시간과 비교 하는 표본이 현재 진행 되는 속도입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-334">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="90353-335">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-335">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-336">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-336">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-337">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-337">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-338">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-338">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-339">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-339">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-340">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-340">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-341">현재 전역 속도이거나 시계가 멈춘 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-341">The current global speed, or <see langword="null" /> if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-342">시계의 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 속도 실제 시간과 비교 하는 표본이 현재 진행 되는 속도입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-342">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="90353-343">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-343">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-344">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-344">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-345">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-345">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentIteration">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-346">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-346">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int GetCurrentIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCurrentIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCurrentIteration();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : unit -&gt; int" Usage="storyboard.GetCurrentIteration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-347">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-347">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-348">현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-348">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-349">클록의 첫 번째 반복 1의 값이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-349">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="90353-350">이 스토리 보드에 있는 경우는 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 설정은 `true`정방향 역방향 쌍으로 구성 된 전체 반복, 이러한 세그먼트 중 하나가 아니라 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-350">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="90353-351">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-351">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-352">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-352">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-353">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-353">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkContentElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkContentElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-354">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-354">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-355">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-355">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-356">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-356">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-357">현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-357">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-358">클록의 첫 번째 반복 1의 값이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-358">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="90353-359">이 스토리 보드에 있는 경우는 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 설정은 `true`정방향 역방향 쌍으로 구성 된 전체 반복, 이러한 세그먼트 중 하나가 아니라 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-359">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="90353-360">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-360">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-361">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-361">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-362">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-362">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-363">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-363">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-364">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-364">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-365">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-365">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-366">현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-366">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-367">클록의 첫 번째 반복 1의 값이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-367">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="90353-368">이 clock의 타임이 라인에는 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 설정 `true`정방향 역방향 쌍으로 구성 된 전체 반복, 이러한 세그먼트 중 하나가 아니라 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-368">If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="90353-369">현재 반복에 관계 없이 clock을 검색 하면 1로 현재 반복을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-369">Regardless of its current iteration, seeking a clock returns its current iteration to 1.</span></span> <span data-ttu-id="90353-370">현재 반복이 1로 반환도 시계를 다시 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-370">Restarting a clock also returns its current iteration to 1.</span></span>  
  
 <span data-ttu-id="90353-371">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-371">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-372">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-372">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-373">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-373">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentProgress">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-374">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-374">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double GetCurrentProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentProgress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentProgress();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : unit -&gt; double" Usage="storyboard.GetCurrentProgress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-375">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-375">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-376">이 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 이 Clock이 활성 상태이며 해당 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />의 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />이 <see cref="P:System.Windows.Duration.Forever" />이면 0.0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-376">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="90353-377">0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-377">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-378">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-378">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-379">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-379">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-380">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-380">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-381">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-381">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-382">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-382">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-383">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-383">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-384">이 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 이 Clock이 활성 상태이며 해당 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />의 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />이 <see cref="P:System.Windows.Duration.Forever" />이면 0.0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-384">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="90353-385">0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-385">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-386">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-386">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-387">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-387">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-388">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-388">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-389">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-389">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-390">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-390">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-391">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-391">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-392">이 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 이 Clock이 활성 상태이며 해당 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />의 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />이 <see cref="P:System.Windows.Duration.Forever" />이면 0.0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-392">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="90353-393">0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-393">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-394">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-394">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-395">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-395">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-396">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-396">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentState">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-397">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-397">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState () As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : unit -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-398">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-398">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-399">이 Storyboard에 대해 만들어진 Clock의 현재 상태로, <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 또는 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-399">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-400">이 메서드를 알려주지는지 않습니다 스토리 보드를 일시 중지 여부.</span><span class="sxs-lookup"><span data-stu-id="90353-400">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="90353-401">스토리 보드를 일시 중지 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-401">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="90353-402">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-402">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-403">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-403">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-404">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-404">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkContentElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkContentElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-405">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-405">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-406">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-406">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-407">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-407">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-408">이 Storyboard에 대해 만들어진 Clock의 현재 상태로, <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 또는 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-408">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-409">이 메서드를 알려주지는지 않습니다 스토리 보드를 일시 중지 여부.</span><span class="sxs-lookup"><span data-stu-id="90353-409">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="90353-410">스토리 보드를 일시 중지 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-410">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="90353-411">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-411">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-412">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-412">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-413">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-413">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-414">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-414">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-415">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-415">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-416">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-416">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-417">이 Storyboard에 대해 만들어진 Clock의 현재 상태로, <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 또는 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-417">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-418">이 메서드를 알려주지는지 않습니다 스토리 보드를 일시 중지 여부.</span><span class="sxs-lookup"><span data-stu-id="90353-418">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="90353-419">스토리 보드를 일시 중지 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-419">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="90353-420">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-420">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-421">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-421">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-422">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-422">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentTime">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-423">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-423">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetCurrentTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetCurrentTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetCurrentTime();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : unit -&gt; TimeSpan" Usage="storyboard.GetCurrentTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-424">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-424">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-425">이 Storyboard의 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 그렇지 않으면 Storyboard Clock의 현재 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-425">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-426">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-426">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-427">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-427">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-428">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-428">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkContentElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkContentElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-429">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-429">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-430">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-430">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-431">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-431">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-432">이 Storyboard의 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 그렇지 않으면 Storyboard Clock의 현재 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-432">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-433">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-433">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-434">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-434">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-435">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-435">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-436">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-436">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-437">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-437">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-438">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-438">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-439">이 Storyboard의 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 그렇지 않으면 Storyboard Clock의 현재 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-439">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-440">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-440">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-441">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-441">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-442">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-442">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIsPaused">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-443">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-443">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused();" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : unit -&gt; bool" Usage="storyboard.GetIsPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-444">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-444">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-445">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-445">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-446">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-446">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-447">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-447">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-448">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-448">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkContentElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkContentElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-449">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-449">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-450">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-450">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-451">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-451">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-452">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-452">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-453">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-453">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-454">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-454">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-455">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-455">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-456">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-456">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-457">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-457">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-458">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-458">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-459">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-459">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-460">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-460">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="90353-461">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-461">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-462">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-462">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetTarget(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTarget (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetTarget(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTarget : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Media.Animation.Storyboard.GetTarget element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="90353-463">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />을 검색할 Timeline입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-463">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-464">지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" />의 <see cref="T:System.Windows.Media.Animation.Timeline" /> 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-464">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-465">
            <paramref name="element" />의 대상 종속성 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-465">The dependency object targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-466">사용 하 여는 <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 대상 개체를 나타내는 애니메이션 타임 라인을 사용 하 여 속성을 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-466">Use the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property with animation timelines to indicate the object that they target.</span></span> <span data-ttu-id="90353-467">스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-467">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="90353-468">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-468">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetName">
      <MemberSignature Language="C#" Value="public static string GetTargetName (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTargetName(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetName (element As DependencyObject) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTargetName(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetName : System.Windows.DependencyObject -&gt; string" Usage="System.Windows.Media.Animation.Storyboard.GetTargetName element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="90353-469">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />을 검색할 Timeline입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-469">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-470">지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />의 <see cref="T:System.Windows.Media.Animation.Timeline" /> 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-470">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-471">
            <paramref name="element" />의 대상 종속성 개체 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-471">The name of the dependency object targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-472">이 메서드를 가져옵니다는 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 지정 된 개체에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-472">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="90353-473">스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-473">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="90353-474">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-474">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetProperty">
      <MemberSignature Language="C#" Value="public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PropertyPath GetTargetProperty(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetProperty (element As DependencyObject) As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PropertyPath ^ GetTargetProperty(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetProperty : System.Windows.DependencyObject -&gt; System.Windows.PropertyPath" Usage="System.Windows.Media.Animation.Storyboard.GetTargetProperty element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="90353-475">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />를 가져올 종속성 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-475">The dependency object from which to get the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-476">지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />의 <see cref="T:System.Windows.Media.Animation.Timeline" /> 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-476">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90353-477">
            <paramref name="element" />의 대상 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-477">The property targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-478">이 메서드를 가져옵니다는 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 지정 된 개체에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-478">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="90353-479">스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 연결 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-479">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property.</span></span> <span data-ttu-id="90353-480">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-480">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 <span data-ttu-id="90353-481">경우는 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 설정한 태그에서이 메서드는 빈 반환 <xref:System.Windows.PropertyPath> 속성 참조가 확인 하 고 구문 분석 되는 경우 내부적으로 저장 하기 때문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-481">Note that if the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> was set in markup, this method returns an empty <xref:System.Windows.PropertyPath> because the property reference is resolved and stored internally when it is parsed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Pause">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-482">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 일시 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-482">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="storyboard.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-483">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 일시 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-483">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-484">이 메서드는 스토리 보드를 일시 중지 되었지만 아무런 변화가 없습니다 active 또는 현재 일시 중지 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="90353-484">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="90353-485">파생 작업으로 모든 연결 된 자식 일시 중지도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-485">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="90353-486">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-486">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-487">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-487">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-488">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-488">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="90353-489">일시 중지 된 Storyboard를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-489">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="90353-490">때 있습니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 일시 중지 된 storyboard에 것 같은 데 다시 시작 하 고 다시 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-490">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="90353-491">그러나 실제로 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-491">However, that is not what actually happens.</span></span> <span data-ttu-id="90353-492">합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드는 실제로 일시 중지 된 대체 <xref:System.Windows.Media.Animation.Storyboard> 새 일시 중지 해제 된 버전으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-492">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version.</span></span> <span data-ttu-id="90353-493">각 시간을 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드가 호출 되 면 스토리 보드에 대 한 클록 개체 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="90353-493">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="90353-494">이러한 클록 애니메이션 효과 주는 속성에 배포 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-494">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="90353-495">따라서는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드는 다시 해당 클록 다시 시작 하지 않습니다를 새 클록을 사용 하 여 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-495">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-496">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-496">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-497">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-497">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-498">이 <see cref="T:System.Windows.Media.Animation.Clock" />와 연결된 지정된 <see cref="T:System.Windows.FrameworkContentElement" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 일시 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-498">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkContentElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-499">이 메서드는 스토리 보드를 일시 중지 되었지만 아무런 변화가 없습니다 active 또는 현재 일시 중지 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="90353-499">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="90353-500">파생 작업으로 모든 연결 된 자식 일시 중지도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-500">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="90353-501">일시 중지 된 storyboard 검색 다시 시작 되지 않습니다 것입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-501">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="90353-502">일시 중지 된 storyboard를 다시 시작 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-502">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="90353-503">호출 된 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 모양이 되 면 다시 시작 하는 새 대시보드를 사용 하 여 다시 일시 중지 된 스토리 보드를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-503">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="90353-504">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-504">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-505">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-505">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-506">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-506">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-507">예제를 참조 하세요 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-507">Fro an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="90353-508">Storyboard의 clock 트리거 일시 중지 된 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-508">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="90353-509">일시 중지 된 Storyboard를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-509">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="90353-510">때 있습니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 일시 중지 된 storyboard에 것 같은 데 다시 시작 하 고 다시 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-510">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="90353-511">그러나 실제로 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-511">However, that is not what actually happens.</span></span> <span data-ttu-id="90353-512"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 실제로으로 대체 하는 일시 중지 해제 된 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-512">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="90353-513">각 시간을 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드가 호출 되 면 스토리 보드에 대 한 클록 개체 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="90353-513">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="90353-514">이러한 클록 애니메이션 효과 주는 속성에 배포 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-514">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="90353-515">따라서는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드는 다시 해당 클록 다시 시작 하지 않습니다를 새 클록을 사용 하 여 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-515">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-516">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-516">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="90353-517">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-517">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-518">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-518">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-519">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-519">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-520">이 <see cref="T:System.Windows.Media.Animation.Clock" />와 연결된 지정된 <see cref="T:System.Windows.FrameworkElement" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 일시 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-520">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-521">이 메서드는 스토리 보드를 일시 중지 되었지만 아무런 변화가 없습니다 active 또는 현재 일시 중지 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="90353-521">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="90353-522">파생 작업으로 모든 연결 된 자식 일시 중지도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-522">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="90353-523">일시 중지 된 storyboard 검색 다시 시작 되지 않습니다 것입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-523">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="90353-524">일시 중지 된 storyboard를 다시 시작 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-524">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="90353-525">호출 된 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 모양이 되 면 다시 시작 하는 새 대시보드를 사용 하 여 다시 일시 중지 된 스토리 보드를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-525">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="90353-526">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-526">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-527">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-527">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-528">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-528">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-529">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-529">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="90353-530">Storyboard의 clock 트리거 일시 중지 된 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-530">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="90353-531">일시 중지 된 Storyboard를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-531">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="90353-532">때 있습니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 일시 중지 된 storyboard에 것 같은 데 다시 시작 하 고 다시 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-532">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="90353-533">그러나 실제로 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-533">However, that is not what actually happens.</span></span> <span data-ttu-id="90353-534"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 실제로으로 대체 하는 일시 중지 해제 된 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-534">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="90353-535">각 시간을 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드가 호출 되 면 스토리 보드에 대 한 클록 개체 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="90353-535">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="90353-536">이러한 클록 애니메이션 효과 주는 속성에 배포 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-536">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="90353-537">따라서는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드는 다시 해당 클록 다시 시작 하지 않습니다를 새 클록을 사용 하 여 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-537">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-538">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-538">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="90353-539">그러면 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 설정에 관계없이 이 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" />에 속하는 애니메이션이 애니메이션 효과를 적용하던 속성에 더 이상 적용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-539">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="storyboard.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-540">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-540">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="90353-541">그러면 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 설정에 관계없이 이 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" />에 속하는 애니메이션이 애니메이션 효과를 적용하던 속성에 더 이상 적용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-541">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-542">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-542">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-543">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-543">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-544">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-544">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="90353-545">수행 되는 모든 대화형 작업을 <xref:System.Windows.Media.Animation.Clock>, 및 또는 <xref:System.Windows.Media.Animation.Storyboard>, 다음 렌더링 직전에 발생 하는 타이밍 엔진의 다음 틱에서 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-545">All interactive actions taken on a <xref:System.Windows.Media.Animation.Clock>, and therefore also on a <xref:System.Windows.Media.Animation.Storyboard>, occur on the next tick of the timing engine, which happens shortly before the next render.</span></span> <span data-ttu-id="90353-546">즉는 <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> 메서드가이 시간까지 애니메이션된 속성에 계속 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-546">This means that the <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method still affects the animated properties until this time.</span></span> <span data-ttu-id="90353-547">즉, 프레임이 표시 되 면 다음에 스토리 보드 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-547">In other words, the next time the frame is displayed, the storyboard is removed.</span></span> <span data-ttu-id="90353-548">이 시간 전에 속성에서 애니메이션을 분리 해야 할 경우 사용 합니다 <xref:System.Windows.UIElement.BeginAnimation%2A> 메서드는 `animation` 매개 변수 값 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-548">If you need to disassociate an animation from a property before this time, use the <xref:System.Windows.UIElement.BeginAnimation%2A> method with an `animation` parameter value of `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-549">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-549">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-550">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-550">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-551">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-551">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="90353-552">그러면 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 설정에 관계없이 이 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" />에 속하는 애니메이션이 애니메이션 효과를 적용하던 속성에 더 이상 적용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-552">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-553">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-553">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-554">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-554">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-555">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-555">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-556">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-556">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="90353-557">Storyboard의 clock 트리거를 제거 합니다 <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-557">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-558">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-558">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-559">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-559">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-560">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-560">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="90353-561">그러면 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 설정에 관계없이 이 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" />에 속하는 애니메이션이 애니메이션 효과를 적용하던 속성에 더 이상 적용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-561">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-562">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-562">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-563">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-563">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-564">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-564">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-565">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-565">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="90353-566">Storyboard의 clock 트리거를 제거 합니다 <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-566">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resume">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-567">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 다시 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-567">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="storyboard.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-568">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 다시 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-568">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-569">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-569">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-570">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-570">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-571">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-571">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-572">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-572">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-573">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-573">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-574">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 다시 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-574">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-575">일시 중지 되지 하는 스토리 보드를 다시 시작 하는 것은 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-575">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="90353-576">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-576">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-577">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-577">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-578">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-578">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-579">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-579">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="90353-580">일시 중지 된 storyboard 검색 다시 시작 되지 않습니다 것입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-580">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="90353-581">일시 중지 된 storyboard를 다시 시작 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-581">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="90353-582">호출 된 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 storyboard를 시작한 후 모양이 되 면 다시 시작 하 여 이전 storyboard를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-582">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="90353-583">Storyboard의 clock 트리거 일시 중지 다시 시작을 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-583">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-584">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-584">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="90353-585">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-585">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-586">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-586">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-587">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-587">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-588">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 다시 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-588">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-589">일시 중지 되지 하는 스토리 보드를 다시 시작 하는 것은 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-589">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="90353-590">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-590">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-591">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-591">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-592">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-592">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-593">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-593">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="90353-594">일시 중지 된 storyboard 검색 다시 시작 되지 않습니다 것입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-594">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="90353-595">일시 중지 된 storyboard를 다시 시작 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-595">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="90353-596">호출 된 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 storyboard를 시작한 후 모양이 되 면 다시 시작 하 여 이전 storyboard를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-596">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="90353-597">Storyboard의 clock 트리거 일시 중지 다시 시작을 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-597">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-598">다음 Clock Tick이 발생하면 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치에서 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-598">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position when the next clock tick occurs.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan -&gt; unit" Usage="storyboard.Seek offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="90353-599">Timeline이 앞뒤로 이동하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-599">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-600">지정된 위치까지 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-600">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="90353-601">
            <see cref="T:System.Windows.Media.Animation.Storyboard" />는 다음 Clock Tick이 발생하면 요청된 검색을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-601">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-602">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-602">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="90353-603">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-603">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="90353-604">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-604">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-605">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-605">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-606">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-606">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-607">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-607">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="90353-608">타임라인이 지정된 <c>origin</c>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-608">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="90353-609">
            <c>offset</c>이 적용되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-609">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-610">지정된 위치까지 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-610">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="90353-611">
            <see cref="T:System.Windows.Media.Animation.Storyboard" />는 다음 Clock Tick이 발생하면 요청된 검색을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-611">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-612">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-612">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="90353-613">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-613">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="90353-614">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-614">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-615">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-615">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-616">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-616">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-617">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-617">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-618">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-618">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-619">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-619">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="90353-620">타임라인이 지정된 <c>origin</c>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-620">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="90353-621">
            <c>offset</c>이 적용되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-621">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-622">지정된 위치까지 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-622">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="90353-623">
            <see cref="T:System.Windows.Media.Animation.Storyboard" />는 다음 Clock Tick이 발생하면 요청된 검색을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-623">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-624">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-624">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="90353-625">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-625">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="90353-626">이 메서드는 storyboard clock의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 에 <xref:System.Windows.Media.Animation.ClockState.Active>입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-626">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="90353-627">이 메서드는 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</span><span class="sxs-lookup"><span data-stu-id="90353-627">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="90353-628">파생 작업으로 적절 한 이벤트를도 발생 하지 않습니다 그때까지.</span><span class="sxs-lookup"><span data-stu-id="90353-628">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="90353-629">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-629">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-630">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-630">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-631">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-631">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-632">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-632">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="90353-633">스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-633">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-634">다음 예제에서는 두 가지 모두를 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 및 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-634">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-635">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-635">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-636">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-636">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="90353-637">타임라인이 지정된 <c>origin</c>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-637">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="90353-638">
            <c>offset</c>이 적용되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-638">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-639">지정된 위치까지 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-639">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="90353-640">
            <see cref="T:System.Windows.Media.Animation.Storyboard" />는 다음 Clock Tick이 발생하면 요청된 검색을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-640">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-641">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-641">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="90353-642">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-642">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="90353-643">이 메서드는 storyboard clock의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 에 <xref:System.Windows.Media.Animation.ClockState.Active>입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-643">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="90353-644">이 메서드는 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</span><span class="sxs-lookup"><span data-stu-id="90353-644">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="90353-645">파생 작업으로 적절 한 이벤트를도 발생 하지 않습니다 그때까지.</span><span class="sxs-lookup"><span data-stu-id="90353-645">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="90353-646">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-646">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-647">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지, 제어 가능한 수행 되는 경우 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-647">A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable.</span></span> <span data-ttu-id="90353-648">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-648">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-649">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-649">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="90353-650">스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-650">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-651">다음 예제에서는 Storyboard를 시작한 후 1 초에 검색 (건너뛰기) 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="90353-651">The following example shows how to seek (skip) to one second after a Storyboard begins.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/SeekStoryboardExample.cs#seekstoryboardexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/seekstoryboardexample.vb#seekstoryboardexamplewholepage)]  
  
 <span data-ttu-id="90353-652">다음 예제에서는 두 가지 모두를 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 및 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-652">The next example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SeekAlignedToLastTick">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-653">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치에서 동기적으로 즉시 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-653">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan -&gt; unit" Usage="storyboard.SeekAlignedToLastTick offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="90353-654">Timeline이 앞뒤로 이동하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-654">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-655">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치에서 동기적으로 즉시 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-655">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-656"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> seeked 시간을 맞추는 <xref:System.Windows.Media.Animation.Storyboard> 마지막 클록 틱을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-656"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="90353-657">값으로 인해 변경 내용을 반영 하도록 즉시 업데이트 됩니다 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>이지만 화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-657">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="90353-658">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-658">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="90353-659">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-659">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="90353-660">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-660">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-661">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-661">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="90353-662">타임라인이 지정된 <c>origin</c>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-662">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="90353-663">
            <c>offset</c>이 적용되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-663">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-664">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치에서 동기적으로 즉시 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-664">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-665"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> seeked 시간을 맞추는 <xref:System.Windows.Media.Animation.Storyboard> 마지막 클록 틱을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-665"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="90353-666">값으로 인해 변경 내용을 반영 하도록 즉시 업데이트 됩니다 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>이지만 화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-666">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="90353-667">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-667">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="90353-668">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-668">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="90353-669">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-669">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-670">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-670">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-671">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-671">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-672">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-672">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="90353-673">타임라인이 지정된 <c>origin</c>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-673">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="90353-674">
            <c>offset</c>이 적용되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-674">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-675">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치에서 동기적으로 즉시 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-675">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-676"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> seeked 시간을 맞추는 <xref:System.Windows.Media.Animation.Storyboard> 마지막 클록 틱을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-676"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="90353-677">값으로 인해 변경 내용을 반영 하도록 즉시 업데이트 됩니다 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>이지만 화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-677">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="90353-678">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-678">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="90353-679">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-679">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="90353-680">이 메서드는 storyboard clock의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 를</span><span class="sxs-lookup"><span data-stu-id="90353-680">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="90353-681"><xref:System.Windows.Media.Animation.ClockState.Active>.</span><span class="sxs-lookup"><span data-stu-id="90353-681"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="90353-682">스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-682">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="90353-683">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-683">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-684">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-684">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-685">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-685">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-686">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-686">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-687">다음 예제에서는 두 가지 모두를 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 및 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-687">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-688">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-688">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-689">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-689">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="90353-690">타임라인이 지정된 <c>origin</c>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-690">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="90353-691">
            <c>offset</c>이 적용되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-691">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-692">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치에서 동기적으로 즉시 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-692">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-693"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> seeked 시간을 맞추는 <xref:System.Windows.Media.Animation.Storyboard> 마지막 클록 틱을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-693"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="90353-694">값으로 인해 변경 내용을 반영 하도록 즉시 업데이트 됩니다 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>이지만 화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-694">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="90353-695">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-695">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="90353-696">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-696">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="90353-697">이 메서드는 storyboard clock의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 를</span><span class="sxs-lookup"><span data-stu-id="90353-697">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="90353-698"><xref:System.Windows.Media.Animation.ClockState.Active>.</span><span class="sxs-lookup"><span data-stu-id="90353-698"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="90353-699">스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-699">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="90353-700">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-700">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-701">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-701">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-702">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-702">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-703">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-703">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-704">다음 예제에서는 두 가지 모두를 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 및 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90353-704">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSpeedRatio">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-705">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />의 대화형 속도 비율을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-705">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : double -&gt; unit" Usage="storyboard.SetSpeedRatio speedRatio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speedRatio">
          <span data-ttu-id="90353-706">스토리보드의 새 대화형 속도 비율인 0보다 큰 유한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-706">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="90353-707">이 값에 Storyboard의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 값을 곱해 Storyboard의 유효 속도를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-707">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="90353-708">이 값은 Storyboard의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 속성을 덮어쓰지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-708">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="90353-709">예를 들어 이 메서드를 호출하고 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />가 0.5인 Storyboard에 대해 대화형 속도 비율을 3으로 지정하면 Storyboard의 유효 속도가 1.5가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-709">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-710">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />의 대화형 속도 비율을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-710">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-711">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-711">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-712">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-712">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-713">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-713">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkContentElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkContentElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkContentElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkContentElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-714">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-714">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-715">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-715">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="speedRatio">
          <span data-ttu-id="90353-716">스토리보드의 새 대화형 속도 비율인 0보다 큰 유한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-716">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="90353-717">이 값에 Storyboard의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 값을 곱해 Storyboard의 유효 속도를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-717">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="90353-718">이 값은 Storyboard의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 속성을 덮어쓰지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-718">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="90353-719">예를 들어 이 메서드를 호출하고 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />가 0.5인 Storyboard에 대해 대화형 속도 비율을 3으로 지정하면 Storyboard의 유효 속도가 1.5가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-719">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-720">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />의 대화형 속도 비율을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-720">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-721">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-721">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-722">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-722">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-723">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-723">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-724">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-724">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="90353-725">이 메서드를 호출 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-725">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-726">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-726">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="90353-727">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-727">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-728">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-728">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-729">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-729">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="speedRatio">
          <span data-ttu-id="90353-730">스토리보드의 새 대화형 속도 비율인 0보다 큰 유한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-730">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="90353-731">이 값에 Storyboard의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 값을 곱해 Storyboard의 유효 속도를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-731">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="90353-732">이 값은 Storyboard의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 속성을 덮어쓰지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-732">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="90353-733">예를 들어 이 메서드를 호출하고 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />가 0.5인 Storyboard에 대해 대화형 속도 비율을 3으로 지정하면 Storyboard의 유효 속도가 1.5가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-733">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-734">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />의 대화형 속도 비율을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-734">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-735">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-735">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-736">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-736">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-737">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-737">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-738">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-738">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="90353-739">이 메서드를 호출 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-739">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTarget">
      <MemberSignature Language="C#" Value="public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTarget(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTarget (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTarget(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetTarget : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTarget (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="90353-740">지정된 종속성 개체를 대상으로 사용해야 하는 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-740">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="90353-741">대상으로 지정할 종속성 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-741">The dependency object to target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-742">지정된 <see cref="T:System.Windows.Media.Animation.Timeline" />이 종속성 개체를 대상으로 사용하도록 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-742">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-743">이 메서드는 설정 된 <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 지정 된 개체에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-743">This method sets the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property on the specified object.</span></span> <span data-ttu-id="90353-744">스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-744">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="90353-745">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-745">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90353-746">합니다 <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 를 설정할 수 있으므로 속성은 직렬화 <xref:System.Windows.DependencyObject>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-746">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="90353-747">XAML에서이 개체 올바르게 참조할 수 있는지는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-747">It is not guaranteed that this object can be correctly referenced from XAML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetName">
      <MemberSignature Language="C#" Value="public static void SetTargetName (System.Windows.DependencyObject element, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetName(class System.Windows.DependencyObject element, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetName (element As DependencyObject, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetName(System::Windows::DependencyObject ^ element, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetTargetName : System.Windows.DependencyObject * string -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetName (element, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="90353-748">지정된 종속성 개체를 대상으로 사용해야 하는 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-748">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="90353-749">대상으로 지정할 종속성 개체의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-749">The name of the dependency object to target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-750">지정된 <see cref="T:System.Windows.Media.Animation.Timeline" /> 대상에 지정된 이름을 적용하여 종속성 개체로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-750">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object with the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-751">이 메서드는 설정 된 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 지정 된 개체에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-751">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="90353-752">스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-752">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="90353-753">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-753">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetProperty">
      <MemberSignature Language="C#" Value="public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetProperty(class System.Windows.DependencyObject element, class System.Windows.PropertyPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetProperty (element As DependencyObject, path As PropertyPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetProperty(System::Windows::DependencyObject ^ element, System::Windows::PropertyPath ^ path);" />
      <MemberSignature Language="F#" Value="static member SetTargetProperty : System.Windows.DependencyObject * System.Windows.PropertyPath -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetProperty (element, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="path" Type="System.Windows.PropertyPath" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="90353-754">지정된 종속성 속성을 연결하는 데 사용할 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-754">The <see cref="T:System.Windows.Media.Animation.Timeline" /> with which to associate the specified dependency property.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="90353-755">애니메이션 효과를 줄 종속성 속성을 설명하는 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-755">A path that describe the dependency property to be animated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-756">지정된 <see cref="T:System.Windows.Media.Animation.Timeline" />이 지정된 종속성 속성을 대상으로 사용하도록 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-756">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the specified dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-757">이 메서드는 설정 된 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 지정 된 개체에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-757">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="90353-758">스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-758">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>.</span></span> <span data-ttu-id="90353-759">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-759">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipToFill">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-760">이 Storyboard의 <see cref="T:System.Windows.Media.Animation.Clock" /> 현재 시간을 활성 기간 끝으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-760">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="storyboard.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-761">이 Storyboard의 <see cref="T:System.Windows.Media.Animation.Clock" /> 현재 시간을 활성 기간 끝으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-761">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-762">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-762">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-763">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-763">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-764">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-764">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-765">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-765">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-766">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-766">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-767">이 Storyboard의 <see cref="T:System.Windows.Media.Animation.Clock" /> 현재 시간을 활성 기간 끝으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-767">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-768">이 메서드는 스토리 보드의 이동은 활성 기간의 끝에 현재 시간 이 시점에서 스토리 보드의 동작으로 지정 된 해당 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-768">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="90353-769">하는 경우 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 로 설정 된 <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, 스토리 보드 채웁니다; 속성 설정 된 경우 <xref:System.Windows.Media.Animation.FillBehavior.Stop>, storyboard가 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-769">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="90353-770">이 메서드는 무한 기간이 있는 스토리 보드를 호출는 무한 반복 횟수는 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-770">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="90353-771">스토리 보드를 비활성에서이 메서드를 호출 해도 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-771">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="90353-772">기간 트리거 시계는 fill로 이동 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-772">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="90353-773">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-773">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-774">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-774">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-775">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-775">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-776">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-776">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-777">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-777">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="90353-778">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-778">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-779">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-779">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-780">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-780">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-781">이 Storyboard의 <see cref="T:System.Windows.Media.Animation.Clock" /> 현재 시간을 활성 기간 끝으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-781">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-782">이 메서드는 스토리 보드의 이동은 활성 기간의 끝에 현재 시간 이 시점에서 스토리 보드의 동작으로 지정 된 해당 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-782">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="90353-783">하는 경우 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 로 설정 된 <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, 스토리 보드 채웁니다; 속성 설정 된 경우 <xref:System.Windows.Media.Animation.FillBehavior.Stop>, storyboard가 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-783">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="90353-784">이 메서드는 무한 기간이 있는 스토리 보드를 호출는 무한 반복 횟수는 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-784">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="90353-785">스토리 보드를 비활성에서이 메서드를 호출 해도 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-785">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="90353-786">기간 트리거 시계는 fill로 이동 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-786">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="90353-787">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-787">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-788">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-788">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-789">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-789">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-790">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-790">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-791">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-791">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="storyboard.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90353-792">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-792">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-793">Storyboard를 중지 하는 발생 하지 않습니다 참고는 <xref:System.Windows.Media.Animation.Timeline.Completed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-793">Note that stopping a storyboard does not fire the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-794">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-794">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-795">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-795">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-796">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-796">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-797"><xref:System.Windows.Media.Animation.ClockState.Stopped> 스토리 보드는 해당 대상 속성에 더 이상 영향을 줍니다: 애니메이션 효과가 적용 된 속성의 이전 값으로 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="90353-797">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="90353-798">클록 트리거를 중지 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트 아닌는 <xref:System.Windows.Media.Animation.Timeline.Completed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-798">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="90353-799">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-799">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-800">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-800">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-801">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-801">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-802">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-802">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90353-803">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-803">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="90353-804">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-804">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="90353-805">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-805">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="90353-806">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-806">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90353-807">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-807">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-808"><xref:System.Windows.Media.Animation.ClockState.Stopped> 스토리 보드는 해당 대상 속성에 더 이상 영향을 줍니다: 애니메이션 효과가 적용 된 속성의 이전 값으로 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="90353-808">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="90353-809">클록 트리거를 중지 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트 아닌는 <xref:System.Windows.Media.Animation.Timeline.Completed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-809">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="90353-810">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-810">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="90353-811">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-811">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="90353-812">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-812">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="90353-813">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-813">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="ILAsm" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.Target" />
      <MemberSignature Language="VB.NET" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="F#" Value="see GetTarget, and SetTarget" Usage="see GetTarget, and SetTarget" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-814">애니메이션을 적용해야 할 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-814">Gets or sets the object that should be animated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-815">대상 개체에는 종속성 개체 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-815">The target object must be a dependency object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90353-816">합니다 <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 를 설정할 수 있으므로 속성은 직렬화 <xref:System.Windows.DependencyObject>합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-816">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="90353-817">방법이 없는 항상이 개체의 XAML에 올바르게 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90353-817">There is no guaranteed that this object can be correctly referenced in XAML.</span></span>  
  
<a name="dependencyPropertyInfo_Target"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="90353-818">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="90353-818">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="90353-819">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="90353-819">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Storyboard.TargetProperty>|  
|<span data-ttu-id="90353-820">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="90353-820">Metadata properties set to `true`</span></span>|<span data-ttu-id="90353-821">없음</span><span class="sxs-lookup"><span data-stu-id="90353-821">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="ILAsm" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      <MemberSignature Language="VB.NET" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="F#" Value="see GetTargetName, and SetTargetName" Usage="see GetTargetName, and SetTargetName" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90353-822">애니메이션 효과를 줄 개체의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-822">Gets or sets the name of the object to animate.</span>
          </span>
          <span data-ttu-id="90353-823">개체는 <see cref="T:System.Windows.FrameworkElement" />, <see cref="T:System.Windows.FrameworkContentElement" /> 또는 <see cref="T:System.Windows.Freezable" />이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-823">The object must be a <see cref="T:System.Windows.FrameworkElement" />, <see cref="T:System.Windows.FrameworkContentElement" />, or <see cref="T:System.Windows.Freezable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90353-824">이 속성을 설정 하는 것은 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-824">Setting this property is optional.</span></span> <span data-ttu-id="90353-825">경우는 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 지정 하지 않으면 다음 중 하나에 스토리 보드의 애니메이션 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90353-825">If the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> is not specified, a storyboard's animations are applied to one of the following:</span></span>  
  
-   <span data-ttu-id="90353-826">애니메이션 속해 있는 스토리 보드를 사용 하 여 시작 된 경우는 <xref:System.Windows.Media.Animation.BeginStoryboard>를 소유 하는 요소는 <xref:System.Windows.Media.Animation.BeginStoryboard> 스토리 보드를 트리거하는 작업 대상으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-826">If the storyboard to which the animation belongs was started using a <xref:System.Windows.Media.Animation.BeginStoryboard>, the element that owns the <xref:System.Windows.Media.Animation.BeginStoryboard> action that triggers the storyboard is targeted.</span></span>  
  
-   <span data-ttu-id="90353-827">스토리 보드를 사용 하 여 시작 된 경우는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 합니다 <xref:System.Windows.FrameworkElement> 또는 <xref:System.Windows.FrameworkContentElement> 스토리 보드를 사용 하 여 시작 된 경우 지정 된는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 대상으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-827">If the storyboard was started using the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method, the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> specified when the storyboard was started with the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is targeted.</span></span>  
  
 <span data-ttu-id="90353-828">자식 타임 라인에서이 속성이 설정 되어 이러한 자식 타임 라인 "상속" 부모의 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 지정 하지 않은 경우 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-828">When this property is set on a timeline with children, those child timelines "inherit" the parent's <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> unless they specify their own.</span></span>  
  
## <a name="making-an-object-targetable"></a><span data-ttu-id="90353-829">개체를 대상 지정이 가능 하기</span><span class="sxs-lookup"><span data-stu-id="90353-829">Making an Object Targetable</span></span>  
 <span data-ttu-id="90353-830">사용 하는 경우 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], 스토리 보드에서 개체를 대상 지정이 가능 하 게 하는 다음 두 작업 중 하나를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-830">When using [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], you perform one of the following two actions to make an object targetable by a storyboard:</span></span>  
  
-   <span data-ttu-id="90353-831">개체가 있으면 한 <xref:System.Windows.FrameworkElement> 또는 <xref:System.Windows.FrameworkContentElement>설정, 해당 <xref:System.Windows.FrameworkElement.Name%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-831">If the object is a <xref:System.Windows.FrameworkElement> or a <xref:System.Windows.FrameworkContentElement>, set its <xref:System.Windows.FrameworkElement.Name%2A> property.</span></span>  
  
-   <span data-ttu-id="90353-832">개체가 <xref:System.Windows.Freezable> 또는 사용자 지정 <xref:System.Windows.FrameworkContentElement> 또는 <xref:System.Windows.FrameworkContentElement>를 사용 하 여 이름을 할당 합니다 [X:name 지시문](~/docs/framework/xaml-services/x-name-directive.md) 태그 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="90353-832">If the object is a <xref:System.Windows.Freezable> or a custom <xref:System.Windows.FrameworkContentElement> or <xref:System.Windows.FrameworkContentElement>, assign it a name using the [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) markup extension.</span></span>  
  
 <span data-ttu-id="90353-833">코드를 사용 하는 경우 사용자 지정할 수 있게 사용 하 여는 <xref:System.Windows.NameScope.RegisterName%2A> 개체 이름을 할당 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90353-833">When using code, you make an object targetable by using the <xref:System.Windows.NameScope.RegisterName%2A> method to assign the object a name.</span></span>  
  
<a name="dependencyPropertyInfo_TargetName"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="90353-834">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="90353-834">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="90353-835">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="90353-835">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Storyboard.TargetNameProperty>|  
|<span data-ttu-id="90353-836">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="90353-836">Metadata properties set to `true`</span></span>|<span data-ttu-id="90353-837">없음</span><span class="sxs-lookup"><span data-stu-id="90353-837">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetNameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90353-838">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 연결된 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-838">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90353-839">
            <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 연결된 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-839">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetPropertyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetPropertyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetPropertyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetPropertyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetPropertyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90353-840">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 연결된 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90353-840">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
  </Members>
</Type>