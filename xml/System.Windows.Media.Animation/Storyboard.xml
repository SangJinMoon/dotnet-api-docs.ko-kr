<Type Name="Storyboard" FullName="System.Windows.Media.Animation.Storyboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e5254feb605b3070ee54e08c4b1dcb9e4e565f9" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37557547" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Storyboard : System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Storyboard extends System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Storyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Storyboard&#xA;Inherits ParallelTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class Storyboard : System::Windows::Media::Animation::ParallelTimeline" />
  <TypeSignature Language="F#" Value="type Storyboard = class&#xA;    inherit ParallelTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.ParallelTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e9e69-101">해당 자식 애니메이션에 대한 정보를 대상으로 하는 개체 및 속성을 제공하는 컨테이너 타임라인입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9e69-101">A container timeline that provides object and property targeting information for its child animations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="interactively-controlling-storyboards"></a><span data-ttu-id="e9e69-102">스토리 보드를 대화형으로 제어</span><span class="sxs-lookup"><span data-stu-id="e9e69-102">Interactively Controlling Storyboards</span></span>  
 <span data-ttu-id="e9e69-103">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-103">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-104">태그에서 제어할 수 있는 스토리 보드를 만들려면를 지정 하면를 <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> 의 속성을 <xref:System.Windows.Media.Animation.BeginStoryboard> 개체 집합을 만든; 예제를 참조 하세요. [하는 방법: 제어는 Storyboard를 시작한 후 이벤트 트리거를 사용 하 여](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md).</span><span class="sxs-lookup"><span data-stu-id="e9e69-104">To make a storyboard controllable in markup, you specify the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> property of the <xref:System.Windows.Media.Animation.BeginStoryboard> object that creates it; for an example, see [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md).</span></span> <span data-ttu-id="e9e69-105">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-105">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-106">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-106">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="data-binding-and-animating-timelines"></a><span data-ttu-id="e9e69-107">데이터 바인딩 및 애니메이션 타임 라인</span><span class="sxs-lookup"><span data-stu-id="e9e69-107">Data Binding and Animating Timelines</span></span>  
 <span data-ttu-id="e9e69-108">대부분의 시간 표시 막대 속성에 데이터 바인딩 또는 애니메이션; 수 합니다. 그러나 타이밍 시스템이 작동 하는 방식 때문에 데이터 바인딩 또는 애니메이션 타임 라인 다른 데이터 처럼 작동 하지 바인딩 또는 애니메이션 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-108">Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.</span></span> <span data-ttu-id="e9e69-109">해당 동작을 이해 하려면 타임 라인을 활성화 하는 것을 이해할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-109">To understand their behavior, it helps to understand what it means to activate a timeline.</span></span>  
  
 <span data-ttu-id="e9e69-110">타임 라인 활성화 되 면 timeline과 자식 timeline의 복사본이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-110">When a timeline is activated, copies are made of the timeline and its child timelines.</span></span> <span data-ttu-id="e9e69-111">이러한 복사본은 고정 (읽기 전용 됨) 및 <xref:System.Windows.Media.Animation.Clock> 개체에서 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-111">These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them.</span></span> <span data-ttu-id="e9e69-112">이러한 클록은 대상 속성에 애니메이션 효과를 주는 실제 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-112">These clocks do the actual work of animating the targeted properties.</span></span> <span data-ttu-id="e9e69-113">일정을 사용 하는 경우 데이터 바인딩 또는 애니메이션이 적용 된 현재 값의 스냅숏을 수 해당 클록이 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-113">If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created.</span></span> <span data-ttu-id="e9e69-114">원래 일정 변경 하려면 계속 수 하는 경우에 해당 클록이 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-114">Even though the original timeline might continue to change, its clock does not.</span></span>  
  
 <span data-ttu-id="e9e69-115">데이터 바인딩 또는 애니메이션 변경 내용을 반영 하려면 타임 라인에 대 한 해당 클록이 다시 생성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-115">For a timeline to reflect data binding or animation changes, its clock must be re-created.</span></span> <span data-ttu-id="e9e69-116">클록은 다시를 자동으로 만들어지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-116">Clocks are not re-created for you automatically.</span></span> <span data-ttu-id="e9e69-117">다음은 타임라인 변경 내용을 적용하는 몇 가지 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-117">The following are several ways to apply timeline changes:</span></span>  
  
-   <span data-ttu-id="e9e69-118">타임 라인은 또는에 속하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>를 사용 하 여 해당 storyboard를 다시 적용 하 여 변경 내용을 반영 만들 수 있습니다를 <xref:System.Windows.Media.Animation.BeginStoryboard> 또는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-118">If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span> <span data-ttu-id="e9e69-119">부작용으로 애니메이션까지 다시 시작됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-119">This has the side effect of also restarting the animation.</span></span> <span data-ttu-id="e9e69-120">코드에서 사용할 수는 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 메서드 storyboard를 이전 위치로 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-120">In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.</span></span>  
  
-   <span data-ttu-id="e9e69-121">사용 하 여 속성에 직접 애니메이션을 적용 하는 경우는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> 메서드를 호출 합니다 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> 메서드를 다시 수정 된 애니메이션을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-121">If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that has been modified.</span></span>  
  
-   <span data-ttu-id="e9e69-122">클록 수준에서 직접 작업 하는 경우 새 클록 집합을 적용 만들고 이전 만든된 클록 집합을 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-122">If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.</span></span>  
  
 <span data-ttu-id="e9e69-123">애니메이션을 바인딩된 데이터의 예제를 참조 하세요 [키 스플라인 애니메이션 샘플](http://go.microsoft.com/fwlink/?LinkID=160011) 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-123">For an example of a data bound animation, see [Key Spline Animation Sample](http://go.microsoft.com/fwlink/?LinkID=160011) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Storyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Storyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-124">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-124">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Begin">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-125">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션 집합을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-125">Initiates the set of animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-126">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-126">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-127">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-127">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-128">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-128">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="storyboard.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-129">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-129">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-130">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-130">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="e9e69-131">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-131">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-132">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-132">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-133">사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-133">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="e9e69-134">이 메서드를 사용 하 여 시작 하는 스토리 보드는 일시 중지, 다시 시작 하거나 그렇지 않으면 시작한 후 대화형으로 제어할 수 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-134">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="e9e69-135">Storyboard를 제어할 수 있도록 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 또는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-135">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span>  
  
 <span data-ttu-id="e9e69-136">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-136">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-137">다음 예제에서는 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-137">The following example uses a storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="e9e69-138">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-138">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardExample.cs#frameworkcontentelementstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardexample.vb#frameworkcontentelementstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-139">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-139">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="e9e69-140">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-140">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-141">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-141">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-142">사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-142">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="e9e69-143">이 메서드를 사용 하 여 시작 하는 스토리 보드는 일시 중지, 다시 시작 하거나 그렇지 않으면 시작한 후 대화형으로 제어할 수 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-143">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="e9e69-144">Storyboard를 제어할 수 있도록 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> 또는 <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-144">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="e9e69-145">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-145">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-146">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-146">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="e9e69-147">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-147">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="e9e69-148">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-148">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-149">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-149">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-150">사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-150">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="e9e69-151">이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 `containingObject` 시작 스토리 보드를 사용 하는 대화형 메서드를 호출 하는 경우</span><span class="sxs-lookup"><span data-stu-id="e9e69-151">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="e9e69-152">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-152">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="e9e69-153">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-153">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="e9e69-154">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-154">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-155">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-155">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="e9e69-156">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-156">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-157">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-157">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="e9e69-158">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-158">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="e9e69-159">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-159">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-160">지정된 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 통해 이 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />와 연결된 애니메이션을 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-160">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-161">적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-161">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="e9e69-162">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-162">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="e9e69-163">여러 가지 방법으로 클록을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-163">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="e9e69-164">속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-164">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="e9e69-165">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-165">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="e9e69-166">이 속성에서 모든 애니메이션 클록을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-166">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="e9e69-167">특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-167">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="e9e69-168">이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-168">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="e9e69-169">루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-169">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="e9e69-170">또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-170">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="e9e69-171">이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-171">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="e9e69-172">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-172">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="e9e69-173">개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-173">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="e9e69-174">클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-174">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-175">다음 예제에서는 합니다 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 사용자가, 및 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 클릭할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-175">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-176">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-176">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="e9e69-177">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-177">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="e9e69-178">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-178">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-179">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-179">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-180">사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-180">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="e9e69-181">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수</span><span class="sxs-lookup"><span data-stu-id="e9e69-181">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="e9e69-182">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-182">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="e9e69-183">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-183">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="e9e69-184">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-184">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-185">지정된 <c>frameworkTemplate</c>을 적용한 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-185">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="e9e69-186">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-186">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="e9e69-187">애니메이션을 적용할 템플릿입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-187">The template to animate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-188">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-188">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-189">사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-189">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="e9e69-190">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-190">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="e9e69-191">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-191">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="e9e69-192">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-192">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-193">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-193">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="e9e69-194">지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-194">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="e9e69-195">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-195">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-196">지정된 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 통해 이 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />와 연결된 애니메이션을 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-196">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e9e69-197">다음 예제에서는 합니다 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 사용자가, 및 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 클릭할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-197">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-198">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-198">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="e9e69-199">지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-199">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="e9e69-200">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-200">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="e9e69-201">애니메이션을 시작한 후 제어(일시 중지)할 수 있는지 여부를 선언합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-201">Declares whether the animation is controllable (can be paused) once started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-202">지정된 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 통해 이 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />와 연결된 애니메이션을 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-202">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-203">대상된 속성에 이미 애니메이션이 적용 된 경우 지정 된 핸드 오프 동작을 사용 하 여 대체 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-203">If the targeted properties are already animated, they are replaced using the specified handoff behavior.</span></span>  
  
 <span data-ttu-id="e9e69-204">이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 `containingObject` 시작 스토리 보드를 사용 하는 대화형 메서드를 호출 하는 경우</span><span class="sxs-lookup"><span data-stu-id="e9e69-204">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="e9e69-205">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-205">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="e9e69-206">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-206">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="e9e69-207">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-207">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="e9e69-208">사용 하 여 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="e9e69-208">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="e9e69-209">적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-209">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="e9e69-210">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-210">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="e9e69-211">여러 가지 방법으로 클록을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-211">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="e9e69-212">속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-212">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="e9e69-213">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-213">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="e9e69-214">이 속성에서 모든 애니메이션 클록을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-214">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="e9e69-215">특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-215">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="e9e69-216">이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-216">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="e9e69-217">루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-217">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="e9e69-218">또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-218">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="e9e69-219">이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-219">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="e9e69-220">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-220">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="e9e69-221">개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-221">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="e9e69-222">클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-222">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-223">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-223">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="e9e69-224">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-224">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 <span data-ttu-id="e9e69-225">다음 예제에서는 합니다 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 사용자가, 및 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 클릭할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-225">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-226">지정된 <c>frameworkTemplate</c>을 적용한 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-226">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="e9e69-227">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-227">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="e9e69-228">애니메이션을 적용할 템플릿입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-228">The template to animate.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="e9e69-229">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-229">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-230">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-230">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-231">사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-231">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="e9e69-232">이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 `containingObject` 시작 스토리 보드를 사용 하는 대화형 메서드를 호출 하는 경우</span><span class="sxs-lookup"><span data-stu-id="e9e69-232">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="e9e69-233">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-233">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="e9e69-234">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-234">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="e9e69-235">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-235">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-236">지정된 <c>frameworkTemplate</c>을 적용한 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-236">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="e9e69-237">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-237">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="e9e69-238">애니메이션을 적용할 템플릿입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-238">The template to animate.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="e9e69-239">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-239">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-240">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-240">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-241">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-241">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="e9e69-242">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-242">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="e9e69-243">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-243">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="e9e69-244">사용 하 여 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="e9e69-244">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="e9e69-245">적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-245">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="e9e69-246">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-246">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="e9e69-247">여러 가지 방법으로 클록을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-247">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="e9e69-248">속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-248">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="e9e69-249">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-249">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="e9e69-250">이 속성에서 모든 애니메이션 클록을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-250">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="e9e69-251">특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-251">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="e9e69-252">이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-252">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="e9e69-253">루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-253">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="e9e69-254">또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-254">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="e9e69-255">이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-255">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="e9e69-256">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-256">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="e9e69-257">개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-257">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="e9e69-258">클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-258">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-259">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-259">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="e9e69-260">지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-260">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="e9e69-261">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-261">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="e9e69-262">애니메이션을 시작한 후 제어(일시 중지)할 수 있는지 여부를 선언합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-262">Declares whether the animation is controllable (can be paused) once started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-263">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-263">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-264">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수</span><span class="sxs-lookup"><span data-stu-id="e9e69-264">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="e9e69-265">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-265">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="e9e69-266">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-266">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="e9e69-267">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-267">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="e9e69-268">사용 하 여 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="e9e69-268">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="e9e69-269">적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-269">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="e9e69-270">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-270">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="e9e69-271">여러 가지 방법으로 클록을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-271">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="e9e69-272">속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-272">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="e9e69-273">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-273">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="e9e69-274">이 속성에서 모든 애니메이션 클록을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-274">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="e9e69-275">특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-275">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="e9e69-276">이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-276">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="e9e69-277">루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-277">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="e9e69-278">또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-278">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="e9e69-279">이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-279">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="e9e69-280">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-280">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="e9e69-281">개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-281">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="e9e69-282">클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-282">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-283">다음 예제에는 제어 가능한 storyboard를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-283">The following example shows how to create a controllable storyboard.</span></span>  
  
 [!code-csharp[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animation_ovws_procedural_snip/CSharp/ControllableStoryboardExample.cs#controllablestoryboardexamplewholepage)]
 [!code-vb[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animation_ovws_procedural_snip/visualbasic/controllablestoryboardexample.vb#controllablestoryboardexamplewholepage)]  
  
 <span data-ttu-id="e9e69-284">다음 예제에서는 합니다 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 사용자가, 및 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 클릭할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-284">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-285">지정된 <c>frameworkTemplate</c>을 적용한 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-285">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="e9e69-286">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <c>containingObject</c>에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-286">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="e9e69-287">애니메이션을 적용할 템플릿입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-287">The template to animate.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="e9e69-288">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-288">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="e9e69-289">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-289">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-290">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-290">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-291">이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 `containingObject` 시작 스토리 보드를 사용 하는 대화형 메서드를 호출 하는 경우</span><span class="sxs-lookup"><span data-stu-id="e9e69-291">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="e9e69-292">이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-292">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="e9e69-293">이러한 클록와 함께 저장 됩니다 `containingObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-293">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="e9e69-294">스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-294">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="e9e69-295">사용 하 여 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="e9e69-295">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="e9e69-296">적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-296">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="e9e69-297">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-297">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="e9e69-298">여러 가지 방법으로 클록을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-298">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="e9e69-299">속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-299">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="e9e69-300">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-300">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="e9e69-301">이 속성에서 모든 애니메이션 클록을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-301">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="e9e69-302">특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-302">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="e9e69-303">이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-303">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="e9e69-304">루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-304">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="e9e69-305">또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-305">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="e9e69-306">이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-306">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="e9e69-307">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-307">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="e9e69-308">개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-308">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="e9e69-309">클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-309">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Storyboard Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Storyboard ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Storyboard" Usage="storyboard.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-310">이 개체 값의 전체 복사본을 만들어 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />의 수정 가능한 복제본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-310">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Storyboard" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="e9e69-311">종속성 속성을 복사하는 경우 이 메서드는 더 이상 확인되지 않을 수도 있는 리소스 참조와 데이터 바인딩을 복사하지만 애니메이션이나 애니메이션의 현재 값은 복사하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-311">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-312">현재 개체의 수정 가능한 복제본입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-312">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="e9e69-313">소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true." />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-313">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-314">수정 가능한 복사본을 만드는이 메서드는 사용 중지 <xref:System.Windows.Freezable> 개체 (또는 <xref:System.Windows.Freezable> 개체).</span><span class="sxs-lookup"><span data-stu-id="e9e69-314">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="e9e69-315">편의 위해이 메서드는 강력한 형식의 구현이 상속 된 버전을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-315">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="e9e69-316">자세한 내용은 <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e9e69-316">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="storyboard.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-317">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-317">Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-318">새 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-318">A new <see cref="T:System.Windows.Media.Animation.Storyboard" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-319">이 메서드는 내부적으로 호출 됩니다 <xref:System.Windows.Freezable.CreateInstance%2A> 의 새 인스턴스를 만들 때 합니다 <xref:System.Windows.Media.Animation.Storyboard> 복제는 다양 한 방법에 대 한 클래스 (같은 <xref:System.Windows.Freezable.Clone%2A> 고 <xref:System.Windows.Freezable.CloneCurrentValue%2A>).</span><span class="sxs-lookup"><span data-stu-id="e9e69-319">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A> when creating new instances of the <xref:System.Windows.Media.Animation.Storyboard> class for the various cloning methods (such as <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-320">다음 예제에서는 일반적인 구현은 <xref:System.Windows.Freezable.CreateInstanceCore%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-320">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e9e69-321">
            <para>모든 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 서브 클래스에서이 메서드를 구현 해야 합니다. 일반적인 구현은 단순히 클래스 기본 생성자를 호출 하 고 결과 반환 하는 것입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-321">
              <para>Every <see cref="T:System.Windows.Media.Animation.Storyboard" /> subclass must implement this method. Typical implementation is to simply call the class default constructor and return the result.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentGlobalSpeed">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-322">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-322">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-323">시계의 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 속도 실제 시간과 비교 하는 표본이 현재 진행 되는 속도입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-323">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="e9e69-324">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-324">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-325">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-325">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-326">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-326">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double GetCurrentGlobalSpeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentGlobalSpeed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentGlobalSpeed();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : unit -&gt; double" Usage="storyboard.GetCurrentGlobalSpeed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-327">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-327">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-328">현재 전역 속도입니다. 시계가 멈춘 경우 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-328">The current global speed, or 0 if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-329">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-329">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-330">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-330">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-331">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-331">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-332">현재 전역 속도이거나 시계가 멈춘 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-332">The current global speed, or <see langword="null" /> if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-333">시계의 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 속도 실제 시간과 비교 하는 표본이 현재 진행 되는 속도입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-333">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="e9e69-334">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-334">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-335">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-335">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-336">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-336">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-337">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-337">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-338">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-338">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-339">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-339">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-340">현재 전역 속도이거나 시계가 멈춘 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-340">The current global speed, or <see langword="null" /> if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-341">시계의 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 속도 실제 시간과 비교 하는 표본이 현재 진행 되는 속도입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-341">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="e9e69-342">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-342">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-343">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-343">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-344">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-344">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentIteration">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-345">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-345">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int GetCurrentIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCurrentIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCurrentIteration();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : unit -&gt; int" Usage="storyboard.GetCurrentIteration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-346">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-346">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-347">현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-347">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-348">클록의 첫 번째 반복 1의 값이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-348">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="e9e69-349">이 스토리 보드에 있는 경우는 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 설정은 `true`정방향 역방향 쌍으로 구성 된 전체 반복, 이러한 세그먼트 중 하나가 아니라 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-349">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="e9e69-350">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-350">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-351">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-351">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-352">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-352">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkContentElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkContentElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-353">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-353">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-354">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-354">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-355">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-355">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-356">현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-356">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-357">클록의 첫 번째 반복 1의 값이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-357">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="e9e69-358">이 스토리 보드에 있는 경우는 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 설정은 `true`정방향 역방향 쌍으로 구성 된 전체 반복, 이러한 세그먼트 중 하나가 아니라 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-358">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="e9e69-359">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-359">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-360">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-360">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-361">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-361">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-362">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-362">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-363">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-363">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-364">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-364">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-365">현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-365">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-366">클록의 첫 번째 반복 1의 값이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-366">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="e9e69-367">이 clock의 타임이 라인에는 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 설정 `true`정방향 역방향 쌍으로 구성 된 전체 반복, 이러한 세그먼트 중 하나가 아니라 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-367">If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="e9e69-368">현재 반복에 관계 없이 clock을 검색 하면 1로 현재 반복을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-368">Regardless of its current iteration, seeking a clock returns its current iteration to 1.</span></span> <span data-ttu-id="e9e69-369">현재 반복이 1로 반환도 시계를 다시 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-369">Restarting a clock also returns its current iteration to 1.</span></span>  
  
 <span data-ttu-id="e9e69-370">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-370">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-371">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-371">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-372">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-372">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentProgress">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-373">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-373">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double GetCurrentProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentProgress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentProgress();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : unit -&gt; double" Usage="storyboard.GetCurrentProgress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-374">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-374">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-375">이 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 이 Clock이 활성 상태이며 해당 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />의 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />이 <see cref="P:System.Windows.Duration.Forever" />이면 0.0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-375">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="e9e69-376">0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-376">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-377">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-377">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-378">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-378">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-379">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-379">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-380">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-380">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-381">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-381">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-382">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-382">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-383">이 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 이 Clock이 활성 상태이며 해당 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />의 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />이 <see cref="P:System.Windows.Duration.Forever" />이면 0.0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-383">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="e9e69-384">0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-384">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-385">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-385">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-386">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-386">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-387">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-387">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-388">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-388">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-389">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-389">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-390">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-390">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-391">이 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 이 Clock이 활성 상태이며 해당 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />의 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />이 <see cref="P:System.Windows.Duration.Forever" />이면 0.0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-391">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="e9e69-392">0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-392">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-393">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-393">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-394">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-394">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-395">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-395">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentState">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-396">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-396">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState () As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : unit -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-397">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-397">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-398">이 Storyboard에 대해 만들어진 Clock의 현재 상태로, <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 또는 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-398">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-399">이 메서드를 알려주지는지 않습니다 스토리 보드를 일시 중지 여부.</span><span class="sxs-lookup"><span data-stu-id="e9e69-399">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="e9e69-400">스토리 보드를 일시 중지 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-400">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="e9e69-401">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-401">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-402">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-402">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-403">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-403">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkContentElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkContentElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-404">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-404">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-405">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-405">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-406">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-406">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-407">이 Storyboard에 대해 만들어진 Clock의 현재 상태로, <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 또는 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-407">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-408">이 메서드를 알려주지는지 않습니다 스토리 보드를 일시 중지 여부.</span><span class="sxs-lookup"><span data-stu-id="e9e69-408">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="e9e69-409">스토리 보드를 일시 중지 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-409">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="e9e69-410">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-410">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-411">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-411">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-412">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-412">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-413">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-413">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-414">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-414">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-415">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-415">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-416">이 Storyboard에 대해 만들어진 Clock의 현재 상태로, <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 또는 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-416">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-417">이 메서드를 알려주지는지 않습니다 스토리 보드를 일시 중지 여부.</span><span class="sxs-lookup"><span data-stu-id="e9e69-417">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="e9e69-418">스토리 보드를 일시 중지 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-418">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="e9e69-419">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-419">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-420">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-420">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-421">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-421">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentTime">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-422">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-422">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetCurrentTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetCurrentTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetCurrentTime();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : unit -&gt; TimeSpan" Usage="storyboard.GetCurrentTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-423">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-423">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-424">이 Storyboard의 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 그렇지 않으면 Storyboard Clock의 현재 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-424">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-425">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-425">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-426">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-426">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-427">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-427">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkContentElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkContentElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-428">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-428">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-429">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-429">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-430">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-430">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-431">이 Storyboard의 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 그렇지 않으면 Storyboard Clock의 현재 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-431">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-432">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-432">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-433">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-433">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-434">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-434">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-435">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-435">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-436">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-436">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-437">이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-437">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-438">이 Storyboard의 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 그렇지 않으면 Storyboard Clock의 현재 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-438">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-439">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-439">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-440">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-440">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-441">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-441">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIsPaused">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-442">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-442">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused();" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : unit -&gt; bool" Usage="storyboard.GetIsPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-443">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-443">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-444">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-444">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-445">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-445">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-446">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-446">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-447">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-447">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkContentElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkContentElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-448">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-448">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-449">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-449">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-450">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-450">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-451">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-451">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-452">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-452">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-453">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-453">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-454">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-454">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-455">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-455">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-456">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-456">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-457">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-457">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-458">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-458">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-459">스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-459">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="e9e69-460">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-460">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-461">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-461">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetTarget(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTarget (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetTarget(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTarget : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Media.Animation.Storyboard.GetTarget element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e9e69-462">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />을 검색할 Timeline입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-462">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-463">지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" />의 <see cref="T:System.Windows.Media.Animation.Timeline" /> 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-463">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-464">
            <paramref name="element" />의 대상 종속성 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-464">The dependency object targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-465">사용 하 여는 <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 대상 개체를 나타내는 애니메이션 타임 라인을 사용 하 여 속성을 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-465">Use the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property with animation timelines to indicate the object that they target.</span></span> <span data-ttu-id="e9e69-466">스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-466">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="e9e69-467">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-467">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetName">
      <MemberSignature Language="C#" Value="public static string GetTargetName (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTargetName(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetName (element As DependencyObject) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTargetName(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetName : System.Windows.DependencyObject -&gt; string" Usage="System.Windows.Media.Animation.Storyboard.GetTargetName element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e9e69-468">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />을 검색할 Timeline입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-468">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-469">지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />의 <see cref="T:System.Windows.Media.Animation.Timeline" /> 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-469">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-470">
            <paramref name="element" />의 대상 종속성 개체 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-470">The name of the dependency object targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-471">이 메서드를 가져옵니다는 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 지정 된 개체에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-471">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="e9e69-472">스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-472">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="e9e69-473">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-473">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetProperty">
      <MemberSignature Language="C#" Value="public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PropertyPath GetTargetProperty(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetProperty (element As DependencyObject) As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PropertyPath ^ GetTargetProperty(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetProperty : System.Windows.DependencyObject -&gt; System.Windows.PropertyPath" Usage="System.Windows.Media.Animation.Storyboard.GetTargetProperty element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e9e69-474">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />를 가져올 종속성 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-474">The dependency object from which to get the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-475">지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />의 <see cref="T:System.Windows.Media.Animation.Timeline" /> 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-475">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9e69-476">
            <paramref name="element" />의 대상 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-476">The property targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-477">이 메서드를 가져옵니다는 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 지정 된 개체에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-477">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="e9e69-478">스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 연결 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-478">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property.</span></span> <span data-ttu-id="e9e69-479">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-479">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 <span data-ttu-id="e9e69-480">경우는 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 설정한 태그에서이 메서드는 빈 반환 <xref:System.Windows.PropertyPath> 속성 참조가 확인 하 고 구문 분석 되는 경우 내부적으로 저장 하기 때문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-480">Note that if the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> was set in markup, this method returns an empty <xref:System.Windows.PropertyPath> because the property reference is resolved and stored internally when it is parsed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Pause">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-481">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 일시 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-481">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="storyboard.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-482">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 일시 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-482">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-483">이 메서드는 스토리 보드를 일시 중지 되었지만 아무런 변화가 없습니다 active 또는 현재 일시 중지 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="e9e69-483">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="e9e69-484">파생 작업으로 모든 연결 된 자식 일시 중지도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-484">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="e9e69-485">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-485">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-486">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-486">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-487">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-487">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="e9e69-488">일시 중지 된 Storyboard를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-488">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="e9e69-489">때 있습니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 일시 중지 된 storyboard에 것 같은 데 다시 시작 하 고 다시 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-489">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="e9e69-490">그러나 실제로 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-490">However, that is not what actually happens.</span></span> <span data-ttu-id="e9e69-491">합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드는 실제로 일시 중지 된 대체 <xref:System.Windows.Media.Animation.Storyboard> 새 일시 중지 해제 된 버전으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-491">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version.</span></span> <span data-ttu-id="e9e69-492">각 시간을 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드가 호출 되 면 스토리 보드에 대 한 클록 개체 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-492">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="e9e69-493">이러한 클록 애니메이션 효과 주는 속성에 배포 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-493">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="e9e69-494">따라서는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드는 다시 해당 클록 다시 시작 하지 않습니다를 새 클록을 사용 하 여 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-494">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-495">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-495">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-496">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-496">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-497">이 <see cref="T:System.Windows.Media.Animation.Clock" />와 연결된 지정된 <see cref="T:System.Windows.FrameworkContentElement" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 일시 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-497">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkContentElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-498">이 메서드는 스토리 보드를 일시 중지 되었지만 아무런 변화가 없습니다 active 또는 현재 일시 중지 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="e9e69-498">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="e9e69-499">파생 작업으로 모든 연결 된 자식 일시 중지도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-499">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="e9e69-500">일시 중지 된 storyboard 검색 다시 시작 되지 않습니다 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-500">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="e9e69-501">일시 중지 된 storyboard를 다시 시작 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-501">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="e9e69-502">호출 된 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 모양이 되 면 다시 시작 하는 새 대시보드를 사용 하 여 다시 일시 중지 된 스토리 보드를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-502">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="e9e69-503">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-503">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-504">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-504">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-505">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-505">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-506">예제를 참조 하세요 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-506">Fro an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="e9e69-507">Storyboard의 clock 트리거 일시 중지 된 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-507">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="e9e69-508">일시 중지 된 Storyboard를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-508">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="e9e69-509">때 있습니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 일시 중지 된 storyboard에 것 같은 데 다시 시작 하 고 다시 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-509">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="e9e69-510">그러나 실제로 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-510">However, that is not what actually happens.</span></span> <span data-ttu-id="e9e69-511"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 실제로으로 대체 하는 일시 중지 해제 된 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-511">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="e9e69-512">각 시간을 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드가 호출 되 면 스토리 보드에 대 한 클록 개체 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-512">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="e9e69-513">이러한 클록 애니메이션 효과 주는 속성에 배포 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-513">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="e9e69-514">따라서는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드는 다시 해당 클록 다시 시작 하지 않습니다를 새 클록을 사용 하 여 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-514">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-515">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-515">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="e9e69-516">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-516">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-517">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-517">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-518">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-518">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-519">이 <see cref="T:System.Windows.Media.Animation.Clock" />와 연결된 지정된 <see cref="T:System.Windows.FrameworkElement" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 일시 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-519">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-520">이 메서드는 스토리 보드를 일시 중지 되었지만 아무런 변화가 없습니다 active 또는 현재 일시 중지 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="e9e69-520">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="e9e69-521">파생 작업으로 모든 연결 된 자식 일시 중지도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-521">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="e9e69-522">일시 중지 된 storyboard 검색 다시 시작 되지 않습니다 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-522">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="e9e69-523">일시 중지 된 storyboard를 다시 시작 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-523">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="e9e69-524">호출 된 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 모양이 되 면 다시 시작 하는 새 대시보드를 사용 하 여 다시 일시 중지 된 스토리 보드를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-524">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="e9e69-525">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-525">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-526">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-526">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-527">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-527">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-528">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-528">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="e9e69-529">Storyboard의 clock 트리거 일시 중지 된 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-529">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="e9e69-530">일시 중지 된 Storyboard를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-530">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="e9e69-531">때 있습니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 일시 중지 된 storyboard에 것 같은 데 다시 시작 하 고 다시 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-531">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="e9e69-532">그러나 실제로 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-532">However, that is not what actually happens.</span></span> <span data-ttu-id="e9e69-533"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 실제로으로 대체 하는 일시 중지 해제 된 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-533">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="e9e69-534">각 시간을 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드가 호출 되 면 스토리 보드에 대 한 클록 개체 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-534">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="e9e69-535">이러한 클록 애니메이션 효과 주는 속성에 배포 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-535">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="e9e69-536">따라서는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드는 다시 해당 클록 다시 시작 하지 않습니다를 새 클록을 사용 하 여 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-536">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-537">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-537">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="e9e69-538">그러면 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 설정에 관계없이 이 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" />에 속하는 애니메이션이 애니메이션 효과를 적용하던 속성에 더 이상 적용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-538">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="storyboard.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-539">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-539">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="e9e69-540">그러면 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 설정에 관계없이 이 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" />에 속하는 애니메이션이 애니메이션 효과를 적용하던 속성에 더 이상 적용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-540">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-541">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-541">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-542">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-542">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-543">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-543">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="e9e69-544">수행 되는 모든 대화형 작업을 <xref:System.Windows.Media.Animation.Clock>, 및 또는 <xref:System.Windows.Media.Animation.Storyboard>, 다음 렌더링 직전에 발생 하는 타이밍 엔진의 다음 틱에서 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-544">All interactive actions taken on a <xref:System.Windows.Media.Animation.Clock>, and therefore also on a <xref:System.Windows.Media.Animation.Storyboard>, occur on the next tick of the timing engine, which happens shortly before the next render.</span></span> <span data-ttu-id="e9e69-545">즉는 <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> 메서드가이 시간까지 애니메이션된 속성에 계속 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-545">This means that the <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method still affects the animated properties until this time.</span></span> <span data-ttu-id="e9e69-546">즉, 프레임이 표시 되 면 다음에 스토리 보드 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-546">In other words, the next time the frame is displayed, the storyboard is removed.</span></span> <span data-ttu-id="e9e69-547">이 시간 전에 속성에서 애니메이션을 분리 해야 할 경우 사용 합니다 <xref:System.Windows.UIElement.BeginAnimation%2A> 메서드는 `animation` 매개 변수 값 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-547">If you need to disassociate an animation from a property before this time, use the <xref:System.Windows.UIElement.BeginAnimation%2A> method with an `animation` parameter value of `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-548">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-548">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-549">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-549">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-550">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-550">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="e9e69-551">그러면 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 설정에 관계없이 이 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" />에 속하는 애니메이션이 애니메이션 효과를 적용하던 속성에 더 이상 적용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-551">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-552">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-552">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-553">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-553">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-554">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-554">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-555">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-555">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="e9e69-556">Storyboard의 clock 트리거를 제거 합니다 <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-556">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-557">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-557">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-558">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-558">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-559">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-559">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="e9e69-560">그러면 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 설정에 관계없이 이 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" />에 속하는 애니메이션이 애니메이션 효과를 적용하던 속성에 더 이상 적용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-560">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-561">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-561">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-562">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-562">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-563">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-563">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-564">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-564">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="e9e69-565">Storyboard의 clock 트리거를 제거 합니다 <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-565">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resume">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-566">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 다시 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-566">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="storyboard.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-567">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 다시 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-567">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-568">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-568">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-569">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-569">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-570">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-570">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-571">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-571">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-572">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-572">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-573">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 다시 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-573">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-574">일시 중지 되지 하는 스토리 보드를 다시 시작 하는 것은 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-574">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="e9e69-575">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-575">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-576">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-576">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-577">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-577">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-578">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-578">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="e9e69-579">일시 중지 된 storyboard 검색 다시 시작 되지 않습니다 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-579">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="e9e69-580">일시 중지 된 storyboard를 다시 시작 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-580">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="e9e69-581">호출 된 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 storyboard를 시작한 후 모양이 되 면 다시 시작 하 여 이전 storyboard를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-581">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="e9e69-582">Storyboard의 clock 트리거 일시 중지 다시 시작을 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-582">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-583">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-583">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="e9e69-584">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-584">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-585">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-585">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-586">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-586">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-587">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 다시 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-587">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-588">일시 중지 되지 하는 스토리 보드를 다시 시작 하는 것은 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-588">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="e9e69-589">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-589">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-590">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-590">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-591">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-591">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-592">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-592">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="e9e69-593">일시 중지 된 storyboard 검색 다시 시작 되지 않습니다 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-593">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="e9e69-594">일시 중지 된 storyboard를 다시 시작 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-594">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="e9e69-595">호출 된 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 storyboard를 시작한 후 모양이 되 면 다시 시작 하 여 이전 storyboard를 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-595">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="e9e69-596">Storyboard의 clock 트리거 일시 중지 다시 시작을 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-596">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-597">다음 Clock Tick이 발생하면 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치에서 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-597">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position when the next clock tick occurs.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan -&gt; unit" Usage="storyboard.Seek offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="e9e69-598">Timeline이 앞뒤로 이동하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-598">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-599">지정된 위치까지 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-599">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="e9e69-600">
            <see cref="T:System.Windows.Media.Animation.Storyboard" />는 다음 Clock Tick이 발생하면 요청된 검색을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-600">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-601">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-601">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="e9e69-602">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-602">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="e9e69-603">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-603">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-604">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-604">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-605">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-605">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-606">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-606">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="e9e69-607">타임라인이 지정된 <c>origin</c>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-607">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="e9e69-608">
            <c>offset</c>이 적용되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-608">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-609">지정된 위치까지 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-609">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="e9e69-610">
            <see cref="T:System.Windows.Media.Animation.Storyboard" />는 다음 Clock Tick이 발생하면 요청된 검색을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-610">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-611">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-611">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="e9e69-612">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-612">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="e9e69-613">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-613">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-614">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-614">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-615">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-615">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-616">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-616">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-617">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-617">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-618">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-618">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e9e69-619">타임라인이 지정된 <c>origin</c>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-619">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="e9e69-620">
            <c>offset</c>이 적용되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-620">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-621">지정된 위치까지 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-621">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="e9e69-622">
            <see cref="T:System.Windows.Media.Animation.Storyboard" />는 다음 Clock Tick이 발생하면 요청된 검색을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-622">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-623">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-623">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="e9e69-624">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-624">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="e9e69-625">이 메서드는 storyboard clock의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 에 <xref:System.Windows.Media.Animation.ClockState.Active>입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-625">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="e9e69-626">이 메서드는 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</span><span class="sxs-lookup"><span data-stu-id="e9e69-626">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="e9e69-627">파생 작업으로 적절 한 이벤트를도 발생 하지 않습니다 그때까지.</span><span class="sxs-lookup"><span data-stu-id="e9e69-627">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="e9e69-628">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-628">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-629">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-629">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-630">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-630">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-631">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-631">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="e9e69-632">스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-632">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-633">다음 예제에서는 두 가지 모두를 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 및 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-633">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-634">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-634">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-635">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-635">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e9e69-636">타임라인이 지정된 <c>origin</c>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-636">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="e9e69-637">
            <c>offset</c>이 적용되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-637">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-638">지정된 위치까지 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-638">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="e9e69-639">
            <see cref="T:System.Windows.Media.Animation.Storyboard" />는 다음 Clock Tick이 발생하면 요청된 검색을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-639">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-640">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-640">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="e9e69-641">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-641">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="e9e69-642">이 메서드는 storyboard clock의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 에 <xref:System.Windows.Media.Animation.ClockState.Active>입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-642">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="e9e69-643">이 메서드는 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</span><span class="sxs-lookup"><span data-stu-id="e9e69-643">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="e9e69-644">파생 작업으로 적절 한 이벤트를도 발생 하지 않습니다 그때까지.</span><span class="sxs-lookup"><span data-stu-id="e9e69-644">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="e9e69-645">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-645">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-646">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지, 제어 가능한 수행 되는 경우 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-646">A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable.</span></span> <span data-ttu-id="e9e69-647">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-647">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-648">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-648">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="e9e69-649">스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-649">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-650">다음 예제에서는 Storyboard를 시작한 후 1 초에 검색 (건너뛰기) 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-650">The following example shows how to seek (skip) to one second after a Storyboard begins.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/SeekStoryboardExample.cs#seekstoryboardexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/seekstoryboardexample.vb#seekstoryboardexamplewholepage)]  
  
 <span data-ttu-id="e9e69-651">다음 예제에서는 두 가지 모두를 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 및 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-651">The next example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SeekAlignedToLastTick">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-652">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치에서 동기적으로 즉시 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-652">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan -&gt; unit" Usage="storyboard.SeekAlignedToLastTick offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="e9e69-653">Timeline이 앞뒤로 이동하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-653">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-654">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치에서 동기적으로 즉시 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-654">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-655"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> seeked 시간을 맞추는 <xref:System.Windows.Media.Animation.Storyboard> 마지막 클록 틱을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-655"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="e9e69-656">값으로 인해 변경 내용을 반영 하도록 즉시 업데이트 됩니다 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>이지만 화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-656">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="e9e69-657">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-657">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="e9e69-658">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-658">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="e9e69-659">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-659">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-660">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-660">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="e9e69-661">타임라인이 지정된 <c>origin</c>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-661">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="e9e69-662">
            <c>offset</c>이 적용되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-662">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-663">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치에서 동기적으로 즉시 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-663">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-664"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> seeked 시간을 맞추는 <xref:System.Windows.Media.Animation.Storyboard> 마지막 클록 틱을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-664"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="e9e69-665">값으로 인해 변경 내용을 반영 하도록 즉시 업데이트 됩니다 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>이지만 화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-665">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="e9e69-666">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-666">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="e9e69-667">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-667">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="e9e69-668">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-668">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-669">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-669">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-670">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-670">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-671">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-671">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e9e69-672">타임라인이 지정된 <c>origin</c>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-672">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="e9e69-673">
            <c>offset</c>이 적용되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-673">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-674">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치에서 동기적으로 즉시 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-674">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-675"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> seeked 시간을 맞추는 <xref:System.Windows.Media.Animation.Storyboard> 마지막 클록 틱을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-675"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="e9e69-676">값으로 인해 변경 내용을 반영 하도록 즉시 업데이트 됩니다 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>이지만 화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-676">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="e9e69-677">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-677">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="e9e69-678">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-678">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="e9e69-679">이 메서드는 storyboard clock의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 를</span><span class="sxs-lookup"><span data-stu-id="e9e69-679">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="e9e69-680"><xref:System.Windows.Media.Animation.ClockState.Active>.</span><span class="sxs-lookup"><span data-stu-id="e9e69-680"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="e9e69-681">스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-681">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="e9e69-682">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-682">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-683">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-683">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-684">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-684">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-685">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-685">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-686">다음 예제에서는 두 가지 모두를 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 및 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-686">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-687">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-687">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-688">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-688">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e9e69-689">타임라인이 지정된 <c>origin</c>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-689">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="e9e69-690">
            <c>offset</c>이 적용되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-690">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-691">이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치에서 동기적으로 즉시 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-691">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-692"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> seeked 시간을 맞추는 <xref:System.Windows.Media.Animation.Storyboard> 마지막 클록 틱을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-692"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="e9e69-693">값으로 인해 변경 내용을 반영 하도록 즉시 업데이트 됩니다 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>이지만 화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-693">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="e9e69-694">Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-694">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="e9e69-695">스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-695">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="e9e69-696">이 메서드는 storyboard clock의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 를</span><span class="sxs-lookup"><span data-stu-id="e9e69-696">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="e9e69-697"><xref:System.Windows.Media.Animation.ClockState.Active>.</span><span class="sxs-lookup"><span data-stu-id="e9e69-697"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="e9e69-698">스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-698">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="e9e69-699">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-699">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-700">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-700">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-701">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-701">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-702">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-702">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-703">다음 예제에서는 두 가지 모두를 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 및 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e9e69-703">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSpeedRatio">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-704">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />의 대화형 속도 비율을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-704">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : double -&gt; unit" Usage="storyboard.SetSpeedRatio speedRatio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speedRatio">
          <span data-ttu-id="e9e69-705">스토리보드의 새 대화형 속도 비율인 0보다 큰 유한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-705">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="e9e69-706">이 값에 Storyboard의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 값을 곱해 Storyboard의 유효 속도를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-706">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="e9e69-707">이 값은 Storyboard의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 속성을 덮어쓰지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-707">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="e9e69-708">예를 들어 이 메서드를 호출하고 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />가 0.5인 Storyboard에 대해 대화형 속도 비율을 3으로 지정하면 Storyboard의 유효 속도가 1.5가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-708">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-709">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />의 대화형 속도 비율을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-709">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-710">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-710">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-711">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-711">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-712">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-712">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkContentElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkContentElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkContentElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkContentElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-713">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-713">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-714">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-714">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="speedRatio">
          <span data-ttu-id="e9e69-715">스토리보드의 새 대화형 속도 비율인 0보다 큰 유한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-715">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="e9e69-716">이 값에 Storyboard의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 값을 곱해 Storyboard의 유효 속도를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-716">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="e9e69-717">이 값은 Storyboard의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 속성을 덮어쓰지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-717">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="e9e69-718">예를 들어 이 메서드를 호출하고 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />가 0.5인 Storyboard에 대해 대화형 속도 비율을 3으로 지정하면 Storyboard의 유효 속도가 1.5가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-718">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-719">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />의 대화형 속도 비율을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-719">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-720">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-720">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-721">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-721">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-722">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-722">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-723">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-723">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="e9e69-724">이 메서드를 호출 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-724">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-725">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-725">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="e9e69-726">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-726">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-727">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-727">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-728">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-728">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="speedRatio">
          <span data-ttu-id="e9e69-729">스토리보드의 새 대화형 속도 비율인 0보다 큰 유한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-729">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="e9e69-730">이 값에 Storyboard의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 값을 곱해 Storyboard의 유효 속도를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-730">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="e9e69-731">이 값은 Storyboard의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 속성을 덮어쓰지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-731">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="e9e69-732">예를 들어 이 메서드를 호출하고 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />가 0.5인 Storyboard에 대해 대화형 속도 비율을 3으로 지정하면 Storyboard의 유효 속도가 1.5가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-732">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-733">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />의 대화형 속도 비율을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-733">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-734">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-734">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-735">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-735">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-736">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-736">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-737">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-737">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="e9e69-738">이 메서드를 호출 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-738">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTarget">
      <MemberSignature Language="C#" Value="public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTarget(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTarget (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTarget(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetTarget : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTarget (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e9e69-739">지정된 종속성 개체를 대상으로 사용해야 하는 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-739">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e9e69-740">대상으로 지정할 종속성 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-740">The dependency object to target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-741">지정된 <see cref="T:System.Windows.Media.Animation.Timeline" />이 종속성 개체를 대상으로 사용하도록 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-741">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-742">이 메서드는 설정 된 <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 지정 된 개체에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-742">This method sets the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property on the specified object.</span></span> <span data-ttu-id="e9e69-743">스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-743">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="e9e69-744">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-744">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9e69-745">합니다 <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 를 설정할 수 있으므로 속성은 직렬화 <xref:System.Windows.DependencyObject>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-745">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="e9e69-746">XAML에서이 개체 올바르게 참조할 수 있는지는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-746">It is not guaranteed that this object can be correctly referenced from XAML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetName">
      <MemberSignature Language="C#" Value="public static void SetTargetName (System.Windows.DependencyObject element, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetName(class System.Windows.DependencyObject element, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetName (element As DependencyObject, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetName(System::Windows::DependencyObject ^ element, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetTargetName : System.Windows.DependencyObject * string -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetName (element, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e9e69-747">지정된 종속성 개체를 대상으로 사용해야 하는 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-747">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="e9e69-748">대상으로 지정할 종속성 개체의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-748">The name of the dependency object to target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-749">지정된 <see cref="T:System.Windows.Media.Animation.Timeline" /> 대상에 지정된 이름을 적용하여 종속성 개체로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-749">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object with the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-750">이 메서드는 설정 된 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 지정 된 개체에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-750">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="e9e69-751">스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-751">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="e9e69-752">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-752">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetProperty">
      <MemberSignature Language="C#" Value="public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetProperty(class System.Windows.DependencyObject element, class System.Windows.PropertyPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetProperty (element As DependencyObject, path As PropertyPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetProperty(System::Windows::DependencyObject ^ element, System::Windows::PropertyPath ^ path);" />
      <MemberSignature Language="F#" Value="static member SetTargetProperty : System.Windows.DependencyObject * System.Windows.PropertyPath -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetProperty (element, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="path" Type="System.Windows.PropertyPath" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e9e69-753">지정된 종속성 속성을 연결하는 데 사용할 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-753">The <see cref="T:System.Windows.Media.Animation.Timeline" /> with which to associate the specified dependency property.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="e9e69-754">애니메이션 효과를 줄 종속성 속성을 설명하는 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-754">A path that describe the dependency property to be animated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-755">지정된 <see cref="T:System.Windows.Media.Animation.Timeline" />이 지정된 종속성 속성을 대상으로 사용하도록 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-755">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the specified dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-756">이 메서드는 설정 된 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 지정 된 개체에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-756">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="e9e69-757">스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-757">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>.</span></span> <span data-ttu-id="e9e69-758">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-758">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipToFill">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-759">이 Storyboard의 <see cref="T:System.Windows.Media.Animation.Clock" /> 현재 시간을 활성 기간 끝으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-759">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="storyboard.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-760">이 Storyboard의 <see cref="T:System.Windows.Media.Animation.Clock" /> 현재 시간을 활성 기간 끝으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-760">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-761">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-761">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-762">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-762">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-763">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-763">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-764">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-764">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-765">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-765">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-766">이 Storyboard의 <see cref="T:System.Windows.Media.Animation.Clock" /> 현재 시간을 활성 기간 끝으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-766">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-767">이 메서드는 스토리 보드의 이동은 활성 기간의 끝에 현재 시간 이 시점에서 스토리 보드의 동작으로 지정 된 해당 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-767">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="e9e69-768">하는 경우 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 로 설정 된 <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, 스토리 보드 채웁니다; 속성 설정 된 경우 <xref:System.Windows.Media.Animation.FillBehavior.Stop>, storyboard가 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-768">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="e9e69-769">이 메서드는 무한 기간이 있는 스토리 보드를 호출는 무한 반복 횟수는 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-769">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="e9e69-770">스토리 보드를 비활성에서이 메서드를 호출 해도 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-770">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="e9e69-771">기간 트리거 시계는 fill로 이동 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-771">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="e9e69-772">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-772">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-773">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-773">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-774">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-774">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-775">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-775">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-776">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-776">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="e9e69-777">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-777">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-778">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-778">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-779">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-779">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-780">이 Storyboard의 <see cref="T:System.Windows.Media.Animation.Clock" /> 현재 시간을 활성 기간 끝으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-780">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-781">이 메서드는 스토리 보드의 이동은 활성 기간의 끝에 현재 시간 이 시점에서 스토리 보드의 동작으로 지정 된 해당 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-781">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="e9e69-782">하는 경우 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 로 설정 된 <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, 스토리 보드 채웁니다; 속성 설정 된 경우 <xref:System.Windows.Media.Animation.FillBehavior.Stop>, storyboard가 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-782">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="e9e69-783">이 메서드는 무한 기간이 있는 스토리 보드를 호출는 무한 반복 횟수는 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-783">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="e9e69-784">스토리 보드를 비활성에서이 메서드를 호출 해도 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-784">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="e9e69-785">기간 트리거 시계는 fill로 이동 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-785">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="e9e69-786">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-786">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-787">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-787">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-788">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-788">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-789">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-789">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-790">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-790">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="storyboard.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-791">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-791">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-792">Storyboard를 중지 하는 발생 하지 않습니다 참고는 <xref:System.Windows.Media.Animation.Timeline.Completed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-792">Note that stopping a storyboard does not fire the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-793">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-793">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-794">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-794">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-795">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-795">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-796"><xref:System.Windows.Media.Animation.ClockState.Stopped> 스토리 보드는 해당 대상 속성에 더 이상 영향을 줍니다: 애니메이션 효과가 적용 된 속성의 이전 값으로 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-796">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="e9e69-797">클록 트리거를 중지 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트 아닌는 <xref:System.Windows.Media.Animation.Timeline.Completed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-797">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="e9e69-798">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-798">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-799">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-799">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-800">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-800">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-801">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-801">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9e69-802">다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-802">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="e9e69-803">합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-803">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="e9e69-804">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-804">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="e9e69-805">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-805">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9e69-806">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-806">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9e69-807"><xref:System.Windows.Media.Animation.ClockState.Stopped> 스토리 보드는 해당 대상 속성에 더 이상 영향을 줍니다: 애니메이션 효과가 적용 된 속성의 이전 값으로 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-807">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="e9e69-808">클록 트리거를 중지 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트 아닌는 <xref:System.Windows.Media.Animation.Timeline.Completed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-808">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="e9e69-809">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-809">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="e9e69-810">제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-810">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="e9e69-811">스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-811">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="e9e69-812">예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="e9e69-812">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="ILAsm" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.Target" />
      <MemberSignature Language="VB.NET" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="F#" Value="see GetTarget, and SetTarget" Usage="see GetTarget, and SetTarget" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="ILAsm" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      <MemberSignature Language="VB.NET" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="F#" Value="see GetTargetName, and SetTargetName" Usage="see GetTargetName, and SetTargetName" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetNameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-813">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 연결된 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-813">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-814">
            <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 연결된 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-814">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetPropertyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetPropertyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetPropertyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetPropertyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetPropertyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9e69-815">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 연결된 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9e69-815">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
  </Members>
</Type>