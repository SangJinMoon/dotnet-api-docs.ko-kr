<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Storyboard.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac540aaa35f3a1b40896d02850b6d8ad6be43644bf5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40aaa35f3a1b40896d02850b6d8ad6be43644bf5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>A container timeline that provides object and property targeting information for its child animations.</source>
          <target state="translated">해당 자식 애니메이션에 대한 정보를 대상으로 하는 개체 및 속성을 제공하는 컨테이너 타임라인입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Interactively Controlling Storyboards</source>
          <target state="translated">스토리 보드를 대화형으로 제어</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>To make a storyboard controllable in markup, you specify the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> object that creates it; for an example, see <bpt id="p1">[</bpt>How to: Use Event Triggers to Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">태그에서 제어할 수 있는 스토리 보드를 만들려면를 지정 하면는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> 예제를 참조 하십시오.; 권한 집합을 만든 개체 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어 하려면 이벤트 트리거를 사용 하 여<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Data Binding and Animating Timelines</source>
          <target state="translated">데이터 바인딩 및 애니메이션 타임 라인</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.</source>
          <target state="translated">대부분의 시간 표시 막대 속성 바인딩하거나 애니메이션; 데이터를 적용할 수 있습니다. 그러나 타이밍 시스템의 작동 방식 때문에 데이터 바인딩된 또는 애니메이션 타임 라인 다른 데이터 처럼 작동 하지 않기 바인딩된 또는 애니메이션이 적용 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>To understand their behavior, it helps to understand what it means to activate a timeline.</source>
          <target state="translated">해당 동작을 이해 하려면 타임 라인을 활성화 하는 의미를 이해할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>When a timeline is activated, copies are made of the timeline and its child timelines.</source>
          <target state="translated">타임 라인 활성화 되 면 타임 라인 및 해당 자식 타임 라인의 복사본이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>These copies are frozen (made read-only) and <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created from them.</source>
          <target state="translated">이러한 복사본 고정 (읽기 전용으로 설정) 및 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 임원의 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>These clocks do the actual work of animating the targeted properties.</source>
          <target state="translated">이러한 클록은 대상 속성에 애니메이션 효과를 주는 실제 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created.</source>
          <target state="translated">일정을 사용 하는 경우 바인딩된 데이터 또는 애니메이션이 적용 된 현재 값의 스냅숏을 clock 만들어질 때.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Even though the original timeline might continue to change, its clock does not.</source>
          <target state="translated">원래 일정을 변경 하려면 계속 될 수 있습니다, 경우에 해당 클록 준수 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>For a timeline to reflect data binding or animation changes, its clock must be re-created.</source>
          <target state="translated">데이터 바인딩 또는 애니메이션 변경 내용을 반영 하도록 타임 라인에 대 한 해당 시계를 다시 생성 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Clocks are not re-created for you automatically.</source>
          <target state="translated">클록 하지 다시 사용자에 대 한 자동으로 만들어집니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>The following are several ways to apply timeline changes:</source>
          <target state="translated">다음은 타임라인 변경 내용을 적용하는 몇 가지 방법입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>If the timeline is or belongs to a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, you can make it reflect changes by reapplying its storyboard using a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> or the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method.</source>
          <target state="translated">타임 라인은 또는에 속하는 경우 한 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, 해당 스토리 보드를 사용 하 여 다시 적용 하 여 변경 내용을 반영 만들 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>This has the side effect of also restarting the animation.</source>
          <target state="translated">부작용으로 애니메이션까지 다시 시작됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>In code, you can use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Seek%2A&gt;</ph> method to advance the storyboard back to its previous position.</source>
          <target state="translated">코드에서 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Seek%2A&gt;</ph> 스토리 보드를 이동 하는 메서드를 이전 위치로 백업 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>If you applied an animation directly to a property using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt;</ph> method, call the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt;</ph> method again and pass it the animation that has been modified.</source>
          <target state="translated">애니메이션 사용 하 여 속성에 직접 적용 한 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt;</ph> 메서드를 호출은 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt;</ph> 메서드를 다시 수정 된 애니메이션을 전달 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.</source>
          <target state="translated">클록 수준에서 직접 작업 하는 경우 및 클록 새 집합을 적용할 만들고 만든 클록 이전 집합을 대체 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>For an example of a data bound animation, see <bpt id="p1">[</bpt>Key Spline Animation Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160011)</ept> .</source>
          <target state="translated">참조 데이터의 예로 바인딩된 애니메이션을 <bpt id="p1">[</bpt>키 스플라인 애니메이션 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160011)</ept> 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Initiates the set of animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>와 연결된 애니메이션 집합을 시작합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin">
          <source>Applies the animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to their targets and initiates them.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
          <source>An object contained within the same name scope as the targets of this storyboard's animations.</source>
          <target state="translated">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
          <source>Animations without a <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> are applied to <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>이 없는 애니메이션이 <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
          <source>Applies the animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to their targets and initiates them.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
          <source>If the targeted properties are already animated, they are replaced using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> handoff behavior.</source>
          <target state="translated">하는 경우 대상된 속성은 이미 애니메이션 효과가 적용, 대체를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> 전달 동작 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
          <source>Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</source>
          <target state="translated">이 방법으로 시작 하는 스토리 보드 일시 중지, 재개 하거나 그렇지 않은 경우 시작 된 후 대화형으로 제어할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
          <source>To make a storyboard controllable, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method.</source>
          <target state="translated">스토리 보드를 제어할 수 있도록 하려면 사용 된 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
          <source>Beginning a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 시작 하 고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
          <source>The following example uses a storyboard to animate a <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 스토리 보드를 사용 하 여 애니메이션 효과를 주는 <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> is contained within a <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>'s name scope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> 내에 포함 된 한 <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>의 범위 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)">
          <source>An object contained within the same name scope as the targets of this storyboard's animations.</source>
          <target state="translated">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)">
          <source>Animations without a <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> are applied to <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>이 없는 애니메이션이 <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)">
          <source>Applies the animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to their targets and initiates them.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)">
          <source>If the targeted properties are already animated, they are replaced using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> handoff behavior.</source>
          <target state="translated">하는 경우 대상된 속성은 이미 애니메이션 효과가 적용, 대체를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> 전달 동작 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)">
          <source>Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</source>
          <target state="translated">이 방법으로 시작 하는 스토리 보드 일시 중지, 재개 하거나 그렇지 않은 경우 시작 된 후 대화형으로 제어할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)">
          <source>To make a storyboard controllable, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29&gt;</ph> method.</source>
          <target state="translated">스토리 보드를 제어할 수 있도록 하려면 사용 된 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)">
          <source>Beginning a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 시작 하 고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
          <source>An object contained within the same name scope as the targets of this storyboard's animations.</source>
          <target state="translated">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
          <source>Animations without a <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> are applied to <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>이 없는 애니메이션이 <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the storyboard should be interactively controllable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
          <source>Applies the animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to their targets and initiates them.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
          <source>If the targeted properties are already animated, they are replaced using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> handoff behavior.</source>
          <target state="translated">하는 경우 대상된 속성은 이미 애니메이션 효과가 적용, 대체를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> 전달 동작 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
          <source>To interactively control this storyboard, you must specify the same <ph id="ph1">`containingObject`</ph> when calling the interactive methods that you used to begin the storyboard</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 사용 되는 대화형 메서드를 호출 하는 경우</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
          <source>When this method is called, <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.</source>
          <target state="translated">이 메서드를 호출할 때 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
          <source>These clocks are stored with <ph id="ph1">`containingObject`</ph>.</source>
          <target state="translated">이러한 clock에 저장 되어 <ph id="ph1">`containingObject`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
          <source>Beginning a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 시작 하 고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
          <source>The following example uses a controllable storyboard to animate a <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 제어할 수 있는 스토리 보드를 사용 하 여 애니메이션 효과를 주는 <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> is contained within a <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>'s name scope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> 내에 포함 된 한 <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>의 범위 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>An object contained within the same name scope as the targets of this storyboard's animations.</source>
          <target state="translated">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Animations without a <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> are applied to <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>이 없는 애니메이션이 <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The behavior the new animation should use to interact with any current animations.</source>
          <target state="translated">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Applies the animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to their targets and initiates them, using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>를 통해 이 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph>와 연결된 애니메이션을 해당 대상에 적용하여 시작합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</source>
          <target state="translated">적용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 사용 하 여 속성에는 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>있으면 모든 <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 이전에 해당 속성과 연관 된 개체를 계속 시스템 리소스를 사용 하 고 타이밍 시스템 하지 않습니다 이러한 clock를 자동으로 제거 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To avoid performance issues when you apply a large number of clocks using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>를 완성 한 후 속성에서 구성 중인 clock를 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">여러 가지 방법으로 클록을 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">에서 제거 하려면 모든 clock 속성을 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> 애니메이션된 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 <ph id="ph1">`null`</ph> 를 두 번째입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This removes all animation clocks from the property.</source>
          <target state="translated">그러면 모든 애니메이션 클록 속성에서 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">특정을 제거 하려면 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 클록 목록에서 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 검색 하는 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, 호출는 <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> 의 메서드는 <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">이 일반적으로 수행 된 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> 클록에 대 한 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">유일한 루트 클록을 제어할 수 있는 참고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> 자식 클록의 속성을 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not called if the effective duration of the clock is forever.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> 이벤트 시계의 유효 기간을 무제한 인 경우 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>In that case, the user must determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">사용자를 호출 하는 시기를 결정 해야 경우 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When an object is garbage collected, its clocks are also disconnected and garbage collected.</source>
          <target state="translated">개체가 가비지 수집 된 경우 해당 clock도 연결이 끊어지고 가비지 수집.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>For more information about clock objects, see <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">클록 개체에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>애니메이션 및 타이밍 시스템 개요<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> to animate when the user left-clicks, and the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> when the user right-clicks.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> 사용자가을 및 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> 클릭할 때입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
          <source>An object contained within the same name scope as the targets of this storyboard's animations.</source>
          <target state="translated">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
          <source>Animations without a <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> are applied to <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>이 없는 애니메이션이 <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the storyboard should be interactively controllable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
          <source>Applies the animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to their targets and initiates them.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
          <source>If the targeted properties are already animated, they are replaced using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> handoff behavior.</source>
          <target state="translated">하는 경우 대상된 속성은 이미 애니메이션 효과가 적용, 대체를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> 전달 동작 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
          <source>When this method is called, <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.</source>
          <target state="translated">이 메서드를 호출할 때 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
          <source>These clocks are stored with <ph id="ph1">`containingObject`</ph>.</source>
          <target state="translated">이러한 clock에 저장 되어 <ph id="ph1">`containingObject`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
          <source>Beginning a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 시작 하 고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
          <source>The object to which the specified <bpt id="p1">&lt;c&gt;</bpt>frameworkTemplate<ept id="p1">&lt;/c&gt;</ept> has been applied.</source>
          <target state="translated">지정된 <bpt id="p1">&lt;c&gt;</bpt>frameworkTemplate<ept id="p1">&lt;/c&gt;</ept>을 적용한 개체입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
          <source>Animations without a <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> are applied to <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>이 없는 애니메이션이 <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
          <source>The template to animate.</source>
          <target state="translated">애니메이션을 적용할 템플릿입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
          <source>Applies the animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to their targets within the specified template and initiates them.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
          <source>If the targeted properties are already animated, they are replaced using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> handoff behavior.</source>
          <target state="translated">하는 경우 대상된 속성은 이미 애니메이션 효과가 적용, 대체를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> 전달 동작 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
          <source>When this method is called, <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.</source>
          <target state="translated">이 메서드를 호출할 때 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
          <source>These clocks are stored with <ph id="ph1">`containingObject`</ph>.</source>
          <target state="translated">이러한 clock에 저장 되어 <ph id="ph1">`containingObject`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
          <source>Beginning a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 시작 하 고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>An object contained within the same name scope as the targets of this storyboard's animations.</source>
          <target state="translated">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Animations without a specified <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> are applied to <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>이 없는 애니메이션이 <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The behavior the new animation should use to interact with any current animations.</source>
          <target state="translated">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Applies the animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to their targets and initiates them, using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>를 통해 이 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph>와 연결된 애니메이션을 해당 대상에 적용하여 시작합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> to animate when the user left-clicks, and the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> when the user right-clicks.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> 사용자가을 및 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> 클릭할 때입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>An object contained within the same name scope as the targets of this storyboard's animations.</source>
          <target state="translated">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Animations without a specified <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> are applied to <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>이 없는 애니메이션이 <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>The behavior the new animation should use to interact with any current animations.</source>
          <target state="translated">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Declares whether the animation is controllable (can be paused) once started.</source>
          <target state="translated">애니메이션을 시작한 후 제어(일시 중지)할 수 있는지 여부를 선언합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Applies the animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to their targets and initiates them, using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>를 통해 이 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph>와 연결된 애니메이션을 해당 대상에 적용하여 시작합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>If the targeted properties are already animated, they are replaced using the specified handoff behavior.</source>
          <target state="translated">대상된 속성은 이미 애니메이션 효과가 적용 하는 경우 지정된 된 전달 동작을 사용 하 여 대체 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To interactively control this storyboard, you must specify the same <ph id="ph1">`containingObject`</ph> when calling the interactive methods that you used to begin the storyboard</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 사용 되는 대화형 메서드를 호출 하는 경우</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>When this method is called, <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.</source>
          <target state="translated">이 메서드를 호출할 때 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>These clocks are stored with <ph id="ph1">`containingObject`</ph>.</source>
          <target state="translated">이러한 clock에 저장 되어 <ph id="ph1">`containingObject`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Beginning a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 시작 하 고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">사용 하 여 HandoffBehavior 작성</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</source>
          <target state="translated">적용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 사용 하 여 속성에는 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>있으면 모든 <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 이전에 해당 속성과 연관 된 개체를 계속 시스템 리소스를 사용 하 고 타이밍 시스템 하지 않습니다 이러한 clock를 자동으로 제거 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To avoid performance issues when you apply a large number of clocks using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>를 완성 한 후 속성에서 구성 중인 clock를 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">여러 가지 방법으로 클록을 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">에서 제거 하려면 모든 clock 속성을 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> 애니메이션된 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 <ph id="ph1">`null`</ph> 를 두 번째입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>This removes all animation clocks from the property.</source>
          <target state="translated">그러면 모든 애니메이션 클록 속성에서 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">특정을 제거 하려면 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 클록 목록에서 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 검색 하는 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, 호출는 <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> 의 메서드는 <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">이 일반적으로 수행 된 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> 클록에 대 한 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">유일한 루트 클록을 제어할 수 있는 참고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> 자식 클록의 속성을 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not called if the effective duration of the clock is forever.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> 이벤트 시계의 유효 기간을 무제한 인 경우 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>In that case, the user must determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">사용자를 호출 하는 시기를 결정 해야 경우 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>When an object is garbage collected, its clocks are also disconnected and garbage collected.</source>
          <target state="translated">개체가 가비지 수집 된 경우 해당 clock도 연결이 끊어지고 가비지 수집.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>For more information about clock objects, see <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">클록 개체에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>애니메이션 및 타이밍 시스템 개요<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>The following example uses a controllable storyboard to animate a <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 제어할 수 있는 스토리 보드를 사용 하 여 애니메이션 효과를 주는 <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> is contained within a <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>'s name scope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> 내에 포함 된 한 <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>의 범위 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>The next example uses the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> to animate when the user left-clicks, and the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> when the user right-clicks.</source>
          <target state="translated">사용 하 여 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> 사용자가을 및 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> 클릭할 때입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
          <source>The object to which the specified <bpt id="p1">&lt;c&gt;</bpt>frameworkTemplate<ept id="p1">&lt;/c&gt;</ept> has been applied.</source>
          <target state="translated">지정된 <bpt id="p1">&lt;c&gt;</bpt>frameworkTemplate<ept id="p1">&lt;/c&gt;</ept>을 적용한 개체입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
          <source>Animations without a <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> are applied to <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>이 없는 애니메이션이 <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
          <source>The template to animate.</source>
          <target state="translated">애니메이션을 적용할 템플릿입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the storyboard should be interactively controllable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
          <source>Applies the animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to their targets within the specified template and initiates them.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
          <source>If the targeted properties are already animated, they are replaced using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> handoff behavior.</source>
          <target state="translated">하는 경우 대상된 속성은 이미 애니메이션 효과가 적용, 대체를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> 전달 동작 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
          <source>To interactively control this storyboard, you must specify the same <ph id="ph1">`containingObject`</ph> when calling the interactive methods that you used to begin the storyboard</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 사용 되는 대화형 메서드를 호출 하는 경우</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
          <source>When this method is called, <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.</source>
          <target state="translated">이 메서드를 호출할 때 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
          <source>These clocks are stored with <ph id="ph1">`containingObject`</ph>.</source>
          <target state="translated">이러한 clock에 저장 되어 <ph id="ph1">`containingObject`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
          <source>Beginning a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 시작 하 고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The object to which the specified <bpt id="p1">&lt;c&gt;</bpt>frameworkTemplate<ept id="p1">&lt;/c&gt;</ept> has been applied.</source>
          <target state="translated">지정된 <bpt id="p1">&lt;c&gt;</bpt>frameworkTemplate<ept id="p1">&lt;/c&gt;</ept>을 적용한 개체입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Animations without a <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> are applied to <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>이 없는 애니메이션이 <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The template to animate.</source>
          <target state="translated">애니메이션을 적용할 템플릿입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The behavior the new animation should use to interact with any current animations.</source>
          <target state="translated">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Applies the animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to their targets within the specified template and initiates them.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When this method is called, <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.</source>
          <target state="translated">이 메서드를 호출할 때 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>These clocks are stored with <ph id="ph1">`containingObject`</ph>.</source>
          <target state="translated">이러한 clock에 저장 되어 <ph id="ph1">`containingObject`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Beginning a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 시작 하 고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">사용 하 여 HandoffBehavior 작성</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</source>
          <target state="translated">적용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 사용 하 여 속성에는 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>있으면 모든 <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 이전에 해당 속성과 연관 된 개체를 계속 시스템 리소스를 사용 하 고 타이밍 시스템 하지 않습니다 이러한 clock를 자동으로 제거 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To avoid performance issues when you apply a large number of clocks using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>를 완성 한 후 속성에서 구성 중인 clock를 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">여러 가지 방법으로 클록을 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">에서 제거 하려면 모든 clock 속성을 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> 애니메이션된 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 <ph id="ph1">`null`</ph> 를 두 번째입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This removes all animation clocks from the property.</source>
          <target state="translated">그러면 모든 애니메이션 클록 속성에서 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">특정을 제거 하려면 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 클록 목록에서 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 검색 하는 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, 호출는 <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> 의 메서드는 <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">이 일반적으로 수행 된 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> 클록에 대 한 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">유일한 루트 클록을 제어할 수 있는 참고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> 자식 클록의 속성을 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not called if the effective duration of the clock is forever.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> 이벤트 시계의 유효 기간을 무제한 인 경우 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>In that case, the user must determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">사용자를 호출 하는 시기를 결정 해야 경우 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When an object is garbage collected, its clocks are also disconnected and garbage collected.</source>
          <target state="translated">개체가 가비지 수집 된 경우 해당 clock도 연결이 끊어지고 가비지 수집.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
          <source>For more information about clock objects, see <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">클록 개체에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>애니메이션 및 타이밍 시스템 개요<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>An object contained within the same name scope as the targets of this storyboard's animations.</source>
          <target state="translated">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Animations without a specified <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> are applied to <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>이 없는 애니메이션이 <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>The behavior the new animation should use to interact with any current animations.</source>
          <target state="translated">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Declares whether the animation is controllable (can be paused) once started.</source>
          <target state="translated">애니메이션을 시작한 후 제어(일시 중지)할 수 있는지 여부를 선언합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Applies the animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to their targets and initiates them.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>When this method is called, <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.</source>
          <target state="translated">이 메서드를 호출할 때 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>These clocks are stored with <ph id="ph1">`containingObject`</ph>.</source>
          <target state="translated">이러한 clock에 저장 되어 <ph id="ph1">`containingObject`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Beginning a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 시작 하 고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">사용 하 여 HandoffBehavior 작성</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</source>
          <target state="translated">적용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 사용 하 여 속성에는 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>있으면 모든 <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 이전에 해당 속성과 연관 된 개체를 계속 시스템 리소스를 사용 하 고 타이밍 시스템 하지 않습니다 이러한 clock를 자동으로 제거 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To avoid performance issues when you apply a large number of clocks using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>를 완성 한 후 속성에서 구성 중인 clock를 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">여러 가지 방법으로 클록을 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">에서 제거 하려면 모든 clock 속성을 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> 애니메이션된 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 <ph id="ph1">`null`</ph> 를 두 번째입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>This removes all animation clocks from the property.</source>
          <target state="translated">그러면 모든 애니메이션 클록 속성에서 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">특정을 제거 하려면 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 클록 목록에서 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 검색 하는 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, 호출는 <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> 의 메서드는 <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">이 일반적으로 수행 된 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> 클록에 대 한 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">유일한 루트 클록을 제어할 수 있는 참고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> 자식 클록의 속성을 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not called if the effective duration of the clock is forever.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> 이벤트 시계의 유효 기간을 무제한 인 경우 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>In that case, the user must determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">사용자를 호출 하는 시기를 결정 해야 경우 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>When an object is garbage collected, its clocks are also disconnected and garbage collected.</source>
          <target state="translated">개체가 가비지 수집 된 경우 해당 clock도 연결이 끊어지고 가비지 수집.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>For more information about clock objects, see <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">클록 개체에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>애니메이션 및 타이밍 시스템 개요<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>The following example shows how to create a controllable storyboard.</source>
          <target state="translated">다음 예제에서는 제어할 수 있는 스토리 보드를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>The next example uses the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> to animate when the user left-clicks, and the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> when the user right-clicks.</source>
          <target state="translated">사용 하 여 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> 사용자가을 및 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> 클릭할 때입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>The object to which the specified <bpt id="p1">&lt;c&gt;</bpt>frameworkTemplate<ept id="p1">&lt;/c&gt;</ept> has been applied.</source>
          <target state="translated">지정된 <bpt id="p1">&lt;c&gt;</bpt>frameworkTemplate<ept id="p1">&lt;/c&gt;</ept>을 적용한 개체입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Animations without a <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> are applied to <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>이 없는 애니메이션이 <bpt id="p1">&lt;c&gt;</bpt>containingObject<ept id="p1">&lt;/c&gt;</ept>에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>The template to animate.</source>
          <target state="translated">애니메이션을 적용할 템플릿입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>The behavior the new animation should use to interact with any current animations.</source>
          <target state="translated">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the storyboard should be interactively controllable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Applies the animations associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to their targets within the specified template and initiates them.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To interactively control this storyboard, you must specify the same <ph id="ph1">`containingObject`</ph> when calling the interactive methods that you used to begin the storyboard</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 사용 되는 대화형 메서드를 호출 하는 경우</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>When this method is called, <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.</source>
          <target state="translated">이 메서드를 호출할 때 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>These clocks are stored with <ph id="ph1">`containingObject`</ph>.</source>
          <target state="translated">이러한 clock에 저장 되어 <ph id="ph1">`containingObject`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Beginning a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 시작 하 고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">사용 하 여 HandoffBehavior 작성</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</source>
          <target state="translated">적용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 사용 하 여 속성에는 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>있으면 모든 <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 이전에 해당 속성과 연관 된 개체를 계속 시스템 리소스를 사용 하 고 타이밍 시스템 하지 않습니다 이러한 clock를 자동으로 제거 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To avoid performance issues when you apply a large number of clocks using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>를 완성 한 후 속성에서 구성 중인 clock를 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">여러 가지 방법으로 클록을 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">에서 제거 하려면 모든 clock 속성을 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> 애니메이션된 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 <ph id="ph1">`null`</ph> 를 두 번째입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>This removes all animation clocks from the property.</source>
          <target state="translated">그러면 모든 애니메이션 클록 속성에서 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">특정을 제거 하려면 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 클록 목록에서 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 검색 하는 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, 호출는 <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> 의 메서드는 <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">이 일반적으로 수행 된 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> 클록에 대 한 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">유일한 루트 클록을 제어할 수 있는 참고는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> 자식 클록의 속성을 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not called if the effective duration of the clock is forever.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> 이벤트 시계의 유효 기간을 무제한 인 경우 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>In that case, the user must determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">사용자를 호출 하는 시기를 결정 해야 경우 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>When an object is garbage collected, its clocks are also disconnected and garbage collected.</source>
          <target state="translated">개체가 가비지 수집 된 경우 해당 clock도 연결이 끊어지고 가비지 수집.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>For more information about clock objects, see <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">클록 개체에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>애니메이션 및 타이밍 시스템 개요<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Clone">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>, making deep copies of this object's values.</source>
          <target state="translated">이 개체 값의 전체 복사본을 만들어 이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>의 수정 가능한 복제본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Clone">
          <source>When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
          <target state="translated">종속성 속성을 복사하는 경우 이 메서드는 더 이상 확인되지 않을 수도 있는 리소스 참조와 데이터 바인딩을 복사하지만 애니메이션이나 애니메이션의 현재 값은 복사하지 않습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Clone">
          <source>A modifiable clone of the current object.</source>
          <target state="translated">현재 개체의 수정 가능한 복제본입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Clone">
          <source>The cloned object's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph> even if the source's <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <ph id="ph4">&lt;see langword="true." /&gt;</ph></source>
          <target state="translated">소스의 <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> 속성이 <ph id="ph4">&lt;see langword="true." /&gt;</ph>인 경우에도 복제된 개체의 <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Clone">
          <source>This method is used to produce modifiable copies of frozen <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> object).</source>
          <target state="translated">수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> 개체 (또는 모든 <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> 개체).</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Clone">
          <source>For convenience, this method shadows the inherited version with a strongly typed implementation.</source>
          <target state="translated">편의 위해이 메서드는 강력한 형식의 구현이 포함 된 상속 된 버전을 숨깁니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Clone">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore">
          <source>This method is called internally by <ph id="ph1">&lt;xref:System.Windows.Freezable.CreateInstance%2A&gt;</ph> when creating new instances of the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> class for the various cloning methods (such as <ph id="ph3">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt;</ph>).</source>
          <target state="translated">이 메서드는 내부적으로 <ph id="ph1">&lt;xref:System.Windows.Freezable.CreateInstance%2A&gt;</ph> 의 새 인스턴스를 만들 때는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> 다양 한 복제 방법에 대 한 클래스 (같은 <ph id="ph3">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore">
          <source>The following example shows a typical implementation of <ph id="ph1">&lt;xref:System.Windows.Freezable.CreateInstanceCore%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 구현 하는 일반적인 <ph id="ph1">&lt;xref:System.Windows.Freezable.CreateInstanceCore%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore">
          <source>Every <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> subclass must implement this method.</source>
          <target state="translated">모든 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> 하위 클래스는이 메서드를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore">
          <source>Typical implementation is to simply call the class default constructor and return the result.</source>
          <target state="translated">일반적인 구현은 단순히 클래스 기본 생성자를 호출 하 고 결과 반환 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>A clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt;</ph> speed is the rate at which its time is currently progressing, compared to real-world time.</source>
          <target state="translated">클록의 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt;</ph> 속도 실제 시간과 비교 하는 시간이 현재 진행 되는 속도입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed">
          <source>The current global speed, or 0 if the clock is stopped.</source>
          <target state="translated">현재 전역 속도입니다. 시계가 멈춘 경우 0입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
          <source>The current global speed, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the clock is stopped.</source>
          <target state="translated">현재 전역 속도이거나 시계가 멈춘 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
          <source>A clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt;</ph> speed is the rate at which its time is currently progressing, compared to real-world time.</source>
          <target state="translated">클록의 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt;</ph> 속도 실제 시간과 비교 하는 시간이 현재 진행 되는 속도입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
          <source>The current global speed, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the clock is stopped.</source>
          <target state="translated">현재 전역 속도이거나 시계가 멈춘 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
          <source>A clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt;</ph> speed is the rate at which its time is currently progressing, compared to real-world time.</source>
          <target state="translated">클록의 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt;</ph> 속도 실제 시간과 비교 하는 시간이 현재 진행 되는 속도입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration">
          <source>This clock's current iteration within its current active period, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is stopped.</source>
          <target state="translated">현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration">
          <source>A clock's first iteration has a value of 1.</source>
          <target state="translated">클록의 첫 번째 반복의 값은 1입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration">
          <source>If this storyboard has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> setting of <ph id="ph2">`true`</ph>, a full iteration consists of a forward-reverse pair, not just one of these segments.</source>
          <target state="translated">이 스토리 보드에는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> 설정인 <ph id="ph2">`true`</ph>, 전체 반복 반대의 정방향 쌍으로 구성 되며, 이러한 세그먼트 중 하나가 아니라 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
          <source>This clock's current iteration within its current active period, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is stopped.</source>
          <target state="translated">현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
          <source>A clock's first iteration has a value of 1.</source>
          <target state="translated">클록의 첫 번째 반복의 값은 1입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
          <source>If this storyboard has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> setting of <ph id="ph2">`true`</ph>, a full iteration consists of a forward-reverse pair, not just one of these segments.</source>
          <target state="translated">이 스토리 보드에는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> 설정인 <ph id="ph2">`true`</ph>, 전체 반복 반대의 정방향 쌍으로 구성 되며, 이러한 세그먼트 중 하나가 아니라 합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
          <source>This clock's current iteration within its current active period, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is stopped.</source>
          <target state="translated">현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
          <source>A clock's first iteration has a value of 1.</source>
          <target state="translated">클록의 첫 번째 반복의 값은 1입니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
          <source>If this clock's timeline has an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> setting of <ph id="ph2">`true`</ph>, a full iteration consists of a forward-reverse pair, not just one of these segments.</source>
          <target state="translated">이 클록의 시간 표시이 막대에는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> 설정인 <ph id="ph2">`true`</ph>, 전체 반복 반대의 정방향 쌍으로 구성 되며, 이러한 세그먼트 중 하나가 아니라 합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
          <source>Regardless of its current iteration, seeking a clock returns its current iteration to 1.</source>
          <target state="translated">현재 반복에 관계 없이 검색 클록 1로 현재 반복을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
          <source>Restarting a clock also returns its current iteration to 1.</source>
          <target state="translated">현재 반복이 1로 반환도 시계를 다시 실행 합니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>, or 0.0 if this clock is active and its <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> has a <ph id="ph4">&lt;see cref="P:System.Windows.Media.Animation.Timeline.Duration" /&gt;</ph> of <ph id="ph5">&lt;see cref="P:System.Windows.Duration.Forever" /&gt;</ph>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</source>
          <target state="translated">이 Clock이 <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>이면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이고, 이 Clock이 활성 상태이며 해당 <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>의 <ph id="ph4">&lt;see cref="P:System.Windows.Media.Animation.Timeline.Duration" /&gt;</ph>이 <ph id="ph5">&lt;see cref="P:System.Windows.Duration.Forever" /&gt;</ph>이면 0.0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress">
          <source>A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</source>
          <target state="translated">0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>, or 0.0 if this clock is active and its <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> has a <ph id="ph4">&lt;see cref="P:System.Windows.Media.Animation.Timeline.Duration" /&gt;</ph> of <ph id="ph5">&lt;see cref="P:System.Windows.Duration.Forever" /&gt;</ph>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</source>
          <target state="translated">이 Clock이 <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>이면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이고, 이 Clock이 활성 상태이며 해당 <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>의 <ph id="ph4">&lt;see cref="P:System.Windows.Media.Animation.Timeline.Duration" /&gt;</ph>이 <ph id="ph5">&lt;see cref="P:System.Windows.Duration.Forever" /&gt;</ph>이면 0.0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
          <source>A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</source>
          <target state="translated">0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>, or 0.0 if this clock is active and its <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> has a <ph id="ph4">&lt;see cref="P:System.Windows.Media.Animation.Timeline.Duration" /&gt;</ph> of <ph id="ph5">&lt;see cref="P:System.Windows.Duration.Forever" /&gt;</ph>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</source>
          <target state="translated">이 Clock이 <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>이면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이고, 이 Clock이 활성 상태이며 해당 <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>의 <ph id="ph4">&lt;see cref="P:System.Windows.Media.Animation.Timeline.Duration" /&gt;</ph>이 <ph id="ph5">&lt;see cref="P:System.Windows.Duration.Forever" /&gt;</ph>이면 0.0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
          <source>A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</source>
          <target state="translated">0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
          <source>The current state of the clock created for this storyboard: <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>.</source>
          <target state="translated">이 Storyboard에 대해 만들어진 Clock의 현재 상태로, <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
          <source>This method does not tell you whether a storyboard is paused.</source>
          <target state="translated">이 메서드를 확인할 수 없습니다 스토리 보드가 일시 중지 합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
          <source>To determine whether a storyboard is paused, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A&gt;</ph> method.</source>
          <target state="translated">스토리 보드 일시 중지 되어 있는지 여부를 확인 하려면는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
          <source>The current state of the clock created for this storyboard: <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>.</source>
          <target state="translated">이 Storyboard에 대해 만들어진 Clock의 현재 상태로, <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
          <source>This method does not tell you whether a storyboard is paused.</source>
          <target state="translated">이 메서드를 확인할 수 없습니다 스토리 보드가 일시 중지 합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
          <source>To determine whether a storyboard is paused, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A&gt;</ph> method.</source>
          <target state="translated">스토리 보드 일시 중지 되어 있는지 여부를 확인 하려면는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
          <source>The current state of the clock created for this storyboard: <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>.</source>
          <target state="translated">이 Storyboard에 대해 만들어진 Clock의 현재 상태로, <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
          <source>This method does not tell you whether a storyboard is paused.</source>
          <target state="translated">이 메서드를 확인할 수 없습니다 스토리 보드가 일시 중지 합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
          <source>To determine whether a storyboard is paused, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A&gt;</ph> method.</source>
          <target state="translated">스토리 보드 일시 중지 되어 있는지 여부를 확인 하려면는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if this storyboard's clock is <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>; otherwise, the current time of the storyboard's clock.</source>
          <target state="translated">이 Storyboard의 Clock이 <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>이면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이고, 그렇지 않으면 Storyboard Clock의 현재 시간입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if this storyboard's clock is <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>; otherwise, the current time of the storyboard's clock.</source>
          <target state="translated">이 Storyboard의 Clock이 <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>이면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이고, 그렇지 않으면 Storyboard Clock의 현재 시간입니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if this storyboard's clock is <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>; otherwise, the current time of the storyboard's clock.</source>
          <target state="translated">이 Storyboard의 Clock이 <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>이면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이고, 그렇지 않으면 Storyboard Clock의 현재 시간입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Retrieves a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> is paused.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused">
          <source>Retrieves a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> is paused.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> is paused; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>이 일시 중지되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)">
          <source>Retrieves a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> is paused.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> is paused; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>이 일시 중지되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)">
          <source>Retrieves a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> is paused.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> created for this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> is paused; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>이 일시 중지되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)">
          <source>To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</source>
          <target state="translated">이 메서드를 사용 하는 스토리 보드의 클록에 대 한 정보를 검색, 스토리 보드를 제어할 수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)">
          <source>The timeline from which to retrieve the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>을 검색할 Timeline입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.Target" /&gt;</ph> value of the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.Target" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph> 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)">
          <source>The dependency object targeted by <ph id="ph1">&lt;paramref name="element" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph>의 대상 종속성 개체입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Target%2A&gt;</ph> attached property with animation timelines to indicate the object that they target.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Target%2A&gt;</ph> 대상 개체를 나타내는 애니메이션 타임 라인을 사용 하 여 속성을 연결 합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)">
          <source>For more information about how storyboard targeting works, see <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>.</source>
          <target state="translated">스토리 보드를 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)">
          <source>For more information about how attached properties work, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</source>
          <target state="translated">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>연결 된 속성 개요<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)">
          <source>The timeline from which to retrieve the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>을 검색할 Timeline입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> value of the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph> 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)">
          <source>The name of the dependency object targeted by <ph id="ph1">&lt;paramref name="element" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph>의 대상 종속성 개체 이름입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)">
          <source>This method gets the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph> attached property on the specified object.</source>
          <target state="translated">이 메서드를 가져옵니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph> 지정 된 개체에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)">
          <source>For more information about how storyboard targeting works, see <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>.</source>
          <target state="translated">스토리 보드를 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)">
          <source>For more information about how attached properties work, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</source>
          <target state="translated">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>연결 된 속성 개요<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)">
          <source>The dependency object from which to get the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /&gt;</ph>를 가져올 종속성 개체입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /&gt;</ph> value of the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph> 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)">
          <source>The property targeted by <ph id="ph1">&lt;paramref name="element" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph>의 대상 속성입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)">
          <source>This method gets the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph> attached property on the specified object.</source>
          <target state="translated">이 메서드를 가져옵니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph> 지정 된 개체에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)">
          <source>For more information about how storyboard targeting works, see <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph> attached property.</source>
          <target state="translated">스토리 보드를 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph> 연결 된 속성입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)">
          <source>For more information about how attached properties work, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</source>
          <target state="translated">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>연결 된 속성 개요<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)">
          <source>Note that if the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph> was set in markup, this method returns an empty <ph id="ph2">&lt;xref:System.Windows.PropertyPath&gt;</ph> because the property reference is resolved and stored internally when it is parsed.</source>
          <target state="translated">되는 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph> 설정한 태그에서이 메서드는 빈 반환 <ph id="ph2">&lt;xref:System.Windows.PropertyPath&gt;</ph> 속성 참조 확인을 구문 분석할 때 내부적으로 저장 하기 때문입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Pauses the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 일시 중지합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Pause">
          <source>Pauses the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 일시 중지합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause">
          <source>This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</source>
          <target state="translated">이 메서드는 스토리 보드를 일시 중지 되었지만 아무런 변화가 없습니다은 활성 또는 현재 일시 중지 된 경우.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause">
          <source>As a side effect, all associated children are also paused.</source>
          <target state="translated">파생 작업으로 연결 된 모든 자식도 일시 중지 되었습니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause">
          <source>Beginning a Paused Storyboard</source>
          <target state="translated">일시 중지 된 스토리 보드를 시작합니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause">
          <source>When you <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> a storyboard that was paused, it appears to resume and restart.</source>
          <target state="translated">때 있습니다 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 일시 중지 된 스토리 보드 것 같은 데 다시 시작 하 고 다시 시작 합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause">
          <source>However, that is not what actually happens.</source>
          <target state="translated">그러나 실제로 이렇게 되지는 않습니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method actually replaces the paused <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> with a new unpaused version.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드는 실제로 일시 중지 된 대체 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> 일시 중지 해제를 새 버전입니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause">
          <source>Each time the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method is called, clock objects are created for the storyboard.</source>
          <target state="translated">될 때마다는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드가 호출 되 면 스토리 보드에 대해 클록 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause">
          <source>These clocks are distributed to the properties they animate.</source>
          <target state="translated">애니메이션 효과 주는 속성에 이러한 clock 배포 됩니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause">
          <source>So, when the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method is called again, it does not restart its clocks; it replaces them with new clocks.</source>
          <target state="translated">그럴 경우에는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드는 다시 해당 클럭을 다시 시작 하지 않으면 새 시계와 대체 합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>Pauses the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> of the specified <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph> associated with this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>와 연결된 지정된 <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 일시 중지합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</source>
          <target state="translated">이 메서드는 스토리 보드를 일시 중지 되었지만 아무런 변화가 없습니다은 활성 또는 현재 일시 중지 된 경우.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>As a side effect, all associated children are also paused.</source>
          <target state="translated">파생 작업으로 연결 된 모든 자식도 일시 중지 되었습니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>Seeking a paused storyboard does not resume it.</source>
          <target state="translated">일시 중지 된 스토리 보드 검색를 재시작 하지 것입니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>The only way to resume a paused storyboard is to use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Resume%2A&gt;</ph> method.</source>
          <target state="translated">일시 중지 된 스토리 보드를 다시 시작 하는 유일한 방법은 사용 하는 것은 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Resume%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 다시 시작 함 모양의 새 항목으로 다시 일시 중지 된 스토리 보드를 대체 합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>Fro an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>Pausing a storyboard's clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">스토리 보드의 클록 트리거 일시 중지는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>Beginning a Paused Storyboard</source>
          <target state="translated">일시 중지 된 스토리 보드를 시작합니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>When you <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> a storyboard that was paused, it appears to resume and restart.</source>
          <target state="translated">때 있습니다 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 일시 중지 된 스토리 보드 것 같은 데 다시 시작 하 고 다시 시작 합니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>However, that is not what actually happens.</source>
          <target state="translated">그러나 실제로 이렇게 되지는 않습니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method actually replaces itself with an unpaused version.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드 실제로으로 대체 하는 일시 중지 해제 버전입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>Each time the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method is called, clock objects are created for the storyboard.</source>
          <target state="translated">될 때마다는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드가 호출 되 면 스토리 보드에 대해 클록 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>These clocks are distributed to the properties they animate.</source>
          <target state="translated">애니메이션 효과 주는 속성에 이러한 clock 배포 됩니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>So, when the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method is called again, it does not restart its clocks; it replaces them with new clocks.</source>
          <target state="translated">그럴 경우에는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드는 다시 해당 클럭을 다시 시작 하지 않으면 새 시계와 대체 합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>The following example uses a controllable storyboard to animate a <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 제어할 수 있는 스토리 보드를 사용 하 여 애니메이션 효과를 주는 <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> is contained within a <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>'s name scope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> 내에 포함 된 한 <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>의 범위 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>Pauses the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> of the specified <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> associated with this <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>와 연결된 지정된 <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 일시 중지합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</source>
          <target state="translated">이 메서드는 스토리 보드를 일시 중지 되었지만 아무런 변화가 없습니다은 활성 또는 현재 일시 중지 된 경우.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>As a side effect, all associated children are also paused.</source>
          <target state="translated">파생 작업으로 연결 된 모든 자식도 일시 중지 되었습니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>Seeking a paused storyboard does not resume it.</source>
          <target state="translated">일시 중지 된 스토리 보드 검색를 재시작 하지 것입니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>The only way to resume a paused storyboard is to use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Resume%2A&gt;</ph> method.</source>
          <target state="translated">일시 중지 된 스토리 보드를 다시 시작 하는 유일한 방법은 사용 하는 것은 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Resume%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 다시 시작 함 모양의 새 항목으로 다시 일시 중지 된 스토리 보드를 대체 합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>Pausing a storyboard's clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">스토리 보드의 클록 트리거 일시 중지는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>Beginning a Paused Storyboard</source>
          <target state="translated">일시 중지 된 스토리 보드를 시작합니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>When you <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> a storyboard that was paused, it appears to resume and restart.</source>
          <target state="translated">때 있습니다 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 일시 중지 된 스토리 보드 것 같은 데 다시 시작 하 고 다시 시작 합니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>However, that is not what actually happens.</source>
          <target state="translated">그러나 실제로 이렇게 되지는 않습니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method actually replaces itself with an unpaused version.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드 실제로으로 대체 하는 일시 중지 해제 버전입니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>Each time the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method is called, clock objects are created for the storyboard.</source>
          <target state="translated">될 때마다는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드가 호출 되 면 스토리 보드에 대해 클록 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>These clocks are distributed to the properties they animate.</source>
          <target state="translated">애니메이션 효과 주는 속성에 이러한 clock 배포 됩니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
          <source>So, when the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method is called again, it does not restart its clocks; it replaces them with new clocks.</source>
          <target state="translated">그럴 경우에는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드는 다시 해당 클럭을 다시 시작 하지 않으면 새 시계와 대체 합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Animations that belong to this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> no longer affect the properties they once animated, regardless of their <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /&gt;</ph> setting.</source>
          <target state="translated">그러면 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> 설정에 관계없이 이 <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /&gt;</ph>에 속하는 애니메이션이 애니메이션 효과를 적용하던 속성에 더 이상 적용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Remove">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Remove">
          <source>Animations that belong to this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> no longer affect the properties they once animated, regardless of their <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /&gt;</ph> setting.</source>
          <target state="translated">그러면 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> 설정에 관계없이 이 <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /&gt;</ph>에 속하는 애니메이션이 애니메이션 효과를 적용하던 속성에 더 이상 적용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove">
          <source>All interactive actions taken on a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>, and therefore also on a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, occur on the next tick of the timing engine, which happens shortly before the next render.</source>
          <target state="translated">수행 되는 모든 대화형 작업은 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>, 즉도 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, 다음 틱은 다음 렌더링 되기 바로 전에 발생 함 타이밍 엔진에서 발생 합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove">
          <source>This means that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Remove%2A&gt;</ph> method still affects the animated properties until this time.</source>
          <target state="translated">즉는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Remove%2A&gt;</ph> 메서드가이 시간까지 애니메이션 적용된 속성에 계속 적용 합니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove">
          <source>In other words, the next time the frame is displayed, the storyboard is removed.</source>
          <target state="translated">즉, 프레임이 표시는 다음에 스토리 보드 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove">
          <source>If you need to disassociate an animation from a property before this time, use the <ph id="ph1">&lt;xref:System.Windows.UIElement.BeginAnimation%2A&gt;</ph> method with an <ph id="ph2">`animation`</ph> parameter value of <ph id="ph3">`null`</ph>.</source>
          <target state="translated">사용 하 여이 시간 전에 속성에서 끊어야 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.UIElement.BeginAnimation%2A&gt;</ph> 메서드는 <ph id="ph2">`animation`</ph> 매개 변수 값의 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
          <source>Animations that belong to this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> no longer affect the properties they once animated, regardless of their <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /&gt;</ph> setting.</source>
          <target state="translated">그러면 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> 설정에 관계없이 이 <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /&gt;</ph>에 속하는 애니메이션이 애니메이션 효과를 적용하던 속성에 더 이상 적용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
          <source>Removing a storyboard's clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RemoveRequested&gt;</ph> event.</source>
          <target state="translated">스토리 보드의 클록 트리거 제거는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RemoveRequested&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
          <source>Animations that belong to this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> no longer affect the properties they once animated, regardless of their <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /&gt;</ph> setting.</source>
          <target state="translated">그러면 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> 설정에 관계없이 이 <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /&gt;</ph>에 속하는 애니메이션이 애니메이션 효과를 적용하던 속성에 더 이상 적용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
          <source>Removing a storyboard's clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RemoveRequested&gt;</ph> event.</source>
          <target state="translated">스토리 보드의 클록 트리거 제거는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RemoveRequested&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Resumes the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Resume">
          <source>Resumes the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>Resumes the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>Resuming a storyboard that is not paused has no effect.</source>
          <target state="translated">스토리 보드를 일시 중지 되지 않은 다시 시작 해도 아무 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>Seeking a paused storyboard does not resume it.</source>
          <target state="translated">일시 중지 된 스토리 보드 검색를 재시작 하지 것입니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>The only way to resume a paused storyboard is to use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Resume%2A&gt;</ph> method.</source>
          <target state="translated">일시 중지 된 스토리 보드를 다시 시작 하는 유일한 방법은 사용 하는 것은 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Resume%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드 스토리 보드 시작 된 후 다시 시작 함 모양의 오래 된 스토리 보드를 대체 합니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>Resuming a paused a storyboard's clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">스토리 보드의 클록 트리거합니다 일시 중지 다시 시작은 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>The following example uses a controllable storyboard to animate a <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 제어할 수 있는 스토리 보드를 사용 하 여 애니메이션 효과를 주는 <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> is contained within a <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>'s name scope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> 내에 포함 된 한 <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>의 범위 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
          <source>Resumes the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
          <source>Resuming a storyboard that is not paused has no effect.</source>
          <target state="translated">스토리 보드를 일시 중지 되지 않은 다시 시작 해도 아무 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
          <source>Seeking a paused storyboard does not resume it.</source>
          <target state="translated">일시 중지 된 스토리 보드 검색를 재시작 하지 것입니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
          <source>The only way to resume a paused storyboard is to use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Resume%2A&gt;</ph> method.</source>
          <target state="translated">일시 중지 된 스토리 보드를 다시 시작 하는 유일한 방법은 사용 하는 것은 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Resume%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드 스토리 보드 시작 된 후 다시 시작 함 모양의 오래 된 스토리 보드를 대체 합니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
          <source>Resuming a paused a storyboard's clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">스토리 보드의 클록 트리거합니다 일시 중지 다시 시작은 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Seeks this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to a new position when the next clock tick occurs.</source>
          <target state="translated">다음 Clock Tick이 발생하면 이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>를 새 위치에서 검색합니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
          <source>A positive or negative value that describes the amount by which the timeline should move forward or backward.</source>
          <target state="translated">Timeline이 앞뒤로 이동하는 정도를 설명하는 양수 또는 음수 값입니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
          <source>Seeks this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to the specified position.</source>
          <target state="translated">지정된 위치까지 이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>를 검색합니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> performs the requested seek when the next clock tick occurs.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>는 다음 Clock Tick이 발생하면 요청된 검색을 수행합니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
          <source>Note that seek operations do not take the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.</source>
          <target state="translated">검색 작업을 스토리 보드를 사용 하지 않는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> 설정을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
          <source>The storyboard is treated as though it has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
          <target state="translated">스토리 보드 있는 것 처럼 처리 되는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 1 및 0의 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">타임라인이 지정된 <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The position from which <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is applied.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>이 적용되는 위치입니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeks this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to the specified position.</source>
          <target state="translated">지정된 위치까지 이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>를 검색합니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> performs the requested seek when the next clock tick occurs.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>는 다음 Clock Tick이 발생하면 요청된 검색을 수행합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Note that seek operations do not take the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.</source>
          <target state="translated">검색 작업을 스토리 보드를 사용 하지 않는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> 설정을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The storyboard is treated as though it has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
          <target state="translated">스토리 보드 있는 것 처럼 처리 되는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 1 및 0의 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">타임라인이 지정된 <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The position from which <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is applied.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>이 적용되는 위치입니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeks this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to the specified position.</source>
          <target state="translated">지정된 위치까지 이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>를 검색합니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> performs the requested seek when the next clock tick occurs.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>는 다음 Clock Tick이 발생하면 요청된 검색을 수행합니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Note that seek operations do not take the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.</source>
          <target state="translated">검색 작업을 스토리 보드를 사용 하지 않는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> 설정을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The storyboard is treated as though it has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
          <target state="translated">스토리 보드 있는 것 처럼 처리 되는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 1 및 0의 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This method changes the storyboard clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
          <target state="translated">이 메서드는 스토리 보드 클록의 변경 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
          <target state="translated">이 메서드는 다음 번 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>As a side-effect, the appropriate events are also not raised until then.</source>
          <target state="translated">파생 작업으로 적합 한 이벤트가 발생 하지 않습니다 그때 까지는 합니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeking a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 검색는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The following example shows both the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Seek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> methods.</source>
          <target state="translated">다음 예제에서는 모두는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Seek%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">타임라인이 지정된 <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The position from which <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is applied.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>이 적용되는 위치입니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeks this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to the specified position.</source>
          <target state="translated">지정된 위치까지 이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>를 검색합니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> performs the requested seek when the next clock tick occurs.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>는 다음 Clock Tick이 발생하면 요청된 검색을 수행합니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Note that seek operations do not take the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.</source>
          <target state="translated">검색 작업을 스토리 보드를 사용 하지 않는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> 설정을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The storyboard is treated as though it has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
          <target state="translated">스토리 보드 있는 것 처럼 처리 되는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 1 및 0의 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This method changes the storyboard clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
          <target state="translated">이 메서드는 스토리 보드 클록의 변경 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
          <target state="translated">이 메서드는 다음 번 틱을 처리할 때까지 타이밍 트리에 영향을 주지는.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>As a side-effect, the appropriate events are also not raised until then.</source>
          <target state="translated">파생 작업으로 적합 한 이벤트가 발생 하지 않습니다 그때 까지는 합니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제어할 수 있는 만들어질 경우 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeking a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 검색는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The following example shows how to seek (skip) to one second after a Storyboard begins.</source>
          <target state="translated">다음 예제에서는 1 초 스토리 보드 시작 된 후에 검색 (건너뛰기) 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The next example shows both the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Seek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> methods.</source>
          <target state="translated">다음 예제에서는 모두는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Seek%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Seeks this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to a new position immediately (synchronously).</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>를 새 위치에서 동기적으로 즉시 검색합니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
          <source>A positive or negative value that describes the amount by which the timeline should move forward or backward.</source>
          <target state="translated">Timeline이 앞뒤로 이동하는 정도를 설명하는 양수 또는 음수 값입니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
          <source>Seeks this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to a new position immediately (synchronously).</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>를 새 위치에서 동기적으로 즉시 검색합니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> aligns the seeked time of the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> with the last clock tick.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> 정렬의 seeked 시간은 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> 마지막 클록 틱으로 합니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
          <source>Values are immediately updated to reflect the changes due to <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph>, even though the screen does not reflect these changes until the screen updates.</source>
          <target state="translated">값이로 인해 변경 내용을 반영 하도록 업데이트 즉시 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph>화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않는 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
          <source>Note that seek operations do not take the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.</source>
          <target state="translated">검색 작업을 스토리 보드를 사용 하지 않는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> 설정을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
          <source>The storyboard is treated as though it has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
          <target state="translated">스토리 보드 있는 것 처럼 처리 되는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 1 및 0의 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">타임라인이 지정된 <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The position from which <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is applied.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>이 적용되는 위치입니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeks this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to a new position immediately (synchronously).</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>를 새 위치에서 동기적으로 즉시 검색합니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> aligns the seeked time of the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> with the last clock tick.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> 정렬의 seeked 시간은 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> 마지막 클록 틱으로 합니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Values are immediately updated to reflect the changes due to <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph>, even though the screen does not reflect these changes until the screen updates.</source>
          <target state="translated">값이로 인해 변경 내용을 반영 하도록 업데이트 즉시 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph>화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않는 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Note that seek operations do not take the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.</source>
          <target state="translated">검색 작업을 스토리 보드를 사용 하지 않는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> 설정을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The storyboard is treated as though it has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
          <target state="translated">스토리 보드 있는 것 처럼 처리 되는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 1 및 0의 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">타임라인이 지정된 <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The position from which <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is applied.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>이 적용되는 위치입니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeks this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to a new position immediately (synchronously).</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>를 새 위치에서 동기적으로 즉시 검색합니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> aligns the seeked time of the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> with the last clock tick.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> 정렬의 seeked 시간은 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> 마지막 클록 틱으로 합니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Values are immediately updated to reflect the changes due to <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph>, even though the screen does not reflect these changes until the screen updates.</source>
          <target state="translated">값이로 인해 변경 내용을 반영 하도록 업데이트 즉시 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph>화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않는 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Note that seek operations do not take the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.</source>
          <target state="translated">검색 작업을 스토리 보드를 사용 하지 않는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> 설정을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The storyboard is treated as though it has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
          <target state="translated">스토리 보드 있는 것 처럼 처리 되는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 1 및 0의 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This method changes the storyboard clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to</source>
          <target state="translated">이 메서드는 스토리 보드 클록의 변경 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> 를</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeking a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 검색는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The following example shows both the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Seek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> methods.</source>
          <target state="translated">다음 예제에서는 모두는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Seek%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">타임라인이 지정된 <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The position from which <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is applied.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>이 적용되는 위치입니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeks this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph> to a new position immediately (synchronously).</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>를 새 위치에서 동기적으로 즉시 검색합니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> aligns the seeked time of the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> with the last clock tick.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> 정렬의 seeked 시간은 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> 마지막 클록 틱으로 합니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Values are immediately updated to reflect the changes due to <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph>, even though the screen does not reflect these changes until the screen updates.</source>
          <target state="translated">값이로 인해 변경 내용을 반영 하도록 업데이트 즉시 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph>화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않는 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Note that seek operations do not take the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.</source>
          <target state="translated">검색 작업을 스토리 보드를 사용 하지 않는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> 설정을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The storyboard is treated as though it has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
          <target state="translated">스토리 보드 있는 것 처럼 처리 되는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 1 및 0의 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This method changes the storyboard clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to</source>
          <target state="translated">이 메서드는 스토리 보드 클록의 변경 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> 를</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeking a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events.</source>
          <target state="translated">스토리 보드 트리거 검색는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The following example shows both the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Seek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> methods.</source>
          <target state="translated">다음 예제에서는 모두는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Seek%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Sets the interactive speed ratio for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>의 대화형 속도 비율을 설정합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)">
          <source>A finite value greater than zero that is the new interactive speed ratio of the storyboard.</source>
          <target state="translated">스토리보드의 새 대화형 속도 비율인 0보다 큰 유한 값입니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)">
          <source>This value is multiplied against the storyboard's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> value to determine the storyboard's effective speed.</source>
          <target state="translated">이 값에 Storyboard의 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> 값을 곱해 Storyboard의 유효 속도를 결정합니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)">
          <source>This value does not overwrite the storyboard's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> property.</source>
          <target state="translated">이 값은 Storyboard의 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> 속성을 덮어쓰지 않습니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)">
          <source>For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> of 0.5 gives the storyboard an effective speed of 1.5.</source>
          <target state="translated">예를 들어 이 메서드를 호출하고 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph>가 0.5인 Storyboard에 대해 대화형 속도 비율을 3으로 지정하면 Storyboard의 유효 속도가 1.5가 됩니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)">
          <source>Sets the interactive speed ratio for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>의 대화형 속도 비율을 설정합니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>A finite value greater than zero that is the new interactive speed ratio of the storyboard.</source>
          <target state="translated">스토리보드의 새 대화형 속도 비율인 0보다 큰 유한 값입니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>This value is multiplied against the storyboard's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> value to determine the storyboard's effective speed.</source>
          <target state="translated">이 값에 Storyboard의 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> 값을 곱해 Storyboard의 유효 속도를 결정합니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>This value does not overwrite the storyboard's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> property.</source>
          <target state="translated">이 값은 Storyboard의 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> 속성을 덮어쓰지 않습니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> of 0.5 gives the storyboard an effective speed of 1.5.</source>
          <target state="translated">예를 들어 이 메서드를 호출하고 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph>가 0.5인 Storyboard에 대해 대화형 속도 비율을 3으로 지정하면 Storyboard의 유효 속도가 1.5가 됩니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>Sets the interactive speed ratio of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>의 대화형 속도 비율을 설정합니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>Calling this method triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>The following example uses a controllable storyboard to animate a <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 제어할 수 있는 스토리 보드를 사용 하 여 애니메이션 효과를 주는 <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> is contained within a <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>'s name scope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> 내에 포함 된 한 <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>의 범위 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
          <source>A finite value greater than zero that is the new interactive speed ratio of the storyboard.</source>
          <target state="translated">스토리보드의 새 대화형 속도 비율인 0보다 큰 유한 값입니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
          <source>This value is multiplied against the storyboard's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> value to determine the storyboard's effective speed.</source>
          <target state="translated">이 값에 Storyboard의 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> 값을 곱해 Storyboard의 유효 속도를 결정합니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
          <source>This value does not overwrite the storyboard's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> property.</source>
          <target state="translated">이 값은 Storyboard의 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> 속성을 덮어쓰지 않습니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
          <source>For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> of 0.5 gives the storyboard an effective speed of 1.5.</source>
          <target state="translated">예를 들어 이 메서드를 호출하고 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph>가 0.5인 Storyboard에 대해 대화형 속도 비율을 3으로 지정하면 Storyboard의 유효 속도가 1.5가 됩니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
          <source>Sets the interactive speed ratio of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>의 대화형 속도 비율을 설정합니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
          <source>Calling this method triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph> that should target the specified dependency object.</source>
          <target state="translated">지정된 종속성 개체를 대상으로 사용해야 하는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <source>The dependency object to target.</source>
          <target state="translated">대상으로 지정할 종속성 개체입니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <source>Makes the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph> target the dependency object.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph>이 종속성 개체를 대상으로 사용하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <source>This method sets the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Target%2A&gt;</ph> attached property on the specified object.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Target%2A&gt;</ph> 지정 된 개체에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <source>For more information about how storyboard targeting works, see <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>.</source>
          <target state="translated">스토리 보드를 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <source>For more information about how attached properties work, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</source>
          <target state="translated">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>연결 된 속성 개요<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Target%2A&gt;</ph> property is not serializable, because it can be set to any <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Target%2A&gt;</ph> 하나로 설정할 수 있으므로 속성은 직렬화 없습니다 <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <source>It is not guaranteed that this object can be correctly referenced from XAML.</source>
          <target state="translated">이 개체는 XAML에서 올바르게 참조할 수는 보장 되지 됩니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph> that should target the specified dependency object.</source>
          <target state="translated">지정된 종속성 개체를 대상으로 사용해야 하는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)">
          <source>The name of the dependency object to target.</source>
          <target state="translated">대상으로 지정할 종속성 개체의 이름입니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)">
          <source>Makes the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph> target the dependency object with the specified name.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph> 대상에 지정된 이름을 적용하여 종속성 개체로 설정합니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)">
          <source>This method sets the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph> attached property on the specified object.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph> 지정 된 개체에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)">
          <source>For more information about how storyboard targeting works, see <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>.</source>
          <target state="translated">스토리 보드를 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)">
          <source>For more information about how attached properties work, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</source>
          <target state="translated">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>연결 된 속성 개요<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph> with which to associate the specified dependency property.</source>
          <target state="translated">지정된 종속성 속성을 연결하는 데 사용할 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)">
          <source>A path that describe the dependency property to be animated.</source>
          <target state="translated">애니메이션 효과를 줄 종속성 속성을 설명하는 경로입니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)">
          <source>Makes the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph> target the specified dependency property.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph>이 지정된 종속성 속성을 대상으로 사용하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)">
          <source>This method sets the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph> attached property on the specified object.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph> 지정 된 개체에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)">
          <source>For more information about how storyboard targeting works, see <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph>.</source>
          <target state="translated">스토리 보드를 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)">
          <source>For more information about how attached properties work, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</source>
          <target state="translated">연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>연결 된 속성 개요<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Advances the current time of this storyboard's <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> to the end of its active period.</source>
          <target state="translated">이 Storyboard의 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 현재 시간을 활성 기간 끝으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill">
          <source>Advances the current time of this storyboard's <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> to the end of its active period.</source>
          <target state="translated">이 Storyboard의 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 현재 시간을 활성 기간 끝으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>Advances the current time of this storyboard's <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> to the end of its active period.</source>
          <target state="translated">이 Storyboard의 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 현재 시간을 활성 기간 끝으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> setting.</source>
          <target state="translated">이 메서드는 스토리 보드의 이동은 활성 기간의 끝으로 현재 시간 이 시점에서 스토리 보드의 동작이으로 지정 되어 해당 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> 설정 합니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.FillBehavior.HoldEnd&gt;</ph>, the storyboard fills; if the property is set to <ph id="ph3">&lt;xref:System.Windows.Media.Animation.FillBehavior.Stop&gt;</ph>, the storyboard stops.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.FillBehavior.HoldEnd&gt;</ph>는 속성이로 설정 된 경우 스토리 보드 채웁니다; <ph id="ph3">&lt;xref:System.Windows.Media.Animation.FillBehavior.Stop&gt;</ph>, 스토리 보드 중지 합니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</source>
          <target state="translated">시간 제한이 있는 storyboard에이 메서드를 호출 무한 반복 횟수는 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>Calling this method on an inactive storyboard has no effect.</source>
          <target state="translated">이 메서드는 비활성 스토리 보드를 호출 해도 아무 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>Advancing a clock to its fill period triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events.</source>
          <target state="translated">클록의 채우기 기간 트리거 당기지는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>The following example uses a controllable storyboard to animate a <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 제어할 수 있는 스토리 보드를 사용 하 여 애니메이션 효과를 주는 <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> is contained within a <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>'s name scope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> 내에 포함 된 한 <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>의 범위 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
          <source>Advances the current time of this storyboard's <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> to the end of its active period.</source>
          <target state="translated">이 Storyboard의 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 현재 시간을 활성 기간 끝으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
          <source>This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> setting.</source>
          <target state="translated">이 메서드는 스토리 보드의 이동은 활성 기간의 끝으로 현재 시간 이 시점에서 스토리 보드의 동작이으로 지정 되어 해당 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> 설정 합니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.FillBehavior.HoldEnd&gt;</ph>, the storyboard fills; if the property is set to <ph id="ph3">&lt;xref:System.Windows.Media.Animation.FillBehavior.Stop&gt;</ph>, the storyboard stops.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.FillBehavior.HoldEnd&gt;</ph>는 속성이로 설정 된 경우 스토리 보드 채웁니다; <ph id="ph3">&lt;xref:System.Windows.Media.Animation.FillBehavior.Stop&gt;</ph>, 스토리 보드 중지 합니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
          <source>Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</source>
          <target state="translated">시간 제한이 있는 storyboard에이 메서드를 호출 무한 반복 횟수는 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
          <source>Calling this method on an inactive storyboard has no effect.</source>
          <target state="translated">이 메서드는 비활성 스토리 보드를 호출 해도 아무 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
          <source>Advancing a clock to its fill period triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events.</source>
          <target state="translated">클록의 채우기 기간 트리거 당기지는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Storyboard">
          <source>Stops the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 중지합니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Stop">
          <source>Stops the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 중지합니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop">
          <source>Note that stopping a storyboard does not fire the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Completed&gt;</ph> event.</source>
          <target state="translated">중지 하는 스토리 보드 발생 하지 않습니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Completed&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
          <source>Stops the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 중지합니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph> 스토리 보드의 대상 속성에 더 이상 영향을 줍니다: 애니메이션이 적용 된 속성의 이전 값으로 돌아갑니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
          <source>Stopping a clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events, but not the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.Completed&gt;</ph> event.</source>
          <target state="translated">클록 트리거 중지는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 이벤트 하지 않고는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.Completed&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
          <source>The following example uses a controllable storyboard to animate a <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 제어할 수 있는 스토리 보드를 사용 하 여 애니메이션 효과를 주는 <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> is contained within a <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>'s name scope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.TextEffect&gt;</ph> 내에 포함 된 한 <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>의 범위 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
          <source>The object specified when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /&gt;</ph> 메서드가 호출되었을 때 지정된 개체입니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
          <source>This object contains the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> objects that were created for this storyboard and its children.</source>
          <target state="translated">이 개체에는 이 Storyboard와 그 자식에 대해 만들어진 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
          <source>Stops the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was created for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 대해 만들어진 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Storyboard" /&gt;</ph>을 중지합니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph> 스토리 보드의 대상 속성에 더 이상 영향을 줍니다: 애니메이션이 적용 된 속성의 이전 값으로 돌아갑니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
          <source>Stopping a clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events, but not the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.Completed&gt;</ph> event.</source>
          <target state="translated">클록 트리거 중지는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 이벤트 하지 않고는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.Completed&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
          <source>To interactively control this storyboard, you must use the same <ph id="ph1">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.</source>
          <target state="translated">이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 <ph id="ph1">`containingObject`</ph> 스토리 보드를 시작 하는 데 사용한 대화형 메서드를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
          <source>A controllable storyboard can pause, resume, seek, stop, and be removed.</source>
          <target state="translated">제어할 수 있는 스토리 보드 수 일시 중지, 다시 시작할 seek, 중지, 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
          <source>To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id="ph2">`true`</ph> to make it controllable.</source>
          <target state="translated">스토리 보드를 코드에서 제어할 수 있도록 하려면 스토리 보드의 적절 한 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">`true`</ph> 제어할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control a Storyboard After It Starts<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 한 스토리 보드 후 시작을 제어<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /&gt;</ph> 연결된 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="F:System.Windows.Media.Animation.Storyboard.TargetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.Target" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.Target" /&gt;</ph> 연결된 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /&gt;</ph> 연결된 속성을 식별합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>