<Type Name="IAnimatable" FullName="System.Windows.Media.Animation.IAnimatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f7e84ce6a0766c479902a3039faf51f30a269ac" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37501614" /></Metadata><TypeSignature Language="C#" Value="public interface IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAnimatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAnimatable" />
  <TypeSignature Language="F#" Value="type IAnimatable = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="98ad2-101">이 형식은 WPF 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-101">This type supports the WPF infrastructure and is not intended to be used directly from your code.</span></span> <span data-ttu-id="98ad2-102">클래스에 애니메이션을 적용할 수 있도록 만들려면 클래스가 <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.ContentElement" /> 또는 <see cref="T:System.Windows.Media.Animation.Animatable" />에서 파생되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-102">To make a class animatable, it should derive from <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.ContentElement" />, or <see cref="T:System.Windows.Media.Animation.Animatable" />.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.UIElement" />
    <altmember cref="T:System.Windows.ContentElement" />
    <altmember cref="T:System.Windows.Media.Animation.Animatable" />
  </Docs>
  <Members>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98ad2-103">지정된 종속성 속성에 지정된 <see cref="T:System.Windows.Media.Animation.AnimationClock" />의 효과를 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-103">Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="iAnimatable.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="98ad2-104">애니메이션 효과를 줄 <see cref="T:System.Windows.DependencyProperty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-104">The <see cref="T:System.Windows.DependencyProperty" /> to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="98ad2-105">속성에 애니메이션 효과를 줄 <see cref="T:System.Windows.Media.Animation.AnimationClock" />입니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-105">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that animates the property.</span></span></param>
        <summary><span data-ttu-id="98ad2-106">지정된 종속성 속성에 지정된 <see cref="T:System.Windows.Media.Animation.AnimationClock" />의 효과를 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-106">Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Animation.AnimationClock" />
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="iAnimatable.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="98ad2-107">애니메이션 효과를 줄 <see cref="T:System.Windows.DependencyProperty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-107">The <see cref="T:System.Windows.DependencyProperty" /> to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="98ad2-108">속성에 애니메이션 효과를 줄 <see cref="T:System.Windows.Media.Animation.AnimationClock" />입니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-108">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that animates the property.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="98ad2-109">새 <see cref="T:System.Windows.Media.Animation.AnimationClock" />이 속성에서 현재 애니메이션으로부터 전환되는 방법 또는 현재 애니메이션에 영향을 주는 방법을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-109">Determines how the new <see cref="T:System.Windows.Media.Animation.AnimationClock" /> will transition from or affect any current animations on the property.</span></span></param>
        <summary><span data-ttu-id="98ad2-110">지정된 종속성 속성에 지정된 <see cref="T:System.Windows.Media.Animation.AnimationClock" />의 효과를 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-110">Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</span></span> <span data-ttu-id="98ad2-111">현재 애니메이션에 대한 새 <see cref="T:System.Windows.Media.Animation.AnimationClock" />의 영향은 <paramref name="handoffBehavior" /> 매개 변수 값에 의해 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-111">The effect of the new <see cref="T:System.Windows.Media.Animation.AnimationClock" /> on any current animations is determined by the value of the <paramref name="handoffBehavior" /> parameter.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Animation.AnimationClock" />
        <altmember cref="T:System.Windows.Media.Animation.HandoffBehavior" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98ad2-112">이 인스턴스에 대해 애니메이션 시퀀스를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-112">Initiates an animation sequence for this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ad2-113">애니메이션 시퀀스의 다음 프레임이 렌더링 되 면 트리거됩니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-113">The animation sequence is triggered once the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="iAnimatable.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="98ad2-114">애니메이션 효과를 줄 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-114">The object to animate.</span></span></param>
        <param name="animation"><span data-ttu-id="98ad2-115">속성에 애니메이션 효과를 주는 데 필요한 기능이 있는 타임라인입니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-115">The timeline with the necessary functionality to animate the property.</span></span></param>
        <summary><span data-ttu-id="98ad2-116">지정된 <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />을 기반으로, <see cref="T:System.Windows.DependencyProperty" /> 개체의 애니메이션 시퀀스를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-116">Initiates an animation sequence for the <see cref="T:System.Windows.DependencyProperty" /> object, based on the specified <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ad2-117">애니메이션 시퀀스의 다음 프레임이 렌더링 되 면 트리거됩니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-117">The animation sequence is triggered once the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="iAnimatable.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="98ad2-118">애니메이션 효과를 줄 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-118">The object to animate.</span></span></param>
        <param name="animation"><span data-ttu-id="98ad2-119">새 애니메이션을 조정하는 데 필요한 기능이 있는 Timeline입니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-119">The timeline with the necessary functionality to tailor the new animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="98ad2-120">모든 관련 애니메이션 시퀀스와 상호 작용하는 방식을 지정하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-120">The object specifying the manner in which to interact with all relevant animation sequences.</span></span></param>
        <summary><span data-ttu-id="98ad2-121">지정된 <see cref="T:System.Windows.DependencyProperty" /> 및 <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />에 따라 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 개체에 대한 애니메이션 시퀀스를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-121">Initiates an animation sequence for the <see cref="T:System.Windows.DependencyProperty" />.object, based on both the specified <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> and <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ad2-122">애니메이션 시퀀스의 다음 프레임이 렌더링 되 면 트리거됩니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-122">The animation sequence is triggered once the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="iAnimatable.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="98ad2-123">기준 값을 요청하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-123">The object for which the base value is being requested.</span></span></param>
        <summary><span data-ttu-id="98ad2-124">지정된 <see cref="T:System.Windows.DependencyProperty" /> 개체의 기준 값을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-124">Retrieves the base value of the specified <see cref="T:System.Windows.DependencyProperty" /> object.</span></span></summary>
        <returns><span data-ttu-id="98ad2-125"><paramref name="Dp" />의 기준 값을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-125">The object representing the base value of <paramref name="Dp" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ad2-126">대신이 메서드를 사용 하 여 <xref:System.Windows.DependencyObject.GetValue%2A> 애니메이션된 속성의 애니메이션이 적용 되지 않은 값을 검색 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="98ad2-126">Use this method instead of <xref:System.Windows.DependencyObject.GetValue%2A> when you want to retrieve the non-animated value of an animated property.</span></span> <span data-ttu-id="98ad2-127">이 메서드는 사실 활용 하는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 애니메이션 대상 속성의 원래 값을 제거 하지 마세요.</span><span class="sxs-lookup"><span data-stu-id="98ad2-127">This method takes advantage of the fact that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] animations do not remove the target property's original value.</span></span> <span data-ttu-id="98ad2-128">자세한 내용은 [종속성 속성 값 우선 순위](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="98ad2-128">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98ad2-129">이 인스턴스에 애니메이션이 적용된 속성이 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-129">Gets a value that indicates whether this instance has any animated properties.</span></span></summary>
        <value><span data-ttu-id="98ad2-130"><see cref="T:System.Windows.Media.Animation.Clock" />이 하나 이상의 현재 개체 속성과 연결되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-130"><see langword="true" /> if a <see cref="T:System.Windows.Media.Animation.Clock" /> is associated with at least one of the current object's properties; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98ad2-131">이 속성을 반환 하는 참고 `true` 경우에 연결 된 애니메이션 <xref:System.Windows.Media.Animation.ClockState.Stopped> 또는 <xref:System.Windows.Media.Animation.ClockState.Filling>합니다.</span><span class="sxs-lookup"><span data-stu-id="98ad2-131">Note that this property returns `true` even if the associated animation is <xref:System.Windows.Media.Animation.ClockState.Stopped> or <xref:System.Windows.Media.Animation.ClockState.Filling>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
      </Docs>
    </Member>
  </Members>
</Type>