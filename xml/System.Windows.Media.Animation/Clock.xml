<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Clock.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5829cbcd67b4a6736053ec04245b9b87181268348.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">829cbcd67b4a6736053ec04245b9b87181268348</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Clock">
          <source>Maintains run-time timing state for a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph>의 런타임 타이밍 상태를 유지 관리합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>, by itself, doesn't actually do anything other than describe a segment of time.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>, 자체적으로 실제로 아무런 작업도 하지 않습니다 아닌 다른 시간 세그먼트에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>It's the timeline's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> object that does the real work: it maintains timing-related run-time state for the timeline.</source>
          <target state="translated">타임 라인의는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 실제 작업을 수행 하는 개체: 시간 표시 막대에 대 한 타이밍 관련 런타임 상태를 유지 관리 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>In most cases, a clock is created automatically for your timeline.</source>
          <target state="translated">대부분의 경우 클록 일정에 대 한 자동으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>When you animate by using a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> or the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt;</ph> method, clocks are automatically created for your timelines and animations and applied to their targeted properties.</source>
          <target state="translated">사용 하 여 애니메이션 효과 줄 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt;</ph> 메서드를 시계가 자동으로 타임 라인 및 애니메이션에 대 한 만들어지고 해당 대상된 속성에 적용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>For examples, see <bpt id="p1">[</bpt>How to: Animate a Property by Using a Storyboard<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-by-using-a-storyboard.md)</ept> and <bpt id="p2">[</bpt>How to: Animate a Property Without Using a Storyboard<ept id="p2">](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-without-using-a-storyboard.md)</ept>.</source>
          <target state="translated">예제를 보려면 <bpt id="p1">[</bpt>하는 방법: 스토리 보드를 사용 하 여 속성에 애니메이션 효과<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-by-using-a-storyboard.md)</ept> 및 <bpt id="p2">[</bpt>하는 방법: 속성 하지 않고 사용 하는 스토리 보드 애니메이션 효과 줄<ept id="p2">](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-without-using-a-storyboard.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>You can also create a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> explicitly by using the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CreateClock%2A&gt;</ph> method.</source>
          <target state="translated">만들 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 를 사용 하 여 명시적으로 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CreateClock%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>In performance-intensive scenarios, such as animating large numbers of similar objects, managing your own <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> use can provide performance benefits.</source>
          <target state="translated">많은 수의 유사한 개체에 애니메이션을 적용 하는 등의 성능이 시나리오에서 관리 사용자 고유의 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 사용 하 여 성능 이점을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>Clocks are arranged in trees that match the structure of the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects tree from which they are created.</source>
          <target state="translated">클록의 구조와 일치 하는 트리로 정렬 되는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> 에서 생성 된 개체 트리 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>The root clock of such a timing tree can be interactively manipulated (paused, resumed, stopped, and so on) by retrieving its <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph>.</source>
          <target state="translated">이러한 시간 트리의 루트 클록 대화형으로 조작할 수 (일시 중지, 재개 된, 중지, 및 등)를 검색 하 여 해당 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>Non-root clocks cannot be directly controlled.</source>
          <target state="translated">루트가 아닌 클록을 직접 제어할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>Once created, a clock cannot be modified (but it can be manipulated).</source>
          <target state="translated">일단 만든 클록을 수정할 수 없습니다 (그러나 조작할 수 있습니다).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>Using a Timeline as a Timer</source>
          <target state="translated">일정 타이머로 사용 하 여</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>A timeline's clock will only progress when there's an event handler associated with it or (in the case of an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> object) it is associated with a property.</source>
          <target state="translated">없으면 연결 된 이벤트 처리기는 타임 라인의 클록만 진행 또는 (의 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 개체) 속성에 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>For this reason (and others), it's not recommended that you use a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> as a timer.</source>
          <target state="translated">이 따라서 (및 다른 사용자)는 것을 사용 하는 한 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> 를 타이머 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>Derived classes should implement <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" /&gt;</ph> if they want to modify how time flows for this clock.</source>
          <target state="translated">파생된 클래스에서 구현 해야 <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" /&gt;</ph> 시간이 클록에 대 한 흐름 하는 방법을 수정 하는 경우.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>Derived classes can be made to do additional work when the clock repeats, skips, seeks, begins, pauses, resumes, or stops by overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Windows.Media.Animation.Clock.SpeedChanged" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Windows.Media.Animation.Clock.Stopped" /&gt;</ph> methods.</source>
          <target state="translated">클록 반복, 건너뜁니다, 검색 (seek), 시작, 일시 중지, 재개 또는 중지를 재정의 하 여 추가 작업을 수행 하도록 파생 된 클래스를 만들 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Windows.Media.Animation.Clock.SpeedChanged" /&gt;</ph>, 및 <ph id="ph3">&lt;see cref="M:System.Windows.Media.Animation.Clock.Stopped" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> from which this clock should be constructed.</source>
          <target state="translated">이 Clock을 생성해야 하는 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)">
          <source>Clocks are not created for any child <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> objects, if they exist.</source>
          <target state="translated">자식 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> 개체가 있는 경우 이러한 자식 개체에 대한 Clock은 만들어지지 않습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> class, using the specified <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> as a template.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>을 템플릿으로 사용하여 <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> object has no children.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 개체에는 자식이 없습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="E:System.Windows.Media.Animation.Clock.Completed">
          <source>Occurs when this clock has completely finished playing.</source>
          <target state="translated">이 Clock의 재생이 완전히 끝나면 발생합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.Completed">
          <source>If this clock is the root clock of a clock tree, it has completed playing after it reaches the end of its active duration (which includes repeats) and all its children have reached the end of their active durations.</source>
          <target state="translated">이 클록이 클록 트리 루트 클록 이면 (반복을 포함) 해당 활성 기간의 끝에 도달 하 고 모든 자식 활성 기간의 끝에 도달한 후 재생이 완료 되었습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.Completed">
          <source>If this clock is a child clock, it is considered to have completely finished playing when the root clock of the clock tree to which it belongs reaches the end of its active duration and all its child clocks have finished playing.</source>
          <target state="translated">이 클록이 자식 클록 이면 량에 도달 속해 있는 클록 트리 루트 클록의 활성 기간 및 모든 해당 자식 clock의 끝이 완료 되 면 재생 재생를 완전히 완료으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.Completed">
          <source>Stopping a clock does not trigger its completed event, but advancing it to its fill period does.</source>
          <target state="translated">클록 중지 트리거하지 해당 완료 이벤트를 지원 하지만 채우기 기간에 도달지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.Controller">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph> that can be used to start, pause, resume, seek, skip, stop, or remove this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>을 시작, 일시 중지, 다시 시작, 검색, 건너뛰기, 중지 또는 제거할 수 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.Controller">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph> if this is a root clock; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">루트 클록이면 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.Controller">
          <source>Only root clocks can be interactively controlled.</source>
          <target state="translated">루트 클록만을 대화형으로 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed">
          <source>Gets the rate at which the clock's time is currently progressing, compared to real-world time.</source>
          <target state="translated">클록의 시간이 현재 진행되는 속도를 실제 시간과 비교하여 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed">
          <source>The rate at which this clock's time is current progressing, compared to real-world time.</source>
          <target state="translated">클록의 시간이 현재 진행되는 속도로, 실제 시간과 비교된 것입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed">
          <source>If the clock is stopped, this property returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">클록이 중지되면 이 속성은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="E:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated">
          <source>Occurs when the clock's speed is updated.</source>
          <target state="translated">클록의 속도가 업데이트될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated">
          <source>Pausing, resuming, reversing, accelerating, decelerating, seeking, stopping, or changing a clock's interactive speed using a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph> triggers this event.</source>
          <target state="translated">일시 중지, 재개, 반전, 가속, 감속, 검색, 중지, 또는 클록 변경의 대화형 속도 사용 하는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph> 이 이벤트를 트리거합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated">
          <source>Although this event occurs when the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt;</ph> property becomes invalid, that doesn't necessarily mean the property changed.</source>
          <target state="translated">이 이벤트 발생 하지만 때는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt;</ph> 속성 없게 되 면 속성 변경 반드시 의미입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.CurrentGlobalTime">
          <source>Gets the current global time, as established by the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> timing system.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 타이밍 시스템을 통해 설정된 현재 전역 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentGlobalTime">
          <source>The current global time for the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> timing system.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> 타이밍 시스템의 현재 전역 시간입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.CurrentIteration">
          <source>Get the current iteration of this clock.</source>
          <target state="translated">이 Clock의 현재 반복을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentIteration">
          <source>This clock's current iteration within its current active period, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is stopped.</source>
          <target state="translated">현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentIteration">
          <source>A clock's first iteration has a value of 1.</source>
          <target state="translated">클록의 첫 번째 반복의 값은 1입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentIteration">
          <source>If this clock's timeline has an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> setting of <ph id="ph2">`true`</ph>, a full iteration consists of a forward-reverse pair, not just one of these segments.</source>
          <target state="translated">이 클록의 시간 표시이 막대에는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> 설정인 <ph id="ph2">`true`</ph>, 전체 반복 반대의 정방향 쌍으로 구성 되며, 이러한 세그먼트 중 하나가 아니라 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentIteration">
          <source>Regardless of its current iteration, seeking a clock returns its current iteration to 1.</source>
          <target state="translated">현재 반복에 관계 없이 검색 클록 1로 현재 반복을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentIteration">
          <source>Restarting a clock also returns its current iteration to 1.</source>
          <target state="translated">현재 반복이 1로 반환도 시계를 다시 실행 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>Gets the current progress of this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> within its current iteration.</source>
          <target state="translated">현재 반복 내에서 이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>의 현재 진행률을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>, or 0.0 if this clock is active and its <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> has a <ph id="ph4">&lt;see cref="P:System.Windows.Media.Animation.Timeline.Duration" /&gt;</ph> of <ph id="ph5">&lt;see cref="P:System.Windows.Duration.Forever" /&gt;</ph>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration.</source>
          <target state="translated">이 Clock이 <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>이면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이고, 그렇지 않으면 0입니다. 또한 이 Clock이 활성 상태이며 해당 <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>의 <ph id="ph4">&lt;see cref="P:System.Windows.Media.Animation.Timeline.Duration" /&gt;</ph>이 <ph id="ph5">&lt;see cref="P:System.Windows.Duration.Forever" /&gt;</ph>이면 0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</source>
          <target state="translated">0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>The value of this property indicates the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph> normalized by the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> of this clock's <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock.Timeline%2A&gt;</ph>.</source>
          <target state="translated">이 속성 값의 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph> 의해 정규화 된는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> 이 클록의 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock.Timeline%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>A clock that is <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph> has a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A&gt;</ph> of 1.0.</source>
          <target state="translated">클록 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A&gt;</ph> 1.0입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>Using a Timeline as a Timer</source>
          <target state="translated">일정 타이머로 사용 하 여</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> object) it is associated with a property.</source>
          <target state="translated">연결 된 이벤트 처리기는 경우에 타임 라인의 클록 진행 되 또는 (의 경우에 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 개체) 속성에 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>For this reason (and others), it's not recommended that you use a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> as a timer.</source>
          <target state="translated">이 따라서 (및 다른 사용자)는 것을 사용 하는 한 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> 를 타이머 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.CurrentState">
          <source>Gets a value indicating whether the clock is currently <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>.</source>
          <target state="translated">클록이 현재 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentState">
          <source>The current state of the clock: <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>.</source>
          <target state="translated">클록의 현재 상태(<ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentState">
          <source>Note the clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> property doesn't tell you whether it's paused.</source>
          <target state="translated">클록의 참고 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> 속성이 알 수 없는 일시 여부.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentState">
          <source>To determine whether a clock is paused, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.IsPaused%2A&gt;</ph> property.</source>
          <target state="translated">클록 일시 중지 되어 있는지 여부를 확인 하려면는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.IsPaused%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentState">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> occurs whenever the value of this property changes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> 이 속성의 값이 변경 될 때마다 발생 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated">
          <source>Occurs when the clock's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /&gt;</ph> property is updated.</source>
          <target state="translated">클록의 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /&gt;</ph> 속성이 업데이트될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> event when you want to be notified if when the clock starts, stops, or fills.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> 클록이 시작 되 면 알림이 표시 하려면 이벤트 중지 하거나, 채웁니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated">
          <source>The <ph id="ph1">&lt;xref:System.Object&gt;</ph> parameter of the <ph id="ph2">&lt;xref:System.EventHandler&gt;</ph> event handler is the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> whose state was invalidated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object&gt;</ph> 의 매개 변수는 <ph id="ph2">&lt;xref:System.EventHandler&gt;</ph> 이벤트 처리기는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 상태가 무효화 되었습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated">
          <source>Pausing a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> does not change its <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph>.</source>
          <target state="translated">일시 중지는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 바뀌지 않으면 해당 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated">
          <source>To be notified when a clock becomes paused, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">클록이 일시 중지 하는 경우 알림을 받을 수를 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated">
          <source>Although this event occurs when the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph> becomes invalid, that doesn't necessarily mean the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph> changed: a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> that switches from <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph> to <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph> and then back to <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph> in the same tick will cause this event to fire, but its <ph id="ph7">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> property won't actually change.</source>
          <target state="translated">이 이벤트 발생 하지만 때는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph> 없게 되 면 반드시 의미 하는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph> 변경:는 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 에서 전환 되는 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph> 를 <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph> 다시 <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph> 같은 눈금에 수행 되지 것입니다 이 이벤트를 발생 시킨 했지만 해당 <ph id="ph7">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> 속성 실제로 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.CurrentTime">
          <source>Gets this clock's current time within its current iteration.</source>
          <target state="translated">현재 반복 내에서 이 Clock의 현재 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentTime">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>; otherwise, the current time of this clock.</source>
          <target state="translated">이 Clock이 <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>이면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이고, 그렇지 않으면 이 Clock의 현재 시간입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentTime">
          <source>Using a Timeline as a Timer</source>
          <target state="translated">일정 타이머로 사용 하 여</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentTime">
          <source>A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> object) it is associated with a property.</source>
          <target state="translated">연결 된 이벤트 처리기는 경우에 타임 라인의 클록 진행 되 또는 (의 경우에 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> 개체) 속성에 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentTime">
          <source>For this reason (and others), it's not recommended that you use a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> as a timer.</source>
          <target state="translated">이 따라서 (및 다른 사용자)는 것을 사용 하는 한 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> 를 타이머 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated">
          <source>Occurs when this clock's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /&gt;</ph> becomes invalid.</source>
          <target state="translated">이 Clock의 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /&gt;</ph>을 사용할 수 없게 되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated">
          <source>A clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph> becomes invalid when the clock progresses.</source>
          <target state="translated">클록의 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph> 때 유효 하지 않게, 클록 진행 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated">
          <source>The following interactive operations also trigger the CurrentTimeInvalidated event: <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Stop%2A&gt;</ph>.</source>
          <target state="translated">다음 대화형 작업 CurrentTimeInvalidated 이벤트를 트리거할 수도: <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Stop%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement">
          <source>When implemented in a derived class, will be invoked whenever a clock repeats, skips, or seeks.</source>
          <target state="translated">파생 클래스에서 구현된 경우 Clock이 반복, 건너뛰기 또는 검색할 때마다 호출됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.GetCanSlip">
          <source>Returns whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> has its own external time source, which may require synchronization with the timing system.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 타이밍 시스템과 동기화해야 될 수도 있는 외부 시간 소스가 있는지 여부를 반환합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.GetCanSlip">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> has its own external source for time, which may require synchronization with the timing system; otherwise, <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>에 타이밍 시스템과 동기화해야 될 수도 있는 외부 시간 소스가 있으면 <bpt id="p1">**</bpt>true<ept id="p1">**</ept>를 반환하고, 그렇지 않으면 <bpt id="p2">**</bpt>false<ept id="p2">**</ept>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Clock.GetCanSlip">
          <source>Media being played using <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> within a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> is an example of creating a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> that would have an external time source (a video clip for example) which may require synchronization with other timelines within the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>.</source>
          <target state="translated">미디어를 사용 하 여 재생 중인 <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> 내는 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> 만들기의 예로 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> 하는 것이 외부 시간 원본과 (예: 비디오 클립) 내에서 다른 timeline와 동기화 해야 할 수도 있습니다는 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Clock.GetCanSlip">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> for more information.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore">
          <source>Gets this clock's current time within its current iteration.</source>
          <target state="translated">현재 반복 내에서 이 Clock의 현재 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore">
          <source>The current time of this clock if it is active or filling; otherwise, <ph id="ph1">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</source>
          <target state="translated">이 Clock이 활성 또는 채우기 상태이면 이 Clock의 현재 시간이고, 그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore">
          <source>This method is used in the implementation of the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph> method and should not be called directly from your code.</source>
          <target state="translated">이 메서드는의 구현에 사용 된 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph> 메서드 이며 사용자 코드에서 직접 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore">
          <source>Derived classes should override this method if they want to modify how they determine the current time.</source>
          <target state="translated">파생된 클래스는 현재 시간을 결정 하는 방법을 수정 하는 경우이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.HasControllableRoot">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> is part of a controllable clock tree.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>이 제어 가능한 Clock 트리의 일부인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.HasControllableRoot">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this clock belongs to a clock tree with a controllable root clock or if this clock is itself a controllable root; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 Clock이 제어 가능한 루트 Clock이 있는 Clock 트리에 속하거나 이 Clock 자체가 제어 가능한 루트이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.IsPaused">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>, or any of its parents, is paused.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 또는 부모 Clock이 일시 중지되어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.IsPaused">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> or any of its parents is paused; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 또는 부모 Clock이 일시 중지되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.NaturalDuration">
          <source>Gets the natural duration of this clock's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>.</source>
          <target state="translated">이 Clock <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>의 기본 재생 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.NaturalDuration">
          <source>The natural duration of this clock, as determined by its <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>에 의해 결정된 이 Clock의 기본 재생 시간입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.NaturalDuration">
          <source>For more information about natural duration, see the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">기본 재생 시간에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.Parent">
          <source>Gets the clock that is the parent of this clock.</source>
          <target state="translated">이 Clock의 부모 Clock을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.Parent">
          <source>The parent of this clock or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is a root.</source>
          <target state="translated">이 Clock의 부모 Clock이며, 이 Clock이 루트이면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="E:System.Windows.Media.Animation.Clock.RemoveRequested">
          <source>Occurs when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.ClockController.Remove" /&gt;</ph> method is called on this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> or one of its parent clocks.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.ClockController.Remove" /&gt;</ph> 메서드가 이 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> 또는 부모 Clock 중 하나에 대해 호출되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.SpeedChanged">
          <source>When implemented in a derived class, will be invoked whenever a clock begins, skips, pauses, resumes, or when the clock's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /&gt;</ph> is modified.</source>
          <target state="translated">파생 클래스에서 구현된 경우 Clock이 시작, 건너뛰기, 일시 중지, 다시 시작할 때마다 또는 Clock의 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /&gt;</ph>가 수정될 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.Stopped">
          <source>When implemented in a derived class, will be invoked whenever a clock is stopped using the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.ClockController.Stop" /&gt;</ph> method.</source>
          <target state="translated">파생 클래스에서 구현된 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.ClockController.Stop" /&gt;</ph> 메서드를 사용하여 Clock이 중지될 때마다 호출됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.Timeline">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> from which this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> was created.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>을 만든 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.Timeline">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> from which this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> was created.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>을 만든 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.Timeline">
          <source>Modifying a clock's <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> does not update the clock; a new clock must be created from the modified <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>.</source>
          <target state="translated">클록의 수정 <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> ; 클록을 업데이트 하지는 않습니다 새 클록 만들어야에서 수정 된 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>