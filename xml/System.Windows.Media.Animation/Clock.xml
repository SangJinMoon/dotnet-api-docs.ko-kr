<Type Name="Clock" FullName="System.Windows.Media.Animation.Clock">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="829cbcd67b4a6736053ec04245b9b87181268348" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659987" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Clock : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Clock extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Clock" />
  <TypeSignature Language="VB.NET" Value="Public Class Clock&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clock : System::Windows::Threading::DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="707f1-101">
        <see cref="T:System.Windows.Media.Animation.Timeline" />의 런타임 타이밍 상태를 유지 관리합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="707f1-101">Maintains run-time timing state for a <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="707f1-102">A <xref:System.Windows.Media.Animation.Timeline>, 자체적으로 실제로 아무런 작업도 하지 않습니다 아닌 다른 시간 세그먼트에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-102">A <xref:System.Windows.Media.Animation.Timeline>, by itself, doesn't actually do anything other than describe a segment of time.</span></span> <span data-ttu-id="707f1-103">타임 라인의는 <xref:System.Windows.Media.Animation.Clock> 실제 작업을 수행 하는 개체: 시간 표시 막대에 대 한 타이밍 관련 런타임 상태를 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-103">It's the timeline's <xref:System.Windows.Media.Animation.Clock> object that does the real work: it maintains timing-related run-time state for the timeline.</span></span>  
  
 <span data-ttu-id="707f1-104">대부분의 경우 클록 일정에 대 한 자동으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-104">In most cases, a clock is created automatically for your timeline.</span></span> <span data-ttu-id="707f1-105">사용 하 여 애니메이션 효과 줄 경우는 <xref:System.Windows.Media.Animation.Storyboard> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> 메서드를 시계가 자동으로 타임 라인 및 애니메이션에 대 한 만들어지고 해당 대상된 속성에 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-105">When you animate by using a <xref:System.Windows.Media.Animation.Storyboard> or the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, clocks are automatically created for your timelines and animations and applied to their targeted properties.</span></span> <span data-ttu-id="707f1-106">예제를 보려면 [하는 방법: 스토리 보드를 사용 하 여 속성에 애니메이션 효과](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-by-using-a-storyboard.md) 및 [하는 방법: 속성 하지 않고 사용 하는 스토리 보드 애니메이션 효과 줄](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-without-using-a-storyboard.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-106">For examples, see [How to: Animate a Property by Using a Storyboard](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-by-using-a-storyboard.md) and [How to: Animate a Property Without Using a Storyboard](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-without-using-a-storyboard.md).</span></span>  
  
 <span data-ttu-id="707f1-107">만들 수도 있습니다는 <xref:System.Windows.Media.Animation.Clock> 를 사용 하 여 명시적으로 <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="707f1-107">You can also create a <xref:System.Windows.Media.Animation.Clock> explicitly by using the <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> method.</span></span> <span data-ttu-id="707f1-108">많은 수의 유사한 개체에 애니메이션을 적용 하는 등의 성능이 시나리오에서 관리 사용자 고유의 <xref:System.Windows.Media.Animation.Clock> 사용 하 여 성능 이점을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-108">In performance-intensive scenarios, such as animating large numbers of similar objects, managing your own <xref:System.Windows.Media.Animation.Clock> use can provide performance benefits.</span></span>  
  
 <span data-ttu-id="707f1-109">클록의 구조와 일치 하는 트리로 정렬 되는 <xref:System.Windows.Media.Animation.Timeline> 에서 생성 된 개체 트리 합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-109">Clocks are arranged in trees that match the structure of the <xref:System.Windows.Media.Animation.Timeline> objects tree from which they are created.</span></span> <span data-ttu-id="707f1-110">이러한 시간 트리의 루트 클록 대화형으로 조작할 수 (일시 중지, 재개 된, 중지, 및 등)를 검색 하 여 해당 <xref:System.Windows.Media.Animation.Clock.Controller%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-110">The root clock of such a timing tree can be interactively manipulated (paused, resumed, stopped, and so on) by retrieving its <xref:System.Windows.Media.Animation.Clock.Controller%2A>.</span></span> <span data-ttu-id="707f1-111">루트가 아닌 클록을 직접 제어할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-111">Non-root clocks cannot be directly controlled.</span></span>  
  
 <span data-ttu-id="707f1-112">일단 만든 클록을 수정할 수 없습니다 (그러나 조작할 수 있습니다).</span><span class="sxs-lookup"><span data-stu-id="707f1-112">Once created, a clock cannot be modified (but it can be manipulated).</span></span>  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="707f1-113">일정 타이머로 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="707f1-113">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="707f1-114">없으면 연결 된 이벤트 처리기는 타임 라인의 클록만 진행 또는 (의 경우는 <xref:System.Windows.Media.Animation.AnimationClock> 개체) 속성에 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-114">A timeline's clock will only progress when there's an event handler associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="707f1-115">이 따라서 (및 다른 사용자)는 것을 사용 하는 한 <xref:System.Windows.Media.Animation.Timeline> 를 타이머 합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-115">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="707f1-116">파생된 클래스에서 구현 해야 <see cref="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" /> 시간이 클록에 대 한 흐름 하는 방법을 수정 하는 경우.</span>
        <span class="sxs-lookup">
          <span data-stu-id="707f1-116">Derived classes should implement <see cref="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" /> if they want to modify how time flows for this clock.</span>
        </span>
        <span data-ttu-id="707f1-117">클록 반복, 건너뜁니다, 검색 (seek), 시작, 일시 중지, 재개 또는 중지를 재정의 하 여 추가 작업을 수행 하도록 파생 된 클래스를 만들 수 있습니다는 <see cref="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" />, <see cref="M:System.Windows.Media.Animation.Clock.SpeedChanged" />, 및 <see cref="M:System.Windows.Media.Animation.Clock.Stopped" /> 메서드.</span>
        <span class="sxs-lookup">
          <span data-stu-id="707f1-117">Derived classes can be made to do additional work when the clock repeats, skips, seeks, begins, pauses, resumes, or stops by overriding the <see cref="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" />, <see cref="M:System.Windows.Media.Animation.Clock.SpeedChanged" />, and <see cref="M:System.Windows.Media.Animation.Clock.Stopped" /> methods.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal Clock (System.Windows.Media.Animation.Timeline timeline);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Animation.Timeline timeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; Clock(System::Windows::Media::Animation::Timeline ^ timeline);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="timeline">
          <span data-ttu-id="707f1-118">이 Clock을 생성해야 하는 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-118">The <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this clock should be constructed.</span>
          </span>
          <span data-ttu-id="707f1-119">자식 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 개체가 있는 경우 이러한 자식 개체에 대한 Clock은 만들어지지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-119">Clocks are not created for any child <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> objects, if they exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="707f1-120">지정한 <see cref="T:System.Windows.Media.Animation.Clock" />을 템플릿으로 사용하여 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-120">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Clock" /> class, using the specified <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> as a template.</span>
          </span>
          <span data-ttu-id="707f1-121">새 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체에는 자식이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-121">The new <see cref="T:System.Windows.Media.Animation.Clock" /> object has no children.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-122">이 Clock의 재생이 완전히 끝나면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-122">Occurs when this clock has completely finished playing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="707f1-123">이 클록이 클록 트리 루트 클록 이면 (반복을 포함) 해당 활성 기간의 끝에 도달 하 고 모든 자식 활성 기간의 끝에 도달한 후 재생이 완료 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-123">If this clock is the root clock of a clock tree, it has completed playing after it reaches the end of its active duration (which includes repeats) and all its children have reached the end of their active durations.</span></span> <span data-ttu-id="707f1-124">이 클록이 자식 클록 이면 량에 도달 속해 있는 클록 트리 루트 클록의 활성 기간 및 모든 해당 자식 clock의 끝이 완료 되 면 재생 재생를 완전히 완료으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-124">If this clock is a child clock, it is considered to have completely finished playing when the root clock of the clock tree to which it belongs reaches the end of its active duration and all its child clocks have finished playing.</span></span>  
  
 <span data-ttu-id="707f1-125">클록 중지 트리거하지 해당 완료 이벤트를 지원 하지만 채우기 기간에 도달지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-125">Stopping a clock does not trigger its completed event, but advancing it to its fill period does.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controller">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockController Controller { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.ClockController Controller" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.Controller" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controller As ClockController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::ClockController ^ Controller { System::Windows::Media::Animation::ClockController ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-126">이 <see cref="T:System.Windows.Media.Animation.Clock" />을 시작, 일시 중지, 다시 시작, 검색, 건너뛰기, 중지 또는 제거할 수 있는 <see cref="T:System.Windows.Media.Animation.ClockController" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-126">Gets a <see cref="T:System.Windows.Media.Animation.ClockController" /> that can be used to start, pause, resume, seek, skip, stop, or remove this <see cref="T:System.Windows.Media.Animation.Clock" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="707f1-127">루트 클록이면 <see cref="T:System.Windows.Media.Animation.ClockController" />이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-127">A <see cref="T:System.Windows.Media.Animation.ClockController" /> if this is a root clock; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="707f1-128">루트 클록만을 대화형으로 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-128">Only root clocks can be interactively controlled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Begin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Remove" />
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; CurrentGlobalSpeed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; CurrentGlobalSpeed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentGlobalSpeed As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;double&gt; CurrentGlobalSpeed { Nullable&lt;double&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-129">클록의 시간이 현재 진행되는 속도를 실제 시간과 비교하여 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-129">Gets the rate at which the clock's time is currently progressing, compared to real-world time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="707f1-130">클록의 시간이 현재 진행되는 속도로, 실제 시간과 비교된 것입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-130">The rate at which this clock's time is current progressing, compared to real-world time.</span>
          </span>
          <span data-ttu-id="707f1-131">클록이 중지되면 이 속성은 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-131">If the clock is stopped, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeedInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentGlobalSpeedInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentGlobalSpeedInvalidated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-132">클록의 속도가 업데이트될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-132">Occurs when the clock's speed is updated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="707f1-133">일시 중지, 재개, 반전, 가속, 감속, 검색, 중지, 또는 클록 변경의 대화형 속도 사용 하는 <xref:System.Windows.Media.Animation.ClockController> 이 이벤트를 트리거합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-133">Pausing, resuming, reversing, accelerating, decelerating, seeking, stopping, or changing a clock's interactive speed using a <xref:System.Windows.Media.Animation.ClockController> triggers this event.</span></span>  
  
 <span data-ttu-id="707f1-134">이 이벤트 발생 하지만 때는 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 속성 없게 되 면 속성 변경 반드시 의미입니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-134">Although this event occurs when the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> property becomes invalid, that doesn't necessarily mean the property changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
        <altmember cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalTime">
      <MemberSignature Language="C#" Value="protected TimeSpan CurrentGlobalTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CurrentGlobalTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentGlobalTime" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentGlobalTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TimeSpan CurrentGlobalTime { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-135">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 타이밍 시스템을 통해 설정된 현재 전역 시간을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-135">Gets the current global time, as established by the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] timing system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="707f1-136">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 타이밍 시스템의 현재 전역 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-136">The current global time for the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] timing system.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; CurrentIteration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; CurrentIteration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentIteration As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; CurrentIteration { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-137">이 Clock의 현재 반복을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-137">Get the current iteration of this clock.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="707f1-138">현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-138">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="707f1-139">클록의 첫 번째 반복의 값은 1입니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-139">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="707f1-140">이 클록의 시간 표시이 막대에는 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 설정인 `true`, 전체 반복 반대의 정방향 쌍으로 구성 되며, 이러한 세그먼트 중 하나가 아니라 합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-140">If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="707f1-141">현재 반복에 관계 없이 검색 클록 1로 현재 반복을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-141">Regardless of its current iteration, seeking a clock returns its current iteration to 1.</span></span> <span data-ttu-id="707f1-142">현재 반복이 1로 반환도 시계를 다시 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-142">Restarting a clock also returns its current iteration to 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="CurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; CurrentProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; CurrentProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentProgress As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;double&gt; CurrentProgress { Nullable&lt;double&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-143">현재 반복 내에서 이 <see cref="T:System.Windows.Media.Animation.Clock" />의 현재 진행률을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-143">Gets the current progress of this <see cref="T:System.Windows.Media.Animation.Clock" /> within its current iteration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="707f1-144">이 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 그렇지 않으면 0입니다. 또한 이 Clock이 활성 상태이며 해당 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />의 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />이 <see cref="P:System.Windows.Duration.Forever" />이면 0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-144">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration.</span>
          </span>
          <span data-ttu-id="707f1-145">0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-145">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="707f1-146">이 속성 값의 <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> 의해 정규화 된는 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 이 클록의 <xref:System.Windows.Media.Animation.Clock.Timeline%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-146">The value of this property indicates the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> normalized by the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of this clock's <xref:System.Windows.Media.Animation.Clock.Timeline%2A>.</span></span>  
  
 <span data-ttu-id="707f1-147">클록 <xref:System.Windows.Media.Animation.ClockState.Filling> 에 <xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A> 1.0입니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-147">A clock that is <xref:System.Windows.Media.Animation.ClockState.Filling> has a <xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A> of 1.0.</span></span>  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="707f1-148">일정 타이머로 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="707f1-148">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="707f1-149">연결 된 이벤트 처리기는 경우에 타임 라인의 클록 진행 되 또는 (의 경우에 <xref:System.Windows.Media.Animation.AnimationClock> 개체) 속성에 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-149">A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="707f1-150">이 따라서 (및 다른 사용자)는 것을 사용 하는 한 <xref:System.Windows.Media.Animation.Timeline> 를 타이머 합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-150">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.ClockState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::ClockState CurrentState { System::Windows::Media::Animation::ClockState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-151">클록이 현재 <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 또는 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-151">Gets a value indicating whether the clock is currently <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="707f1-152">클록의 현재 상태(<see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 또는 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-152">The current state of the clock: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="707f1-153">클록의 참고 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 속성이 알 수 없는 일시 여부.</span><span class="sxs-lookup"><span data-stu-id="707f1-153">Note the clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property doesn't tell you whether it's paused.</span></span> <span data-ttu-id="707f1-154">클록 일시 중지 되어 있는지 여부를 확인 하려면는 <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-154">To determine whether a clock is paused, use the <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> property.</span></span>  
  
 <span data-ttu-id="707f1-155"><xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> 이 속성의 값이 변경 될 때마다 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-155">The <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> occurs whenever the value of this property changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalTime" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="CurrentStateInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentStateInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentStateInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentStateInvalidated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-156">클록의 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 속성이 업데이트될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-156">Occurs when the clock's <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> property is updated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="707f1-157">사용 하 여는 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 클록이 시작 되 면 알림이 표시 하려면 이벤트 중지 하거나, 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-157">Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified if when the clock starts, stops, or fills.</span></span> <span data-ttu-id="707f1-158"><xref:System.Object> 의 매개 변수는 <xref:System.EventHandler> 이벤트 처리기는 <xref:System.Windows.Media.Animation.Clock> 상태가 무효화 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-158">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the <xref:System.Windows.Media.Animation.Clock> whose state was invalidated.</span></span>  
  
 <span data-ttu-id="707f1-159">일시 중지는 <xref:System.Windows.Media.Animation.Clock> 바뀌지 않으면 해당 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-159">Pausing a <xref:System.Windows.Media.Animation.Clock> does not change its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</span></span> <span data-ttu-id="707f1-160">클록이 일시 중지 하는 경우 알림을 받을 수를 사용 하 여는 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-160">To be notified when a clock becomes paused, use the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 <span data-ttu-id="707f1-161">이 이벤트 발생 하지만 때는 <xref:System.Windows.Media.Animation.ClockState> 없게 되 면 반드시 의미 하는 <xref:System.Windows.Media.Animation.ClockState> 변경:는 <xref:System.Windows.Media.Animation.Clock> 에서 전환 되는 <xref:System.Windows.Media.Animation.ClockState.Active> 를 <xref:System.Windows.Media.Animation.ClockState.Filling> 다시 <xref:System.Windows.Media.Animation.ClockState.Active> 같은 눈금에 수행 되지 것입니다 이 이벤트를 발생 시킨 했지만 해당 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 속성 실제로 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-161">Although this event occurs when the <xref:System.Windows.Media.Animation.ClockState> becomes invalid, that doesn't necessarily mean the <xref:System.Windows.Media.Animation.ClockState> changed: a <xref:System.Windows.Media.Animation.Clock> that switches from <xref:System.Windows.Media.Animation.ClockState.Active> to <xref:System.Windows.Media.Animation.ClockState.Filling> and then back to <xref:System.Windows.Media.Animation.ClockState.Active> in the same tick will cause this event to fire, but its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property won't actually change.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentState" />
        <altmember cref="T:System.Windows.Media.Animation.ClockState" />
        <altmember cref="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; CurrentTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; CurrentTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentTime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; CurrentTime { Nullable&lt;TimeSpan&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-162">현재 반복 내에서 이 Clock의 현재 시간을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-162">Gets this clock's current time within its current iteration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="707f1-163">이 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 그렇지 않으면 이 Clock의 현재 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-163">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of this clock.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="707f1-164">일정 타이머로 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="707f1-164">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="707f1-165">연결 된 이벤트 처리기는 경우에 타임 라인의 클록 진행 되 또는 (의 경우에 <xref:System.Windows.Media.Animation.AnimationClock> 개체) 속성에 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-165">A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="707f1-166">이 따라서 (및 다른 사용자)는 것을 사용 하는 한 <xref:System.Windows.Media.Animation.Timeline> 를 타이머 합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-166">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentTimeInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentTimeInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentTimeInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentTimeInvalidated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-167">이 Clock의 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />을 사용할 수 없게 되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-167">Occurs when this clock's <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> becomes invalid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="707f1-168">클록의 <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> 때 유효 하지 않게, 클록 진행 합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-168">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> becomes invalid when the clock progresses.</span></span> <span data-ttu-id="707f1-169">다음 대화형 작업 CurrentTimeInvalidated 이벤트를 트리거할 수도: <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, 및 <xref:System.Windows.Media.Animation.ClockController.Stop%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-169">The following interactive operations also trigger the CurrentTimeInvalidated event: <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, and <xref:System.Windows.Media.Animation.ClockController.Stop%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscontinuousTimeMovement">
      <MemberSignature Language="C#" Value="protected virtual void DiscontinuousTimeMovement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DiscontinuousTimeMovement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DiscontinuousTimeMovement ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DiscontinuousTimeMovement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="707f1-170">파생 클래스에서 구현된 경우 Clock이 반복, 건너뛰기 또는 검색할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-170">When implemented in a derived class, will be invoked whenever a clock repeats, skips, or seeks.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCanSlip">
      <MemberSignature Language="C#" Value="protected virtual bool GetCanSlip ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetCanSlip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.GetCanSlip" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCanSlip () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetCanSlip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="707f1-171">
            <see cref="T:System.Windows.Media.Animation.Clock" />에 타이밍 시스템과 동기화해야 될 수도 있는 외부 시간 소스가 있는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-171">Returns whether the <see cref="T:System.Windows.Media.Animation.Clock" /> has its own external time source, which may require synchronization with the timing system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="707f1-172">
            <see cref="T:System.Windows.Media.Animation.Clock" />에 타이밍 시스템과 동기화해야 될 수도 있는 외부 시간 소스가 있으면 **true**를 반환하고, 그렇지 않으면 **false**를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-172">Returns **true** if the <see cref="T:System.Windows.Media.Animation.Clock" /> has its own external source for time, which may require synchronization with the timing system; otherwise, **false**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="707f1-173">미디어를 사용 하 여 재생 중인 <xref:System.Windows.Media.MediaTimeline> 내는 <xref:System.Windows.Media.Animation.Storyboard> 만들기의 예로 <xref:System.Windows.Media.Animation.Clock> 하는 것이 외부 시간 원본과 (예: 비디오 클립) 내에서 다른 timeline와 동기화 해야 할 수도 있습니다는 <xref:System.Windows.Media.Animation.Storyboard>합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-173">Media being played using <xref:System.Windows.Media.MediaTimeline> within a <xref:System.Windows.Media.Animation.Storyboard> is an example of creating a <xref:System.Windows.Media.Animation.Clock> that would have an external time source (a video clip for example) which may require synchronization with other timelines within the <xref:System.Windows.Media.Animation.Storyboard>.</span></span> <span data-ttu-id="707f1-174">자세한 내용은 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="707f1-174">See <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTimeCore">
      <MemberSignature Language="C#" Value="protected virtual TimeSpan GetCurrentTimeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.TimeSpan GetCurrentTimeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCurrentTimeCore () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual TimeSpan GetCurrentTimeCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="707f1-175">현재 반복 내에서 이 Clock의 현재 시간을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-175">Gets this clock's current time within its current iteration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="707f1-176">이 Clock이 활성 또는 채우기 상태이면 이 Clock의 현재 시간이고, 그렇지 않으면 <see cref="F:System.TimeSpan.Zero" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-176">The current time of this clock if it is active or filling; otherwise, <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="707f1-177">이 메서드는의 구현에 사용 된 <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> 메서드 이며 사용자 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-177">This method is used in the implementation of the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> method and should not be called directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="707f1-178">파생된 클래스는 현재 시간을 결정 하는 방법을 수정 하는 경우이 메서드를 재정의 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="707f1-178">Derived classes should override this method if they want to modify how they determine the current time.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="HasControllableRoot">
      <MemberSignature Language="C#" Value="public bool HasControllableRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasControllableRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.HasControllableRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasControllableRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasControllableRoot { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-179">이 <see cref="T:System.Windows.Media.Animation.Clock" />이 제어 가능한 Clock 트리의 일부인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-179">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.Clock" /> is part of a controllable clock tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="707f1-180">이 Clock이 제어 가능한 루트 Clock이 있는 Clock 트리에 속하거나 이 Clock 자체가 제어 가능한 루트이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-180">
              <see langword="true" /> if this clock belongs to a clock tree with a controllable root clock or if this clock is itself a controllable root; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.IsPaused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-181">이 <see cref="T:System.Windows.Media.Animation.Clock" /> 또는 부모 Clock이 일시 중지되어 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-181">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.Clock" />, or any of its parents, is paused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="707f1-182">이 <see cref="T:System.Windows.Media.Animation.Clock" /> 또는 부모 Clock이 일시 중지되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-182">
              <see langword="true" /> if this <see cref="T:System.Windows.Media.Animation.Clock" /> or any of its parents is paused; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="NaturalDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration NaturalDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration NaturalDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.NaturalDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration NaturalDuration { System::Windows::Duration get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-183">이 Clock <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />의 기본 재생 시간을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-183">Gets the natural duration of this clock's <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="707f1-184">
            <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />에 의해 결정된 이 Clock의 기본 재생 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-184">The natural duration of this clock, as determined by its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="707f1-185">기본 재생 시간에 대 한 자세한 내용은 참조는 <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="707f1-185">For more information about natural duration, see the <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Parent { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-186">이 Clock의 부모 Clock을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-186">Gets the clock that is the parent of this clock.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="707f1-187">이 Clock의 부모 Clock이며, 이 Clock이 루트이면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-187">The parent of this clock or <see langword="null" /> if this clock is a root.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRequested">
      <MemberSignature Language="C#" Value="public event EventHandler RemoveRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RemoveRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.RemoveRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RemoveRequested As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RemoveRequested;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-188">
            <see cref="M:System.Windows.Media.Animation.ClockController.Remove" /> 메서드가 이 <see cref="T:System.Windows.Media.Animation.Clock" /> 또는 부모 Clock 중 하나에 대해 호출되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-188">Occurs when the <see cref="M:System.Windows.Media.Animation.ClockController.Remove" /> method is called on this <see cref="T:System.Windows.Media.Animation.Clock" /> or one of its parent clocks.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedChanged">
      <MemberSignature Language="C#" Value="protected virtual void SpeedChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SpeedChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.SpeedChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SpeedChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SpeedChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="707f1-189">파생 클래스에서 구현된 경우 Clock이 시작, 건너뛰기, 일시 중지, 다시 시작할 때마다 또는 Clock의 <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />가 수정될 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-189">When implemented in a derived class, will be invoked whenever a clock begins, skips, pauses, resumes, or when the clock's <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> is modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="protected virtual void Stopped ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Stopped() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.Stopped" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Stopped ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Stopped();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="707f1-190">파생 클래스에서 구현된 경우 <see cref="M:System.Windows.Media.Animation.ClockController.Stop" /> 메서드를 사용하여 Clock이 중지될 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-190">When implemented in a derived class, will be invoked whenever a clock is stopped using the <see cref="M:System.Windows.Media.Animation.ClockController.Stop" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeline">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline Timeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Timeline Timeline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.Timeline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timeline As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Timeline ^ Timeline { System::Windows::Media::Animation::Timeline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="707f1-191">이 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />을 만든 <see cref="T:System.Windows.Media.Animation.Clock" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-191">Gets the <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this <see cref="T:System.Windows.Media.Animation.Clock" /> was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="707f1-192">이 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />을 만든 <see cref="T:System.Windows.Media.Animation.Clock" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="707f1-192">The <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this <see cref="T:System.Windows.Media.Animation.Clock" /> was created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="707f1-193">클록의 수정 <xref:System.Windows.Media.MediaTimeline> ; 클록을 업데이트 하지는 않습니다 새 클록 만들어야에서 수정 된 <xref:System.Windows.Media.Animation.Timeline>합니다.</span><span class="sxs-lookup"><span data-stu-id="707f1-193">Modifying a clock's <xref:System.Windows.Media.MediaTimeline> does not update the clock; a new clock must be created from the modified <xref:System.Windows.Media.Animation.Timeline>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>