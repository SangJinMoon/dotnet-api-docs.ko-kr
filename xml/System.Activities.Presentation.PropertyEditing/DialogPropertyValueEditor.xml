<Type Name="DialogPropertyValueEditor" FullName="System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dd6539d3724c39122cf92cb3fea64905d5956a8b" />
    <Meta Name="ms.sourcegitcommit" Value="b3480b6208c3cad466469e76294a96f5ab1ef04c" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/16/2018" />
    <Meta Name="ms.locfileid" Value="35691504" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DialogPropertyValueEditor : System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DialogPropertyValueEditor extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class DialogPropertyValueEditor&#xA;Inherits PropertyValueEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DialogPropertyValueEditor : System::Activities::Presentation::PropertyEditing::PropertyValueEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.PropertyEditing.PropertyValueEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> 개체의 모든 대화 상자 편집 논리를 위한 컨테이너입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대화 상자 편집기를 연결할 수 있는 인라인 편집기를 표시하려면 <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> 클래스를 사용합니다.  
  
 <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> 클래스는 대화 상자 편집기의 <xref:System.Windows.DataTemplate> 또는 대화 상자가 호출될 때 호출되는 사용자 지정 논리를 포함할 수 있습니다.  
  
 사용자 지정 <xref:System.Activities.Presentation.PropertyEditing.EditModeSwitchButton> 클래스를 호출하려면 <xref:System.Windows.DataTemplate>에서 <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor>을 사용합니다.  
  
 호스트 대화 상자에 표시되는 <xref:System.Windows.DataTemplate>을 제공하거나 기존 또는 시스템 대화 상자를 다시 사용할 수 있도록 하는 <xref:System.Windows.Forms.Form.ShowDialog> 메서드를 재정의할 수 있습니다.  
  
 다음 목록은 <xref:System.Windows.DataTemplate> 또는 <xref:System.Windows.Forms.Form.ShowDialog> 메서드 중 사용되는 메서드를 확인하기 위한 규칙을 보여 줍니다.  
  
 경우는 <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> 속성은 null 참조 (Visual Basic에서는 Nothing), 없습니다는 <xref:System.Windows.DataTemplate> 호스트 스타일을 제공 하는 호스트별 대화 상자에서 호스트 됩니다. <xref:System.Windows.Forms.Form.ShowDialog>는 호출되지 않습니다.  
  
 경우는 <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> 속성은 null 참조 (Visual Basic에서는 Nothing)를 가상 <xref:System.Windows.Forms.Form.ShowDialog> 메서드가 호출 되 고 모든 대화 상자를 표시 하려면이 메서드를 재정의할 수 있습니다.  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>특정 템플릿을 사용하지 않고 <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor (System.Windows.DataTemplate dialogEditorTemplate, System.Windows.DataTemplate inlineEditorTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DataTemplate dialogEditorTemplate, class System.Windows.DataTemplate inlineEditorTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dialogEditorTemplate As DataTemplate, inlineEditorTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor(System::Windows::DataTemplate ^ dialogEditorTemplate, System::Windows::DataTemplate ^ inlineEditorTemplate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dialogEditorTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="inlineEditorTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="dialogEditorTemplate">호스트별 대화 상자 크롬에서 호스팅되며 해당 <see cref="T:System.Windows.DataTemplate" />가 편집되는 속성에 해당하는 <see cref="P:System.Activities.ActivityContext.DataContext" />로 설정된 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />입니다.</param>
        <param name="inlineEditorTemplate">인라인 편집기 사용자 인터페이스에 사용되는 <see cref="T:System.Windows.DataTemplate" />입니다. 사용되는 경우 해당 <see cref="P:System.Activities.ActivityContext.DataContext" />는 편집하는 속성에 해당하는 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />로 설정됩니다.</param>
        <summary>지정된 대화 상자 편집기 및 인라인 편집기 템플릿을 사용하여 <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogEditorTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate DialogEditorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate DialogEditorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogEditorTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ DialogEditorTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호스트별 대화 상자에서 호스팅되는 <see cref="T:System.Windows.DataTemplate" />을 가져오거나 설정하고 해당 <see cref="P:System.Activities.ActivityContext.DataContext" />를 <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" />로 설정합니다.</summary>
        <value>호스트별 대화 상자로 호스팅되는 <see cref="T:System.Windows.DataTemplate" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 반환 하는 경우 `null`, <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog%2A> 메서드 대신 호출 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public virtual void ShowDialog (System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, System.Windows.IInputElement commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDialog(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, class System.Windows.IInputElement commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog(System.Activities.Presentation.PropertyEditing.PropertyValue,System.Windows.IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowDialog(System::Activities::Presentation::PropertyEditing::PropertyValue ^ propertyValue, System::Windows::IInputElement ^ commandSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValue" Type="System.Activities.Presentation.PropertyEditing.PropertyValue" />
        <Parameter Name="commandSource" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="propertyValue">편집하는 속성에 대한 <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" />입니다.</param>
        <param name="commandSource">
          <see cref="T:System.Windows.IInputElement" /> 실행의 원본으로 사용할 수 있는 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands" />입니다.</param>
        <summary>
          <see cref="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />이 null이고 사용자가 대화 상자를 호출했을 때 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령은 호스트에서 처리되며 사용자 지정 대화 상자는 호스트의 시각적 트리에 포함되지 않으므로 `commandSource`는 호스트의 시각적 트리의 일부이며 속성 편집 명령이 올바르게 처리되도록 실행하는 데 사용할 수 있는 <xref:System.Windows.IInputElement>를 노출합니다. 이 메서드를 재정의하면 어떠한 사용자 지정 대화 상자 논리라도 구현할 수 있습니다(예: 기존 시스템 대화 상자 호출).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>