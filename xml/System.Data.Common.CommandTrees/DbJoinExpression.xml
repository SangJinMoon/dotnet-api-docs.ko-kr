<Type Name="DbJoinExpression" FullName="System.Data.Common.CommandTrees.DbJoinExpression">
  <TypeSignature Language="C#" Value="public sealed class DbJoinExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbJoinExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbJoinExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbJoinExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbJoinExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="67d6b-101">지정된 조인 조건에 대한 지정된 컬렉션 인수 사이의 내부 조인, 왼쪽 우선 외부 조인 또는 완전 외부 조인 연산을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="67d6b-101">Represents an inner, left outer, or full outer join operation between the given collection arguments on the specified join condition.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor"><span data-ttu-id="67d6b-102"><see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="67d6b-102">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span></span></param>
        <summary><span data-ttu-id="67d6b-103">@FSHO2@결과 값을 생성하지 않는 식의 visitor 패턴을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="67d6b-103">Implements the visitor pattern for expressions that do not produce a result value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67d6b-104"><paramref name="visitor" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="67d6b-104"><paramref name="visitor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType"><span data-ttu-id="67d6b-105">생성 되는 결과의 형식 <c>방문자</c>합니다.</span><span class="sxs-lookup"><span data-stu-id="67d6b-105">The type of the result produced by <c>visitor</c>.</span></span></typeparam>
        <param name="visitor"><span data-ttu-id="67d6b-106">특정 형식의 결과 값을 생성하는 형식화된 <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="67d6b-106">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</span></span></param>
        <summary><span data-ttu-id="67d6b-107">특정 형식의 결과 값을 생성하는 식의 visitor 패턴을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="67d6b-107">Implements the visitor pattern for expressions that produce a result value of a specific type.</span></span></summary>
        <returns><span data-ttu-id="67d6b-108"><see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />에서 생성한 특정 형식의 결과 값입니다.</span><span class="sxs-lookup"><span data-stu-id="67d6b-108">A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67d6b-109"><paramref name="visitor" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="67d6b-109"><paramref name="visitor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="JoinCondition">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression JoinCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression JoinCondition" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbJoinExpression.JoinCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JoinCondition As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ JoinCondition { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d6b-110">적용할 조인 조건을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="67d6b-110">Gets or sets the join condition to apply.</span></span></summary>
        <value><span data-ttu-id="67d6b-111">적용할 조인 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="67d6b-111">The join condition to apply.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="67d6b-112">식은 <see langword="null" />이며,</span><span class="sxs-lookup"><span data-stu-id="67d6b-112">The expression is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="67d6b-113">식이 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />의 명령 트리에 연결되어 있지 않거나 결과 형식이 <see langword="Boolean" /> 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="67d6b-113">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, or its result type is not a <see langword="Boolean" /> type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpressionBinding Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpressionBinding Left" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbJoinExpression.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpressionBinding ^ Left { System::Data::Common::CommandTrees::DbExpressionBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d6b-114">왼쪽 입력을 제공하는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="67d6b-114">Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that provides the left input.</span></span></summary>
        <value><span data-ttu-id="67d6b-115">왼쪽 입력을 제공하는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67d6b-115">The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that provides the left input.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpressionBinding Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpressionBinding Right" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbJoinExpression.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpressionBinding ^ Right { System::Data::Common::CommandTrees::DbExpressionBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d6b-116">오른쪽 입력을 제공하는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="67d6b-116">Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that provides the right input.</span></span></summary>
        <value><span data-ttu-id="67d6b-117">오른쪽 입력을 제공하는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67d6b-117">The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that provides the right input.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>