<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DefaultExpressionVisitor.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57f7395799e6f2e927e724fd0f74497b55569957c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f7395799e6f2e927e724fd0f74497b55569957c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor">
          <source>Visits each element of an expression tree from a given root expression.</source>
          <target state="translated">지정된 루트 식에서 식 트리의 각 요소를 열어 봅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor">
          <source>If any element changes, the tree is rebuilt back to the root and the new root expression is returned; otherwise the original root expression is returned.</source>
          <target state="translated">요소가 변경되면 트리를 루트로 다시 빌드하고 새 루트 식이 반환되며, 그렇지 않으면 원래 루트 식이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
          <source>The collection of scope variables.</source>
          <target state="translated">범위 변수의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
          <source>Represents an event when entering the scope for the expression visitor with specified scope variables.</source>
          <target state="translated">지정한 범위 변수가 있는 식 방문자 범위에 진입하는 경우 이벤트를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExitScope">
          <source>Exits the scope for the expression visitor.</source>
          <target state="translated">식 방문자의 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The old expression.</source>
          <target state="translated">이전 식입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The new expression.</source>
          <target state="translated">새 식입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Replaces an old expression with a new one for the expression visitor.</source>
          <target state="translated">이전 식을 식 방문자에 대한 새 식으로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
          <source>The location of the variable.</source>
          <target state="translated">변수 위치입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
          <source>The reference of the variable where it is rebounded.</source>
          <target state="translated">다시 바인딩되는 변수의 참조입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
          <source>Represents an event when the variable is rebound for the expression visitor.</source>
          <target state="translated">변수가 식 방문자에 대해 다시 바인딩되는 경우 이벤트를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor">
          <source>Implements the visitor pattern.</source>
          <target state="translated">방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
          <source>The logical AND expression.</source>
          <target state="translated">논리 AND 식입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
          <source>Implements the visitor pattern for the logical AND expression.</source>
          <target state="translated">로컬 AND 식의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
          <source>The APPLY expression.</source>
          <target state="translated">APPLY 식입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
          <source>Implements the visitor pattern for the invocation of the specified function for each element in the specified input set.</source>
          <target state="translated">특정 입력 집합의 각 요소에 대해 지정된 함수를 호출하는 방문자 패턴을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
          <source>The arithmetic expression.</source>
          <target state="translated">산술 식입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
          <source>Implements the visitor pattern for the arithmetic operation applied to numeric arguments.</source>
          <target state="translated">숫자 인수에 적용되는 산술 연산에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
          <source>The case expression.</source>
          <target state="translated">case 식입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
          <source>Implements the visitor pattern for the When, Then, and Else clauses.</source>
          <target state="translated">When, Then 및 Else 절에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
          <source>The cast expression.</source>
          <target state="translated">cast 식입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
          <source>Implements the visitor pattern for the type conversion of a single argument to the specified type.</source>
          <target state="translated">단일 인수를 지정된 형식으로 형식을 변환하는 작업에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
          <source>The cast expression.</source>
          <target state="translated">cast 식입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
          <source>Implements the visitor pattern for the comparison operation applied to two arguments.</source>
          <target state="translated">두 인수에 적용되는 비교 연산에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
          <source>The constant expression.</source>
          <target state="translated">상수 식입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
          <source>Implements the visitor pattern for the different kinds of constants.</source>
          <target state="translated">다른 종류의 상수에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
          <source>The join expression.</source>
          <target state="translated">조인 식입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
          <source>Implements the visitor pattern for the unconditional join operation between the given collection arguments.</source>
          <target state="translated">지정된 컬렉션 인수 사이의 무조건 조인 작업에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
          <source>The DEREF expression.</source>
          <target state="translated">DEREF 식입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
          <source>Implements the visitor pattern for the expression that retrieves an entity based on the specified reference.</source>
          <target state="translated">지정된 참조를 기반으로 엔터티를 검색하는 식의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
          <source>The distinct expression.</source>
          <target state="translated">고유한 식입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
          <source>Implements the visitor pattern for the removed duplicate elements from the specified set argument.</source>
          <target state="translated">지정된 집합 인수에서 중복 요소를 제거하는 작업에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
          <source>The element expression.</source>
          <target state="translated">요소 식입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
          <source>Implements the visitor pattern for the conversion of the specified set argument to a singleton the conversion of the specified set argument to a singleton.</source>
          <target state="translated">지정된 집합 인수를 singleton으로 변환하는 작업에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
          <source>The entity reference expression.</source>
          <target state="translated">엔터티 참조 식입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
          <source>Implements the visitor pattern for the expression that extracts a reference from the underlying entity instance.</source>
          <target state="translated">내부 엔터티 인스턴스에서 참조를 추출하는 식에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
          <source>Implements the visitor pattern for the set subtraction operation between the left and right operands.</source>
          <target state="translated">왼쪽 피연산자와 오른쪽 피연산자 간의 차집합 연산에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)">
          <source>Implements the visitor pattern for the basic functionality required by expression types.</source>
          <target state="translated">식 형식에 필요한 기본 기능의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
          <source>The filter expression.</source>
          <target state="translated">필터 식입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
          <source>Implements the visitor pattern for a predicate applied to filter an input set.</source>
          <target state="translated">입력 집합을 필터링하기 위해 적용하는 조건자에 대해 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
          <source>The function expression.</source>
          <target state="translated">함수 식입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
          <source>Implements the visitor pattern for an invocation of a function.</source>
          <target state="translated">함수 호출의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
          <source>Implements the visitor pattern for a group by operation.</source>
          <target state="translated">그룹의 방문자 패턴을 작업별로 구현합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
          <source>Implements the visitor pattern for the set intersection operation between the left and right operands.</source>
          <target state="translated">왼쪽 피연산자와 오른쪽 피연산자 간의 교집합 연산에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
          <source>Implements the visitor pattern for an empty set determination applied to a single set argument.</source>
          <target state="translated">단일 집합 인수에 적용되는 빈 집합 확인의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
          <source>Implements the visitor pattern for the null determination applied to a single argument.</source>
          <target state="translated">단일 인수에 적용되는 null 확인의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
          <source>Implements the visitor pattern for the type comparison of a single argument against the specified type.</source>
          <target state="translated">단일 인수와 지정된 형식 간의 형식 비교에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
          <source>Implements the visitor pattern for an inner, left outer, or full outer join operation between the given collection arguments on the specified join condition.</source>
          <target state="translated">지정된 조인 조건에 따른 특정 컬렉션 인수 간의 내부, 왼쪽 우선 외부 또는 완전 외부 조인 연산에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
          <source>Implements the visitor pattern for the application of a lambda function to arguments represented by DbExpression objects.</source>
          <target state="translated">람다 함수를 DbExpression 개체로 표현하는 인수에 적용하기 위한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
          <source>Implements the visitor pattern for a string comparison against the specified pattern with an optional escape string.</source>
          <target state="translated">지정된 패턴에 대해 선택적인 이스케이프 문자열을 사용한 문자열 비교에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
          <source>Implements the visitor pattern for the restriction of the number of elements in the argument collection to the specified limit value.</source>
          <target state="translated">인수 컬렉션의 요소 수를 지정된 한계 값으로 제한함에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
          <source>Implements the visitor pattern for the construction of a new instance of a given type, including set and record types.</source>
          <target state="translated">집합 및 레코드 형식을 비롯하여 지정된 형식의 새 인스턴스 생성에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
          <source>Implements the visitor pattern for the logical NOT of a single Boolean argument.</source>
          <target state="translated">단일 부울 인수의 논리적 NOT에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
          <source>Implements the visitor pattern for a reference to a typed null literal.</source>
          <target state="translated">형식화된 null 리터럴에 대한 참조의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
          <source>Implements the visitor pattern for the retrieval of elements of the specified type from the given set argument.</source>
          <target state="translated">특정 집합 인수에서 지정된 형식의 요소를 검색하는 작업에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
          <source>Implements the visitor pattern for the logical OR of two Boolean arguments.</source>
          <target state="translated">두 부울 인수의 논리적 OR에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
          <source>Implements the visitor pattern for a reference to a parameter declared on the command tree that contains this expression.</source>
          <target state="translated">이 식이 들어 있는 명령 트리에 선언된 매개 변수에 대한 참조에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
          <source>Implements the visitor pattern for the projection of a given input set over the specified expression.</source>
          <target state="translated">지정된 식에 대한 특정 입력 집합 프로젝션에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
          <source>Implements the visitor pattern for retrieving an instance property.</source>
          <target state="translated">인스턴스 속성을 검색하는 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
          <source>Implements the visitor pattern for a quantifier operation of the specified kind over the elements of the specified input set.</source>
          <target state="translated">특정 입력 집합의 요소에 대한 지정된 종류의 수량자 연산에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
          <source>Implements the visitor pattern for a strongly typed reference to a specific instance within an entity set.</source>
          <target state="translated">엔터티 집합 내의 특정 인스턴스에 대한 강력한 형식의 참조에 대해 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
          <source>Implements the visitor pattern for the retrieval of the key value from the underlying reference value.</source>
          <target state="translated">내부 참조 값에서 키 값을 검색하는 작업에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
          <source>Implements the visitor pattern for the navigation of a relationship.</source>
          <target state="translated">관계 탐색에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
          <source>Implements the visitor pattern for a scan over an entity set or relationship set, as indicated by the Target property.</source>
          <target state="translated">Target 속성에 지정된 대로 엔터티 집합 또는 관계 집합의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
          <source>Implements the visitor pattern for the skip expression.</source>
          <target state="translated">skip 식의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
          <source>Implements the visitor pattern for a sort key that can be used as part of the sort order.</source>
          <target state="translated">정렬 순서의 일부로 사용할 수 있는 정렬 키의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
          <source>Implements the visitor pattern for a type conversion operation applied to a polymorphic argument.</source>
          <target state="translated">다형 인수에 적용되는 형식 변환 작업의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
          <source>Implements the visitor pattern for the set union operation between the left and right operands.</source>
          <target state="translated">왼쪽 피연산자와 오른쪽 피연산자 간의 합집합 연산에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
          <source>Implements the visitor pattern for a reference to a variable that is currently in scope.</source>
          <target state="translated">현재 범위에 있는 변수에 대한 참조의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
          <source>The implemented visitor.</source>
          <target state="translated">구현된 방문자입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)">
          <source>The aggregate.</source>
          <target state="translated">집계입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)">
          <source>Implements the visitor pattern for the aggregate.</source>
          <target state="translated">집계의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)">
          <source>The entity set.</source>
          <target state="translated">엔터티 집합입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)">
          <source>Implements the visitor pattern for the entity set.</source>
          <target state="translated">엔터티 집합의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression.</source>
          <target state="translated">식입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)">
          <source>Implements the visitor pattern for the expression.</source>
          <target state="translated">식의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>The expression binding.</source>
          <target state="translated">식 바인딩입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>Implements the visitor pattern for expression binding.</source>
          <target state="translated">식 바인딩의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})">
          <source>The expression binding list.</source>
          <target state="translated">식 바인딩 목록입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})">
          <source>Implements the visitor pattern for the expression binding list.</source>
          <target state="translated">식 바인딩 목록의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression list.</source>
          <target state="translated">식 목록입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
          <source>Implements the visitor pattern for the expression list.</source>
          <target state="translated">식 목록의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction)">
          <source>The function metadata.</source>
          <target state="translated">함수 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction)">
          <source>Implements the visitor pattern for the function.</source>
          <target state="translated">함수의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction)">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)">
          <source>The aggregate.</source>
          <target state="translated">집계입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)">
          <source>Implements the visitor pattern for the function aggregate.</source>
          <target state="translated">함수 집계의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate(System.Data.Common.CommandTrees.DbGroupAggregate)">
          <source>The aggregate.</source>
          <target state="translated">집계입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate(System.Data.Common.CommandTrees.DbGroupAggregate)">
          <source>Implements the visitor pattern for the group aggregate.</source>
          <target state="translated">그룹 집계의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate(System.Data.Common.CommandTrees.DbGroupAggregate)">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
          <source>The binding.</source>
          <target state="translated">바인딩입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
          <source>Implements the visitor pattern for the group expression binding.</source>
          <target state="translated">그룹 바인딩 목록의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda(System.Data.Common.CommandTrees.DbLambda)">
          <source>The lambda function.</source>
          <target state="translated">람다 함수입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda(System.Data.Common.CommandTrees.DbLambda)">
          <source>Implements the visitor pattern for the Lambda function.</source>
          <target state="translated">람다 함수의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda(System.Data.Common.CommandTrees.DbLambda)">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)">
          <source>The sort clause.</source>
          <target state="translated">정렬 절입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)">
          <source>Implements the visitor pattern for the sort clause.</source>
          <target state="translated">정렬 절의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
          <source>The sort order.</source>
          <target state="translated">정렬 순서입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
          <source>Implements the visitor pattern for the sort order.</source>
          <target state="translated">정렬 순서의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType(System.Data.Metadata.Edm.EdmType)">
          <source>The type.</source>
          <target state="translated">형식입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType(System.Data.Metadata.Edm.EdmType)">
          <source>Implements the visitor pattern for the type.</source>
          <target state="translated">형식의 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType(System.Data.Metadata.Edm.EdmType)">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
          <source>The type.</source>
          <target state="translated">형식입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
          <source>Implements the visitor pattern for the type usage.</source>
          <target state="translated">형식 사용에 대한 방문자 패턴을 구현합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
          <source>The implemented visitor pattern.</source>
          <target state="translated">구현된 방문자 패턴입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>