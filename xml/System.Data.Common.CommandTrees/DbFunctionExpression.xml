<Type Name="DbFunctionExpression" FullName="System.Data.Common.CommandTrees.DbFunctionExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c46f800e0c609996dd16a0aad58a1d72685a4c27" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39843595" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DbFunctionExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbFunctionExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbFunctionExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbFunctionExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbFunctionExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <TypeSignature Language="F#" Value="type DbFunctionExpression = class&#xA;    inherit DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d06fe-101">함수의 호출을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d06fe-101">Represents an invocation of a function.</span>
      </span>
      <span data-ttu-id="d06fe-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d06fe-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d06fe-103">저장 프로시저도 함수처럼 매핑하고 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d06fe-103">Stored procedures are also mapped and treated as functions.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor -&gt; unit" Usage="dbFunctionExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <span data-ttu-id="d06fe-104">
            <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d06fe-104">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d06fe-105">@FSHO2@결과 값을 생성하지 않는 식의 visitor 패턴을 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d06fe-105">Implements the visitor pattern for expressions that do not produce a result value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d06fe-106">
            <paramref name="visitor" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d06fe-106">
              <paramref name="visitor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;'ResultType&gt; -&gt; 'ResultType" Usage="dbFunctionExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">
          <span data-ttu-id="d06fe-107">생성 된 결과의 형식을 <c>방문자</c>합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d06fe-107">The type of the result produced by <c>visitor</c>.</span>
          </span>
        </typeparam>
        <param name="visitor">
          <span data-ttu-id="d06fe-108">특정 형식의 결과 값을 생성하는 형식화된 <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d06fe-108">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d06fe-109">특정 형식의 결과 값을 생성하는 식의 visitor 패턴을 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d06fe-109">Implements the visitor pattern for expressions that produce a result value of a specific type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d06fe-110">
            <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />에서 생성한 특정 형식의 결과 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d06fe-110">A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d06fe-111">
            <paramref name="visitor" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d06fe-111">
              <paramref name="visitor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; Arguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbFunctionExpression.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Arguments As IList(Of DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ Arguments { System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Usage="System.Data.Common.CommandTrees.DbFunctionExpression.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d06fe-112">함수에 대한 인수를 제공하는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 목록을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d06fe-112">Gets an <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> list that provides the arguments to the function.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d06fe-113">함수에 대한 인수를 제공하는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d06fe-113">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> list that provides the arguments to the function.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Function">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmFunction Function { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EdmFunction Function" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbFunctionExpression.Function" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Function As EdmFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EdmFunction ^ Function { System::Data::Metadata::Edm::EdmFunction ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Function : System.Data.Metadata.Edm.EdmFunction" Usage="System.Data.Common.CommandTrees.DbFunctionExpression.Function" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d06fe-114">호출할 함수의 메타데이터를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d06fe-114">Gets the metadata for the function to invoke.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d06fe-115">호출할 함수의 메타데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d06fe-115">The metadata for the function to invoke.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>