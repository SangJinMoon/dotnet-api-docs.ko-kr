<Type Name="DbQuantifierExpression" FullName="System.Data.Common.CommandTrees.DbQuantifierExpression">
  <TypeSignature Language="C#" Value="public sealed class DbQuantifierExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbQuantifierExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbQuantifierExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbQuantifierExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9f0ce-101">지정된 입력 집합의 요소에 대한 지정된 종류의 수량자 작업을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-101">Represents a quantifier operation of the specified kind over the elements of the specified input set.</span></span> <span data-ttu-id="9f0ce-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0ce-103">이 클래스는 나타냅니다 `Any` 및 `All` 수량자입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-103">This class represents `Any` and `All` quantifiers.</span></span> <span data-ttu-id="9f0ce-104">`Any` 및 `All` 에서 인코딩 되는 <xref:System.Data.Common.CommandTrees.DbExpressionKind>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-104">`Any` and `All` are encoded in the <xref:System.Data.Common.CommandTrees.DbExpressionKind>.</span></span> <span data-ttu-id="9f0ce-105">수량자 식의 결과 형식이 항상는 `Boolean`합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-105">The result type of a quantifier expression is always a `Boolean`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor"><span data-ttu-id="9f0ce-106"><see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-106">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span></span></param>
        <summary><span data-ttu-id="9f0ce-107">@FSHO2@결과 값을 생성하지 않는 식의 visitor 패턴을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-107">Implements the visitor pattern for expressions that do not produce a result value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f0ce-108"><paramref name="visitor" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="9f0ce-108"><paramref name="visitor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType"><span data-ttu-id="9f0ce-109">생성 되는 결과의 형식 <c>방문자</c>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-109">The type of the result produced by <c>visitor</c>.</span></span></typeparam>
        <param name="visitor"><span data-ttu-id="9f0ce-110">특정 형식의 결과 값을 생성하는 형식화된 <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-110">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</span></span></param>
        <summary><span data-ttu-id="9f0ce-111">특정 형식의 결과 값을 생성하는 식의 visitor 패턴을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-111">Implements the visitor pattern for expressions that produce a result value of a specific type.</span></span></summary>
        <returns><span data-ttu-id="9f0ce-112"><see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />에서 생성한 특정 형식의 결과 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-112">A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f0ce-113"><paramref name="visitor" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="9f0ce-113"><paramref name="visitor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpressionBinding Input { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpressionBinding Input" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Input" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Input As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpressionBinding ^ Input { System::Data::Common::CommandTrees::DbExpressionBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0ce-114">입력 집합을 지정하는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-114">Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></summary>
        <value><span data-ttu-id="9f0ce-115">입력 집합을 지정하는 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-115">The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predicate">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Predicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Predicate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Predicate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predicate As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Predicate { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0ce-116">입력 집합의 각 요소에 대해 평가할 <see langword="Boolean" /> 조건자를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-116">Gets or sets the <see langword="Boolean" /> predicate that should be evaluated for each element in the input set.</span></span></summary>
        <value><span data-ttu-id="9f0ce-117">입력 집합의 각 요소에 대해 평가할 <see langword="Boolean" /> 조건자입니다.</span><span class="sxs-lookup"><span data-stu-id="9f0ce-117">The <see langword="Boolean" /> predicate that should be evaluated for each element in the input set.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f0ce-118">식은 <see langword="null" />이며,</span><span class="sxs-lookup"><span data-stu-id="9f0ce-118">The expression is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f0ce-119">식이 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />의 명령 트리와 관련되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="9f0ce-119">The expression is not associated with the command tree for the <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />,</span></span>  
  
 <span data-ttu-id="9f0ce-120">또는 결과 형식이 <see langword="Boolean" /> 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="9f0ce-120">or its result type is not a <see langword="Boolean" /> type.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>