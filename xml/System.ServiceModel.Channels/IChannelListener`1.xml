<Type Name="IChannelListener&lt;TChannel&gt;" FullName="System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c9c93e7259c88ead4cc012bcaa395a3cc6edd6f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37621561" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannelListener&lt;TChannel&gt; : System.ServiceModel.Channels.IChannelListener where TChannel : class, IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelListener`1&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt; implements class System.ServiceModel.Channels.IChannelListener, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannelListener`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelListener(Of TChannel)&#xA;Implements IChannelListener" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TChannel&gt;&#xA; where TChannel : class, IChannelpublic interface class IChannelListener : System::ServiceModel::Channels::IChannelListener" />
  <TypeSignature Language="F#" Value="type IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; IChannel)&gt; = interface&#xA;    interface IChannelListener&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannelListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TChannel">
      <span data-ttu-id="4552b-101">채널 수신기에서 수락되는 채널 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4552b-101">The type of channel that the channel listener accepts.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="4552b-102">채널 수신기에서 형식별 채널을 수락하기 위해 구현해야 하는 인터페이스를 정의합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4552b-102">Defines the interface that must be implemented by channel listeners to accept type-specific channels.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4552b-103"><xref:System.ServiceModel.Channels.IChannelListener> 또는 <xref:System.ServiceModel.Channels.IChannelListener%601> 인터페이스를 구현하는 수신기 팩터리는 서비스와 통신을 시작하고 활성화하는 클라이언트에서 생성된 채널을 수락하기 위해 사용되는 메커니즘을 서비스에 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-103">Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> or <xref:System.ServiceModel.Channels.IChannelListener%601> interfaces provide services with the mechanisms used to accept the channels produced by clients that initiate and enable communication with a service.</span></span>  
  
 <span data-ttu-id="4552b-104"><xref:System.ServiceModel.Channels.IChannelListener%601> 계약을 구현하면 사용자는 매번 채널 형식을 지정할 필요 없이 특정 형식의 여러 채널을 수락할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-104">Implementing the <xref:System.ServiceModel.Channels.IChannelListener%601> contract allows users to accept multiple channels of a given type without having to specify the channel type each time.</span></span> <span data-ttu-id="4552b-105">즉, 채널 형식을 <xref:System.ServiceModel.Channels.IChannelListener%601> 인터페이스에 대한 제네릭 매개 변수로 정의하면 형식을 <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A> 메서드에 전달할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-105">In other words, defining the channel type as a generic parameter for the <xref:System.ServiceModel.Channels.IChannelListener%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A> methods.</span></span> <span data-ttu-id="4552b-106">사용자가 다양한 채널 형식을 수락하려는 경우 필요한 각 채널 형식에 대한 추가 채널 수신기를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-106">If users want to accept different channel types, they can create additional channel listeners for each type of channel required.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AcceptChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4552b-107">클라이언트와 통신하기 위해 지정된 형식의 채널을 수락합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-107">Accepts a channel of a specified type for communication with a client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4552b-108">명시적인 시간 제한이 있는 <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> 오버로드를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-108">It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> overload with the explicit timeout be used.</span></span> <span data-ttu-id="4552b-109">해당 메서드에 지정된 `timeout`은 서비스에 대해 시스템에서 설정한 기본 시간 제한을 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-109">The `timeout` specified for that method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel AcceptChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel AcceptChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptChannel () As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel AcceptChannel();" />
      <MemberSignature Language="F#" Value="abstract member AcceptChannel : unit -&gt; 'Channel" Usage="iChannelListener.AcceptChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4552b-110">클라이언트와 통신하기 위해 지정된 형식의 채널을 수락합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-110">Accepts a channel of a specified type for communication with a client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4552b-111">수신기에서 수락되는 채널 형식 <paramref name="TChannel" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-111">A channel of type <paramref name="TChannel" /> accepted by the listener.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4552b-112">명시적인 시간 제한이 있는 <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> 오버로드를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-112">It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> overload with the explicit timeout be used.</span></span> <span data-ttu-id="4552b-113">해당 메서드에 지정된 `timeout`은 서비스에 대해 시스템에서 설정한 기본 시간 제한을 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-113">The `timeout` specified for that method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel AcceptChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel AcceptChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptChannel (timeout As TimeSpan) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel AcceptChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member AcceptChannel : TimeSpan -&gt; 'Channel" Usage="iChannelListener.AcceptChannel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="4552b-114">제한 시간이 초과되기 전에 채널 대기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-114">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4552b-115">지정된 시간 간격 내에 클라이언트와 통신하기 위해 지정된 형식의 채널을 수락합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-115">Accepts a channel of a specified type for communication with a client within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4552b-116">수신기에서 수락되는 채널 형식 <paramref name="TChannel" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-116">A channel of type <paramref name="TChannel" /> accepted by the listener.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4552b-117"><xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel>보다 명시적인 시간 제한이 있는 이 오버로드를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-117">It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel>.</span></span> <span data-ttu-id="4552b-118">이 메서드에 지정된 `timeout`은 서비스에 대해 시스템에서 설정한 기본 시간 제한을 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-118">The `timeout` specified for this method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAcceptChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4552b-119">지정된 또는 기본 시간 간격 내에 채널을 수락하기 위한 비동기 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-119">Begins an asynchronous operation to accept a channel within a specified or default interval of time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4552b-120">명시적인 시간 제한이 있는 <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%2A> 오버로드를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-120">It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%2A> overload with the explicit timeout be used.</span></span> <span data-ttu-id="4552b-121">해당 메서드에 지정된 `timeout`은 서비스에 대해 시스템에서 설정한 기본 시간 제한을 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-121">The `timeout` specified for that method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAcceptChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptChannel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAcceptChannel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptChannel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptChannel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAcceptChannel : AsyncCallback * obj -&gt; IAsyncResult" Usage="iChannelListener.BeginAcceptChannel (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="4552b-122">채널 수락 작업의 비동기 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-122">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4552b-123">응용 프로그램에 의해 지정되는 개체로, 비동기 채널 수락 작업과 관련된 상태 정보를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-123">An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4552b-124">채널을 수락하기 위한 비동기 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-124">Begins an asynchronous operation to accept a channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4552b-125">비동기 채널 수락 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-125">The <see cref="T:System.IAsyncResult" /> that references the asynchronous acceptance of a channel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4552b-126">명시적인 시간 제한이 있는 <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> 오버로드를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-126">It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> overload with the explicit timeout be used.</span></span> <span data-ttu-id="4552b-127">해당 메서드에 지정된 `timeout`은 서비스에 대해 시스템에서 설정한 기본 시간 제한을 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-127">The `timeout` specified for that method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAcceptChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAcceptChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iChannelListener.BeginAcceptChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="4552b-128">제한 시간이 초과되기 전에 채널 대기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-128">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="4552b-129">채널 수락 작업의 비동기 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-129">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4552b-130">응용 프로그램에 의해 지정되는 개체로, 비동기 채널 수락 작업과 관련된 상태 정보를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-130">An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4552b-131">지정된 시간 간격 내에 채널을 수락하기 위한 비동기 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-131">Begins an asynchronous operation to accept a channel within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4552b-132">비동기 채널 수락 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-132">The <see cref="T:System.IAsyncResult" /> that references the asynchronous acceptance of a channel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4552b-133"><xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>보다 명시적인 시간 제한이 있는 이 오버로드를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-133">It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>.</span></span> <span data-ttu-id="4552b-134">이 메서드에 지정된 `timeout`은 서비스에 대해 시스템에서 설정한 기본 시간 제한을 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4552b-134">The `timeout` specified for this method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel EndAcceptChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel EndAcceptChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptChannel (result As IAsyncResult) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel EndAcceptChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAcceptChannel : IAsyncResult -&gt; 'Channel" Usage="iChannelListener.EndAcceptChannel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="4552b-135">
            <see cref="T:System.IAsyncResult" /> 메서드를 호출하여 반환된 <see cref="Overload:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-135">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4552b-136">채널을 수락하기 위한 비동기 작업을 완료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-136">Completes an asynchronous operation to accept a channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4552b-137">수신기에서 수락되는 채널 형식 <paramref name="TChannel" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4552b-137">A channel of type <paramref name="TChannel" /> accepted by the listener.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>