<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageBuffer.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55c2648b3026de7d8e6a3d49e85245f5145edbdd3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c2648b3026de7d8e6a3d49e85245f5145edbdd3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Represents a memory buffer that stores an entire message for future consumption.</source>
          <target state="translated">나중에 사용하기 위해 전체 메시지를 저장하는 메모리 버퍼를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>The body of a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance can only be consumed or written once.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 인스턴스의 본문은 한 번만 사용하거나 쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>If you wish to consume a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance more than once, you should use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> class to completely store an entire <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance into memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 인스턴스를 여러 번 사용하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 클래스를 사용하여 전체 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 인스턴스를 메모리에 완전히 저장해야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance is constructed by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> of a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 인스턴스는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> 인스턴스의 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>를 호출하여 생성됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>A new <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> is then created and returned, which assumes ownership of the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> and reads the entire content into memory.</source>
          <target state="translated">그러면 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>에 대해 소유권이 있는 것으로 간주하고 전체 내용을 메모리로 읽어오는 새 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>가 만들어져 반환됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>In order to retrieve a copy of a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>, you must call the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>의 복사본을 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>에서 검색하려면 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A&gt;</ph>의 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>This returns an identical copy of the original <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance you provided.</source>
          <target state="translated">이 메서드는 제공된 원본 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 인스턴스의 동일한 복사본을 반환합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>You can control the maximum size of the buffer by setting <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A&gt;</ph> to the maximum number of bytes desired.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A&gt;</ph>를 원하는 크기(바이트) 설정하여 최대 버퍼 크기를 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>This number does not necessarily cover any transient allocations related to building the buffer, or properties attached to the message.</source>
          <target state="translated">버퍼 생성과 관련한 임시 할당이나 메시지에 연결된 속성을 이 값에 포함할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>You should always close a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.Close%2A&gt;</ph> when finished working with it.</source>
          <target state="translated">작업이 끝나면 항상 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>를 호출하여 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.Close%2A&gt;</ph> 인스턴스를 닫아야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>This allows system resources to potentially be freed sooner.</source>
          <target state="translated">이렇게 하면 시스템 리소스를 더 빠르게 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Special note for Managed C++ users deriving from this class:</source>
          <target state="translated">이 클래스에서 파생된 Managed C++ 사용자 관련 참고 사항:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
          <target state="translated">소멸자가 아니라 (On)(Begin)Close 및/또는 OnAbort에 정리 코드를 입력하십시오.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Avoid destructors: they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph></source>
          <target state="translated">소멸자를 사용하지 마십시오. 소멸자를 사용하면 컴파일러에서 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>을 자동으로 생성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Avoid non-reference members: they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph></source>
          <target state="translated">비참조 멤버를 사용하지 마십시오. 비참조 멤버를 사용하면 컴파일러에서 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>을 자동으로 생성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Avoid finalizers; but if you include one, you should suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) in order to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
          <target state="translated">종료자를 사용하지 마십시오. 그러나 종료자를 포함하는 경우 자동으로 생성되었을 <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> 동작을 에뮬레이트하기 위해 빌드 경고를 표시하지 않고 (On)(Begin)Close 및/또는 OnAbort에서 <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> 및 해당 종료자를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
          <source>Gets the approximate number of bytes consumed by this <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph>에서 사용되는 대략적인 바이트 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
          <source>The approximate number of bytes consumed by this <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph>에서 사용되는 대략적인 바이트 크기입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
          <source>You can control the maximum size of the buffer by setting <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A&gt;</ph> to the maximum number of bytes desired.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A&gt;</ph>를 원하는 크기(바이트) 설정하여 최대 버퍼 크기를 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
          <source>This number does not necessarily cover any transient allocations related to building the buffer, or properties attached to the message.</source>
          <target state="translated">버퍼 생성과 관련한 임시 할당이나 메시지에 연결된 속성을 이 값에 포함할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
          <source>It is not related to the actual size of the message when serialized.</source>
          <target state="translated">serialize되는 메시지의 실제 크기와는 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>Finishes working with the buffer.</source>
          <target state="translated">버퍼 작업을 마칩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>You should always close a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.Close%2A&gt;</ph> when finished working with it.</source>
          <target state="translated">작업이 끝나면 항상 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>를 호출하여 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.Close%2A&gt;</ph> 인스턴스를 닫아야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>This allows system resources to potentially be freed sooner.</source>
          <target state="translated">이렇게 하면 시스템 리소스를 더 빠르게 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>If you have called <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> to create a message buffer of a message, and inspected the message using <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A&gt;</ph>, you will get a <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> when you attempt to close the buffer using this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph>를 호출하여 메시지 버퍼를 만들고 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A&gt;</ph>를 사용하여 메시지를 검사한 경우 이 메서드를 사용하여 버퍼를 닫으려고 하면 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>이 발생합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>To avoid this problem, you need to recreate the message from the buffer before closing.</source>
          <target state="translated">이 문제를 방지하려면 닫기 전에 버퍼에서 메시지를 다시 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>See the code sample in the Example section for a demonstration of the previous scenario and a way to resolve this problem.</source>
          <target state="translated">이 시나리오를 보여 주는 예제와 이 문제를 해결하는 방법은 예제 부분의 코드 샘플을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>The following example demonstrates how to properly close a message buffer.</source>
          <target state="translated">다음 예제에서는 메시지 버퍼를 적절히 닫는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
          <source>Returns a copy of the original message.</source>
          <target state="translated">원본 메시지의 복사본을 반환합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
          <source>An identical copy of the original <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance you previously provided to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /&gt;</ph> method of a <ph id="ph3">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> 인스턴스의 <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /&gt;</ph> 메서드에 이전에 제공한 원본 <ph id="ph3">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> 인스턴스의 동일한 복사본입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
          <source>Calling this method creates an identical copy of the original <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance you previously provided to the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 인스턴스의 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> 메서드에 이전에 제공한 원본 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 인스턴스의 동일한 복사본이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
          <source>You can then save the message to a durable storage.</source>
          <target state="translated">그런 다음 이 메시지를 영구 저장소에 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object.</source>
          <target state="translated">이 개체를 탐색하기 위한 새로운 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
          <target state="translated">메시지 복사본의 일부만 조작하려면 이 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object.</source>
          <target state="translated">이 개체를 탐색하기 위한 새로운 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator">
          <source>This method cannot be inherited.</source>
          <target state="translated">이 메서드는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object.</source>
          <target state="translated">이 개체를 탐색하기 위한 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
          <target state="translated">메시지 복사본의 일부만 조작하려면 이 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32)">
          <source>The location you want the navigator to be positioned on initially.</source>
          <target state="translated">검색기를 맨 처음 배치할 위치입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object, with the navigator positioned on the node specified.</source>
          <target state="translated">지정된 노드에 검색기를 배치하여 이 개체를 탐색하기 위한 새 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object.</source>
          <target state="translated">이 개체를 탐색하기 위한 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32)">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
          <target state="translated">메시지 복사본의 일부만 조작하려면 이 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Xml.XmlSpace)">
          <source>A valid <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> space.</source>
          <target state="translated">유효한 <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> 공간입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Xml.XmlSpace)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object, with the specified <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 범위를 사용하여 이 개체를 탐색하기 위한 새 <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Xml.XmlSpace)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object.</source>
          <target state="translated">이 개체를 탐색하기 위한 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Xml.XmlSpace)">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
          <target state="translated">메시지 복사본의 일부만 조작하려면 이 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)">
          <source>The location you want the navigator to be positioned on initially.</source>
          <target state="translated">검색기를 맨 처음 배치할 위치입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)">
          <source>A valid <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> space.</source>
          <target state="translated">유효한 <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> 공간입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object, with the navigator positioned on the specified node and <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">지정된 노드 및 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 범위에 검색기를 배치하여 이 개체를 탐색하기 위한 새 <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object.</source>
          <target state="translated">이 개체를 탐색하기 위한 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
          <target state="translated">메시지 복사본의 일부만 조작하려면 이 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
          <source>Gets the type of message content stored in this buffer.</source>
          <target state="translated">이 버퍼에 저장되는 메시지 콘텐츠의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
          <source>The type of message content stored in this buffer.</source>
          <target state="translated">이 버퍼에 저장되는 메시지 콘텐츠의 형식입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>This method cannot be inherited.</source>
          <target state="translated">이 메서드는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>Call this method when you are finished using the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>를 사용한 후에 이 메서드를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>This method leaves the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> in an unusable state.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>를 사용할 수 없는 상태로 만듭니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>After calling this method, you must release all references to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> was occupying.</source>
          <target state="translated">이 메서드를 호출한 후에 가비지 수집기가 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>에서 사용했던 메모리를 회수할 수 있도록 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>에 대한 모든 참조를 해제해야 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>Always call this method before you release your last reference to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>에 대한 마지막 참조를 해제하기 전에 반드시 이 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>Otherwise, the resources it is using are not freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 개체의 <ph id="ph2">`Finalize`</ph> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
          <source>An IO stream that the entire content of this buffer is written to.</source>
          <target state="translated">이 버퍼의 전체 내용을 쓸 대상 IO 스트림입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
          <source>Writes the entire content of this buffer to the specified IO stream.</source>
          <target state="translated">이 버퍼의 전체 내용을 지정된 IO 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
          <source>This function uses a binary encoder instead of a UTF-8 encoder.</source>
          <target state="translated">이 기능은 UTF-8 인코더 대신 이진 인코더를 사용합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
          <source>Therefore, you cannot directly convert from a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> to a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>.</source>
          <target state="translated">따라서 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>에서 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>로 직접 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
          <source>The code in the example section shows how to work around this problem.</source>
          <target state="translated">예제 단원의 코드에서는 이 문제를 해결하는 방법을 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>