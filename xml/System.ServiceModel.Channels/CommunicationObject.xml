<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CommunicationObject.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c52fa24f77f9f41c0532918bdaaa143ccb87ad91.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c52fa24f77f9f41c0532918bdaaa143ccb87ad91</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Provides a common base implementation for the basic state machine common to all communication-oriented objects in the system, including channels, listeners, and the channel and listener factories.</source>
          <target state="translated">시스템에서 채널, 수신기, 채널 및 수신기 팩터리 등 모든 통신 지향 개체에 공통되는 기본 상태 시스템에 대한 공통 기본 구현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> interface for all communication objects in <ph id="ph3">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>에서 모든 통신 개체에 대한 <ph id="ph3">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 인터페이스를 구현합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>The method implementations handle parameter validation, raise events that notify the occurrence of state transitions, provide the means to associated additional processing with these state transitions, and ensure that such state changes are coordinated.</source>
          <target state="translated">이 메서드 구현에서는 매개 변수 유효성을 검사하고, 상태 전환을 알리는 이벤트를 발생하고, 이러한 상태 전환과 연관된 추가 처리 수단을 제공하며, 해당 상태 변경이 조정되는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
          <source>The mutually exclusive lock that protects the class instance during a state transition.</source>
          <target state="translated">상태 전환 중에 클래스 인스턴스를 보호하는 상호 배타적인 전용 잠금입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> class with the mutually exclusive lock to protect the state transitions specified.</source>
          <target state="translated">지정된 상태 전환을 보호하기 위해 상호 배타적인 전용 잠금을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <source>Causes a communication object to transition immediately from its current state into the closing state.</source>
          <target state="translated">통신 개체가 현재 상태에서 Closing 상태로 즉시 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <source>This method indicates that any unfinished work should be ignored or ungracefully terminated before returning.</source>
          <target state="translated">이 메서드는 반환하기 전에 완료되지 않은 작업을 무시하거나 종료해야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> method can be used to cancel any outstanding operations, including outstanding calls to <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph>에 대한 처리 중인 호출 등 처리 중인 작업을 취소하기 위해 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <source>To gracefully transition a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> from any state other than <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, call <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> or one of its asynchronous versions, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> 이외의 상태를 가진 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>를 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로 전환하려면 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 또는 비동기 버전 중 하나인 <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Begins an asynchronous operation to close a communication object.</source>
          <target state="translated">통신 개체를 닫기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous close operation.</source>
          <target state="translated">비동기 닫기 작업의 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
          <target state="translated">응용 프로그램에 의해 지정되는 개체로, 비동기 닫기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to close a communication object.</source>
          <target state="translated">통신 개체를 닫기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous close operation.</source>
          <target state="translated">비동기 닫기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>This method causes the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state within a default interval of time.</source>
          <target state="translated">이 메서드를 사용하면 기본 시간 간격 내에 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> 상태 이외의 모든 상태를 가진 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>가 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로 전환됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> 메서드를 사용하면 반환하기 전에 끝내지 않은 작업을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>For example, finish sending any buffered messages).</source>
          <target state="translated">예를 들어 버퍼링된 메시지의 전송을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>This method calls <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object was initially in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">통신 개체가 처음부터 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> 상태이면 이 메서드는 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
          <target state="translated">제한 시간이 초과되기 전에 닫기 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous close operation.</source>
          <target state="translated">비동기 닫기 작업의 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
          <target state="translated">응용 프로그램에 의해 지정되는 개체로, 비동기 닫기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to close a communication object with a specified timeout.</source>
          <target state="translated">지정된 제한 시간 내에서 통신 개체를 닫기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous close operation.</source>
          <target state="translated">비동기 닫기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method causes the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state with in a specified interval of time.</source>
          <target state="translated">이 메서드를 사용하면 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> 상태 이외의 모든 상태를 가진 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>가 지정된 시간 간격 내에 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로 전환됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> 메서드를 사용하면 반환하기 전에 끝내지 않은 작업을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>For example, finish sending any buffered messages).</source>
          <target state="translated">예를 들어 버퍼링된 메시지의 전송을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method calls <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object was initially in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">통신 개체가 처음부터 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> 상태이면 이 메서드는 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Begins an asynchronous operation to open a communication object.</source>
          <target state="translated">통신 개체를 열기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous open operation.</source>
          <target state="translated">비동기 열기 작업의 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous open operation.</source>
          <target state="translated">응용 프로그램에서 지정하는 개체로, 비동기 열기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to open a communication object.</source>
          <target state="translated">통신 개체를 열기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous open operation.</source>
          <target state="translated">비동기 열기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object is initially in the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated">통신 개체가 처음부터 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> 상태이면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> 메서드는 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>을 호출합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 작업을 호출하여 통신 개체가 Closing 상태로 전환된 후에 처리를 삽입하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the send operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 보내기 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous open operation.</source>
          <target state="translated">비동기 열기 작업의 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous open operation.</source>
          <target state="translated">응용 프로그램에서 지정하는 개체로, 비동기 열기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to open a communication object within a specified interval of time.</source>
          <target state="translated">지정된 시간 간격 내에서 통신 개체를 열기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous open operation.</source>
          <target state="translated">비동기 열기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object is initially in the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated">통신 개체가 처음부터 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> 상태이면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> 메서드는 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>을 호출합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 작업을 호출하여 통신 개체가 Closing 상태로 전환된 후에 처리를 삽입하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Causes a communication object to transition from its current state into the closed state.</source>
          <target state="translated">통신 개체가 현재 상태에서 Closed 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>Causes a communication object to transition from its current state into the closed state.</source>
          <target state="translated">통신 개체가 현재 상태에서 Closed 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>This method causes a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated">이 메서드를 사용하면 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> 상태 이외의 모든 상태를 가진 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>가 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로 전환됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 메서드를 사용하면 반환하기 전에 끝내지 않은 작업을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>For example, finish sending any buffered messages.</source>
          <target state="translated">예를 들어 버퍼링된 메시지의 전송을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> enters the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> state and remains in it after the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method is called until the transition to the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> 상태로 전환된 다음 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 메서드가 호출된 후 <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로 완전히 전환될 때까지 이 상태로 유지됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The transition consists of making successive calls to <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph>.</source>
          <target state="translated">이 전환은 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph>에 대한 후속 호출로 이루어집니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>There is also an asynchronous version of the close method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>를 호출하여 시작하는 비동기 버전의 close 메서드도 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
          <target state="translated">제한 시간이 초과되기 전에 닫기 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>Causes a communication object to transition from its current state into the closed state within a specified interval of time.</source>
          <target state="translated">통신 개체가 지정된 시간 간격 내에 현재 상태에서 Closed 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>This method causes a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state within a specified interval of time.</source>
          <target state="translated">이 메서드를 사용하면 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> 상태 이외의 모든 상태를 가진 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>가 지정된 시간 간격 내에 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로 전환됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 메서드를 사용하면 반환하기 전에 끝내지 않은 작업을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>For example, finish sending any buffered messages.</source>
          <target state="translated">예를 들어 버퍼링된 메시지의 전송을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> enters the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> state and remains in it after the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method is called until the transition to the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> 상태로 전환된 다음 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 메서드가 호출된 후 <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로 완전히 전환될 때까지 이 상태로 유지됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The transition consists of making successive calls to <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph>.</source>
          <target state="translated">이 전환은 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph>에 대한 후속 호출로 이루어집니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>There is also an asynchronous version of the close method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>를 호출하여 시작하는 비동기 버전의 close 메서드도 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Closed">
          <source>Occurs when a communication object transitions into the closed state.</source>
          <target state="translated">통신 개체가 Closed 상태로 전환될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Closed">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> 이벤트는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 메서드에 의해 호출되는 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph> 메서드에 의해 발생합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Closing">
          <source>Occurs when a communication object transitions into the closing state.</source>
          <target state="translated">통신 개체가 Closing 상태로 전환될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Closing">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closing&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closing&gt;</ph> 이벤트는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 메서드에 의해 호출되는 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> 메서드에 의해 발생합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
          <source>When overridden in a derived class, gets the default interval of time provided for a close operation to complete.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 닫기 작업을 완료하기 위해 제공되는 기본 시간 간격을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 닫기 작업이 완료되어야 하는 기간을 지정하는 기본 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
          <source>When overridden in a derived class, gets the default interval of time provided for an open operation to complete.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 열기 작업을 완료하기 위해 제공되는 기본 시간 간격을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 열기 작업이 완료되어야 하는 기간을 지정하는 기본 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 메서드를 호출할 때 반환되는 <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>Completes an asynchronous operation to close a communication object.</source>
          <target state="translated">통신 개체를 닫기 위한 비동기 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>A synchronous version of this method is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드의 동기 버전은 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 메서드에서 제공합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 메서드를 호출할 때 반환되는 <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous operation to open a communication object.</source>
          <target state="translated">통신 개체를 열기 위한 비동기 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>A synchronous version of this method is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드의 동기 버전은 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 메서드에서 제공합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Fault">
          <source>Causes a communication object to transition from its current state into the faulted state.</source>
          <target state="translated">통신 개체가 현재 상태에서 Faulted 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Fault">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> 이벤트는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> 메서드에 의해 호출되는 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> 메서드에 의해 발생합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
          <source>Occurs when a communication object transitions into the faulted state.</source>
          <target state="translated">통신 개체가 Faulted 상태로 전환될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> 이벤트는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> 메서드에 의해 호출되는 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> 메서드에 의해 발생합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
          <source>Gets the type of communication object.</source>
          <target state="translated">통신 개체의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
          <source>The type of communication object.</source>
          <target state="translated">통신 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
          <source>Gets a value that indicates whether the communication object has been disposed.</source>
          <target state="translated">통신 개체가 삭제되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the communication object is in a closed state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">통신 개체가 Closed 상태이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
          <source>An object is considered disposed when the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> event occurs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> 이벤트가 발생하면 개체가 삭제된 것으로 간주됩니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
          <source>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.</source>
          <target state="translated">통신 개체가 동기화 중단 작업의 호출로 인해 닫기 상태로 전환된 후 해당 통신 개체에 대한 처리를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnAbort%2A&gt;</ph> if the communication object is not already in a <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated">통신 개체가 아직 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> 상태가 아니면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnAbort%2A&gt;</ph> 메서드는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on close operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 닫기 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous on close operation.</source>
          <target state="translated">비동기 닫기 작업의 완료에 대한 알림을 받는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous on close operation.</source>
          <target state="translated">응용 프로그램에 의해 지정되는 개체로, 비동기 닫기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Inserts processing after a communication object transitions to the closing state due to the invocation of an asynchronous close operation.</source>
          <target state="translated">통신 개체가 비동기 닫기 작업의 호출로 인해 Closing 상태로 전환된 후 처리를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous on close operation.</source>
          <target state="translated">비동기 닫기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">통신 개체가 처음부터 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> 상태이면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph> 메서드는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph> method.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 작업을 호출하여 통신 개체가 Closing 상태로 전환된 후에 처리를 삽입하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on open operation has to complete before timing out.</source>
          <target state="translated">제한 시간이 초과되기 전에 열기 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous on open operation.</source>
          <target state="translated">비동기 열기 작업의 완료에 대한 알림을 받는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous on open operation.</source>
          <target state="translated">응용 프로그램에 의해 지정되는 개체로, 비동기 열기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation.</source>
          <target state="translated">통신 개체가 비동기 열기 작업의 호출로 인해 Opening 상태로 전환된 후 해당 통신 개체에 대한 처리를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous on open operation.</source>
          <target state="translated">비동기 열기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To insert processing after a communication object transitions to a opening state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
          <target state="translated">동기 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 작업을 호출하여 통신 개체가 Opening 상태로 전환된 후에 처리를 삽입하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on close operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 닫기 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation.</source>
          <target state="translated">통신 개체가 동기화 닫기 작업의 호출로 인해 Closing 상태로 전환된 후 해당 통신 개체에 대한 처리를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">통신 개체가 처음부터 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 상태이면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%2A&gt;</ph> 메서드는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of an asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph> method.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> 작업을 호출하여 통신 개체가 Closing 상태로 전환된 후에 처리를 삽입하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source><ph id="ph1">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /&gt;</ph> was called on an object in the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /&gt;</ph> 상태인 개체에 대해 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph>를 호출한 경우</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>A communication error occurred while closing the object.</source>
          <target state="translated">개체를 닫는 동안 통신 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
          <source>Invoked during the transition of a communication object into the closing state.</source>
          <target state="translated">통신 개체를 Closing 상태로 전환하는 중에 호출됩니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">통신 개체가 처음부터 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 상태이면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> 메서드는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> (and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> if the communication object is not already in a <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated">통신 개체가 아직 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph> 상태가 아니면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> 메서드는 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
          <source>Invoked during the transition of a communication object into the closing state.</source>
          <target state="translated">통신 개체를 Closing 상태로 전환하는 중에 호출됩니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">통신 개체가 처음부터 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 상태이면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> 메서드는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 메서드를 호출할 때 반환되는 <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>Completes an asynchronous operation on the close of a communication object.</source>
          <target state="translated">통신 개체를 닫을 때 비동기 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%28System.IAsyncResult%29&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> if the communication object is not already in a <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated">통신 개체가 아직 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%28System.IAsyncResult%29&gt;</ph> 상태가 아니면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> 메서드는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 메서드를 호출할 때 반환되는 <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous operation on the open of a communication object.</source>
          <target state="translated">통신 개체를 열 때 비동기 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndOpen%2A&gt;</ph> (and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndOpen%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
          <source>Inserts processing on a communication object after it transitions to the faulted state due to the invocation of a synchronous fault operation.</source>
          <target state="translated">통신 개체가 동기화 오류 작업의 호출로 인해 Faulted 상태로 전환된 후 해당 통신 개체에 대한 처리를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> 이벤트는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> 메서드에 의해 호출되는 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> 메서드에 의해 발생합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on open operation has to complete before timing out.</source>
          <target state="translated">제한 시간이 초과되기 전에 열기 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.</source>
          <target state="translated">통신 개체가 Opening 상태로 전환한 후 해당 개체에 대해 지정된 기간 내에 완료되어야 하는 처리를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpen%28System.TimeSpan%29&gt;</ph> (after calling <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> and before calling <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>) if the communication object is initially in the <ph id="ph5">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated">통신 개체가 처음부터 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 상태이면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpen%28System.TimeSpan%29&gt;</ph> 메서드는 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>을 호출한 후 및 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>를 호출하기 전에 <ph id="ph5">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>을 호출합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>To insert processing as a communication object transitions to a opening state due to the invocation of an asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> method.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> 작업을 호출하여 통신 개체가 Opening 상태로 전환된 후에 처리를 삽입하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
          <source>Invoked during the transition of a communication object into the opened state.</source>
          <target state="translated">통신 개체를 Opened 상태로 전환하는 중에 호출됩니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
          <source>This provides a way to add processing when it is called by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> methods.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> 메서드에 의해 호출될 때 처리를 추가할 수 있는 방법을 제공합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
          <source>Invoked during the transition of a communication object into the opening state.</source>
          <target state="translated">통신 개체를 Opening 상태로 전환하는 중에 호출됩니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
          <source>This provides a way to add processing when it is called by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> methods.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> 메서드에 의해 호출될 때 처리를 추가할 수 있는 방법을 제공합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Causes a communication object to transition from the created state into the opened state.</source>
          <target state="translated">통신 개체가 Created 상태에서 Opened 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>When called, the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method causes a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state and calls <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</source>
          <target state="translated">호출 시 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph>를 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> 상태로 전환하고 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 및 <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method completes the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method by setting the state of the object to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> 메서드는 개체의 상태를 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 상태로 설정하여 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 메서드를 완료합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>Causes a communication object to transition from the created state into the opened state.</source>
          <target state="translated">통신 개체가 Created 상태에서 Opened 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is instantiated, it begins in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph>의 인스턴스가 생성되면 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태에서는 속성을 설정하거나 이벤트를 등록하는 등 개체를 구성할 수는 있지만 아직 메시지를 보내거나 받을 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>When called, the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method causes a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state and calls <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</source>
          <target state="translated">호출 시 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph>를 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> 상태로 전환하고 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 및 <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method completes the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method by setting the state of the object to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> 메서드는 개체의 상태를 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 상태로 설정하여 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 메서드를 완료합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>In the</source>
          <target state="translated">안에</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state, the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is usable (for example, messages can be received), but it is no longer configurable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태에서는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph>를 사용하여 메시지를 받는 것과 같은 작업은 할 수 있지만 구성 작업은 할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>There is also an asynchronous version of the open method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> and completed by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph>을 호출하면 시작되고 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>을 호출하면 완료되는 비동기 버전의 open 메서드도 있습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>Credentials Capture with Windows Authentication</source>
          <target state="translated">Windows 인증을 사용하여 자격 증명 얻기</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>When using Windows authentication, credentials used by the service are based on the current context thread.</source>
          <target state="translated">Windows 인증을 사용하면 서비스에서 사용하는 자격 증명이 현재 컨텍스트 스레드를 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The credentials are obtained when the <ph id="ph1">`Open`</ph> method is called.</source>
          <target state="translated">자격 증명은 <ph id="ph1">`Open`</ph> 메서드가 호출될 때 얻습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>For asynchronous calls, credentials are captured when the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> is invoked.</source>
          <target state="translated">비동기 호출의 경우 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph>이 호출될 때 자격 증명을 얻습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>However, the actual credentials cannot be guaranteed.</source>
          <target state="translated">그러나 실제 자격 증명은 보증되지 않습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>That is, the credentials of the caller may be switched to another identity.</source>
          <target state="translated">즉, 호출자의 자격 증명이 다른 ID로 전환될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>For more information, see <bpt id="p1">[</bpt>Message Security with a Windows Client<ept id="p1">](~/docs/framework/wcf/feature-details/message-security-with-a-windows-client.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows 클라이언트는 메시지 보안<ept id="p1">](~/docs/framework/wcf/feature-details/message-security-with-a-windows-client.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          <target state="translated">제한 시간이 초과되기 전에 열기 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>Causes a communication object to transition from the created state into the opened state within a specified interval of time.</source>
          <target state="translated">통신 개체가 지정된 시간 간격 내에 Created 상태에서 Opened 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is instantiated, it begins in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph>의 인스턴스가 생성되면 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태에서는 속성을 설정하거나 이벤트를 등록하는 등 개체를 구성할 수는 있지만 아직 메시지를 보내거나 받을 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>When called, the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method causes a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state and calls <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</source>
          <target state="translated">호출 시 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph>를 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> 상태로 전환하고 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 및 <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method completes the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method by setting the state of the object to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> 메서드는 개체의 상태를 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 상태로 설정하여 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 메서드를 완료합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>In the</source>
          <target state="translated">안에</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state, the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is usable (for example, messages can be received), but it is no longer configurable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태에서는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph>를 사용하여 메시지를 받는 것과 같은 작업은 할 수 있지만 구성 작업은 할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>There is also an asynchronous version of the open method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> and completed by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph>을 호출하면 시작되고 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>을 호출하면 완료되는 비동기 버전의 open 메서드도 있습니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">작업에 할당된 기본 시간 간격이 작업을 완료하기 전에 초과된 경우</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Opened">
          <source>Occurs when a communication object transitions into the opened state.</source>
          <target state="translated">통신 개체가 Opened 상태로 전환될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Opened">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opened&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opened&gt;</ph> 이벤트는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 메서드에 의해 호출되는 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> 메서드에 의해 발생합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Opening">
          <source>Occurs when a communication object transitions into the opening state.</source>
          <target state="translated">통신 개체가 Opening 상태로 전환될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Opening">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opening&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opening&gt;</ph> 이벤트는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 메서드에 의해 호출되는 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> 메서드에 의해 발생합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.State">
          <source>Gets a value that indicates the current state of the communication object.</source>
          <target state="translated">통신 개체의 현재 상태를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.State">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.ServiceModel.CommunicationState" /&gt;</ph> enumeration that indicates the current state of the object.</source>
          <target state="translated">개체의 현재 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.CommunicationState" /&gt;</ph> 열거형의 값입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
          <source>Gets the mutually exclusive lock that protects the class instance during a state transition.</source>
          <target state="translated">상태 전환 중에 클래스 인스턴스를 보호하는 상호 배타적인 전용 잠금을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
          <source>The mutually exclusive lock that protects the class instance during a state transition.</source>
          <target state="translated">상태 전환 중에 클래스 인스턴스를 보호하는 상호 배타적인 전용 잠금입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>Throws an exception if the communication object is disposed.</source>
          <target state="translated">통신 개체가 삭제되면 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>No exception is thrown if the communication object is in a <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태이면 예외가 throw되지 않습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>A communication object is disposed once <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> is called on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph>가 호출되면 통신 개체가 삭제됩니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태에 있는 경우</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태에 있는 경우</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>Throws an exception if the communication object the <ph id="ph1">&lt;see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> state.</source>
          <target state="translated">통신 개체의 <ph id="ph1">&lt;see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> 상태로 설정되지 않은 경우 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>Since an object is immutable after <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> is called on it, the only state that is both mutable and not disposed is the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>이 호출된 후에는 개체를 변경할 수 없으므로 변경이 가능하고 삭제되지 않는 유일한 상태는 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 상태에 있는 경우</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태에 있는 경우</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태에 있는 경우</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <source>Throws an exception if the communication object is not in the <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 상태가 아니면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be used.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 상태가 아니며 사용할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태이며 수정할 수 없는 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>