<Type Name="TransactionFlowBindingElement" FullName="System.ServiceModel.Channels.TransactionFlowBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4fca317473ca20988b04b9b8b28a69520867479d" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53457812" /></Metadata><TypeSignature Language="C#" Value="public sealed class TransactionFlowBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TransactionFlowBindingElement extends System.ServiceModel.Channels.BindingElement implements class System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TransactionFlowBindingElement&#xA;Inherits BindingElement&#xA;Implements IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactionFlowBindingElement sealed : System::ServiceModel::Channels::BindingElement, System::ServiceModel::Description::IPolicyExportExtension" />
  <TypeSignature Language="F#" Value="type TransactionFlowBindingElement = class&#xA;    inherit BindingElement&#xA;    interface IPolicyExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3a200-101">바인딩에 대한 트랜잭션 흐름 지원을 지정하는 구성 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-101">Represents the configuration element that specifies transaction flow support for a binding.</span></span> <span data-ttu-id="3a200-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a200-103">이 요소를 사용 하 여 끝점의 바인딩 설정에서 들어오는 트랜잭션 흐름을 사용할지 뿐만 아니라 들어오는 트랜잭션에 대해 원하는 프로토콜 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-103">This element allows you to enable or disable incoming transaction flow in an endpoint's binding settings, as well as to specify the desired protocol format for incoming transactions.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3a200-104"><xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> 프로토콜을 사용하여 엔드포인트 간에 트랜잭션을 전달할 경우 대상 엔드포인트에서 <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> 이외의 프로토콜을 사용하여 트랜잭션을 다시 전달하려고 하면 트랜잭션 시간 제한이 상실될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-104">When using the <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> protocol to flow transactions from endpoint to endpoint, the transaction timeout can be lost if the destination endpoint attempts to flow again using any protocol other than <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A>.</span></span> <span data-ttu-id="3a200-105">따라서 <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> 홉 뒤의 모든 하위 수준 노드가 예상보다 늦게 시간이 초과될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-105">This can cause all down-level nodes after the <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> hop to timeout later than expected.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/wcf/feature-details/enabling-transaction-flow.md"><span data-ttu-id="3a200-106">트랜잭션 흐름 사용</span><span class="sxs-lookup"><span data-stu-id="3a200-106">Enabling Transaction Flow</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3a200-107"><see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionFlowBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionFlowBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3a200-108"><see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionFlowBindingElement (System.ServiceModel.TransactionProtocol transactionProtocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.TransactionProtocol transactionProtocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.#ctor(System.ServiceModel.TransactionProtocol)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionFlowBindingElement(System::ServiceModel::TransactionProtocol ^ transactionProtocol);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.TransactionFlowBindingElement : System.ServiceModel.TransactionProtocol -&gt; System.ServiceModel.Channels.TransactionFlowBindingElement" Usage="new System.ServiceModel.Channels.TransactionFlowBindingElement transactionProtocol" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="transactionProtocol" Type="System.ServiceModel.TransactionProtocol" />
      </Parameters>
      <Docs>
        <param name="transactionProtocol"><span data-ttu-id="3a200-109">트랜잭션을 전달하는 데 사용되는 트랜잭션 프로토콜을 포함하는 <see cref="T:System.ServiceModel.TransactionProtocol" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-109">A <see cref="T:System.ServiceModel.TransactionProtocol" /> value that contains the transaction protocol used in flowing a transaction.</span></span></param>
        <summary><span data-ttu-id="3a200-110">트랜잭션을 전달하는 데 사용되도록 지정된 프로토콜을 사용하여 <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> class with the specified protocol that is used to flow a transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a200-111">사용할 프로토콜을 선택 하는 방법에 대 한 자세한 내용은 참조 하세요. [트랜잭션 흐름 사용](~/docs/framework/wcf/feature-details/enabling-transaction-flow.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-111">For more information about choosing the protocol to be used, see [Enabling Transaction Flow](~/docs/framework/wcf/feature-details/enabling-transaction-flow.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWildcardAction">
      <MemberSignature Language="C#" Value="public bool AllowWildcardAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWildcardAction" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransactionFlowBindingElement.AllowWildcardAction" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWildcardAction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWildcardAction { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWildcardAction : bool with get, set" Usage="System.ServiceModel.Channels.TransactionFlowBindingElement.AllowWildcardAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a200-112">복제할 트랜잭션 흐름 바인딩 요소에서 와일드카드 동작이 허용되도록 설정되었는지 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-112">Gets or sets whether wildcard action is set to be allowed on a transaction flow binding element to be cloned.</span></span></summary>
        <value><span data-ttu-id="3a200-113">와일드카드 동작이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-113"><see langword="true" /> if wildcard action is allowed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="transactionFlowBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="3a200-114">채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-114">The channel type.</span></span></typeparam>
        <param name="context"><span data-ttu-id="3a200-115">채널 팩터리를 생성하기 위해 사용되는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-115">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to build the channel factory.</span></span></param>
        <summary><span data-ttu-id="3a200-116">바인딩 컨텍스트를 사용하여 지정된 형식의 채널을 생성하는 채널 팩터리를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-116">Initializes a channel factory for producing channels of a specified type from a binding context.</span></span></summary>
        <returns><span data-ttu-id="3a200-117"><see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />에서 초기화되는 <paramref name="TChannel" /> 형식의 <paramref name="context" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-117">The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a200-118">이 메서드는 지정된 형식의 나가는 채널을 생성하는 데 사용할 수 있는 채널 팩터리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-118">This method creates a channel factory that can be used to make outgoing channels of the specified type.</span></span> <span data-ttu-id="3a200-119">이 메서드는 채널 스택을 생성할 때 인프라에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-119">This method is called by the infrastructure when building the channel stack.</span></span> <span data-ttu-id="3a200-120">사용자 지정 바인딩 요소를 구현할 때에만 코드에 이 메서드를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-120">You should use it in your code only when you implement a custom binding element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3a200-121"><paramref name="context" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3a200-121"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3a200-122">지정된 채널 형식에 대한 채널 팩터리를 생성할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="3a200-122">A channel factory for the specified channel type cannot be built.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="transactionFlowBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="3a200-123">채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-123">The channel type.</span></span></typeparam>
        <param name="context"><span data-ttu-id="3a200-124">채널 수신기를 생성하는 데 사용되는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-124">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to build the channel listener.</span></span></param>
        <summary><span data-ttu-id="3a200-125">바인딩 컨텍스트를 사용하여 지정된 형식의 채널을 수락하는 채널 수신기를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-125">Initializes a channel listener for accepting channels of a specified type from the binding context.</span></span></summary>
        <returns><span data-ttu-id="3a200-126"><see cref="T:System.ServiceModel.Channels.IChannelListener`1" />에서 초기화되는 <paramref name="TChannel" /> 형식의 <paramref name="context" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-126">The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> initialized from <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a200-127">이 메서드는 이 바인딩에 대한 메시지를 받을 채널 수신기를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-127">This method creates a channel listener to receive messages for this binding.</span></span>  
  
 <span data-ttu-id="3a200-128">이 메서드는 채널을 생성할 때 인프라에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-128">This method is called by the infrastructure when building the channel.</span></span> <span data-ttu-id="3a200-129">사용자 지정 바인딩 요소를 구현할 때에만 코드에 이 메서드를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-129">You should use it in your code only when you implement a custom binding element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3a200-130"><paramref name="context" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3a200-130"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3a200-131">지정된 채널 형식에 대한 채널 수신기를 생성할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="3a200-131">A channel listener for the specified channel type cannot be built.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="transactionFlowBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="3a200-132">채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-132">The channel type.</span></span></typeparam>
        <param name="context"><span data-ttu-id="3a200-133">채널 팩터리를 생성할 수 있는지를 확인하는 데 사용되는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-133">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to determine if a channel factory can be built.</span></span></param>
        <summary><span data-ttu-id="3a200-134">지정된 바인딩 컨텍스트에서 지정된 형식의 채널을 생성하기 위해 채널 팩터리를 생성할 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-134">Returns a value that indicates whether the specified binding context can build a channel factory for producing channels of a specified type.</span></span></summary>
        <returns><span data-ttu-id="3a200-135">지정된 형식의 채널에 대한 채널 팩터리를 <see langword="true" />에서 생성할 수 있으면 <paramref name="context" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-135"><see langword="true" /> if a channel factory for the specified type of channel can be built from <paramref name="context" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a200-136">팩터리를 실제로 생성하기 전에 지정된 `TChannel`에 대해 `context` 형식의 채널에 대한 채널 팩터리를 생성할 수 있는지 확인하려면 이 메서드를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-136">You should call this method to check that the channel factory for channels of type `TChannel` can be built for the specified `context`, before attempting to actually build the factory.</span></span> <span data-ttu-id="3a200-137">지정된 채널 형식에 대한 채널 팩터리를 생성할 수 없는 경우 <xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelFactory%2A>는 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-137">Note that <xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelFactory%2A> throws an exception if it cannot build a channel factory for the specified channel type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3a200-138"><paramref name="context" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3a200-138"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="transactionFlowBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="3a200-139">채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-139">The channel type.</span></span></typeparam>
        <param name="context"><span data-ttu-id="3a200-140">채널 수신기를 생성할 수 있는지를 확인하는 데 사용되는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-140">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to determine if a channel listener can be built.</span></span></param>
        <summary><span data-ttu-id="3a200-141">지정된 바인딩 컨텍스트에서 지정된 형식의 수락 채널에 대한 채널 수신기를 생성할 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-141">Returns a value that indicates whether the specified binding context can build a channel listener for accepting channels of a specified type.</span></span></summary>
        <returns><span data-ttu-id="3a200-142">지정된 형식의 채널에 대한 채널 수신기를 <see langword="true" />에서 생성할 수 있으면 <paramref name="context" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-142"><see langword="true" /> if a channel listener for the specified type of channel can be built from <paramref name="context" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a200-143">수신기를 실제로 생성하기 전에 지정된 `TChannel`에 대해 `context` 형식의 채널에 대한 채널 수신기를 생성할 수 있는지 여부를 확인하려면 이 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-143">You should call this method to check that the channel listener for channels of type of `TChannel` can be built for the specified `context`, before attempting to actually build the listener.</span></span> <span data-ttu-id="3a200-144">지정된 채널 형식에 대한 채널 수신기를 생성할 수 없는 경우 <xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelListener%2A>는 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-144">Note that <xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelListener%2A> throws an exception if it cannot build a channel listener for the specified channel type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3a200-145"><paramref name="context" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3a200-145"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="transactionFlowBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3a200-146">이 요소의 복제본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-146">Creates a duplicate of this element.</span></span></summary>
        <returns><span data-ttu-id="3a200-147">이 요소의 복제본인 <see cref="T:System.ServiceModel.Channels.BindingElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-147">A <see cref="T:System.ServiceModel.Channels.BindingElement" /> that is a duplicate of this element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a200-148">이 메서드는 이 바인딩 요소의 전체 복제본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-148">This method creates a deep clone of this binding element.</span></span> <span data-ttu-id="3a200-149">이와 반대로 개체의 전체 복제는 개체와, 개체에서 직접 또는 간접 참조하는 모든 대상을 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-149">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="3a200-150">이를 전체 개체 그래프 복사라고도 합니다. 반대로 개체의 단순 복제는 개체만 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-150">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="3a200-151">개체에 다른 개체에 대한 참조가 포함된 경우 단순 복사는 참조된 개체의 복사본을 만들지 않고 대신 원본 개체에 대한 참조만 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-151">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="transactionFlowBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="3a200-152">메서드에서 쿼리하고 있는 형식화된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-152">The typed object for which the method is querying.</span></span></typeparam>
        <param name="context"><span data-ttu-id="3a200-153"><see cref="T:System.ServiceModel.Channels.BindingContext" /></span><span class="sxs-lookup"><span data-stu-id="3a200-153">The <see cref="T:System.ServiceModel.Channels.BindingContext" /></span></span>  
  
<span data-ttu-id="3a200-154">입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-154">that should be used to get the requested property.</span></span></param>
        <summary><span data-ttu-id="3a200-155">바인딩 스택의 해당 계층에 요청된 형식의 개체가 있으면 해당 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-155">Gets the typed object requested, if present, from the appropriate layer in the binding stack.</span></span></summary>
        <returns><span data-ttu-id="3a200-156">요청한 형식의 T 개체가 있으면 해당 <paramref name="T" /> 개체이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-156">The typed object <paramref name="T" /> requested if it is present; <see langword="null" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a200-157">이 메서드를 사용하여 바인딩 요소 스택에서 기능, 요구 사항 및 매개 변수를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-157">You can use this method to retrieve capabilities, requirements and parameters from the binding element stack.</span></span> <span data-ttu-id="3a200-158">바인딩 요소가 요청된 개체의 반환을 지원하면 해당 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-158">If a binding element supports returning the requested object, it returns it.</span></span> <span data-ttu-id="3a200-159">그렇지 않으면 스택의 다음 바인딩 요소에 호출을 위임합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-159">If not, it delegates the call down to the next binding element in the stack.</span></span> <span data-ttu-id="3a200-160">스택의 맨 아래에 도달할 때까지 요청된 개체를 지원하는 바인딩 요소가 없으면 이 메서드는 `null`을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-160">If it gets to the bottom of the stack and no binding element supported the requested object, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3a200-161"><paramref name="context" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3a200-161"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransactionProtocol">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransactionProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransactionProtocol() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.ShouldSerializeTransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransactionProtocol () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransactionProtocol();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTransactionProtocol : unit -&gt; bool" Usage="transactionFlowBindingElement.ShouldSerializeTransactionProtocol " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3a200-162">트랜잭션 흐름에 사용된 트랜잭션 프로토콜을 serialize할 수 있는지 여부를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-162">Returns whether the transaction protocol used for transaction flow can be serialized.</span></span></summary>
        <returns><span data-ttu-id="3a200-163">트랜잭션 프로토콜을 serialize할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-163"><see langword="true" /> if the transaction protocol can be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="3a200-164">이 바인딩 요소의 정책을 내보낼 때 사용되는 <see cref="T:System.ServiceModel.Description.MetadataExporter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-164">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> to be used when exporting the policy of this binding element.</span></span></param>
        <param name="context"><span data-ttu-id="3a200-165">이 바인딩 요소의 정책을 내보낼 때 사용되는 <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-165">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> to be used when exporting the policy of this binding element.</span></span></param>
        <summary><span data-ttu-id="3a200-166">바인딩에 대한 사용자 지정 정책 어설션을 내보냅니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-166">Exports a custom policy assertion about the binding.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3a200-167"><paramref name="context" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3a200-167"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionProtocol">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransactionProtocol TransactionProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.TransactionProtocol TransactionProtocol" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransactionFlowBindingElement.TransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionProtocol As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransactionProtocol ^ TransactionProtocol { System::ServiceModel::TransactionProtocol ^ get(); void set(System::ServiceModel::TransactionProtocol ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionProtocol : System.ServiceModel.TransactionProtocol with get, set" Usage="System.ServiceModel.Channels.TransactionFlowBindingElement.TransactionProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a200-168">트랜잭션을 전달하는 데 사용되는 트랜잭션 프로토콜을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-168">Gets or sets the transaction protocol used in flowing a transaction.</span></span></summary>
        <value><span data-ttu-id="3a200-169">트랜잭션 흐름에 사용할 트랜잭션 프로토콜을 지정하는 <see cref="T:System.ServiceModel.TransactionProtocol" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-169">A <see cref="T:System.ServiceModel.TransactionProtocol" /> that specifies the transaction protocol to be used for transaction flow.</span></span> <span data-ttu-id="3a200-170">기본값은 <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-170">The default is <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a200-171">사용할 프로토콜을 선택 하는 방법에 대 한 자세한 내용은 참조 하세요. [트랜잭션 흐름 사용](~/docs/framework/wcf/feature-details/enabling-transaction-flow.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a200-171">For more information about choosing the protocol to be used, see [Enabling Transaction Flow](~/docs/framework/wcf/feature-details/enabling-transaction-flow.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>