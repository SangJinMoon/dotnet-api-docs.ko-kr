<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRequestChannel.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d8f470aa67fe4154b5be3773a5881997b9b9adac.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8f470aa67fe4154b5be3773a5881997b9b9adac</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IRequestChannel">
          <source>Defines the contract that a channel must implement to be on the requesting side of a request-reply communication between messaging endpoints.</source>
          <target state="translated">메시징 끝점 간 요청-응답 통신의 요청측에 있도록 하기 위해 채널이 구현해야 할 계약을 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IRequestChannel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> defines synchronous and asynchronous variants of a <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A&gt;</ph> method that returns a response message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph>은 응답 메시지를 반환하는 <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A&gt;</ph> 메서드의 동기 및 비동기 variant를 정의합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IRequestChannel">
          <source>It also provides a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Via%2A&gt;</ph> properties to retrieve the endpoint address and URI to which the request message is sent.</source>
          <target state="translated">이 채널은 요청 메시지를 수신하는 끝점 주소와 URI를 검색하기 위한 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Via%2A&gt;</ph> 속성도 제공합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IRequestChannel">
          <source>Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange.</source>
          <target state="translated">요청-회신 메시지 교환의 회신측에 요청 메시지를 전송하는 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The request <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to be transmitted.</source>
          <target state="translated">전송할 요청 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</source>
          <target state="translated">요청 메시지를 전송하는 비동기 작업의 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</source>
          <target state="translated">응용 프로그램에 의해 지정되는 개체로, 요청 메시지를 전송하는 비동기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange.</source>
          <target state="translated">요청-회신 메시지 교환의 회신측에 요청 메시지를 전송하는 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous message transmission.</source>
          <target state="translated">비동기 메시지 전송을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>If the request message is larger that the maximum message size allowed by the binding being used, a <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph> is thrown.</source>
          <target state="translated">요청 메시지가 사용되는 바인딩에서 허용하는 최대 메시지 크기보다 크면 <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The maximum message size is set by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> property.</source>
          <target state="translated">최대 메시지 크기는 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> 속성에서 설정됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">기본값은 65536 바이트입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The following code shows how to implement this method.</source>
          <target state="translated">다음 코드에서는 이 메서드를 구현하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The request <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to be transmitted.</source>
          <target state="translated">전송할 요청 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time within which a response must be received.</source>
          <target state="translated">응답을 수신해야 할 시간 간격을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</source>
          <target state="translated">요청 메시지를 전송하는 비동기 작업의 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</source>
          <target state="translated">응용 프로그램에 의해 지정되는 개체로, 요청 메시지를 전송하는 비동기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange within a specified interval of time.</source>
          <target state="translated">지정된 시간 간격 이내에 요청-회신 메시지 교환의 응답측에 요청 메시지를 전송하는 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous message transmission.</source>
          <target state="translated">비동기 메시지 전송을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the request message is larger that the maximum message size allowed by the binding being used, a <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph> should be thrown.</source>
          <target state="translated">요청 메시지가 사용되는 바인딩에서 허용하는 최대 메시지 크기보다 크면 <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The maximum message size is set by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> property.</source>
          <target state="translated">최대 메시지 크기는 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> 속성에서 설정됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">기본값은 65536 바이트입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If a <ph id="ph1">`timeout`</ph> is passed while calling the function then that value is used.</source>
          <target state="translated">함수를 호출하는 동안 <ph id="ph1">`timeout`</ph>이 전달되면 이 값이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.SendTimeout%2A&gt;</ph> is set on the binding, then the value on the binding is used if no <ph id="ph2">`timeout`</ph> is specified while calling the function.</source>
          <target state="translated">바인딩에서 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.SendTimeout%2A&gt;</ph>이 설정된 경우, 함수를 호출하는 동안 <ph id="ph2">`timeout`</ph>이 지정되지 않으면 바인딩의 값이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A&gt;</ph> is used if no timeout is specified on either the binding or while calling the function.</source>
          <target state="translated">바인딩에서 또는 함수 호출 도중에 시간 제한이 지정되지 않으면 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A&gt;</ph>이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This default value is 1 minute.</source>
          <target state="translated">기본값은 1분입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The following code shows how to implement this method:</source>
          <target state="translated">다음 코드에서는 이 메서드를 구현하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation should throw a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded before the operation is completed.</source>
          <target state="translated">작업을 완료하기 전에 지정된 <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>이 초과된 경우 작업에서 <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>을 throw해야 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 메서드를 호출하여 반환된 <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
          <source>Completes an asynchronous operation to return a message-based response to a transmitted request.</source>
          <target state="translated">전송된 요청에 대해 메시지 기반 응답을 반환하는 비동기 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> received in response to the request.</source>
          <target state="translated">요청에 대한 응답으로 수신된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
          <source>If the request message is larger that the maximum message size allowed by the binding being used, a <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph> is thrown.</source>
          <target state="translated">요청 메시지가 사용되는 바인딩에서 허용하는 최대 메시지 크기보다 크면 <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
          <source>The maximum message size is set by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> property.</source>
          <target state="translated">최대 메시지 크기는 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> 속성에서 설정됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">기본값은 65536 바이트입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
          <source>The following code shows how to implement this method.</source>
          <target state="translated">다음 코드에서는 이 메서드를 구현하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
          <source>Gets the remote address to which the request channel sends messages.</source>
          <target state="translated">요청 채널에서 보내는 메시지를 수신하는 원격 주소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> to which the request channel sends messages.</source>
          <target state="translated">요청 채널에서 보내는 메시지를 수신하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> serves as both the ultimate destination and the physical address if a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Via%2A&gt;</ph> is not specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph>가 지정되지 않은 경우 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Via%2A&gt;</ph>가 최종 대상과 물리적 주소 둘 모두로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Via%2A&gt;</ph> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Via%2A&gt;</ph>가 지정된 경우 이 속성이 메시지를 보낸 실제 물리적 주소이고 이 주소를 통해 메시지가 대상에 도착해야 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
          <source>The following code shows how to implement this property.</source>
          <target state="translated">다음 코드에서는 이 속성을 구현하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IRequestChannel">
          <source>Sends a message-based request and returns the correlated message-based response.</source>
          <target state="translated">메시지 기반 요청을 보내고 상호 관련된 메시지 기반 응답을 반환합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <source>The request <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to be transmitted.</source>
          <target state="translated">전송할 요청 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <source>Sends a message-based request and returns the correlated message-based response.</source>
          <target state="translated">메시지 기반 요청을 보내고 상호 관련된 메시지 기반 응답을 반환합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> received in response to the request.</source>
          <target state="translated">요청에 대한 응답으로 수신된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <source>Implementations of <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> ensure that the response message is correlated with the request message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph>을 구현하면 응답 메시지가 요청 메시지와 상호 관련됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <source>Generally, if an implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> receives a message that is not correlated to an outstanding request, it is dropped.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph>의 구현이 처리 중인 요청과 상호 관련되지 않은 메시지를 수신하면 이 메시지는 손실됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Request%2A&gt;</ph> method can be called concurrently across multiple threads.</source>
          <target state="translated">여러 스레드에서 동시에 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Request%2A&gt;</ph> 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <source>Passing the message into the request channel causes the message to be accessed.</source>
          <target state="translated">메시지를 요청 채널로 전달하면 메시지가 액세스됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <source>After you call <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Request%2A&gt;</ph>, you can no longer inspect the message or call <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.Close%2A&gt;</ph> on the message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Request%2A&gt;</ph>를 호출한 후에는 더 이상 메시지를 검사하거나 메시지에서 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.Close%2A&gt;</ph>를 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <source>If the request message is larger that the maximum message size allowed by the binding being used, a <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph> is thrown.</source>
          <target state="translated">요청 메시지가 사용되는 바인딩에서 허용하는 최대 메시지 크기보다 크면 <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <source>The maximum message size is set by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> property.</source>
          <target state="translated">최대 메시지 크기는 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> 속성에서 설정됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">기본값은 65536 바이트입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <source>The following code shows how to implement this method:</source>
          <target state="translated">다음 코드에서는 이 메서드를 구현하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>The request <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to be transmitted.</source>
          <target state="translated">전송할 요청 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time within which a response must be received.</source>
          <target state="translated">응답을 수신해야 할 시간 간격을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>Sends a message-based request and returns the correlated message-based response within a specified interval of time.</source>
          <target state="translated">메시지 기반 요청을 보내고 지정된 시간 간격 이내에 상호 관련된 메시지 기반 응답을 반환합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> received in response to the request.</source>
          <target state="translated">요청에 대한 응답으로 수신된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>Implementations of <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> ensure that the response message is correlated with the request message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph>을 구현하면 응답 메시지가 요청 메시지와 상호 관련됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>Generally, if an implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> receives a message that is not correlated to an outstanding request, it is dropped.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph>의 구현이 처리 중인 요청과 상호 관련되지 않은 메시지를 수신하면 이 메시지는 손실됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Request%2A&gt;</ph> method can be called concurrently across multiple threads.</source>
          <target state="translated">여러 스레드에서 동시에 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Request%2A&gt;</ph> 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>Passing the message into the request channel causes the message to be accessed.</source>
          <target state="translated">메시지를 요청 채널로 전달하면 메시지가 액세스됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>After you call <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Request%2A&gt;</ph>, you can no longer inspect the message or call <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.Close%2A&gt;</ph> on the message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Request%2A&gt;</ph>를 호출한 후에는 더 이상 메시지를 검사하거나 메시지에서 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.Close%2A&gt;</ph>를 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>If the request message is larger that the maximum message size allowed by the binding being used, a <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph> is thrown.</source>
          <target state="translated">요청 메시지가 사용되는 바인딩에서 허용하는 최대 메시지 크기보다 크면 <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>The maximum message size is set by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> property.</source>
          <target state="translated">최대 메시지 크기는 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> 속성에서 설정됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">기본값은 65536 바이트입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>If a <ph id="ph1">`timeout`</ph> is passed while calling the function then that value is used.</source>
          <target state="translated">함수를 호출하는 동안 <ph id="ph1">`timeout`</ph>이 전달되면 이 값이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.SendTimeout%2A&gt;</ph> is set on the binding, then the value on the binding is used if no <ph id="ph2">`timeout`</ph> is specified while calling the function.</source>
          <target state="translated">바인딩에서 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.SendTimeout%2A&gt;</ph>이 설정된 경우, 함수를 호출하는 동안 <ph id="ph2">`timeout`</ph>이 지정되지 않으면 바인딩의 값이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A&gt;</ph> is used if no timeout is specified on either the binding or while calling the function.</source>
          <target state="translated">바인딩에서 또는 함수 호출 도중에 시간 제한이 지정되지 않으면 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A&gt;</ph>이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>This default value is 1 minute.</source>
          <target state="translated">기본값은 1분입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>The following code shows how to implement this method.</source>
          <target state="translated">다음 코드에서는 이 메서드를 구현하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>The operation should throw a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded before the operation is completed.</source>
          <target state="translated">작업을 완료하기 전에 지정된 <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>이 초과된 경우 작업에서 <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>을 throw해야 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.IRequestChannel.Via">
          <source>Gets the transport address to which the request is send.</source>
          <target state="translated">요청을 수신하는 전송 주소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IRequestChannel.Via">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the transport address to which the message is sent.</source>
          <target state="translated">메시지를 보낼 전송 주소를 포함하는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IRequestChannel.Via">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> serves as both the ultimate destination and the physical address if a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Via%2A&gt;</ph> is not specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph>가 지정되지 않은 경우 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Via%2A&gt;</ph>가 최종 대상과 물리적 주소 둘 모두로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IRequestChannel.Via">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Via%2A&gt;</ph> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel.Via%2A&gt;</ph>가 지정된 경우 이 속성이 메시지를 보낸 실제 물리적 주소이고 이 주소를 통해 메시지가 대상에 도착해야 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IRequestChannel.Via">
          <source>The following code shows how to implement this property.</source>
          <target state="translated">다음 코드에서는 이 속성을 구현하는 방법을 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>