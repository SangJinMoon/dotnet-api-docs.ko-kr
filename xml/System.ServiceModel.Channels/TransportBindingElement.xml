<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TransportBindingElement.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a988e4b736a3e67fe8ab755efe1558f94e491d0d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a988e4b736a3e67fe8ab755efe1558f94e491d0d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.TransportBindingElement">
          <source>An <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> base class that represents a transport binding element.</source>
          <target state="translated">전송 바인딩 요소를 나타내는 <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportBindingElement">
          <source>This class factors out properties that are common to all of the transport binding elements provided by the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</source>
          <target state="translated">이 클래스는 <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>에서 제공하는 모든 전송 바인딩 요소에 공통되는 속성을 모아 놓은 것입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportBindingElement">
          <source>It handles the translation of the base transport settings into run-time manifestations.</source>
          <target state="translated">이 클래스는 기본 전송 설정을 런타임 구현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportBindingElement">
          <source>It delegates the translation of transport-specific settings (for example, HttpProxySettings for HTTP) logic in its concrete derived class transport bindings, which include the following classes:</source>
          <target state="translated">구체적 파생 클래스 전송 바인딩에서 전송별 설정(예: HTTP의 경우 HttpProxySettings) 논리의 변환을 위임합니다. 이러한 바인딩은 다음과 같은 클래스를 포함합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportBindingElement">
          <source>Custom transport binding element developers must inherit from this class, which derives from the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> class.</source>
          <target state="translated">사용자 지정 전송 바인딩 요소 개발자는 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> 클래스에서 파생되는 이 클래스에서 상속해야 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
          <source>Creates a new instance of this class.</source>
          <target state="translated">이 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.TransportBindingElement" /&gt;</ph> to be cloned.</source>
          <target state="translated">복제할 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.TransportBindingElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
          <source>Creates a new instance of this class from an existing instance.</source>
          <target state="translated">기존 인스턴스에서 이 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The property to get.</source>
          <target state="translated">가져올 속성입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Gets a property from the specified <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>에서 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The property from the specified <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>의 속성입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>This method receives a binding context as an input parameter, which represents the stack of binding elements.</source>
          <target state="translated">이 메서드는 바인딩 요소 스택을 나타내는 바인딩 컨텍스트를 입력 매개 변수로 받습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>This method gets the specified object directly, delegates the inquiry to the next lower binding element in the stack, or a combination of the two.</source>
          <target state="translated">이 메서드는 지정된 개체를 직접 가져오거나, 스택에서 다음 하위 바인딩 요소에 조회를 위임하거나, 두 가지 방법을 조합하여 사용합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>It can modify the context if it delegates the inquiry.</source>
          <target state="translated">조회를 위임하는 경우 컨텍스트를 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Each binding element in the stack can repeat this process, if it has been delegated to, until the bottom of the stack is reached.</source>
          <target state="translated">스택에 있는 각 바인딩 요소는 위임된 경우 스택의 맨 아래에 도달할 때까지 이 프로세스를 반복할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The object returned is usually a collection of properties.</source>
          <target state="translated">반환되는 개체는 일반적으로 속성 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If the type of <ph id="ph1">`T`</ph> is <ph id="ph2">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlDictionaryReaderQuotas&gt;</ph>, or <ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageVersion&gt;</ph> then an instance of this class is returned.</source>
          <target state="translated"><ph id="ph1">`T`</ph> 형식이 <ph id="ph2">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlDictionaryReaderQuotas&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageVersion&gt;</ph>이면 이 클래스의 인스턴스가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If the type of <ph id="ph1">`T`</ph> matches the type of an instance in <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingContext.BindingParameters%2A&gt;</ph>, that instance is returned.</source>
          <target state="translated"><ph id="ph1">`T`</ph> 형식이 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingContext.BindingParameters%2A&gt;</ph>의 인스턴스 형식과 일치하면 해당 인스턴스가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>This method is implemented by binding elements as well as by the run-time objects such as <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IChannel&gt;</ph>.</source>
          <target state="translated">이 메서드는 바인딩 요소뿐만 아니라 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IChannel&gt;</ph>과 같은 런타임 개체에 의해서도 구현됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
          <source>Gets or sets a value that indicates whether manual addressing of the message is required.</source>
          <target state="translated">메시지의 주소를 수동으로 지정해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if manual addressing of the message is required; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 필수이 메시지의 수동 주소 지정 하는 경우 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
          <source>This property is usually used in router scenarios, where the application determines which one of several destinations to send a message to.</source>
          <target state="translated">이 속성은 여러 대상 중 어느 대상으로부터 메시지를 받을 것인지를 응용 프로그램에서 결정하는 라우터 시나리오에서 주로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
          <source>If this property is set to <ph id="ph1">`true`</ph>, the channel assumes the message has already been addressed and does not add any additional information.</source>
          <target state="translated">이 속성이 <ph id="ph1">`true`</ph>로 설정되면 채널에서는 메시지에 이미 주소가 지정되었다고 가정하여 더 이상 정보를 추가하지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
          <source>If <ph id="ph1">`false`</ph>, the sending channel applies the <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> configured as the <ph id="ph3">`To`</ph> addressee on the channel to outgoing messages.</source>
          <target state="translated">경우 <ph id="ph1">`false`</ph>, 전송 채널에 적용 되는 <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> 로 구성는 <ph id="ph3">`To`</ph> 보내는 메시지에 대 한 채널에서 받는 사람 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize">
          <source>Gets or sets the maximum size, in bytes, of any buffer pools used by the transport.</source>
          <target state="translated">전송에 사용되는 버퍼 풀의 최대 크기(바이트)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize">
          <source>The maximum size of the buffer pool.</source>
          <target state="translated">버퍼 풀의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize">
          <source>The default is 524,288 bytes.</source>
          <target state="translated">기본값은 524, 288 바이트입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize">
          <source>Many parts of WCF use buffers.</source>
          <target state="translated">WCF의 많은 부분에서 버퍼를 사용합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize">
          <source>Creating and destroying buffers each time they are used is expensive, and garbage collection for buffers is also expensive.</source>
          <target state="translated">버퍼를 사용할 때마다 만들고 제거하면 비용이 많이 들며, 버퍼에 대한 가비지 컬렉션 역시 비용이 많이 듭니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize">
          <source>With buffer pools, you can take a buffer from the pool, use it, and return it to the pool once you are done.</source>
          <target state="translated">버퍼 풀이 있으면 이 풀로부터 버퍼를 가져와 사용한 다음 다시 풀로 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize">
          <source>Thus the overhead in creating and destroying buffers is avoided.</source>
          <target state="translated">따라서 버퍼를 만들고 제거하는 데 오버헤드를 피할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize">
          <source>The downside is that there is an increase in memory usage because your buffers are not getting garbage collected.</source>
          <target state="translated">단, 버퍼가 가비지 수집되지 않기 때문에 메모리 사용량이 증가합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A&gt;</ph> is set to 0, no buffers are returned to the pool, and instead garbage collection begins.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A&gt;</ph> 설정 된 0으로 버퍼가 풀에 반환 되 고 대신 가비지 수집을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
          <source>Gets and sets the maximum allowable message size, in bytes, that can be received.</source>
          <target state="translated">받을 수 있는 최대 메시지 크기(바이트)를 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
          <source>The maximum allowable message size that can be received.</source>
          <target state="translated">받을 수 있는 최대 메시지 크기입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
          <source>The default is 65,536 bytes.</source>
          <target state="translated">기본값은 65,536바이트입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
          <source>This property can counter a hacker scenario where a message is sent with a very large or infinite specified length, or where data is sent continuously to a connected Named Pipe.</source>
          <target state="translated">이 속성은 매우 크거나 길이에 제한이 없는 메시지를 전송하거나, 연결된 명명된 파이프로 데이터가 계속 전송되는 해커 시나리오를 해결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
          <source>Gets the URI scheme for the transport.</source>
          <target state="translated">전송을 위한 URI 체계를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
          <source>Returns the URI scheme for the transport, which varies depending on what derived class implements this method.</source>
          <target state="translated">전송을 위한 URI 체계를 반환하며, 이 메서드를 구현하는 파생 클래스에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
          <source>This is overridden by each concrete transport implementation and is provided to validate bindings against base addresses.</source>
          <target state="translated">구체적인 전송 구현별로 재정의되며 기준 주소에 대한 바인딩 유효성 검사를 위해 제공됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>