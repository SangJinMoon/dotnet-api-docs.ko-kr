<Type Name="TransferSession" FullName="System.ServiceModel.Channels.TransferSession">
  <TypeSignature Language="C#" Value="public enum TransferSession" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TransferSession extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.TransferSession" />
  <TypeSignature Language="VB.NET" Value="Public Enum TransferSession" />
  <TypeSignature Language="C++ CLI" Value="public enum class TransferSession" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="74f25-101">클라이언트에서 응용 프로그램으로 메시지를 전송하기 위한 계약에 세션이 필요한지 여부와 메시지 배달에서 클라이언트가 작업을 호출하는 순서를 유지해야 하는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="74f25-101">Determines if the contract for the transfer of messages from a client to an application requires a session and whether the delivery of messages must preserve the order in which operations are called by the client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74f25-102"><xref:System.ServiceModel.Channels.TransferSession> 열거형은 일반적으로 서비스 계약과 관련하여 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="74f25-102">The <xref:System.ServiceModel.Channels.TransferSession> enumerations are typically used in association with a service contract.</span></span> <span data-ttu-id="74f25-103">클라이언트가 원격 응용 프로그램 또는 서비스에 메시지를 보내 작업을 호출할 때 <xref:System.ServiceModel.Channels.TransferSession>을 사용하여 서비스와 상호 작용하기 위해 세션이 필요한지 및 서비스에서 작업 호출에 사용된 메시지가 보낸 순서와 동일한 순서로 도착해야 하는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="74f25-103">When a client sends messages to a remote application or service to call operations, <xref:System.ServiceModel.Channels.TransferSession> is used to determine if a session is required to interact with the service and whether the messages used to invoke the operations at a service must arrive in the same order in which they were sent.</span></span>  
  
 <span data-ttu-id="74f25-104">클라이언트와 서비스 간에 메시지 배달 시 클라이언트가 작업을 호출한 순서를 유지하려면 세션이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="74f25-104">Message delivery between client and service requires a session to preserve the order in which operations are called by the client.</span></span> <span data-ttu-id="74f25-105">끝점 간에 세션이 없으면 메시지를 보낸 순서가 배달 순서에 반영되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="74f25-105">If there is no session between endpoints, then the delivery order does not reflect the order in which the messages are sent.</span></span>  
  
-   <span data-ttu-id="74f25-106">응용 프로그램에서 사용하는 <xref:System.ServiceModel.Channels.TransferSession>의 값은 응용 프로그램에 호출 시퀀스의 특정 순서가 필요한지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="74f25-106">The value of <xref:System.ServiceModel.Channels.TransferSession> that an application uses specifies whether the application requires a specific order in the calling sequence.</span></span> <span data-ttu-id="74f25-107">정렬 하는 경우 다음 계약 요청 메시지가 전송 되는 순서로 도착 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="74f25-107">If Ordered, then the contract requires that messages must arrive in the order in which they are sent.</span></span>  
  
-   <span data-ttu-id="74f25-108">경우 순서 지정 안 됨, 다음 public 연산 호출에 사용 되는 메시지는 어떤 순서로 든 도착할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74f25-108">If Unordered, then the messages used to invoke public operations can arrive in any order.</span></span>  
  
 <span data-ttu-id="74f25-109">None 인 경우에 세션이.</span><span class="sxs-lookup"><span data-stu-id="74f25-109">If None, there are no sessions.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.TransferSession None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.TransferSession.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TransferSession</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="74f25-110">이 계약에 서비스와 상호 작용하기 위한 세션이 필요 없음을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="74f25-110">Specifies that a session is not required to interact with the services on this contract.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Ordered">
      <MemberSignature Language="C#" Value="Ordered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.TransferSession Ordered = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.TransferSession.Ordered" />
      <MemberSignature Language="VB.NET" Value="Ordered" />
      <MemberSignature Language="C++ CLI" Value="Ordered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TransferSession</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="74f25-111">서비스와 상호 작용하기 위해 메시지가 순서대로 배달되도록 보증하는 세션이 이 계약에 필요함을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="74f25-111">Specifies that a session with ordered message delivery guarantees is required to interact with the services on this contract.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unordered">
      <MemberSignature Language="C#" Value="Unordered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.TransferSession Unordered = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.TransferSession.Unordered" />
      <MemberSignature Language="VB.NET" Value="Unordered" />
      <MemberSignature Language="C++ CLI" Value="Unordered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TransferSession</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="74f25-112">이 계약에 서비스와 상호 작용하기 위해 메시지가 순서 없이 배달되도록 하는 세션으로 충분함을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="74f25-112">Specifies that a session with unordered message delivery guarantees is sufficient to interact with the services on this contract.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>