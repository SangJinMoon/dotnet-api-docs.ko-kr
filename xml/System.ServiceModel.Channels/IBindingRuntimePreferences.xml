<Type Name="IBindingRuntimePreferences" FullName="System.ServiceModel.Channels.IBindingRuntimePreferences">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32e96da17ebc5c5d535108321675efc9526b07e7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37461074" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type IBindingRuntimePreferences = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="04d57-101">서비스에서 들어오는 요청을 동기적으로 처리하는지 아니면 비동기 적으로 처리하는지를 지정하기 위해 바인딩에서 구현할 수 있는 선택적 계약을 정의합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="04d57-101">Defines the optional contract that a binding can implement to specify whether incoming requests are handled synchronously or asynchronously by the service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04d57-102">바인딩에서 동기 버전의 <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> 또는 <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> 메서드를 사용하여 메시지를 처리하는 것이 더 효과적인 경우도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04d57-102">In some cases it may be more efficient for a binding to process messages with the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods.</span></span> <span data-ttu-id="04d57-103"><xref:System.ServiceModel.Channels.Binding> 클래스는 호출자에게 기본 설정을 나타내기 위해 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>를 선택적으로 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04d57-103">A <xref:System.ServiceModel.Channels.Binding> class can optionally implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> to indicate to callers that this is preferred.</span></span>  
  
 <span data-ttu-id="04d57-104">바인딩을 구현 하지 않는 경우 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, 기본적으로 Windows Communication Foundation (WCF) 서비스 모델 런타임 계층에서 비동기 버전을 사용 합니다 `Receive` 및 `Request` 메서드.</span><span class="sxs-lookup"><span data-stu-id="04d57-104">If a binding does not implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, the Windows Communication Foundation (WCF) Service Model Runtime layer defaults to using the asynchronous versions of the `Receive` and `Request` methods.</span></span> <span data-ttu-id="04d57-105">바인딩을 구현 하는 경우 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>의 값을 확인 하는 WCF 서비스 모델 런타임 계층 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> 및 다음의 동기 버전을 호출 여부를 결정 하는 메서드 (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> 또는 <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) 또는 비동기 버전 (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> 하 고 <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> 하거나 <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> 고 <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>입니다.</span><span class="sxs-lookup"><span data-stu-id="04d57-105">If a binding does implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, the WCF Service Model Runtime layer checks the value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> and uses that to determine whether to call the synchronous versions of the these methods (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) or the asynchronous versions (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.</span></span> <span data-ttu-id="04d57-106">바인딩에서 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>를 구현하고 `true` 속성에서 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>를 반환하는 경우 동기 버전의 <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> 및 <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> 메서드를 사용하여 채널로부터 메시지를 수신하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="04d57-106">If <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> is implemented by the binding and returns `true` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods to receive messages from the channel.</span></span> <span data-ttu-id="04d57-107">바인딩에서 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>를 구현하지 않거나 `false` 속성에서 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>를 반환하는 경우 비동기 버전의 <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> 및 <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> 또는 <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> 및 <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> 메서드를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="04d57-107">If the binding does not implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> or returns `false` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> methods.</span></span>  
  
 <span data-ttu-id="04d57-108"><xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> 속성이 반환하는 값에 관계없이 모든 바인딩은 구현된 특정 채널 형식에 유효한 동기 및 비동기 버전 `Receive` 메서드 구현을 제공해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04d57-108">Regardless of the value returned by the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, all bindings must still provide valid implementations of both the synchronous and asynchronous versions of the `Receive` methods for the specific channel types implemented.</span></span> <span data-ttu-id="04d57-109">사용자 지정 채널을 구현 하는 방법에 대 한 자세한 내용은 참조 하세요. [개발 채널](~/docs/framework/wcf/extending/developing-channels.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04d57-109">For more information about implementing custom channels, see [Developing Channels](~/docs/framework/wcf/extending/developing-channels.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04d57-110">다음 예제에서는 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> 인터페이스를 구현하는 바인딩 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04d57-110">The following example shows the implementation of a binding that implements the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> interface.</span></span> <span data-ttu-id="04d57-111">이 코드에서 수행 되는 [청크 채널](~/docs/framework/wcf/samples/chunking-channel.md) 샘플:</span><span class="sxs-lookup"><span data-stu-id="04d57-111">This code is taken from the [Chunking Channel](~/docs/framework/wcf/samples/chunking-channel.md) sample:</span></span>  
  
 [!code-csharp[S_UE_ChunkingChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveSynchronously : bool" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04d57-112">들어오는 요청을 동기적으로 처리하는 것이 효과적인지 아니면 비동기적으로 처리하는 것이 효과적인지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04d57-112">Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04d57-113">
            <see langword="true" /> 요청을 동기적으로 보다 효율적으로 처리할 수 있는 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04d57-113">
              <see langword="true" /> if requests can be handled more efficiently synchronously; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="04d57-114">기본값은 <see langword="false" />로, 요청을 비동기적으로 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04d57-114">The default is <see langword="false" />, to handle requests asynchronously.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04d57-115">Windows Communication Foundation (WCF)에서 제공 하는 표준 (시스템 제공) 바인딩이이 인터페이스를 구현 하 고 경우에 따라 들어오는 메시지를 동기적으로 처리 하도록 기본값을 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="04d57-115">The standard (system-provided) bindings provided by Windows Communication Foundation (WCF) have implemented this interface and in some cases override the default value to process incoming messages synchronously.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChunkingChannel#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>