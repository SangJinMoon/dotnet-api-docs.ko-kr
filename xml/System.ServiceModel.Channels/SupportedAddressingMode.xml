<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1543cde8dbf5d2afa103db8cd8285b3cfad2e0dd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36620403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <TypeSignature Language="F#" Value="type SupportedAddressingMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="e344a-101">서비스에서 익명 주소에 대해서만 응답을 보내는지, 익명이 아닌 주소에 대해서만 응답을 보내는지 또는 둘 모두에 대해 응답을 보내는지를 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e344a-101">Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e344a-102">이 열거형은 서버의 기능을 지정하는 데 사용되며 여기에는 클라이언트에 대한 요구 사항도 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-102">This enumeration is used to specify the capability of a server, which, in turn, imposes a requirement on its clients.</span></span>  
  
 <span data-ttu-id="e344a-103">Windows Communication Foundation (WCF)에 다양 한 메시지를 보내도록 지정 하기 위한 주소 지정 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-103">Windows Communication Foundation (WCF) has a variety of addressing controls for specifying where messages should be sent.</span></span> <span data-ttu-id="e344a-104">예를 들어, 메시지 대상의 논리적 <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> 주소, 전송에 사용되고 서비스에서 수신 대기하는 물리적("Via") 주소, 클라이언트 끝점의 주소를 제공하는 끝점의 <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> 주소 등이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-104">For example, there is the logical <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> address for the message destination, the physical ("Via") address, used by the transport, at which a service listens, and the <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> address of the endpoint that provides the address of the client endpoint.</span></span>  
  
 <span data-ttu-id="e344a-105">가장 기본적인 경우, 양쪽 당사자 간에 메시지를 교환할 때에는 이러한 주소를 별도로 지정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-105">In the most basic case, when two parties exchange messages between themselves only, it is not necessary to specify these addresses separately.</span></span> <span data-ttu-id="e344a-106">그러나 다른 메시지 대상과의 교환이 이루어질 수도 있기 때문에 주소를 명시적으로 제공해야 할 때 이를 지정할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-106">But because exchanges can involve other message destinations, you must be able to specify when addresses must be explicitly provided.</span></span> <span data-ttu-id="e344a-107">서버에서 HTTP 요청을 직접 생성해야 하는 양방향 HTTP의 경우처럼 두 대상 간에도 이 기능이 필요한 경우가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-107">Even between just two parties this ability is sometimes required, as with dual HTTP where the server must create its own HTTP request.</span></span> <span data-ttu-id="e344a-108"><xref:System.ServiceModel.Channels.SupportedAddressingMode> 열거형은 이러한 메시징 패턴을 얻기 위해 다음과 같은 유형의 관계를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-108">The following kinds of relationships are defined by the <xref:System.ServiceModel.Channels.SupportedAddressingMode> enumeration to capture these messaging patterns:</span></span>  
  
-   <span data-ttu-id="e344a-109">익명 주소는 주소 지정의 가장 기본적인 형태입니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-109">Anonymous addresses are the most basic form of addressing.</span></span> <span data-ttu-id="e344a-110">익명 주소 지정은 응답에 대한 기본 경로가 있을 때 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-110">Anonymous addressing is used when there is a default path for a response.</span></span> <span data-ttu-id="e344a-111">TCP는 양방향 통신 전송이며, 원본 메시지를 보낸 소켓의 다른 쪽에 TCP 메시지에 대한 응답을 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-111">TCP is a bi-directional communication transport and the response to a TCP message can be sent back to the other side of the socket that sent the original message.</span></span> <span data-ttu-id="e344a-112">마찬가지로 HTTP의 요청-회신 모델은 HTTP 회신 채널을 통해 응답을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-112">Similarly, the request-reply model of HTTP sends responses through the HTTP reply channel.</span></span> <span data-ttu-id="e344a-113">이러한 응답에서는 응답 메시지의 전송 대상을 지정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-113">Neither of these responses requires specifying where the response messages are going.</span></span> <span data-ttu-id="e344a-114">서버는 클라이언트의 익명 응답이 필요한 경우 열거형의 익명 값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-114">When a server requires anonymous responses from the client, it uses the Anonymous value of the enumeration.</span></span> <span data-ttu-id="e344a-115">시스템에서 제공 하는 WCF <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> 및 <xref:System.ServiceModel.WSHttpBinding> 바인딩이 항상 익명 주소를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-115">The WCF system-provided <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> and <xref:System.ServiceModel.WSHttpBinding> bindings always use Anonymous addresses.</span></span>  
  
-   <span data-ttu-id="e344a-116">익명이 아닌 주소는 통신을 위한 새 채널을 만들어야 응답을 보낼 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-116">NonAnonymous addresses are used when sending the response requires creating a new channel for communication.</span></span> <span data-ttu-id="e344a-117">시스템에서 제공 하는 WCF <xref:System.ServiceModel.WSDualHttpBinding> 바인딩 익명이 아닌 주소를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-117">The WCF system-provided <xref:System.ServiceModel.WSDualHttpBinding> binding uses a NonAnonymous address.</span></span> <span data-ttu-id="e344a-118">양방향 HTTP에서 클라이언트가 HTTP 요청을 생성하여 메시지를 보내면, 서버에서는 HTTP 요청을 직접 생성하여 응답을 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-118">With dual HTTP, the client creates an HTTP request to send a message and then the server must create its own HTTP request to send a response.</span></span> <span data-ttu-id="e344a-119">서버에서는 보내기 작업을 시작하기 때문에 연결이 설정된 특정 끝점이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-119">Because the server is initiating the send, it must have a specific endpoint to establish the connection.</span></span> <span data-ttu-id="e344a-120">따라서 응답을 위한 끝점 주소를 서버에 제공해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-120">You must provide the server the address of an endpoint for its response.</span></span> <span data-ttu-id="e344a-121">마찬가지로, 서비스를 받아서 단방향 메시지에 응답 해야 하는 경우 해야는 NonAnonymous 통신에 사용할 수 있는 채널이 있기 때문에 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-121">Similarly, if a service must respond to a one-way message that it received, it also requires a NonAnonymous address because there is no back channel available for communication.</span></span> <span data-ttu-id="e344a-122">서버에서 메시지를 돌려 보내는 경우 첫 번째 메시지를 보내는 데 사용된 작업과 완전히 다른 별도의 작업을 수행해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-122">If the server sends a message back, a completely separate operation from that used to send the first message is required.</span></span>  
  
-   <span data-ttu-id="e344a-123">혼합 전송 중인 메시지에 따라 익명 및 NonAnonymous 주소를 결합 하 여 주소를 지정 하는 세 번째 형태의입니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-123">Mixed is a third form of addressing which combines Anonymous and NonAnonymous addresses depending on the message that is being sent.</span></span> <span data-ttu-id="e344a-124">혼합 모드 주소 지정의 일반적인 예로 전용 시스템을 사용한 오류 또는 승인 메시지 처리를 들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-124">A typical example of mixed-mode addressing is the use of a dedicated machine for processing fault or acknowledgment messages.</span></span> <span data-ttu-id="e344a-125">회신에 대 한 표준 교환 시퀀스가 HTTP 또는 TCP 인 경우 익명 주소 지정을 사용 하 여 응답 하지만 오류가 발생 하는 익명이 아닌 주소 지정을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-125">If the standard exchange sequence for replies is HTTP or TCP, the responses use Anonymous addressing but the faults use non-anonymous addressing.</span></span> <span data-ttu-id="e344a-126">서비스 또는 별도 채널에서 회신 채널 (응답 주소가 익명 때)에 직접 응답을 보낼 수 있도록 채널을 작성할 수는 WCF 혼합 주소 지정 표준 바인딩 중 하나에 기능을 제공 하지 않습니다 (때 응답 주소는 NonAnonymous)입니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-126">While WCF does not provide Mixed addressing functionality in one of its standard bindings, it is possible to write a channel that allows the service to send responses directly on the back-channel (when the response address is Anonymous) or on a separate channel (when the response address is NonAnonymous).</span></span> <span data-ttu-id="e344a-127">이 경우 채널의 바인딩 요소 설정 하는 데 사용 <xref:System.ServiceModel.Channels.SupportedAddressingMode> Mixed로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e344a-127">In such a case, the binding element of the channel is used to set <xref:System.ServiceModel.Channels.SupportedAddressingMode> to Mixed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberSignature Language="F#" Value="Anonymous = 0" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e344a-128">서버는 익명 주소만 지원하며, 클라이언트는 익명 응답 주소를 제공해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e344a-128">The server only supports anonymous addresses and clients must provide an anonymous response address.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberSignature Language="F#" Value="Mixed = 2" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e344a-129">서버는 익명 주소와 익명이 아닌 주소를 모두 지원하며, 클라이언트는 두 주소 중 하나 또는 모두를 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e344a-129">The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberSignature Language="F#" Value="NonAnonymous = 1" Usage="System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e344a-130">서버는 익명이 아닌 주소만 지원하며, 클라이언트는 익명이 아닌 응답 주소를 제공해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e344a-130">The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>