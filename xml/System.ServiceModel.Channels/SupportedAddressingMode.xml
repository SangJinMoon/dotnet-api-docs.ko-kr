<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SupportedAddressingMode.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52e96bbd9b4b430691aed6a16a4a3b6015bec77b8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e96bbd9b4b430691aed6a16a4a3b6015bec77b8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</source>
          <target state="translated">서비스에서 익명 주소에 대해서만 응답을 보내는지, 익명이 아닌 주소에 대해서만 응답을 보내는지 또는 둘 모두에 대해 응답을 보내는지를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>This enumeration is used to specify the capability of a server, which, in turn, imposes a requirement on its clients.</source>
          <target state="translated">이 열거형은 서버의 기능을 지정하는 데 사용되며 여기에는 클라이언트에 대한 요구 사항도 포함됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> has a variety of addressing controls for specifying where messages should be sent.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>에는 메시지를 보낼 위치를 지정하는 다양한 주소 지정 제어 방법이 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>For example, there is the logical <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph> address for the message destination, the physical ("Via") address, used by the transport, at which a service listens, and the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A&gt;</ph> address of the endpoint that provides the address of the client endpoint.</source>
          <target state="translated">예를 들어, 메시지 대상의 논리적 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph> 주소, 전송에 사용되고 서비스에서 수신 대기하는 물리적("Via") 주소, 클라이언트 끝점의 주소를 제공하는 끝점의 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A&gt;</ph> 주소 등이 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>In the most basic case, when two parties exchange messages between themselves only, it is not necessary to specify these addresses separately.</source>
          <target state="translated">가장 기본적인 경우, 양쪽 당사자 간에 메시지를 교환할 때에는 이러한 주소를 별도로 지정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>But because exchanges can involve other message destinations, you must be able to specify when addresses must be explicitly provided.</source>
          <target state="translated">그러나 다른 메시지 대상과의 교환이 이루어질 수도 있기 때문에 주소를 명시적으로 제공해야 할 때 이를 지정할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Even between just two parties this ability is sometimes required, as with dual HTTP where the server must create its own HTTP request.</source>
          <target state="translated">서버에서 HTTP 요청을 직접 생성해야 하는 양방향 HTTP의 경우처럼 두 대상 간에도 이 기능이 필요한 경우가 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>The following kinds of relationships are defined by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SupportedAddressingMode&gt;</ph> enumeration to capture these messaging patterns:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.SupportedAddressingMode&gt;</ph> 열거형은 이러한 메시징 패턴을 얻기 위해 다음과 같은 유형의 관계를 정의합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Anonymous addresses are the most basic form of addressing.</source>
          <target state="translated">익명 주소는 주소 지정의 가장 기본적인 형태입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Anonymous addressing is used when there is a default path for a response.</source>
          <target state="translated">익명 주소 지정은 응답에 대한 기본 경로가 있을 때 사용됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>TCP is a bi-directional communication transport and the response to a TCP message can be sent back to the other side of the socket that sent the original message.</source>
          <target state="translated">TCP는 양방향 통신 전송이며, 원본 메시지를 보낸 소켓의 다른 쪽에 TCP 메시지에 대한 응답을 보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Similarly, the request-reply model of HTTP sends responses through the HTTP reply channel.</source>
          <target state="translated">마찬가지로 HTTP의 요청-회신 모델은 HTTP 회신 채널을 통해 응답을 보냅니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Neither of these responses requires specifying where the response messages are going.</source>
          <target state="translated">이러한 응답에서는 응답 메시지의 전송 대상을 지정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>When a server requires anonymous responses from the client, it uses the Anonymous value of the enumeration.</source>
          <target state="translated">서버는 클라이언트의 익명 응답이 필요한 경우 열거형의 익명 값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>The <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> system-provided <ph id="ph2">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> bindings always use Anonymous addresses.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 시스템 제공 <ph id="ph2">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> 바인딩이 항상 익명 주소를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>NonAnonymous addresses are used when sending the response requires creating a new channel for communication.</source>
          <target state="translated">익명이 아닌 주소는 통신을 위한 새 채널을 만들어야 응답을 보낼 때 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>The <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> system-provided <ph id="ph2">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph> binding uses a NonAnonymous address.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 시스템 제공 <ph id="ph2">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph> 바인딩 익명이 아닌 주소를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>With dual HTTP, the client creates an HTTP request to send a message and then the server must create its own HTTP request to send a response.</source>
          <target state="translated">양방향 HTTP에서 클라이언트가 HTTP 요청을 생성하여 메시지를 보내면, 서버에서는 HTTP 요청을 직접 생성하여 응답을 보내야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Because the server is initiating the send, it must have a specific endpoint to establish the connection.</source>
          <target state="translated">서버에서는 보내기 작업을 시작하기 때문에 연결이 설정된 특정 끝점이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>You must provide the server the address of an endpoint for its response.</source>
          <target state="translated">따라서 응답을 위한 끝점 주소를 서버에 제공해야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Similarly, if a service must respond to a one-way message that it received, it also requires a NonAnonymous address because there is no back channel available for communication.</source>
          <target state="translated">마찬가지로, 서비스를 받아서 단방향 메시지에 응답 해야 하는 경우 해야는 NonAnonymous 통신에 사용할 수 있는 채널이 있기 때문에 해결 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>If the server sends a message back, a completely separate operation from that used to send the first message is required.</source>
          <target state="translated">서버에서 메시지를 돌려 보내는 경우 첫 번째 메시지를 보내는 데 사용된 작업과 완전히 다른 별도의 작업을 수행해야 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Mixed is a third form of addressing which combines Anonymous and NonAnonymous addresses depending on the message that is being sent.</source>
          <target state="translated">혼합 전송 중인 메시지에 따라 익명 및 NonAnonymous 주소를 결합 하 여 주소를 지정 하는 세 번째 형태의입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>A typical example of mixed-mode addressing is the use of a dedicated machine for processing fault or acknowledgment messages.</source>
          <target state="translated">혼합 모드 주소 지정의 일반적인 예로 전용 시스템을 사용한 오류 또는 승인 메시지 처리를 들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>If the standard exchange sequence for replies is HTTP or TCP, the responses use Anonymous addressing but the faults use non-anonymous addressing.</source>
          <target state="translated">회신에 대 한 표준 교환 시퀀스가 HTTP 또는 TCP 인 경우 익명 주소 지정을 사용 하 여 응답 하지만 오류가 발생 하는 익명이 아닌 주소 지정을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>While <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> does not provide Mixed addressing functionality in one of its standard bindings, it is possible to write a channel that allows the service to send responses directly on the back-channel (when the response address is Anonymous) or on a separate channel (when the response address is NonAnonymous).</source>
          <target state="translated">반면 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 혼합을 제공 하지 않는 주소 지정 표준 바인딩 중 하나에 기능, 서비스에서 회신 채널 (응답 주소가 익명 때) 또는 별도 직접 응답을 보낼 수 있도록 채널을 작성할 수는 채널 (응답 주소가 NonAnonymous 때).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>In such a case, the binding element of the channel is used to set <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SupportedAddressingMode&gt;</ph> to Mixed.</source>
          <target state="translated">이 경우 채널의 바인딩 요소 설정 하는 데 사용 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SupportedAddressingMode&gt;</ph> Mixed로 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous">
          <source>The server only supports anonymous addresses and clients must provide an anonymous response address.</source>
          <target state="translated">서버는 익명 주소만 지원하며, 클라이언트는 익명 응답 주소를 제공해야 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed">
          <source>The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</source>
          <target state="translated">서버는 익명 주소와 익명이 아닌 주소를 모두 지원하며, 클라이언트는 두 주소 중 하나 또는 모두를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous">
          <source>The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</source>
          <target state="translated">서버는 익명이 아닌 주소만 지원하며, 클라이언트는 익명이 아닌 응답 주소를 제공해야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>