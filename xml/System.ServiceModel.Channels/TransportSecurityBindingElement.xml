<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TransportSecurityBindingElement.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5592249896269cc09b133eee81cb13ae71f92cce2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">592249896269cc09b133eee81cb13ae71f92cce2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Represents a custom binding element that supports mixed-mode security (such as, optimized message security over a secure transport).</source>
          <target state="translated">혼합 모드 보안을 지원하는 사용자 지정 바인딩 요소를 나타냅니다(예: 보안 전송을 통해 최적화된 메시지 보안).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>A custom binding contains a collection of binding elements arranged in a specific order: the element that represents the top of the binding stack is added first, the next element down in the binding stack is added second, and so forth.</source>
          <target state="translated">사용자 지정 바인딩에는 특정 순서로 정렬된 바인딩 요소 컬렉션이 포함됩니다. 바인딩 스택의 최상위를 나타내는 요소가 가장 먼저 추가되고, 그 다음 요소가 두 번째로 추가되며 나머지 요소도 차례대로 추가됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>To add this class to a binding</source>
          <target state="translated">바인딩에 이 클래스를 추가하려면</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Create a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Create custom binding elements that will be above this binding element in the binding stack, such as the optional <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransactionFlowBindingElement&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement&gt;</ph>.</source>
          <target state="translated">선택적인 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransactionFlowBindingElement&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement&gt;</ph>처럼 바인딩 스택에서 이 바인딩 요소의 위에 오는 사용자 지정 바인딩 요소를 만듭니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Add these elements in the previously mentioned order to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph> using the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph> 메서드를 사용하여 이러한 요소를 앞에서 설명한 순서대로 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%2A&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Create an instance of <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportSecurityBindingElement&gt;</ph> and add it to the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportSecurityBindingElement&gt;</ph>의 인스턴스를 만들어 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Add any additional custom binding elements to the collection, such as <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TcpTransportBindingElement&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.TcpTransportBindingElement&gt;</ph>와 같은 추가 사용자 지정 바인딩 요소를 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> Once an instance of this object is created, you should treat the properties of its base class, <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph>, as immutable.</source>
          <target state="translated"><bpt id="p1">**</bpt>참고<ept id="p1">**</ept> 해당 기본 클래스의 속성을 처리 해야이 개체의 인스턴스를 만든 후 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph>변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Calling <ph id="ph1">`set`</ph> on some properties may have unpredictable effects: the binding may behave as if the property retained its old value, with a run-time failure being the only indication of an issue.</source>
          <target state="translated">일부 속성에서 <ph id="ph1">`set`</ph>를 호출하면 의도하지 않은 결과가 발생하여 바인딩이 이전 속성 값을 가진 것처럼 동작하고 겉으로는 런타임 오류만 발생합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Two properties known to behave this way are <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A&gt;</ph>.</source>
          <target state="translated">이렇게 동작하는 것으로 알려진 속성에는 <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType%2A&gt;</ph> 속성과 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A&gt;</ph> 속성이 있으며,</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>There may be other properties for which this is true.</source>
          <target state="translated">다른 속성도 해당될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.#ctor">
          <source>Creates an instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /&gt;</ph> 클래스의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> object initialized from the current class.</source>
          <target state="translated">현재 클래스에서 초기화되는 새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> object with property values equal to those of the current instance.</source>
          <target state="translated">현재 인스턴스와 속성 값이 동일한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>This creates a complete copy of the current binding element object tree, also called a deep clone.</source>
          <target state="translated">이 메서드는 현재 바인딩 요소 개체 트리의 전체 복사본을 만듭니다. 이를 전체 복제라고도 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
          <target state="translated">이와 반대로 개체의 전체 복제는 개체와, 개체에서 직접 또는 간접 참조하는 모든 대상을 복사합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>(This can also be described as copying the entire object graph.) Returning a deep clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</source>
          <target state="translated">이를 가리켜 전체 개체 그래프를 복사한다고도 합니다. 전체 복제를 반환하면 런타임에서 여러 개의 사용자 지정 바인딩이 하나의 사용자 지정 바인딩 요소를 공유할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>If a deep clone is not returned, the run-time behavior is undefined.</source>
          <target state="translated">전체 복제가 반환되지 않으면 런타임 동작이 정의되지 않습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>A shallow clone of an object, by contrast, is a copy of the object only.</source>
          <target state="translated">반대로 개체의 단순 복제는 개체만 복사합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</source>
          <target state="translated">개체에 다른 개체에 대한 참조가 포함된 경우 단순 복사는 참조된 개체의 복사본을 만들지 않고 대신 원본 개체에 대한 참조만 복사합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The property to get.</source>
          <target state="translated">가져올 속성입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Gets a property from the specified <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>에서 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The property from the specified <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the object is not found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>의 속성이거나, 개체를 찾을 수 없는 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>This method gets the specified object from the base class or from one of that class's ancestors.</source>
          <target state="translated">@FSHO1@이 메서드는 기본 클래스 또는 기본 클래스의 부모 중 하나에서 지정한 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The object returned is usually a collection of properties, for example an object that implements <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ISecurityCapabilities&gt;</ph>.</source>
          <target state="translated">반환된 개체는 일반적으로 속성 컬렉션입니다(예: <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ISecurityCapabilities&gt;</ph>를 구현하는 개체).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph> that you can use to modify the exporting process.</source>
          <target state="translated">내보내기 프로세스를 수정하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph> that you can use to insert your custom policy assertion.</source>
          <target state="translated">사용자 지정 정책 어설션을 삽입하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Exports a custom policy assertion about bindings.</source>
          <target state="translated">바인딩에 대한 사용자 지정 정책 어설션을 내보냅니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> to communicate to clients the existence of this custom binding element in the binding stack.</source>
          <target state="translated">이 메서드는 특정 계약에 따라 공개되는 WSDL 정보에 바인딩 관련 문을 쓰며, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>에서 바인딩 스택에 사용자 지정 바인딩 요소가 있음을 클라이언트에게 알리는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>This method takes two parameters: the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> objects.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> 개체와 <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> 개체라는 두 가지 매개 변수를 사용합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods to obtain collections of policy assertions that have already been exported at various scopes.</source>
          <target state="translated">다양한 범위에서 이미 내보낸 정책 어설션 컬렉션을 가져오려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Then use this method to add your own policy assertions to the appropriate collection.</source>
          <target state="translated">그런 다음 이 메서드를 사용하여 적절한 컬렉션에 해당 정책 어설션을 추가합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;</ph> property exposes the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> for the endpoint that is being exported.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;</ph> 속성은 내보낼 끝점에 대한 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph>을 공개합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>This allows this method to correctly scope their exported policy assertions.</source>
          <target state="translated">이를 통해 이 메서드는 내보낸 정책 어설션의 범위를 정확하게 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>For example, security attributes in code may add behaviors to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> that indicate where security policy assertions should be added.</source>
          <target state="translated">예를 들어, 코드의 보안 특성을 사용하여 보안 정책 어설션을 추가할 위치를 나타내는 동작을 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph>에 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> interface.</source>
          <target state="translated">WSDL 정보에 사용자 지정 정책 어설션을 연결하면 클라이언트에서 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> 인터페이스를 구현하여 사용자 지정 바인딩 어설션을 감지하고 가져올 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>