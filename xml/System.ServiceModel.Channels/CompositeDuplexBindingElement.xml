<Type Name="CompositeDuplexBindingElement" FullName="System.ServiceModel.Channels.CompositeDuplexBindingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7b263b3dac170461c886d1e930a49f82f6f9ed3d" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CompositeDuplexBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompositeDuplexBindingElement extends System.ServiceModel.Channels.BindingElement implements class System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompositeDuplexBindingElement&#xA;Inherits BindingElement&#xA;Implements IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeDuplexBindingElement sealed : System::ServiceModel::Channels::BindingElement, System::ServiceModel::Description::IPolicyExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="a57c7-101">서비스에서 클라이언트에 메시지를 돌려 보낼 수 있도록 클라이언트가 서비스에 대한 끝점을 공개해야 할 때 사용되는 바인딩 요소를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a57c7-101">Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a57c7-102">이 클래스는 HTTP와 같이 기본적으로 양방향 통신을 허용하지 않는 전송에 일반적으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-102">This is commonly used with transports, such as HTTP, that do not allow duplex communications natively.</span></span> <span data-ttu-id="a57c7-103">그에 반해 TCP는 기본적으로 양방향 통신을 허용하므로, 이 바인딩 요소를 사용하지 않더라도 서비스에서 클라이언트로 회신 메시지를 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-103">TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.</span></span>  
  
 <span data-ttu-id="a57c7-104">서비스가 클라이언트로 연결을 설정하려면 클라이언트가 연결 가능한 주소를 공개해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-104">The client must expose an address at which the service can contact it to establish a connection from the service to the client.</span></span> <span data-ttu-id="a57c7-105">이 클라이언트 주소는 <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> 속성을 사용하여 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-105">This client address is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> property.</span></span> <span data-ttu-id="a57c7-106">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]에서는 <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>를 사용자가 명시적으로 설정하지 않은 경우 자동으로 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-106">Note that [!INCLUDE[indigo1](~/includes/indigo1-md.md)] auto-generates a <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> if one is not explicitly set by the user.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeDuplexBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeDuplexBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a57c7-107">
            <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="a57c7-108">팩터리에서 생성하는 <see cref="T:System.ServiceModel.Channels.IChannel" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-108">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the factory produces.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="a57c7-109">채널 팩터리를 생성하는 데 필요한 컨텍스트를 제공하는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-109">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel factory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a57c7-110">복합 이중 채널을 만들 수 있는 채널 팩터리를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-110">Returns a channel factory that can create a composite duplex channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a57c7-111">
            <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> 형식의 복합 이중 채널을 만드는 <paramref name="TChannel" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-111">A <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> that creates a composite duplex channel of type <paramref name="TChannel" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a57c7-112">빌드 컨텍스트에서는 <xref:System.ServiceModel.Channels.IOutputChannel>에 대한 `TChannel`이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-112">The build context requires an <xref:System.ServiceModel.Channels.IOutputChannel> for the `TChannel`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a57c7-113">
            <paramref name="context" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-113">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a57c7-114">
            <paramref name="TChannel" />이 <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> 형식이 아니고 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-114">The <paramref name="TChannel" /> is not of type <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> and is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="a57c7-115">수신기에서 수락하는 <see cref="T:System.ServiceModel.Channels.IChannel" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-115">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the listener accepts.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="a57c7-116">채널 수신기를 생성하는 데 필요한 컨텍스트를 제공하는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-116">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a57c7-117">복합 이중 채널을 수락할 수 있는 채널 수신기를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-117">Returns a channel listener that can accept a composite duplex channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a57c7-118">
            <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 형식의 복합 이중 채널을 수락하는 <paramref name="TChannel" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-118">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> that accepts a composite duplex channel of type <paramref name="TChannel" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a57c7-119">빌드 컨텍스트에서는 <xref:System.ServiceModel.Channels.IInputChannel>에 대한 `TChannel`이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-119">The build context requires an <xref:System.ServiceModel.Channels.IInputChannel> for the `TChannel`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a57c7-120">
            <paramref name="context" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-120">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a57c7-121">
            <paramref name="TChannel" />이 <see cref="T:System.ServiceModel.Channels.IInputChannel" /> 형식이 아니고 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-121">The <paramref name="TChannel" /> is not of type <see cref="T:System.ServiceModel.Channels.IInputChannel" /> and is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="a57c7-122">채널 팩터리가 생성하는 <see cref="T:System.ServiceModel.Channels.IChannel" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-122">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the channel factory produces.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="a57c7-123">채널 수신기를 생성하는 데 필요한 컨텍스트를 제공하는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-123">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a57c7-124">바인딩이 컨텍스트 요구 사항을 충족하는 특정 채널 형식을 생성하는 채널 팩터리를 만들 수 있는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-124">Returns a value that indicates whether the binding can build the channel factory that produces a specific type of channel that satisfies the context requirements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a57c7-125">바인딩에서 채널 팩터리를 생성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-125">
              <see langword="true" /> if the binding can build the channel factory; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a57c7-126">`true` 경우 `TChannel`  ==  <xref:System.ServiceModel.Channels.IOutputChannel> 고 내부 바인딩이 생성할 수 <xref:System.ServiceModel.Channels.IOutputChannel>, 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-126">`true` if `TChannel` == <xref:System.ServiceModel.Channels.IOutputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IOutputChannel>; otherwise, `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a57c7-127">
            <paramref name="context" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-127">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="a57c7-128">수신기에서 수락하는 <see cref="T:System.ServiceModel.Channels.IChannel" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-128">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the listener accepts.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="a57c7-129">채널 수신기를 생성하는 데 필요한 컨텍스트를 제공하는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-129">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a57c7-130">바인딩이 컨텍스트 요구 사항을 충족하는 특정 채널 형식을 수락하는 채널 수신기를 생성할 수 있는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-130">Returns a value that indicates whether the binding can build the channel listener that accepts a specific type of channel that satisfies the context requirements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a57c7-131">지정된 채널 형식을 수락하는 데 필요한 채널 수신기를 생성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-131">
              <see langword="true" /> if the channel listener can be built for the build required to accept the specified type of channel; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a57c7-132">`true` 경우 `TChannel`  ==  <xref:System.ServiceModel.Channels.IInputChannel> 고 내부 바인딩이 생성할 수 <xref:System.ServiceModel.Channels.IInputChannel>, 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-132">`true` if `TChannel` == <xref:System.ServiceModel.Channels.IInputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IInputChannel>; otherwise, `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a57c7-133">
            <paramref name="context" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-133">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClientBaseAddress">
      <MemberSignature Language="C#" Value="public Uri ClientBaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientBaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a57c7-134">클라이언트의 기본 주소를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-134">Gets or sets the base address for the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a57c7-135">클라이언트의 기본 주소를 포함하는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-135">A <see cref="T:System.Uri" /> that contains the base address for the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a57c7-136">이 속성은 서비스에서 클라이언트에 연결할 수 있는 주소를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-136">This property provides an address at which the service can contact the client.</span></span> <span data-ttu-id="a57c7-137">값이 `null`이면 클라이언트 기본 주소가 자동으로 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-137">A `null` value causes the system to automatically generate a client base address.</span></span>  
  
 <span data-ttu-id="a57c7-138">이 주소는 기본 주소이며 절대 주소가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-138">This is a base address, not an absolute address.</span></span> <span data-ttu-id="a57c7-139">이 바인딩에서 클라이언트 끝점을 생성할 때 GUID가 기본 주소에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-139">A GUID is appended to the base address when generating client endpoints from this binding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a57c7-140">현재 바인딩 요소의 전체 복제본을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-140">Returns a deep clone of the current binding element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a57c7-141">현재 바인딩 요소의 전체 복제본인 <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-141">A <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> that is a deep clone of the current binding element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a57c7-142">복제를 반환하면 런타임에서 여러 개의 사용자 지정 바인딩이 하나의 사용자 지정 바인딩 요소를 공유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-142">Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="a57c7-143">복제가 반환되지 않으면 런타임 동작이 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-143">If a clone is not returned, the run-time behavior is undefined.</span></span>  
  
 <span data-ttu-id="a57c7-144">이와 반대로 개체의 전체 복제는 개체와, 개체에서 직접 또는 간접 참조하는 모든 대상을 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-144">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="a57c7-145">이를 전체 개체 그래프 복사라고도 합니다. 반대로 개체의 단순 복제는 개체만 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-145">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="a57c7-146">개체에 다른 개체에 대한 참조가 포함된 경우 단순 복사는 참조된 개체의 복사본을 만들지 않고 대신 원본 개체에 대한 참조만 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-146">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span> <span data-ttu-id="a57c7-147">특히 <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>의 전체 복제본이 <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> 값을 통해 복사됩니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-147">In particular, a deep copy of <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copies over the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a57c7-148">지원 여부를 테스트할 해당 형식의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-148">The typed object whose support is being tested.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="a57c7-149">채널을 생성하는 데 필요한 컨텍스트를 제공하는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-149">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a57c7-150">채널 스택 중 하나의 해당 계층에서 요청된 형식의 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-150">Returns a typed object requested from the appropriate layer in one of the channel stacks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a57c7-151">요청한 형식의 개체가 지원되면 해당 형식의 <paramref name="T" /> 개체이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-151">The typed object <paramref name="T" /> requested if it is supported; or <see langword="null" /> if it is not.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a57c7-152">이 메서드를 사용하여 속성을 설정하거나 스택 바인딩의 해당 계층에서 상태를 가져오기 위한 인터페이스 등과 같은 형식의 개체를 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-152">Use this to request a typed object, such as an interface for setting properties or getting status, from the appropriate layer in the stacked binding.</span></span> <span data-ttu-id="a57c7-153">요청된 개체의 반환을 지원하는 계층이 있으면 해당 개체가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-153">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="a57c7-154">그렇지 않으면 스택의 다음 계층에 호출을 위임합니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-154">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="a57c7-155">스택의 맨 아래에 도달할 때까지 요청된 개체를 지원하는 계층이 없으면 호출자는 `null` 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a57c7-155">If it gets to the bottom of the stack and no layer supports getting the requested object then the caller is returned a `null` value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a57c7-156">
            <paramref name="context" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-156">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <span data-ttu-id="a57c7-157">내보내기 프로세스를 수정하는 데 사용할 수 있는 <see cref="T:System.ServiceModel.Description.MetadataExporter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-157">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="a57c7-158">사용자 지정 정책 어설션을 삽입하는 데 사용할 수 있는 <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-158">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a57c7-159">바인딩에 복합 이중이 있음을 나타내는 바인딩에 대한 사용자 지정 정책 어설션을 내보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-159">Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a57c7-160">자세한 내용은 <xref:System.ServiceModel.Description.IPolicyExportExtension>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="a57c7-160">For more information, see <xref:System.ServiceModel.Description.IPolicyExportExtension>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a57c7-161">
            <paramref name="context" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a57c7-161">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>