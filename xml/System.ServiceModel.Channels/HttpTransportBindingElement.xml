<Type Name="HttpTransportBindingElement" FullName="System.ServiceModel.Channels.HttpTransportBindingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30fbbc1268081d9691359cf63aa4cc3746d2fa68" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpTransportBindingElement : System.ServiceModel.Channels.TransportBindingElement, System.ServiceModel.Description.IPolicyExportExtension, System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpTransportBindingElement extends System.ServiceModel.Channels.TransportBindingElement implements class System.ServiceModel.Description.IPolicyExportExtension, class System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.HttpTransportBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpTransportBindingElement&#xA;Inherits TransportBindingElement&#xA;Implements IPolicyExportExtension, IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpTransportBindingElement : System::ServiceModel::Channels::TransportBindingElement, System::ServiceModel::Description::IPolicyExportExtension, System::ServiceModel::Description::IWsdlExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Http</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.TransportBindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IWsdlExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b00b0-101">메시지 전송을 위한 HTTP 전송을 지정하는 데 사용되는 바인딩 요소를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b00b0-101">Represents the binding element used to specify an HTTP transport for transmitting messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-102"><xref:System.ServiceModel.Channels.HttpTransportBindingElement> 클래스는 HTTP 전송 프로토콜을 구현하는 사용자 지정 바인딩을 만들기 위한 시작점입니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-102">The <xref:System.ServiceModel.Channels.HttpTransportBindingElement> class is the starting point for creating a custom binding that implements the HTTP transport protocol.</span></span> <span data-ttu-id="b00b0-103">HTTP는 상호 운용성을 위해 사용되는 기본 전송입니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-103">HTTP is the primary transport used for interoperability purposes.</span></span> <span data-ttu-id="b00b0-104">이 전송은 [!INCLUDE[indigo1](~/includes/indigo1-md.md)]에서 [!INCLUDE[indigo2](~/includes/indigo2-md.md)] 외의 다른 웹 서비스 스택과의 상호 운용성을 보장하기 위해 지원됩니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-104">This transport is supported by [!INCLUDE[indigo1](~/includes/indigo1-md.md)] to ensure interoperability with other non-[!INCLUDE[indigo2](~/includes/indigo2-md.md)] Web services stacks.</span></span>  
  
 <span data-ttu-id="b00b0-105">[!INCLUDE[indigo2](~/includes/indigo2-md.md)] 서비스 모델은 이 클래스를 사용하여 <xref:System.ServiceModel.Channels.IChannelFactory> 및 <xref:System.ServiceModel.Channels.IChannelListener> 인터페이스를 구현하는 팩터리 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-105">The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service model uses this class to create factory objects that implement the <xref:System.ServiceModel.Channels.IChannelFactory> and <xref:System.ServiceModel.Channels.IChannelListener> interfaces.</span></span> <span data-ttu-id="b00b0-106">그런 다음 이러한 팩터리 개체는 HTTP 프로토콜을 사용하여 SOAP 메시지를 전송하는 채널 및 수신기를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-106">These factory objects, in turn, create the channels and listeners that transmit SOAP messages using the HTTP protocol.</span></span>  
  
 <span data-ttu-id="b00b0-107"><xref:System.ServiceModel.Channels.HttpTransportBindingElement.AuthenticationScheme%2A>, <xref:System.ServiceModel.Channels.HttpTransportBindingElement.HostNameComparisonMode%2A> 및 <xref:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize%2A>와 같은 속성을 설정하여 이 클래스가 생성하는 팩터리를 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-107">You configure the factories that this class creates by setting its properties, such as <xref:System.ServiceModel.Channels.HttpTransportBindingElement.AuthenticationScheme%2A>, <xref:System.ServiceModel.Channels.HttpTransportBindingElement.HostNameComparisonMode%2A>, and <xref:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize%2A>.</span></span>  
  
 <span data-ttu-id="b00b0-108">또한 기본 클래스 <xref:System.ServiceModel.Channels.TransportBindingElement>에서 <xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A>, <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>, <xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A>와 같은 속성을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-108">You can also set properties on the base class, <xref:System.ServiceModel.Channels.TransportBindingElement>, such as <xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A>, <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>, and <xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A>.</span></span> <span data-ttu-id="b00b0-109">속성의 전체 목록은 <xref:System.ServiceModel.Channels.TransportBindingElement>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="b00b0-109">For a complete list of properties, see <xref:System.ServiceModel.Channels.TransportBindingElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b00b0-110">다음 코드에서는 <xref:System.ServiceModel.Channels.HttpTransportBindingElement> 메서드를 명령적으로 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-110">The following code shows how to imperatively use the <xref:System.ServiceModel.Channels.HttpTransportBindingElement>.</span></span>  
  
 [!code-csharp[S_Imperative#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_imperative/cs/service.cs#1)]
 [!code-vb[S_Imperative#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_imperative/vb/service.vb#1)]  
  
 <span data-ttu-id="b00b0-111">다음 구성에 나온 것처럼 `HttpTransportBindingElement`를 구성 파일에서 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-111">`HttpTransportBindingElement` can also be used in a configuration file as shown in the following configuration.</span></span>  
  
```xml  
<bindings>  
  <customBinding>  
    <binding name="Binding1">  
      <reliableSession acknowledgementInterval="00:00:00.2000000" enableFlowControl="true"  
                        maxTransferWindowSize="32" inactivityTimeout="00:10:00" maxPendingChannels="128"  
                        maxRetryCount="8" ordered="true" />  
      <security mode="None"/>  
      <httpTransport authenticationScheme="Anonymous" bypassProxyOnLocal="false"  
                    hostNameComparisonMode="StrongWildcard"   
                    proxyAuthenticationScheme="Anonymous" realm=""   
                    useDefaultWebProxy="true" />  
    </binding>  
  </customBinding>  
</bindings>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-112">
            <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpTransportBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpTransportBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-113">
            <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-113">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpTransportBindingElement (System.ServiceModel.Channels.HttpTransportBindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.HttpTransportBindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (elementToBeCloned As HttpTransportBindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpTransportBindingElement(System::ServiceModel::Channels::HttpTransportBindingElement ^ elementToBeCloned);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.HttpTransportBindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned">
          <span data-ttu-id="b00b0-114">이 인스턴스를 초기화하는 데 사용되는 <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-114">An <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> object used to initialize this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b00b0-115">다른 바인딩 요소를 사용하여 <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> class using another binding element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-116">이 메서드는 바인딩을 복제하는 데 사용되는 복사 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-116">This method is a copy constructor used to clone the binding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b00b0-117">다음 예제에서는 파생 클래스의 복사 생성자를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-117">The following example shows how to use the copy constructor in a derived class.</span></span>  
  
```csharp  
public class MyBindingElement : HttpTransportBindingElement  
{  
    public MyBindingElement(MyBindingElement elementToBeCloned) : base(elementToBeCloned)  
    {  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCookies">
      <MemberSignature Language="C#" Value="public bool AllowCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCookies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.AllowCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCookies { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-118">클라이언트가 쿠키를 허용하고 이후 요청에서 이 쿠키를 전파하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-118">Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-119">쿠키가 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-119">
              <see langword="true" /> if cookies are allowed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b00b0-120">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-120">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-121">이 속성은 쿠키를 사용하는 ASMX 웹 서비스와의 상호 작용 시 서버에서 반환하는 쿠키를 해당 서비스에 대한 이후의 모든 클라이언트 요청에 자동으로 복사하는 편리한 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-121">This property is provided as a convenience for interacting with ASMX Web services that use cookies to make sure that the cookies returned from the server are automatically copied to all future client requests for that service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b00b0-122">다음 예제에서는 이 속성을 설정하여 서버의 모든 쿠키가 이후의 클라이언트 요청에 복사되도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-122">The following example sets this property to indicate that all cookies from the server should be copied to future client requests.</span></span>  
  
```csharp  
HttpTransportBindingElement httpBindingElement = new HttpBindingElement();  
httpBindingElement.AllowCookies = true;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationScheme">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemes AuthenticationScheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.AuthenticationSchemes AuthenticationScheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.AuthenticationScheme" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationScheme As AuthenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemes AuthenticationScheme { System::Net::AuthenticationSchemes get(); void set(System::Net::AuthenticationSchemes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-123">HTTP 수신기에서 처리할 클라이언트 요청 인증에 사용되는 인증 체계를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-123">Gets or sets the authentication scheme used to authenticate client requests being processed by an HTTP listener.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-124">클라이언트 인증에 사용되는 프로토콜을 지정하는 <see cref="T:System.Net.AuthenticationSchemes" /> 열거형의 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-124">One of the enumeration values of the <see cref="T:System.Net.AuthenticationSchemes" /> enumeration that specifies the protocols used for client authentication.</span>
          </span>
          <span data-ttu-id="b00b0-125">기본값은 <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-125">The default is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-126">인증 체계는 한 번만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-126">The authentication scheme can only be set once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b00b0-127">다음 예제에서는 클라이언트 요청을 인증할 때 사용하도록 이 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-127">The following example sets this property to use when authenticating client requests.</span></span>  
  
```csharp  
[ServiceContract]  
interface ICalculator  
{  
     [OperationContract]  
            Int Add(int a, int b);  
}  
  
HttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  
httpBinding.AuthenticationScheme = AuthenticationSchemes.Digest;  
CustomBinding binding = new CustomBinding(new TextMessageEncodingBindingElement(), httpBinding);  
  
EndpointAddress endpoint = new EndpointAddress(address);  
ChannelFactory<ICalculator> proxy = new ChannelFactory<ICalculator>(binding, endpoint);  
  
proxy.Credentials.Windows.ClientCredential = new NetworkCredential("user", "password", "domain");  
proxy.Credentials.Windows.AllowedImpersonationLevel = System.Security.Principal.TokenImpersonationLevel.Impersonation;  
proxy.Open();  
  
ICalculator calc = proxy.CreateChannel();  
  
int odd=calc.Add(5,4);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b00b0-128">
            <see cref="T:System.Net.AuthenticationSchemes" />의 값이 이미 설정되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-128">The value for the <see cref="T:System.Net.AuthenticationSchemes" /> was already set.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="b00b0-129">채널 팩터리의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-129">The type of channel factory.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="b00b0-130">채널 팩터리를 만드는 데 필요한 바인딩, 동작, 계약, 기타 정보를 설명하는 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 멤버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-130">
              <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts and other information required to create the channel factory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b00b0-131">채널을 만드는 데 사용할 수 있는 채널 팩터리를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-131">Creates a channel factory that can be used to create a channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b00b0-132">지정된 형식의 채널 팩터리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-132">A channel factory of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-133">이 메서드는 전송 바인딩 요소의 구성에 따라 메시지를 보내기 위한 채널 팩터리를 가져오는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-133">This method can be used to get a channel factory for sending messages based on the configuration of the transport binding element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b00b0-134">
            <paramref name="context" />가 <see langword="null" />이 될 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-134">
              <paramref name="context" /> cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b00b0-135">잘못된 인수가 전달된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-135">An invalid argument was passed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="b00b0-136">채널 팩터리의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-136">The type of channel factory.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="b00b0-137">채널 팩터리를 만드는 데 필요한 바인딩, 동작, 계약, 기타 정보를 설명하는 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 멤버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-137">
              <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts and other information required to create the channel factory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b00b0-138">지정된 형식의 채널 수신기를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-138">Creates a channel listener of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b00b0-139">지정된 형식의 채널 수신기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-139">A channel listener of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-140">이 메서드는 전송 바인딩 요소의 구성에 따라 메시지를 받기 위한 채널 수신기를 가져오는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-140">This method can be used to get a channel listener for receiving messages based on the configuration of the transport binding element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b00b0-141">
            <paramref name="context" />가 <see langword="null" />이 될 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-141">
              <paramref name="context" /> cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b00b0-142">잘못된 인수가 전달된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-142">An invalid argument was passed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-143">로컬 주소에 대해 프록시가 무시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-143">Gets or sets a value that indicates whether proxies are ignored for local addresses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-144">로컬 주소에 대해 프록시가 무시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-144">
              <see langword="true" /> if proxies are ignored for local addresses; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b00b0-145">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-145">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-146">로컬 주소는 로컬 LAN 또는 인트라넷에 있는 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-146">A local address is one that is on the local LAN or intranet.</span></span>  
  
 <span data-ttu-id="b00b0-147">서비스 주소가 [!INCLUDE[indigo2](~/includes/indigo2-md.md)]로 시작하는 경우 `http://localhost`에서는 항상 프록시를 무시합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-147">[!INCLUDE[indigo2](~/includes/indigo2-md.md)] always ignores the proxy if the service address begins with `http://localhost`.</span></span> <span data-ttu-id="b00b0-148">클라이언트가 동일한 시스템의 서비스와 통신할 때 프록시를 통하게 하려면 `localhost` 대신 호스트 이름을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-148">You should use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b00b0-149">@FSHO1@다음 예제에서는 이 속성을 설정하여 바인딩의 요청을 실행할 때 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-149">The following example sets this property to use when performing requests on the binding.</span></span>  
  
```csharp  
HttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  
httpBinding.BypassProxyOnLocal = true;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="b00b0-150">확인할 채널의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-150">The type of channel to check.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="b00b0-151">채널의 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-151">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b00b0-152">지정된 형식의 채널 팩터리를 생성할 수 있는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-152">Determines whether a channel factory of the specified type can be built.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b00b0-153">채널 팩터리를 생성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-153">
              <see langword="true" /> if a channel factory can be built; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b00b0-154">
            <paramref name="context" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-154">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="b00b0-155">확인할 채널의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-155">The type of channel to check.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="b00b0-156">채널의 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-156">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b00b0-157">지정된 형식의 채널 수신기를 생성할 수 있는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-157">Determines whether a channel listener of the specified type can be built.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b00b0-158">채널 수신기를 생성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-158">
              <see langword="true" /> if a channel listener can be built; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b00b0-159">
            <paramref name="context" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-159">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-160">현재 바인딩 요소의 복사본인 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-160">Creates a new instance that is a copy of the current binding element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b00b0-161">현재 바인딩 요소의 복사본인 새 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-161">A new instance that is a copy of the current binding element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b00b0-162">다음 예제에서는 지정된 바인딩 요소를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-162">The following example clones the specified binding element.</span></span>  
  
```csharp  
HttpBindingElement bindingElement = elementToClone.Clone();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecompressionEnabled">
      <MemberSignature Language="C#" Value="public bool DecompressionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DecompressionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.DecompressionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DecompressionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DecompressionEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-163">압축된 메시지 데이터를 원래 크기와 형식으로 반환하는 프로세스를 사용되는지 여부를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-163">Gets or sets whether the process for returning compressed message data to its original size and format is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-164">압축 해제가 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-164">
              <see langword="true" /> if decompression is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-165">들어오는 클라이언트 연결의 유효성을 검사하기 위해 서버에서 사용되는 확장 보안 정책 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-165">Gets or sets the value of the extended security policy used by the server to validate incoming client connections.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-166">들어오는 클라이언트 연결의 유효성을 검사하기 위해 서버에서 사용되는 확장 보안 정책 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-166">The value of the extended security policy used by the server to validate incoming client connections.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="b00b0-167">가져올 속성의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-167">The type of the property to get.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="b00b0-168">
            <see cref="T:System.ServiceModel.Channels.BindingContext" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-168">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b00b0-169">지정된 <see cref="T:System.ServiceModel.Channels.BindingContext" />에서 속성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-169">Gets a property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b00b0-170">지정된 <see cref="T:System.ServiceModel.Channels.BindingContext" />의 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-170">The property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-171">URI 비교 시 서비스에 액세스하는 데 호스트 이름이 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-171">Gets or sets a value that indicates whether the hostname is used to reach the service when matching on the URI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-172">들어오는 요청을 끝점 URI로 라우팅할 때 호스트 이름 포함 여부를 나타내는 <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-172">The <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> enumeration value that indicates whether the hostname is included when routing incoming requests to an endpoint URI.</span>
          </span>
          <span data-ttu-id="b00b0-173">기본값은 <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />이며 이 값은 비교 시 호스트 이름을 무시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-173">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b00b0-174">설정 값이 정의되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-174">The value set is not defined.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="KeepAliveEnabled">
      <MemberSignature Language="C#" Value="public bool KeepAliveEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAliveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.KeepAliveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAliveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAliveEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-175">서비스 끝점에 영구적으로 연결할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-175">Gets or sets a value that indicates whether to make a persistent connection to a service endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-176">서비스 끝점에 대한 요청의 Connection HTTP 헤더 값이 <see langword="true" />이면 <see langword="Keep-alive" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-176">
              <see langword="true" /> if the request to the service endpoint should contain a Connection HTTP header with the value <see langword="Keep-alive" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b00b0-177">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-177">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-178">`true` 값으로 설정된 Connection HTTP 헤더를 보내려면 이 속성을 `Keep-alive`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-178">Set this property to `true` to send a Connection HTTP header with the value `Keep-alive`.</span></span> <span data-ttu-id="b00b0-179">클라이언트는 이 속성을 사용하여 영구 연결의 기본 설정을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-179">A client uses this property to indicate a preference for persistent connections.</span></span> <span data-ttu-id="b00b0-180">이 속성이 `true`이면 클라이언트는 서비스 끝점에서 지원할 경우 서비스 끝점에 영구 연결을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-180">When this property is `true`, the connection that the client makes to a service endpoint is persistent if the service endpoint supports that.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b00b0-181">다음 코드에서는 이 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-181">The following code shows how to set this property.</span></span>  
  
 [!code-csharp[PoxSample#1](~/samples/snippets/csharp/VS_Snippets_CFX/poxsample/cs/client/httpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegacyExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public object LegacyExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object LegacyExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.LegacyExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property LegacyExtendedProtectionPolicy As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ LegacyExtendedProtectionPolicy { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use ExtendedProtectionPolicy")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-182">사용할 버퍼의 최대 크기를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-182">Gets or sets the maximum size of the buffer to use.</span>
          </span>
          <span data-ttu-id="b00b0-183">버퍼링된 메시지의 경우 이 값은 <see cref="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize" />와 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-183">For buffered messages this value is the same as <see cref="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize" />.</span>
          </span>
          <span data-ttu-id="b00b0-184">스트리밍된 메시지의 경우 이 값은 버퍼링된 모드에서 읽어오는 SOAP 헤더의 최대 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-184">For streamed messages, this value is the maximum size of the SOAP headers, which must be read in buffered mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-185">버퍼의 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-185">The maximum size, in bytes, of the buffer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-186">스트리밍된 메시지의 경우 메시지 헤더의 크기가 이 속성보다 크면 <xref:System.ServiceModel.QuotaExceededException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-186">For streamed messages, if the size of the message headers is greater than this property, then a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="b00b0-187">스트리밍되지 않은 메시지의 경우 메시지 크기가 이 속성보다 크면 메시지가 삭제됩니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-187">For a non-streamed message, if the message size is greater than this property, then the message is dropped.</span></span>  
  
 <span data-ttu-id="b00b0-188">지정되지 않은 경우 기본값인 65536으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-188">If not specified, this defaults to 65536.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b00b0-189">@FSHO1@다음 예제에서는 이 속성을 설정하여 바인딩의 요청을 실행할 때 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-189">The following example sets this property to use when performing requests on the binding.</span></span>  
  
```csharp  
HttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  
httpBinding.MaxBufferSize = 16384;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPendingAccepts">
      <MemberSignature Language="C#" Value="public int MaxPendingAccepts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPendingAccepts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxPendingAccepts" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPendingAccepts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPendingAccepts { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-190">서비스에서 동시에 수락할 수 있는 최대 연결 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-190">Gets or sets the maximum number of connections the service can accept simultaneously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-191">서비스에서 동시에 수락할 수 있는 최대 연결 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-191">The maximum number of connections the service can accept simultaneously.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-192">기본값 <xref:System.ServiceModel.Channels.HttpTransportBindingElement.MaxPendingAccepts%2A> 은 0, WCF 사용자에 대 한 값을 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-192">The default value of <xref:System.ServiceModel.Channels.HttpTransportBindingElement.MaxPendingAccepts%2A> is 0, which means WCF will configure the value for you.</span></span> <span data-ttu-id="b00b0-193">확장성 향상을 위해 수를 늘릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-193">You can increase the number for better scalability.</span></span> <span data-ttu-id="b00b0-194">자체 호스팅된의 경우가이 속성이 WCF는 호출 하는 동시 BeginGetContext 호출의 최대 수를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-194">In the self-hosted case, this property controls the maximum number of simultaneous BeginGetContext calls WCF will invoke.</span></span> <span data-ttu-id="b00b0-195">BeginGetContext 일부 메모리를 호출할 때마다 버퍼링을 위해 관리 되는 힙 내에서 고정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-195">Each time BeginGetContext is called some memory is pinned within the managed heap for buffering.</span></span> <span data-ttu-id="b00b0-196">너무 많은 버퍼가 고정 된 과도 한 힙 조각화 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-196">If too many buffers are pinned, excessive heap fragmentation may result.</span></span> <span data-ttu-id="b00b0-197">웹 호스트 환경에서이 속성은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-197">This property is ignored in the web-hosted case.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageHandlerFactory">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.HttpMessageHandlerFactory MessageHandlerFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.HttpMessageHandlerFactory MessageHandlerFactory" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.MessageHandlerFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageHandlerFactory As HttpMessageHandlerFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::HttpMessageHandlerFactory ^ MessageHandlerFactory { System::ServiceModel::Channels::HttpMessageHandlerFactory ^ get(); void set(System::ServiceModel::Channels::HttpMessageHandlerFactory ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.HttpMessageHandlerFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-198">Http 전송 메시지 처리기 팩터리를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-198">Gets or sets the Http transport message handler factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-199">Http 전송 메시지 처리기 팩터리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-199">The Http transport message handler factory.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAddress">
      <MemberSignature Language="C#" Value="public Uri ProxyAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProxyAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ProxyAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-200">HTTP 요청에 사용할 프록시의 주소를 포함하는 URI를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-200">Gets or sets a URI that contains the address of the proxy to use for HTTP requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-201">프록시의 주소를 포함하는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-201">The <see cref="T:System.Uri" /> that contains the address for the proxy.</span>
          </span>
          <span data-ttu-id="b00b0-202">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-202">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b00b0-203">@FSHO1@다음 예제에서는 이 속성을 설정하여 바인딩의 요청을 실행할 때 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-203">The following example sets this property to use when performing requests on the binding.</span></span> <span data-ttu-id="b00b0-204"><xref:System.ServiceModel.Channels.HttpTransportBindingElement.BypassProxyOnLocal%2A>이 `true`로 설정되어 있고 끝점이 로컬 끝점인 경우가 아니면 모든 요청이 이 프록시를 통해 라우트됩니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-204">All requests are routed through this proxy, unless <xref:System.ServiceModel.Channels.HttpTransportBindingElement.BypassProxyOnLocal%2A> is set to `true` and the endpoint is a local endpoint.</span></span>  
  
```csharp  
HttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  
httpBinding.ProxyAddress = new Uri(http://proxyserver);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAuthenticationScheme">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemes ProxyAuthenticationScheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.AuthenticationSchemes ProxyAuthenticationScheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAuthenticationScheme" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAuthenticationScheme As AuthenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemes ProxyAuthenticationScheme { System::Net::AuthenticationSchemes get(); void set(System::Net::AuthenticationSchemes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-205">HTTP 프록시에서 처리할 클라이언트 요청 인증에 사용되는 인증 체계를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-205">Gets or sets the authentication scheme used to authenticate client requests being processed by an HTTP proxy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-206">프록시에서 클라이언트 인증에 사용되는 프로토콜을 지정하는 <see cref="T:System.Net.AuthenticationSchemes" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-206">The <see cref="T:System.Net.AuthenticationSchemes" /> enumeration that specifies the protocols used for client authentication on the proxy.</span>
          </span>
          <span data-ttu-id="b00b0-207">기본값은 <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-207">The default is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b00b0-208">다음 예제에서는 <xref:System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAddress%2A> 속성에 지정된 프록시에 요청을 보낼 때 사용하도록 이 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-208">The following example sets this property to use when sending requests to the proxy specified in the <xref:System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAddress%2A> property.</span></span>  
  
```csharp  
HttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  
httpBinding.ProxyAddress = new Uri(http://proxyserver);  
httpBinding.ProxyAuthenticationScheme = AuthenticationSchemes.Digest;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-209">인증 영역을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-209">Gets or sets the authentication realm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-210">인증 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-210">The authentication realm.</span>
          </span>
          <span data-ttu-id="b00b0-211">기본값은 ""입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-211">The default value is "".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-212">서버에서는 영역을 사용하여 보호되는 리소스를 분할합니다. 각 파티션에는 자체 인증 체계 또는 권한 부여 데이터베이스가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-212">Servers use realms to partition protected resources; each partition can have its own authentication scheme or authorization database.</span></span> <span data-ttu-id="b00b0-213">영역은 기본 및 다이제스트 인증에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-213">Realms are used only for basic and digest authentication.</span></span> <span data-ttu-id="b00b0-214">클라이언트가 성공적으로 인증되면 이 인증은 지정된 영역의 모든 리소스에 대해 유효합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-214">After a client successfully authenticates, the authentication is valid for all resources in a given realm.</span></span> <span data-ttu-id="b00b0-215">참조에 대 한 자세한 설명은 영역, [RFC 2617](http://go.microsoft.com/fwlink/?LinkID=95943)합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-215">For a detailed description of realms, see [RFC 2617](http://go.microsoft.com/fwlink/?LinkID=95943).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestInitializationTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan RequestInitializationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RequestInitializationTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.RequestInitializationTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestInitializationTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RequestInitializationTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-216">요청된 초기화 제한 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-216">Gets or sets the requested initialization time out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-217">요청된 초기화 제한 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-217">The requested initialization time out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-218">전송을 위한 URI 체계를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-218">Gets the URI scheme for the transport.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-219">전송할 URI 체계를 나타내는 <see cref="F:System.Uri.UriSchemeHttp" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-219">A <see cref="F:System.Uri.UriSchemeHttp" /> object that represents the URI scheme for the transport.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-220">이 속성은 기본 주소에 대한 바인딩 유효성을 검사하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-220">This property is used to validate bindings against base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b00b0-221">다음 예제에서는 콘솔에 바인딩 체계를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-221">The following example outputs the scheme of the binding to the console.</span></span>  
  
```csharp  
HttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  
Console.WriteLine("The scheme of the binding is {0}.",httpBinding.Scheme);  
```  
  
 <span data-ttu-id="b00b0-222">"The scheme of the binding is http"라고 출력됩니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-222">The output is: "The scheme of the binding is http."</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeExtendedProtectionPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeExtendedProtectionPolicy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeExtendedProtectionPolicy () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeExtendedProtectionPolicy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-223">확장 보호 정책을 XAML serialize할 수 없음을 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-223">Returns a valueindicating that it is not possible to XAML serialize the extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <see langword="false" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeMessageHandlerFactory">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeMessageHandlerFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeMessageHandlerFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeMessageHandlerFactory" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeMessageHandlerFactory () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeMessageHandlerFactory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-224">메시지 처리기 팩터리가 serialize되어야 하는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-224">Determines whether the message handler factory should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b00b0-225">메시지 처리기 팩터리를 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-225">
              <see langword="true" /> if the message handler factory should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeWebSocketSettings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeWebSocketSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeWebSocketSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeWebSocketSettings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeWebSocketSettings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeWebSocketSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-226">웹 소켓 설정을 serialize해야 하는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-226">Determines whether the web socket settings should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b00b0-227">웹 소켓을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-227">
              <see langword="true" /> if the web socket settings should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <span data-ttu-id="b00b0-228">내보내기 프로세스를 수정하는 데 사용할 수 있는 <see cref="T:System.ServiceModel.Description.MetadataExporter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-228">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="b00b0-229">사용자 지정 정책 어설션을 삽입하는 데 사용할 수 있는 <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-229">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b00b0-230">바인딩에 대한 사용자 지정 정책 어설션을 내보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-230">Exports a custom policy assertion about bindings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-231">이 메서드는 특정 계약에 따라 공개되는 WSDL 정보에 바인딩 관련 문을 쓰며, [!INCLUDE[indigo1](~/includes/indigo1-md.md)]에서 바인딩 스택에 사용자 지정 바인딩 요소가 있음을 클라이언트에게 알리는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-231">This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by [!INCLUDE[indigo1](~/includes/indigo1-md.md)] to communicate to clients the existence of this custom binding element in the binding stack.</span></span>  
  
 <span data-ttu-id="b00b0-232">이 메서드는 <xref:System.ServiceModel.Description.MetadataExporter> 개체와 <xref:System.ServiceModel.Description.PolicyConversionContext> 개체라는 두 가지 매개 변수를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-232">This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects.</span></span> <span data-ttu-id="b00b0-233">다양한 범위에서 이미 내보낸 정책 어설션 컬렉션을 가져오려면 <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> 및 <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-233">Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes.</span></span> <span data-ttu-id="b00b0-234">그런 다음 이 메서드를 사용하여 적절한 컬렉션에 해당 정책 어설션을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-234">Then use this method to add your own policy assertions to the appropriate collection.</span></span>  
  
 <span data-ttu-id="b00b0-235"><xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> 속성은 내보낼 끝점에 대한 <xref:System.ServiceModel.Description.ContractDescription>을 공개합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-235">The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported.</span></span> <span data-ttu-id="b00b0-236">이를 통해 이 메서드는 내보낸 정책 어설션의 범위를 정확하게 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-236">This allows this method to correctly scope their exported policy assertions.</span></span> <span data-ttu-id="b00b0-237">예를 들어, 코드의 보안 특성을 사용하여 보안 정책 어설션을 추가할 위치를 나타내는 동작을 <xref:System.ServiceModel.Description.ContractDescription>에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-237">For example, security attributes in code may add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.</span></span>  
  
 <span data-ttu-id="b00b0-238">사용자 지정 정책 어설션이 WSDL 정보에 연결되면 클라이언트는 <xref:System.ServiceModel.Description.IPolicyImportExtension> 인터페이스를 구현하여 사용자 지정 바인딩 어설션을 검색하고 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-238">Once custom policy assertions have been attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IWsdlExportExtension.ExportContract">
      <MemberSignature Language="C#" Value="void IWsdlExportExtension.ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IWsdlExportExtension.ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext) Implements IWsdlExportExtension.ExportContract" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context) = System::ServiceModel::Description::IWsdlExportExtension::ExportContract;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <span data-ttu-id="b00b0-239">계약 정보를 내보내는 <see cref="T:System.ServiceModel.Description.WsdlExporter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-239">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="b00b0-240">내보낸 WSDL 요소에서 계약 설명으로의 매핑을 제공하는 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-240">A context that provides mappings from exported WSDL elements to the contract description.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b00b0-241">계약에 대해 생성된 WSDL(웹 서비스 설명 언어)에 사용자 지정 WSDL 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-241">Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for a contract.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint">
      <MemberSignature Language="C#" Value="void IWsdlExportExtension.ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext endpointContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext endpointContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportEndpoint (exporter As WsdlExporter, endpointContext As WsdlEndpointConversionContext) Implements IWsdlExportExtension.ExportEndpoint" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ endpointContext) = System::ServiceModel::Description::IWsdlExportExtension::ExportEndpoint;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="endpointContext" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <span data-ttu-id="b00b0-242">계약 정보를 내보내는 <see cref="T:System.ServiceModel.Description.WsdlExporter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-242">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</span>
          </span>
        </param>
        <param name="endpointContext">
          <span data-ttu-id="b00b0-243">내보낸 WSDL 요소에서 끝점 설명으로의 매핑을 제공하는 끝점 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-243">An endpoint context that provides mappings from exported WSDL elements to the endpoint description.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b00b0-244">끝점에 대해 생성된 WSDL(웹 서비스 설명 언어)에 사용자 지정 WSDL 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-244">Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for an endpoint.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransferMode TransferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.TransferMode TransferMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferMode As TransferMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransferMode TransferMode { System::ServiceModel::TransferMode get(); void set(System::ServiceModel::TransferMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-245">전송 모드를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-245">Gets or sets the transfer mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-246">
            <see cref="P:System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode" />의 멤버 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-246">One of the following member values of <see cref="P:System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode" />:</span>
          </span>  
  
-   <span data-ttu-id="b00b0-247">Buffered</span><span class="sxs-lookup"><span data-stu-id="b00b0-247">Buffered</span></span>  
  
-   <span data-ttu-id="b00b0-248">Streamed</span><span class="sxs-lookup"><span data-stu-id="b00b0-248">Streamed</span></span>  
  
-   <span data-ttu-id="b00b0-249">StreamedRequest</span><span class="sxs-lookup"><span data-stu-id="b00b0-249">StreamedRequest</span></span>  
  
-   <span data-ttu-id="b00b0-250">StreamedResponse</span><span class="sxs-lookup"><span data-stu-id="b00b0-250">StreamedResponse</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-251"><xref:System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode%2A> = Streamed로 지정하면 `StreamedRequest`와 `StreamedResponse`를 모두 의미합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-251">Specifying <xref:System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode%2A> = Streamed implies both `StreamedRequest` and `StreamedResponse`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeConnectionNtlmAuthentication">
      <MemberSignature Language="C#" Value="public bool UnsafeConnectionNtlmAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeConnectionNtlmAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeConnectionNtlmAuthentication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-252">서버에서 안전하지 않은 연결 공유를 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-252">Gets or sets a value that indicates whether Unsafe Connection Sharing is enabled on the server.</span>
          </span>
          <span data-ttu-id="b00b0-253">사용할 경우 각 TCP 연결에서 NTLM 인증이 한 번씩 수행됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-253">If enabled, NTLM authentication is performed once on each TCP connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-254">안전하지 않은 연결 공유를 사용할 경우에는 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-254">
              <see langword="true" /> if Unsafe Connection Sharing is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b00b0-255">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-255">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00b0-256">이 속성이 `true`로 설정되어 있고 특정 연결을 통한 첫 번째 요청이 NTLM으로 인증된 경우, 동일한 연결을 통한 후속 요청은 첫 번째 요청의 <xref:System.Security.Principal.IIdentity>에 있는 인증 정보를 사용하여 처리됩니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-256">When this property is set to `true` and the first request over a particular connection is authenticated using NTLM, subsequent requests over the same connection are processed using the authentication information in <xref:System.Security.Principal.IIdentity> of the initial request.</span></span>  
  
 <span data-ttu-id="b00b0-257">인증 프로토콜이 NTLM이 아닌 경우에는 이 속성이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-257">This property has no effect when NTLM is not the authentication protocol.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b00b0-258">이 속성을`true`로 설정하면 추가 NTLM 인증 요구를 보내지 않으므로 성능이 향상되지만 모든 요청에서 인증 정보를 제공하지 않게 되므로 보안상의 위험이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-258">While setting this property to `true` increases performance because additional NTLM authentication challenges are not sent, there is a security risk in not requiring all requests to provide authentication information.</span></span> <span data-ttu-id="b00b0-259">따라서 성능 향상과 보안 위험 간의 관계를 신중히 고려해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-259">You must determine whether the increase in performance is worth this risk.</span></span>  
  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="b00b0-260"> <xref:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="b00b0-260"> <xref:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b00b0-261">다음 예제에서는 안전하지 않은 연결 공유를 사용하도록 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-261">The following example sets the property to enable Unsafe Connection Sharing.</span></span>  
  
```csharp  
HttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  
httpBinding.AuthenticationScheme = AuthenticationSchemes.Ntlm;  
httpBinding.UnsafeConnectionNtlmAuthentication = true;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAuthenticationSchemes">
      <MemberSignature Language="C#" Value="protected void UpdateAuthenticationSchemes (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateAuthenticationSchemes(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpTransportBindingElement.UpdateAuthenticationSchemes(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateAuthenticationSchemes (context As BindingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateAuthenticationSchemes(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b00b0-262">바인딩 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-262">The binding context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b00b0-263">바인딩 컨텍스트를 포함하는 전송 인증 스키마를 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-263">Updates the transport authentication schemes that contains the binding context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWebProxy">
      <MemberSignature Language="C#" Value="public bool UseDefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.UseDefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultWebProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultWebProxy { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-264">사용자별 설정 대신 시스템 수준의 프록시 설정이 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-264">Gets or sets a value that indicates whether the machine-wide proxy settings are used rather than the user specific settings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-265">시스템 수준의 프록시 설정을 사용하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-265">
              <see langword="true" /> if the machine-wide proxy settings are used; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b00b0-266">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-266">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b00b0-267">다음 예제에서는 사용자별 프록시 설정을 사용하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b00b0-267">The following example causes user-specific proxy settings to be used.</span></span>  
  
```csharp  
HttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  
httpBinding.UseDefaultWebProxy = false;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebSocketSettings">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.WebSocketTransportSettings WebSocketSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.WebSocketTransportSettings WebSocketSettings" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpTransportBindingElement.WebSocketSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property WebSocketSettings As WebSocketTransportSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::WebSocketTransportSettings ^ WebSocketSettings { System::ServiceModel::Channels::WebSocketTransportSettings ^ get(); void set(System::ServiceModel::Channels::WebSocketTransportSettings ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.WebSocketTransportSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b00b0-268">바인딩 요소의 웹 소켓 구성 요소를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-268">Gets or sets the web socket configuration of the binding element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b00b0-269">웹 소켓 설정입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b00b0-269">The web socket settings.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>