<Type Name="IChannelListener" FullName="System.ServiceModel.Channels.IChannelListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d2595925eefa8e472cb197b25293dfdd2c5c750" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37461054" /></Metadata><TypeSignature Language="C#" Value="public interface IChannelListener : System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelListener implements class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannelListener" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelListener&#xA;Implements ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannelListener : System::ServiceModel::ICommunicationObject" />
  <TypeSignature Language="F#" Value="type IChannelListener = interface&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="be310-101">채널 수신기에서 채널을 수락하기 위해 구현해야 하는 인터페이스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="be310-101">Defines the interface that must be implemented by a channel listener to accept channels.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be310-102"><xref:System.ServiceModel.Channels.IChannelListener> 인터페이스는 채널 수신기에 대한 기본 인터페이스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be310-102">The <xref:System.ServiceModel.Channels.IChannelListener> interface represents the base interface for channel listeners.</span></span>  
  
 <span data-ttu-id="be310-103">채널 수신기 및 연결된 채널은 클라이언트에서 시작된 통신을 수신하는 서비스에서 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="be310-103">Channel listeners and their associated channels are generally used by services that receive communications initiated by clients.</span></span> <span data-ttu-id="be310-104">반대로 <xref:System.ServiceModel.Channels.IChannelFactory> 인터페이스를 구현하는 채널 팩터리는 서비스와 통신이 시작되는 채널을 만들 때 사용되는 메커니즘을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="be310-104">Channel factories that implement the <xref:System.ServiceModel.Channels.IChannelFactory> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginWaitForChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWaitForChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iChannelListener.BeginWaitForChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="be310-105">제한 시간이 초과되기 전에 채널 대기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be310-105">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="be310-106">채널 대기 작업의 비동기 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="be310-106">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.</span></span></param>
        <param name="state"><span data-ttu-id="be310-107">애플리케이션에 의해 지정되는 개체로, 비동기 채널 대기 작업과 관련된 상태 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="be310-107">An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.</span></span></param>
        <summary><span data-ttu-id="be310-108">지정된 시간 간격 내에 완료해야 하는 채널 도착을 대기하기 위해 비동기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="be310-108">Begins an asynchronous operation to wait for a channel to arrive that must be completed within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="be310-109">비동기 채널 대기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be310-109">The <see cref="T:System.IAsyncResult" /> that references the asynchronous wait for a channel operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForChannel">
      <MemberSignature Language="C#" Value="public bool EndWaitForChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForChannel (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndWaitForChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWaitForChannel : IAsyncResult -&gt; bool" Usage="iChannelListener.EndWaitForChannel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="be310-110"><see cref="T:System.IAsyncResult" /> 메서드를 호출하여 반환된 <see cref="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be310-110">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" /> method.</span></span></param>
        <summary><span data-ttu-id="be310-111">채널 도착을 대기하기 위한 비동기 작업을 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="be310-111">Completes an asynchronous operation to wait for channels to arrive.</span></span></summary>
        <returns><span data-ttu-id="be310-112">메시지가 도착하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be310-112"><see langword="true" /> if a message arrived; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : unit -&gt; 'T (requires 'T : null)" Usage="iChannelListener.GetProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="be310-113">메서드에서 쿼리하고 있는 형식화된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="be310-113">The typed object for which the method is querying.</span></span></typeparam>
        <summary><span data-ttu-id="be310-114">요청한 형식화된 개체가 있는 경우 채널 스택의 해당 계층에서 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="be310-114">Returns a typed object requested, if present, from the appropriate layer in the channel stack.</span></span></summary>
        <returns><span data-ttu-id="be310-115">요청한 형식화된 개체가 있으면 형식화된 개체 <paramref name="T" />이고, 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be310-115">The typed object <paramref name="T" /> requested, if it is present or <see langword="null" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be310-116">이 메서드를 사용하여 속성을 설정하거나 채널 스택의 해당 계층에서 상태를 가져오기 위한 인터페이스 등과 같은 형식화된 개체를 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="be310-116">Use this method to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.</span></span> <span data-ttu-id="be310-117">요청된 개체의 반환을 지원하는 계층이 있으면 해당 개체가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="be310-117">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="be310-118">그렇지 않으면 스택의 다음 계층에 호출을 위임합니다.</span><span class="sxs-lookup"><span data-stu-id="be310-118">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="be310-119">스택의 맨 아래에 도달할 때까지 요청된 개체를 지원하는 채널 계층이 없으면 메서드는 `null`을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="be310-119">If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IChannelListener.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="System.ServiceModel.Channels.IChannelListener.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be310-120">팩터리에 의해 생성된 수신기에서 수신하는 URI를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="be310-120">Gets the URI on which the listeners that are generated by the factory listen.</span></span></summary>
        <value><span data-ttu-id="be310-121">팩터리에 의해 생성된 수신기에서 수신하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be310-121">The <see cref="T:System.Uri" /> on which the listeners that are generated by the factory listen.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be310-122">이 URI는 <xref:System.ServiceModel.Channels.IChannelListener>에서 메시지 수신을 대기하는 전송 주소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be310-122">This URI represents the transport address on which the <xref:System.ServiceModel.Channels.IChannelListener> is listening for messages.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForChannel">
      <MemberSignature Language="C#" Value="public bool WaitForChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChannel (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitForChannel : TimeSpan -&gt; bool" Usage="iChannelListener.WaitForChannel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="be310-123">제한 시간이 초과되기 전에 채널 대기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be310-123">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="be310-124">채널 도착을 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="be310-124">Waits for a channel to arrive.</span></span></summary>
        <returns><span data-ttu-id="be310-125"><paramref name="timeout" />에 지정된 시간 간격 전에 채널이 도착하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be310-125"><see langword="true" /> if a channel arrived before the interval of time specified by the <paramref name="timeout" />; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>