<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ContextExchangeMechanism.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53468fc57a181f9deddc3d67711fd8ae7d840809b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3468fc57a181f9deddc3d67711fd8ae7d840809b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>Specifies whether an HTTP cookie or a SOAP header is the mechanism used to exchange context for a conversation between a client and service.</source>
          <target state="translated">클라이언트와 서비스 간 대화에 대한 컨텍스트를 교환하는 데 사용된 메커니즘이 HTTP 쿠키인지 SOAP 헤더인지를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ContextBindingElement.%23ctor%28System.Net.Security.ProtectionLevel%2CSystem.ServiceModel.Channels.ContextExchangeMechanism%29&gt;</ph> constructor to specify the value of the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.ContextExchangeMechanism&gt;</ph> for a conversation between a client and service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism%2A&gt;</ph> 속성 또는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ContextBindingElement.%23ctor%28System.Net.Security.ProtectionLevel%2CSystem.ServiceModel.Channels.ContextExchangeMechanism%29&gt;</ph> 생성자를 사용하여 클라이언트와 서비스 간 대화에 대한 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.ContextExchangeMechanism&gt;</ph>의 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>Service endpoints that require support for the context exchange protocol can make this requirement explicit in their published policy.</source>
          <target state="translated">컨텍스트 교환 프로토콜을 지원해야 하는 서비스 끝점에서는 이러한 요구 사항을 게시된 정책에 명시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>Policy assertions that represent the requirement for the client to support the context exchange protocol at the SOAP level or that require the enabling of HTTP cookie support can be published by an endpoint.</source>
          <target state="translated">SOAP 수준에서 컨텍스트 교환 프로토콜을 지원하는 클라이언트의 요구 사항을 나타내거나 HTTP 쿠키 지원을 사용하도록 설정하는 정책 어설션을 끝점에서 게시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>The generation of these assertions into the policy on the service is controlled by the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism%2A&gt;</ph> property as follows:</source>
          <target state="translated">서비스 측의 정책에 대한 이러한 어설션의 생성은 다음과 같이 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism%2A&gt;</ph> 속성의 값으로 제어됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>For HttpCookie, the following assertion is generated:</source>
          <target state="translated">HttpCookie에 대 한 경우 다음 어설션이 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>For ContextSoapHeader, the following assertion is generated:</source>
          <target state="translated">ContextSoapHeader에 대 한 경우 다음 어설션이 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>The HttpCookie enumeration is implemented at the transport layer.</source>
          <target state="translated">HttpCookie 열거형 전송 계층에서 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>This can be used in the case of simplex communication, where the client makes an initial request and the context is provided by the service on the corresponding reply.</source>
          <target state="translated">이 열거는 클라이언트에서 처음으로 요청하고 해당 응답으로 서비스에서 컨텍스트를 제공하는 단면 통신의 경우에 사용됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>All subsequent messages between the service and client for the lifetime of that conversation contain the context.</source>
          <target state="translated">해당 대화가 지속되는 동안 서비스와 클라이언트 간의 모든 후속 메시지에 컨텍스트가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>For service endpoints that use an HTTP transport and clients that agree to allow the use of HTTP cookies, the HttpCookie enumeration can be utilized to exchange the application context.</source>
          <target state="translated">HTTP 전송 및 HTTP 쿠키를 사용할 수 있도록에 동의 하는 클라이언트를 사용 하는 서비스 끝점에 대 한 응용 프로그램 컨텍스트를 교환 하 HttpCookie 열거형을 활용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>When HTTP cookies are used to propagate context, they should be protected using transport security.</source>
          <target state="translated">컨텍스트를 전파하는 데 사용되는 HTTP 쿠키는 전송 보안을 사용하여 보호해야 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>This mechanism cannot be used with non-HTTP transports.</source>
          <target state="translated">이 메커니즘은 HTTP를 사용하지 않는 전송에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>The ContextSoapHeader enumeration provides an alternative that is implemented in a custom context channel and that can be used with non-HTTP transports and other message exchange pattern, such as request-reply, and a duplex session.</source>
          <target state="translated">ContextSoapHeader 열거는 사용자 지정 컨텍스트 채널에서 구현 되는 및 HTTP가 아닌 전송 및 요청-회신 및 이중 세션 같은 다른 메시지 교환 패턴에 사용할 수 있는 대안을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>This context exchange protocol provides a SOAP-based equivalent of the feature offered by HTTP cookies at the transport layer.</source>
          <target state="translated">이 컨텍스트 교환 프로토콜에서는 전송 계층에서 HTTP 쿠키가 제공하는 기능과 동일한 SOAP 기반 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>It introduces a new <ph id="ph1">`wsc:Context`</ph> SOAP header to represent the context information.</source>
          <target state="translated">또한 새로운 <ph id="ph1">`wsc:Context`</ph> SOAP 헤더를 도입하여 컨텍스트 정보를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>The <ph id="ph1">`wsc:Context`</ph> header must be protected from modification while in transit for the same reason as the WS-Addressing headers must be protected: upon arrival, these headers are used to dispatch the message to the correct workflow instances.</source>
          <target state="translated"><ph id="ph1">`wsc:Context`</ph> 헤더는 WS-Addressing 헤더를 보호해야 하는 이유와 동일한 이유로 전송되는 동안 수정되지 않도록 보호해야 합니다. 이러한 헤더는 도착 시 올바른 워크플로 인스턴스로 메시지를 디스패치하는 데 사용되기 때문입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>The <ph id="ph1">`wsc:Context`</ph> header is therefore required to be digitally signed at either SOAP or transport level when the binding offers message protection capability.</source>
          <target state="translated">따라서 <ph id="ph1">`wsc:Context`</ph> 헤더는 바인딩에서 메시지 보호 기능을 제공하는 경우 SOAP 수준이나 전송 수준에서 디지털 서명되어야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.ContextExchangeMechanism">
          <source>The channel layer communicates the context to and from the application layer using <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ContextMessageProperty&gt;</ph>.</source>
          <target state="translated">채널 계층은 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ContextMessageProperty&gt;</ph>를 사용하여 응용 프로그램 간에 컨텍스트를 전송합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader">
          <source>A SOAP header is used to exchange context.</source>
          <target state="translated">컨텍스트를 교환하는 데 SOAP 헤더가 사용되며,</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader">
          <source>This is the default exchange mechanism.</source>
          <target state="translated">기본 교환 메커니즘입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Channels.ContextExchangeMechanism.HttpCookie">
          <source>An HTTP cookie is used to exchange context.</source>
          <target state="translated">컨텍스트를 교환하는 데 HTTP 쿠키가 사용됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>