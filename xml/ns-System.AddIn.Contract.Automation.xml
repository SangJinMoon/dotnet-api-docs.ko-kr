<Namespace Name="System.AddIn.Contract.Automation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="040085f663162836260f3591e6fe2408281ce472" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51885408" /></Metadata><Docs>
    <summary><span data-ttu-id="6cbfa-101"><see cref="N:System.AddIn.Contract.Automation" /> 네임스페이스에는 구성 요소에서 형식 정보에 액세스하고 형식 멤버를 호출하는 데 사용하는 인터페이스가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6cbfa-101">The <see cref="N:System.AddIn.Contract.Automation" /> namespace contains interfaces that components use to access type information and invoke type members.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cbfa-102">인터페이스를 사용 합니다 <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> 네임 스페이스에 대 한 직접 액세스 하지 않고도 원격 개체에 대 한 형식 정보에 액세스 하도록 구성 요소를 사용 하도록 설정 합니다 <xref:System.Type> 원격 개체의 합니다.</span><span class="sxs-lookup"><span data-stu-id="6cbfa-102">Use the interfaces in the <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> namespace to enable components to access type information for a remote object without having direct access to the <xref:System.Type> of the remote object.</span></span> <span data-ttu-id="6cbfa-103">합니다 <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> 인터페이스 및 구조를 사용 하는 구성 요소에 대 한 리플렉션 기능을 정의 하는 네임 스페이스를 <xref:System.AddIn.Contract?displayProperty=nameWithType>를 <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType>, 및 <xref:System.AddIn.Contract.Collections?displayProperty=nameWithType> 전달할 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6cbfa-103">The <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> namespace defines reflection functionality for components that use the interfaces and structures in the <xref:System.AddIn.Contract?displayProperty=nameWithType>, <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType>, and <xref:System.AddIn.Contract.Collections?displayProperty=nameWithType> namespaces to communicate.</span></span> <span data-ttu-id="6cbfa-104">이러한 네임 스페이스에서 인터페이스 계약 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="6cbfa-104">The interfaces in these namespaces are also called contracts.</span></span> <span data-ttu-id="6cbfa-105">모든 계약에서 파생 된 <xref:System.AddIn.Contract.IContract> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6cbfa-105">All contracts derive from the <xref:System.AddIn.Contract.IContract> interface.</span></span>  
  
 <span data-ttu-id="6cbfa-106">계약을 사용 하 여 구성 요소 간의 통신을 관리를 구현 해야 합니다는 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> 다른 구성 요소에 형식 정보를 노출 하는 형식에 대 한 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6cbfa-106">When using contracts to manage the communication between components, you must implement the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface in a type to expose the type information to other components.</span></span> <span data-ttu-id="6cbfa-107">구성 요소를 호출 하 여 다음 형식의 멤버에 액세스할 수 합니다 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> 가져올 인터페이스의 메서드는 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>합니다.</span><span class="sxs-lookup"><span data-stu-id="6cbfa-107">Components can then access the members of the type by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method of the interface to get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.</span></span> <span data-ttu-id="6cbfa-108">다른 인터페이스 및 구조를 <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> 네임 스페이스 대리자, 속성, 메서드, 이벤트 및 필드에 대 한 정보를 입력에 대 한 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6cbfa-108">The other interfaces and structures in the <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> namespace provide access to type information for delegates, properties, methods, events, and fields.</span></span>  
  
 <span data-ttu-id="6cbfa-109">구성 요소에서 계약을 사용할 수는 <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> 네임 스페이스는 동일한 프로세스 또는 애플리케이션 도메인 또는 다른 프로세스 또는 애플리케이션 도메인의 개체에 대 한 형식 정보에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6cbfa-109">Components can use the contracts in the <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> namespace to access type information for an object that is in a different process or application domain, or in the same process or application domain.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.AddIn.Contract" />
    <altmember cref="N:System.AddIn.Contract.Collections" />
    <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b"><span data-ttu-id="6cbfa-110">추가 기능 및 확장성</span><span class="sxs-lookup"><span data-stu-id="6cbfa-110">Add-ins and Extensibility</span></span></related>
  </Docs>
</Namespace>