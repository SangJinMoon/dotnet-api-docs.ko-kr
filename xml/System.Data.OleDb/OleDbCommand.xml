<Type Name="OleDbCommand" FullName="System.Data.OleDb.OleDbCommand">
  <TypeSignature Language="C#" Value="public sealed class OleDbCommand : System.Data.Common.DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbCommand extends System.Data.Common.DbCommand implements class System.Data.IDbCommand, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbCommand sealed : System::Data::Common::DbCommand, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e55bd-101">데이터 원본에 대해 실행할 SQL 문이나 저장된 프로시저를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-101">Represents an SQL statement or stored procedure to execute against a data source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-102">인스턴스가 <xref:System.Data.OleDb.OleDbCommand> 만들어지면 읽기/쓰기 속성은 초기 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-102">When an instance of <xref:System.Data.OleDb.OleDbCommand> is created, the read/write properties are set to their initial values.</span></span> <span data-ttu-id="e55bd-103">이러한 값의 목록에 대 한 참조는 <xref:System.Data.OleDb.OleDbCommand> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-103">For a list of these values, see the <xref:System.Data.OleDb.OleDbCommand> constructor.</span></span>  
  
 <span data-ttu-id="e55bd-104"><xref:System.Data.OleDb.OleDbCommand> 데이터 원본에서 명령을 실행 하는 다음 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-104"><xref:System.Data.OleDb.OleDbCommand> features the following methods executing commands at a data source:</span></span>  
  
|<span data-ttu-id="e55bd-105">항목</span><span class="sxs-lookup"><span data-stu-id="e55bd-105">Item</span></span>|<span data-ttu-id="e55bd-106">설명</span><span class="sxs-lookup"><span data-stu-id="e55bd-106">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>|<span data-ttu-id="e55bd-107">행을 반환 하는 명령을 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-107">Executes commands that return rows.</span></span> <span data-ttu-id="e55bd-108"><xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> 원하는 효과 사용 하는 경우에 없을 수 SQL SET 문과 같은 명령을 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-108"><xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> may not have the effect that you want if used to execute commands such as SQL SET statements.</span></span>|  
|<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>|<span data-ttu-id="e55bd-109">SQL INSERT, DELETE, UPDATE 및 SET 문과 같은 명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-109">Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>|<span data-ttu-id="e55bd-110">데이터베이스의 집계 값 등 단일 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-110">Retrieves a single value, for example, an aggregate value from a database.</span></span>|  
  
 <span data-ttu-id="e55bd-111">다시 설정할 수 있습니다는 <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> 속성 및 재사용은 <xref:System.Data.OleDb.OleDbCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-111">You can reset the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property and reuse the <xref:System.Data.OleDb.OleDbCommand> object.</span></span> <span data-ttu-id="e55bd-112">그러나를 닫아야는 <xref:System.Data.OleDb.OleDbDataReader> 전에 이전 또는 새 명령을 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-112">However, you must close the <xref:System.Data.OleDb.OleDbDataReader> before you can execute a new or previous command.</span></span>  
  
 <span data-ttu-id="e55bd-113">심각한 <xref:System.Data.OleDb.OleDbException> (예: SQL Server 심각도 수준이 20 이상인 경우)에서 실행 하는 메서드에서 생성 되는 <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbConnection>, 닫힐 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-113">If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbConnection>, the connection may be closed.</span></span> <span data-ttu-id="e55bd-114">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-114">However, the user can reopen the connection and continue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-115">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand>, 함께 <xref:System.Data.OleDb.OleDbDataAdapter> 및 <xref:System.Data.OleDb.OleDbConnection>, Access 데이터베이스에서 행을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-115">The following example uses the <xref:System.Data.OleDb.OleDbCommand>, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from an Access database.</span></span> <span data-ttu-id="e55bd-116">채워진 <xref:System.Data.DataSet> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-116">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="e55bd-117">이 예제에서는 초기화 된 전달 <xref:System.Data.DataSet>, 연결 문자열, 쿼리 문자열을는 SQL SELECT 문 및 원본 데이터베이스 테이블의 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-117">The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the source database table.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.OleDb.OleDbDataAdapter" />
    <altmember cref="T:System.Data.OleDb.OleDbConnection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e55bd-118"><see cref="T:System.Data.OleDb.OleDbCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-118">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e55bd-119"><see cref="T:System.Data.OleDb.OleDbCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-119">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-120">기본 생성자는 모든 필드를를 기본값으로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-120">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="e55bd-121">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Data.OleDb.OleDbCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-121">The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
|<span data-ttu-id="e55bd-122">속성</span><span class="sxs-lookup"><span data-stu-id="e55bd-122">Properties</span></span>|<span data-ttu-id="e55bd-123">초기 값</span><span class="sxs-lookup"><span data-stu-id="e55bd-123">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|<span data-ttu-id="e55bd-124">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="e55bd-124">empty string ("")</span></span>|  
|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|<span data-ttu-id="e55bd-125">30</span><span class="sxs-lookup"><span data-stu-id="e55bd-125">30</span></span>|  
|<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|<span data-ttu-id="e55bd-126">null</span><span class="sxs-lookup"><span data-stu-id="e55bd-126">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-127">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-127">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.OleDbCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.OleDbCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommand(System::String ^ cmdText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="e55bd-128">쿼리 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-128">The text of the query.</span></span></param>
        <summary><span data-ttu-id="e55bd-129">쿼리 텍스트를 사용하여 <see cref="T:System.Data.OleDb.OleDbCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-129">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-130">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Data.OleDb.OleDbCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-130">The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
|<span data-ttu-id="e55bd-131">속성</span><span class="sxs-lookup"><span data-stu-id="e55bd-131">Properties</span></span>|<span data-ttu-id="e55bd-132">초기 값</span><span class="sxs-lookup"><span data-stu-id="e55bd-132">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|<span data-ttu-id="e55bd-133">30</span><span class="sxs-lookup"><span data-stu-id="e55bd-133">30</span></span>|  
|<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|<span data-ttu-id="e55bd-134">null</span><span class="sxs-lookup"><span data-stu-id="e55bd-134">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-135">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-135">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OleDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommand(System::String ^ cmdText, System::Data::OleDb::OleDbConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="e55bd-136">쿼리 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-136">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="e55bd-137">데이터 소스에 대한 연결을 나타내는 <see cref="T:System.Data.OleDb.OleDbConnection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-137">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection to a data source.</span></span></param>
        <summary><span data-ttu-id="e55bd-138">쿼리의 텍스트와 <see cref="T:System.Data.OleDb.OleDbConnection" />을 사용하여 <see cref="T:System.Data.OleDb.OleDbCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-138">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query and an <see cref="T:System.Data.OleDb.OleDbConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-139">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Data.OleDb.OleDbCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-139">The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
|<span data-ttu-id="e55bd-140">속성</span><span class="sxs-lookup"><span data-stu-id="e55bd-140">Properties</span></span>|<span data-ttu-id="e55bd-141">초기 값</span><span class="sxs-lookup"><span data-stu-id="e55bd-141">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|<span data-ttu-id="e55bd-142">30</span><span class="sxs-lookup"><span data-stu-id="e55bd-142">30</span></span>|  
|<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|<span data-ttu-id="e55bd-143">새 <xref:System.Data.OleDb.OleDbConnection> 즉에 대 한 값은 `connection` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-143">A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="e55bd-144">관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-144">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-145">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-145">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection, System.Data.OleDb.OleDbTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.OleDb.OleDbConnection connection, class System.Data.OleDb.OleDbTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OleDbConnection, transaction As OleDbTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommand(System::String ^ cmdText, System::Data::OleDb::OleDbConnection ^ connection, System::Data::OleDb::OleDbTransaction ^ transaction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
        <Parameter Name="transaction" Type="System.Data.OleDb.OleDbTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="e55bd-146">쿼리 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-146">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="e55bd-147">데이터 소스에 대한 연결을 나타내는 <see cref="T:System.Data.OleDb.OleDbConnection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-147">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection to a data source.</span></span></param>
        <param name="transaction"><span data-ttu-id="e55bd-148"><see cref="T:System.Data.OleDb.OleDbCommand" />가 실행되는 트랜잭션입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-148">The transaction in which the <see cref="T:System.Data.OleDb.OleDbCommand" /> executes.</span></span></param>
        <summary><span data-ttu-id="e55bd-149">쿼리의 텍스트, <see cref="T:System.Data.OleDb.OleDbConnection" /> 및 <see cref="P:System.Data.OleDb.OleDbCommand.Transaction" />을 사용하여 <see cref="T:System.Data.OleDb.OleDbCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-149">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query, an <see cref="T:System.Data.OleDb.OleDbConnection" />, and the <see cref="P:System.Data.OleDb.OleDbCommand.Transaction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-150">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Data.OleDb.OleDbCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-150">The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
|<span data-ttu-id="e55bd-151">속성</span><span class="sxs-lookup"><span data-stu-id="e55bd-151">Properties</span></span>|<span data-ttu-id="e55bd-152">초기 값</span><span class="sxs-lookup"><span data-stu-id="e55bd-152">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|<span data-ttu-id="e55bd-153">30</span><span class="sxs-lookup"><span data-stu-id="e55bd-153">30</span></span>|  
|<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|<span data-ttu-id="e55bd-154">새 <xref:System.Data.OleDb.OleDbConnection> 즉에 대 한 값은 `connection` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-154">A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="e55bd-155">관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-155">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-156">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-156">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.OleDbCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.OleDbCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e55bd-157"><see cref="T:System.Data.OleDb.OleDbCommand" />의 실행을 취소하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-157">Tries to cancel the execution of an <see cref="T:System.Data.OleDb.OleDbCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-158">취소할 명령이 없으면 아무 동작도 발생하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-158">If there is nothing to cancel, nothing occurs.</span></span> <span data-ttu-id="e55bd-159">그러나 진행 중인 명령이 있는 경우 취소 동작이 실패하더라도 예외가 생성되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-159">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-160">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand>, 실행 한 다음 실행을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-160">The following example creates an <xref:System.Data.OleDb.OleDbCommand>, executes it, and then cancels the execution.</span></span> <span data-ttu-id="e55bd-161">이를 위해 SQL SELECT 문을 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 메서드에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-161">To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Cancel Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Cancel Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Cancel Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Cancel Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e55bd-162">현재 인스턴스의 복사본인 새 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-162">Creates a new <see cref="T:System.Data.OleDb.OleDbCommand" /> object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="e55bd-163">이 인스턴스의 복사본인 새 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-163">A new <see cref="T:System.Data.OleDb.OleDbCommand" /> object that is a copy of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e55bd-164">SQL 문이나 데이터 소스에서 실행할 저장 프로시저를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-164">Gets or sets the SQL statement or stored procedure to execute at the data source.</span></span></summary>
        <value><span data-ttu-id="e55bd-165">실행할 SQL 문 또는 저장 프로시저입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-165">The SQL statement or stored procedure to execute.</span></span> <span data-ttu-id="e55bd-166">기본값은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-166">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-167">경우는 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-167">When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="e55bd-168">사용자는 저장된 프로시저 이름에 특수 문자가 포함 되어 있는 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-168">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="e55bd-169">명령 중 하나를 호출 하는 경우이 저장된 프로시저가 실행 된 `Execute` 메서드.</span><span class="sxs-lookup"><span data-stu-id="e55bd-169">The command executes this stored procedure when you call one of the `Execute` methods.</span></span>  
  
 <span data-ttu-id="e55bd-170">때 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 로 설정 된 `TableDirect`, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 에 액세스할 수 속성을 테이블 또는 테이블의 이름으로 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-170">When <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `TableDirect`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the table or tables to be accessed.</span></span> <span data-ttu-id="e55bd-171">사용자는 명명된 된 테이블에 특수 문자가 포함 되어 있으면 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-171">The user may be required to use escape character syntax if any of the named tables contain any special characters.</span></span> <span data-ttu-id="e55bd-172">모든 행과 명명 된 테이블 또는 테이블의 열 중 하나를 호출 하는 경우 반환 될 됩니다는 `Execute` 메서드.</span><span class="sxs-lookup"><span data-stu-id="e55bd-172">All rows and columns of the named table or tables will be returned when you call one of the `Execute` methods.</span></span>  
  
 <span data-ttu-id="e55bd-173">설정할 수 없습니다.는 <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>, 및 <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> 속성은 현재 연결 execute 또는 인출 작업을 수행 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="e55bd-173">You cannot set the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>, and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="e55bd-174">OLE DB.NET 공급자가 SQL 문 또는 저장된 프로시저에 의해 호출에 매개 변수 전달에 대 한 명명 된 매개 변수를 지원 하지는 <xref:System.Data.OleDb.OleDbCommand> 때 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 로 설정 된 `Text`합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-174">The OLE DB.NET Provider does not support named parameters for passing parameters to an SQL Statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`.</span></span> <span data-ttu-id="e55bd-175">이 경우 물음표 (?) 자리 표시자를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-175">In this case, the question mark (?) placeholder must be used.</span></span> <span data-ttu-id="e55bd-176">예:</span><span class="sxs-lookup"><span data-stu-id="e55bd-176">For example:</span></span>  
  
 `SELECT * FROM Customers WHERE CustomerID = ?`  
  
 <span data-ttu-id="e55bd-177">따라서 순서 <xref:System.Data.OleDb.OleDbParameter> 개체에 추가 됩니다는 <xref:System.Data.OleDb.OleDbParameterCollection> 매개 변수에 물음표 자리 표시자의 위치와 직접 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-177">Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.</span></span>  
  
 <span data-ttu-id="e55bd-178">자세한 내용은 참조 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-178">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-179">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-179">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e55bd-180">명령 실행을 종료하고 오류를 생성하기 전에 대기 시간을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-180">Gets or sets the wait time before terminating an attempt to execute a command and generating an error.</span></span></summary>
        <value><span data-ttu-id="e55bd-181">명령이 실행될 때까지 대기하는 시간(초)입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-181">The time (in seconds) to wait for the command to execute.</span></span> <span data-ttu-id="e55bd-182">기본값은 30초입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-182">The default is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-183">값 0은 제한 없음을 나타냄에 피해 야 합니다.는 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 이므로 명령을 실행 하려고 무기한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-183">A value of 0 indicates no limit, and should be avoided in a <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> because an attempt to execute a command will wait indefinitely.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e55bd-184"><see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> 속성의 해석 방법을 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-184">Gets or sets a value that indicates how the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> property is interpreted.</span></span></summary>
        <value><span data-ttu-id="e55bd-185"><see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-185">One of the <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> values.</span></span> <span data-ttu-id="e55bd-186">기본값은 Text입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-186">The default is Text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-187">설정 하는 경우는 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 속성을 `StoredProcedure`를 설정 해야는 <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> 속성을 저장된 프로시저의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-187">When you set the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="e55bd-188">Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-188">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="e55bd-189"><xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 및 <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> 현재 연결 execute 또는 인출 작업을 수행 하는 경우 속성을 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-189">The <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="e55bd-190">OLE DB.NET 공급자는 SQL 문 또는 저장된 프로시저에 의해 호출에 매개 변수 전달에 대 한 명명 된 매개 변수를 지원 하지는 <xref:System.Data.OleDb.OleDbCommand> 때 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> Text로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-190">The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to Text.</span></span> <span data-ttu-id="e55bd-191">이 경우 물음표 (?) 자리 표시자를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-191">In this case, the question mark (?) placeholder must be used.</span></span> <span data-ttu-id="e55bd-192">예:</span><span class="sxs-lookup"><span data-stu-id="e55bd-192">For example:</span></span>  
  
 `SELECT * FROM Customers WHERE CustomerID = ?`  
  
 <span data-ttu-id="e55bd-193">따라서 순서 <xref:System.Data.OleDb.OleDbParameter> 개체에 추가 됩니다는 <xref:System.Data.OleDb.OleDbParameterCollection> 매개 변수에 물음표 자리 표시자의 위치와 직접 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-193">Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.</span></span> <span data-ttu-id="e55bd-194">자세한 내용은 참조 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-194">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e55bd-195">값이 유효한 <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" />이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-195">The value was not a valid <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OleDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbConnection ^ Connection { System::Data::OleDb::OleDbConnection ^ get(); void set(System::Data::OleDb::OleDbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e55bd-196"><see cref="T:System.Data.OleDb.OleDbCommand" />의 이 인스턴스에서 사용되는 <see cref="T:System.Data.OleDb.OleDbConnection" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-196">Gets or sets the <see cref="T:System.Data.OleDb.OleDbConnection" /> used by this instance of the <see cref="T:System.Data.OleDb.OleDbCommand" />.</span></span></summary>
        <value><span data-ttu-id="e55bd-197">데이터 소스와의 연결입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-197">The connection to a data source.</span></span> <span data-ttu-id="e55bd-198">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-198">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-199">설정할 수 없습니다.는 <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 및 <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> 속성은 현재 연결 execute 또는 인출 작업을 수행 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="e55bd-199">You cannot set the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="e55bd-200">트랜잭션이 처리되는 중에 <xref:System.Data.OleDb.OleDbCommand.Connection%2A>을 설정한 경우 <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> 속성이 null이 아니면 <xref:System.InvalidOperationException>이 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-200">If you set <xref:System.Data.OleDb.OleDbCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated.</span></span> <span data-ttu-id="e55bd-201"><xref:System.Data.OleDb.OleDbCommand.Transaction%2A> 속성이 null이 아니고 트랜잭션이 이미 커밋 또는 롤백된 경우에는 <xref:System.Data.OleDb.OleDbCommand.Transaction%2A>이 null로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-201">If the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> is set to null.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-202">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-202">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Connection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Connection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Connection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Connection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e55bd-203">트랜잭션을 진행하는 동안 <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> 속성이 변경되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-203">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> property was changed while a transaction was in progress.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OleDbParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e55bd-204"><see cref="T:System.Data.OleDb.OleDbParameter" /> 개체의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-204">Creates a new instance of an <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="e55bd-205"><see cref="T:System.Data.OleDb.OleDbParameter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-205">An <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-206"><xref:System.Data.OleDb.OleDbCommand.CreateParameter%2A> 메서드는 강력한 형식의 버전의 <xref:System.Data.IDbCommand.CreateParameter%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-206">The <xref:System.Data.OleDb.OleDbCommand.CreateParameter%2A> method is a strongly typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e55bd-207">사용자 지정 Windows Forms 디자이너 컨트롤에서 명령 개체의 표시 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-207">Gets or sets a value that indicates whether the command object should be visible in a customized Windows Forms Designer control.</span></span></summary>
        <value><span data-ttu-id="e55bd-208">명령 개체를 컨트롤에 표시할지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-208">A value that indicates whether the command object should be visible in a control.</span></span> <span data-ttu-id="e55bd-209">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-209">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteNonQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e55bd-210"><see cref="P:System.Data.OleDb.OleDbCommand.Connection" />에 대해 SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-210">Executes an SQL statement against the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="e55bd-211">영향을 받은 행 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-211">The number of rows affected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-212">사용할 수는 <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> 예를 들어 카탈로그 작업을 수행 하려면, 데이터베이스의 구조를 쿼리할 수 또는 테이블과 같은 데이터베이스 개체를 만드는 또는 사용 하지 않고 데이터베이스의 데이터를 변경 하는 <xref:System.Data.DataSet> UPDATE, INSERT 또는 DELETE를 실행 하 여 문입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-212">You can use the <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> to perform catalog operations, for example, to query the structure of a database or to create database objects such as tables, or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="e55bd-213">하지만 <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> 행을 모든 출력 매개 변수가 반환 하지 또는 반환 값 매개 변수에 매핑된 데이터 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-213">Although the <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> returns no rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="e55bd-214">UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-214">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="e55bd-215">다른 형식의 문의 경우에는 반환 값이 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-215">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="e55bd-216">롤백이 발생 하는 경우 반환 값-1 이기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-216">If a rollback occurs, the return value is also -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-217">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand> 를 사용 하 여 빌드한 다음 실행 <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-217">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="e55bd-218">이 예제는 UPDATE, INSERT 또는 DELETE 같은 SQL 문을 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-218">The example is passed a string that is an SQL statement such as UPDATE, INSERT, or DELETE, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e55bd-219">연결이 존재하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-219">The connection does not exist.</span></span>  
  
 <span data-ttu-id="e55bd-220">또는</span><span class="sxs-lookup"><span data-stu-id="e55bd-220">-or-</span></span>  
  
 <span data-ttu-id="e55bd-221">연결이 열려 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-221">The connection is not open.</span></span>  
  
 <span data-ttu-id="e55bd-222">또는</span><span class="sxs-lookup"><span data-stu-id="e55bd-222">-or-</span></span>  
  
 <span data-ttu-id="e55bd-223">연결이 원래 참여한 컨텍스트와 다른 트랜잭션 컨텍스트 내에서 명령을 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e55bd-223">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e55bd-224"><see cref="P:System.Data.OleDb.OleDbCommand.CommandText" />를 <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />에 보내고 <see cref="T:System.Data.OleDb.OleDbDataReader" />를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-224">Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e55bd-225"><see cref="P:System.Data.OleDb.OleDbCommand.CommandText" />를 <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />에 보내고 <see cref="T:System.Data.OleDb.OleDbDataReader" />를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-225">Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="e55bd-226"><see cref="T:System.Data.OleDb.OleDbDataReader" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-226">An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-227">경우는 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-227">When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="e55bd-228">명령이 호출 하는 경우이 저장된 프로시저를 실행 <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-228">The command executes this stored procedure when you call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="e55bd-229">닫기 전에 <xref:System.Data.OleDb.OleDbConnection>, 먼저 닫습니다는 <xref:System.Data.OleDb.OleDbDataReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-229">Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object.</span></span> <span data-ttu-id="e55bd-230">또한 닫아야는 <xref:System.Data.OleDb.OleDbDataReader> 다시 사용 하려는 경우 개체는 <xref:System.Data.OleDb.OleDbCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-230">You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-231">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand>, 한 다음 SQL SELECT 문에 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 전달 하 여 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-231">The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteReader1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteReader1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e55bd-232">연결이 원래 참여한 컨텍스트와 다른 트랜잭션 컨텍스트 내에서 명령을 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e55bd-232">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="e55bd-233"><see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-233">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="e55bd-234"><see cref="P:System.Data.OleDb.OleDbCommand.CommandText" />를 <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />에 보내고 <see cref="T:System.Data.CommandBehavior" /> 값 중 하나를 사용하여 <see cref="T:System.Data.OleDb.OleDbDataReader" />를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-234">Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />, and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="e55bd-235"><see cref="T:System.Data.OleDb.OleDbDataReader" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-235">An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-236">지정 하는 경우 <xref:System.Data.CommandBehavior.SingleRow> 와 <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> 의 메서드는 <xref:System.Data.OleDb.OleDbCommand> 개체,.NET Framework Data Provider for OLE DB는 OLE DB를 사용 하 여 바인딩을 수행 **IRow** 가능 하다 면 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-236">When you specify <xref:System.Data.CommandBehavior.SingleRow> with the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method of the <xref:System.Data.OleDb.OleDbCommand> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB **IRow** interface if it is available.</span></span> <span data-ttu-id="e55bd-237">그렇지 않으면 사용 된 **IRowset** 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-237">Otherwise, it uses the **IRowset** interface.</span></span> <span data-ttu-id="e55bd-238">SQL 문이 단일 행만 반환해야 하는 경우 <xref:System.Data.CommandBehavior.SingleRow>를 지정하여 응용 프로그램의 성능을 향상시킬 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-238">If your SQL statement is expected to return only a single row, specifying <xref:System.Data.CommandBehavior.SingleRow> can also improve application performance.</span></span>  
  
 <span data-ttu-id="e55bd-239">경우는 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-239">When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="e55bd-240">명령이 호출 하는 경우이 저장된 프로시저를 실행 <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-240">The command executes this stored procedure when you call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="e55bd-241"><xref:System.Data.OleDb.OleDbDataReader> 크기가 큰 이진 값를 효율적으로 읽을 수 있는 특별 한 모드를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-241">The <xref:System.Data.OleDb.OleDbDataReader> supports a special mode that enables large binary values to be read efficiently.</span></span> <span data-ttu-id="e55bd-242">자세한 내용은 참조는 `SequentialAccess` 에 대 한 설정 <xref:System.Data.CommandBehavior>합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-242">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="e55bd-243">닫기 전에 <xref:System.Data.OleDb.OleDbConnection>, 먼저 닫습니다는 <xref:System.Data.OleDb.OleDbDataReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-243">Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object.</span></span> <span data-ttu-id="e55bd-244">또한 닫아야는 <xref:System.Data.OleDb.OleDbDataReader> 다시 사용 하려는 경우 개체는 <xref:System.Data.OleDb.OleDbCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-244">You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object.</span></span> <span data-ttu-id="e55bd-245">경우는 <xref:System.Data.OleDb.OleDbDataReader> 사용 하 여 만든 <xref:System.Data.CommandBehavior> 로 설정 `CloseConnection`닫는는 <xref:System.Data.OleDb.OleDbDataReader> 자동으로 연결을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-245">If the <xref:System.Data.OleDb.OleDbDataReader> is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the <xref:System.Data.OleDb.OleDbDataReader> closes the connection automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-246">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand>, 다음 TRANSACT-SQL SELECT 문을 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 전달 하 여 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-246">The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</span></span> <span data-ttu-id="e55bd-247"><xref:System.Data.CommandBehavior>이 <xref:System.Data.CommandBehavior.CloseConnection>로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-247"><xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e55bd-248">연결이 원래 참여한 컨텍스트와 다른 트랜잭션 컨텍스트 내에서 명령을 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e55bd-248">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteScalar</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e55bd-249">쿼리를 실행하고 쿼리에서 반환된 결과 집합에서 첫 번째 행의 첫 번째 열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-249">Executes the query, and returns the first column of the first row in the result set returned by the query.</span></span> <span data-ttu-id="e55bd-250">다른 열이나 행은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-250">Additional columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="e55bd-251">결과 집합의 첫 행의 첫 열 또는 결과 집합이 비어있을 경우 null 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-251">The first column of the first row in the result set, or a null reference if the result set is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-252">사용 된 <xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A> 예를 들어 단일 값을 검색 하는 메서드, 데이터 원본에서 집계 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-252">Use the <xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A> method to retrieve a single value, for example, an aggregate value, from a data source.</span></span> <span data-ttu-id="e55bd-253">사용 하 여 보다 적은 코드가 필요는 <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> 메서드를 다음에서 반환 된 데이터를 사용 하 여 단일 값을 생성 하는 데 필요한 작업을 수행 하는 <xref:System.Data.OleDb.OleDbDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-253">This requires less code than using the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method, and then performing the operations that are required to generate the single value using the data returned by an <xref:System.Data.OleDb.OleDbDataReader>.</span></span>  
  
 <span data-ttu-id="e55bd-254">일반적인 <xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A> 쿼리 다음 C# 예제와 같이 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-254">A typical <xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "SELECT COUNT(*) FROM region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-255">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand> 를 사용 하 여 빌드한 다음 실행 <xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-255">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using <xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="e55bd-256">이 예제에는 집계 결과 반환 하는 SQL 문으로 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-256">The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e55bd-257">연결이 원래 참여한 컨텍스트와 다른 트랜잭션 컨텍스트 내에서 명령을 실행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e55bd-257">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OleDbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbParameterCollection ^ Parameters { System::Data::OleDb::OleDbParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e55bd-258"><see cref="T:System.Data.OleDb.OleDbParameterCollection" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-258">Gets the <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</span></span></summary>
        <value><span data-ttu-id="e55bd-259">SQL 문 또는 저장 프로시저의 매개 변수</span><span class="sxs-lookup"><span data-stu-id="e55bd-259">The parameters of the SQL statement or stored procedure.</span></span> <span data-ttu-id="e55bd-260">기본값은 빈 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-260">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-261">OLE DB.NET 공급자는 SQL 문 또는 저장된 프로시저에 의해 호출에 매개 변수 전달에 대 한 명명 된 매개 변수를 지원 하지는 <xref:System.Data.OleDb.OleDbCommand> 때 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 로 설정 된 `Text`합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-261">The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`.</span></span> <span data-ttu-id="e55bd-262">이 경우 물음표 (?) 자리 표시자를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-262">In this case, the question mark (?) placeholder must be used.</span></span> <span data-ttu-id="e55bd-263">예:</span><span class="sxs-lookup"><span data-stu-id="e55bd-263">For example:</span></span>  
  
 `SELECT * FROM Customers WHERE CustomerID = ?`  
  
 <span data-ttu-id="e55bd-264">따라서 순서 <xref:System.Data.OleDb.OleDbParameter> 개체에 추가 됩니다는 <xref:System.Data.OleDb.OleDbParameterCollection> 명령 텍스트에서 매개 변수에 물음표 자리 표시자의 위치와 직접 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-264">Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter in the command text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e55bd-265">컬렉션의 매개 변수를 실행 하면 쿼리의 요구 사항을 일치 하지 않으면 오류가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-265">If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</span></span>  
  
 <span data-ttu-id="e55bd-266">자세한 내용은 참조 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-266">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-267">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand> 해당 매개 변수를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-267">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and displays its parameters.</span></span> <span data-ttu-id="e55bd-268">이를 위해 메서드에 전달 됩니다는 <xref:System.Data.OleDb.OleDbConnection>, 배열 및 SQL SELECT 문에 있는 쿼리 문자열 <xref:System.Data.OleDb.OleDbParameter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-268">To accomplish this, the method is passed an <xref:System.Data.OleDb.OleDbConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OleDb.OleDbParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Parameters Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Parameters Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Parameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Parameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Prepare</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e55bd-269">데이터 소스에 대해 명령의 준비된(또는 컴파일된) 버전을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-269">Creates a prepared (or compiled) version of the command on the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-270">경우는 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 속성이 `TableDirect`, <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> 는 아무 작업도 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-270">If the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `TableDirect`, <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> does nothing.</span></span> <span data-ttu-id="e55bd-271">경우 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 로 설정 된 `StoredProcedure`에 대 한 호출 <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> 성공 해야 합니다는 아무 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-271">If <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> should succeed, although it may cause a no-op.</span></span>  
  
 <span data-ttu-id="e55bd-272">호출 하기 전에 <xref:System.Data.OleDb.OleDbCommand.Prepare%2A>, 준비 된 문에서에서 각 매개 변수의 데이터 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-272">Before you call <xref:System.Data.OleDb.OleDbCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span> <span data-ttu-id="e55bd-273">가변 길이 데이터 형식의 각 매개 변수에 대해 설정 해야 합니다는 **크기** 속성을 최대 크기로 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-273">For each parameter that has a variable length data type, you must set the **Size** property to the maximum size needed.</span></span> <span data-ttu-id="e55bd-274"><xref:System.Data.OleDb.OleDbCommand.Prepare%2A> 이러한 조건이 충족 되지 않는 경우 오류가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-274"><xref:System.Data.OleDb.OleDbCommand.Prepare%2A> returns an error if these conditions are not met.</span></span>  
  
 <span data-ttu-id="e55bd-275">호출 하는 경우는 `Execute` 메서드를 호출한 후 <xref:System.Data.OleDb.OleDbCommand.Prepare%2A>에 지정 된 값 보다 큰 모든 매개 변수 값은 **크기** 속성 매개 변수 및 0의 원래 지정 된 크기를 자동으로 잘립니다 잘림 오류가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-275">If you call an `Execute` method after you call <xref:System.Data.OleDb.OleDbCommand.Prepare%2A>, any parameter value that is larger than the value specified by the **Size** property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</span></span>  
  
 <span data-ttu-id="e55bd-276">출력 매개 변수 (준비) 여부는 사용자 지정 데이터 형식이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-276">Output parameters (whether prepared or not) must have a user-specified data type.</span></span> <span data-ttu-id="e55bd-277">최대 가변 길이 데이터 형식 지정도 지정 해야 **크기**합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-277">If you specify a variable length data type, you must also specify the maximum **Size**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e55bd-278">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand> 연결을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-278">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and opens the connection.</span></span> <span data-ttu-id="e55bd-279">그런 다음 SQL SELECT 문을 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 전달 하 여 데이터 원본에서 저장된 프로시저를 준비 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-279">The example then prepares a stored procedure on the data source by passing a string that is an SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e55bd-280"><see cref="P:System.Data.OleDb.OleDbCommand.Connection" />이 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e55bd-280">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.</span></span>  
  
 <span data-ttu-id="e55bd-281">또는</span><span class="sxs-lookup"><span data-stu-id="e55bd-281">-or-</span></span>  
  
 <span data-ttu-id="e55bd-282"><see cref="P:System.Data.OleDb.OleDbCommand.Connection" />이 열려 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="e55bd-282">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not open.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e55bd-283"><see cref="P:System.Data.OleDb.OleDbCommand.CommandTimeout" /> 속성을 기본값으로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-283">Resets the <see cref="P:System.Data.OleDb.OleDbCommand.CommandTimeout" /> property to the default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-284">기본값은 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 30 초입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-284">The default value of the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.IDbCommand.ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e55bd-285">이 멤버에 대한 설명은 <see cref="M:System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e55bd-285">For a description of this member, see <see cref="M:System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-286">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e55bd-286">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e55bd-287"><xref:System.Data.OleDb.OleDbCommand> 인스턴스가 <xref:System.Data.IDbCommand> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-287">It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader () As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader() = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e55bd-288">이 멤버에 대한 설명은 <see cref="M:System.Data.IDbCommand.ExecuteReader" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e55bd-288">For a description of this member, see <see cref="M:System.Data.IDbCommand.ExecuteReader" />.</span></span></summary>
        <returns><span data-ttu-id="e55bd-289"><see cref="T:System.Data.IDataReader" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-289">An <see cref="T:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-290">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e55bd-290">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e55bd-291"><xref:System.Data.OleDb.OleDbCommand> 인스턴스가 <xref:System.Data.IDbCommand> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-291">It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader (behavior As CommandBehavior) As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader(System::Data::CommandBehavior behavior) = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="e55bd-292"><see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-292">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="e55bd-293"><see cref="P:System.Data.IDbCommand.Connection" />에 대해 <see cref="P:System.Data.IDbCommand.CommandText" />를 실행하고 <see cref="T:System.Data.CommandBehavior" /> 값 중 하나를 사용하여 <see cref="T:System.Data.IDataReader" />를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-293">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="e55bd-294"><see cref="T:System.Data.IDataReader" /> 값 중 하나를 사용하여 만든 <see cref="T:System.Data.CommandBehavior" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-294">An <see cref="T:System.Data.IDataReader" /> built using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-295">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e55bd-295">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e55bd-296"><xref:System.Data.OleDb.OleDbCommand> 인스턴스가 <xref:System.Data.IDbCommand> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-296">It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.</span></span>  
  
 <span data-ttu-id="e55bd-297">이 멤버에 대한 설명은 <xref:System.Data.IDbCommand.ExecuteReader%2A>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e55bd-297">For a description of this member, see <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e55bd-298">이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e55bd-298">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="e55bd-299">이 인스턴스의 복사본인 새 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-299">A new <see cref="T:System.Object" /> that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-300">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="e55bd-300">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e55bd-301"><xref:System.Data.OleDb.OleDbCommand> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-301">It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OleDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbTransaction ^ Transaction { System::Data::OleDb::OleDbTransaction ^ get(); void set(System::Data::OleDb::OleDbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e55bd-302"><see cref="T:System.Data.OleDb.OleDbTransaction" />가 실행되는 <see cref="T:System.Data.OleDb.OleDbCommand" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-302">Gets or sets the <see cref="T:System.Data.OleDb.OleDbTransaction" /> within which the <see cref="T:System.Data.OleDb.OleDbCommand" /> executes.</span></span></summary>
        <value><span data-ttu-id="e55bd-303"><see cref="T:System.Data.OleDb.OleDbTransaction" /></span><span class="sxs-lookup"><span data-stu-id="e55bd-303">The <see cref="T:System.Data.OleDb.OleDbTransaction" />.</span></span> <span data-ttu-id="e55bd-304">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-304">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-305">설정할 수 없습니다.는 <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> 특정 값으로 이미 설정 되어 있으며 명령을 실행 중 경우 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-305">You cannot set the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="e55bd-306">트랜잭션 속성을 설정 하는 경우는 <xref:System.Data.OleDb.OleDbTransaction> 동일 하 게 연결 되어 있지 않은 개체 <xref:System.Data.OleDb.OleDbConnection> 로 <xref:System.Data.OleDb.OleDbCommand> 개체 문을 실행 하려고 하면 다음에 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-306">If you set the transaction property to an <xref:System.Data.OleDb.OleDbTransaction> object that is not connected to the same <xref:System.Data.OleDb.OleDbConnection> as the <xref:System.Data.OleDb.OleDbCommand> object, an exception is thrown the next time that you try to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.UpdatedRowSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e55bd-307"><see cref="T:System.Data.DataRow" />의 <see langword="Update" /> 메서드에 의해 사용될 때 명령 결과가 <see cref="T:System.Data.OleDb.OleDbDataAdapter" />에 적용되는 방법을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-307">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see langword="Update" /> method of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span></span></summary>
        <value><span data-ttu-id="e55bd-308"><see cref="T:System.Data.UpdateRowSource" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-308">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e55bd-309">기본 <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> 명령이 자동으로 생성 하지 않는 한 값이 둘 다 (과 마찬가지로 <xref:System.Data.OleDb.OleDbCommandBuilder>),이 경우 기본값은 None입니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-309">The default <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> value is Both unless the command is automatically generated (as with the <xref:System.Data.OleDb.OleDbCommandBuilder>), in which case the default is None.</span></span>  
  
 <span data-ttu-id="e55bd-310">사용 하는 방법에 대 한 자세한 내용은 <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> 속성 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e55bd-310">For more information about how to use the <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e55bd-311">입력한 값이 <see cref="T:System.Data.UpdateRowSource" /> 값 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="e55bd-311">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>