<Type Name="OleDbDataReader" FullName="System.Data.OleDb.OleDbDataReader">
  <TypeSignature Language="C#" Value="public sealed class OleDbDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataReader sealed : System::Data::Common::DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="983ee-101">데이터 소스에서 데이터 행의 앞으로만 이동 가능한 스트림을 읽는 방법을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-101">Provides a way of reading a forward-only stream of data rows from a data source.</span></span> <span data-ttu-id="983ee-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-103">만들려면는 <xref:System.Data.OleDb.OleDbDataReader>를 호출 해야 합니다는 <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> 의 메서드는 <xref:System.Data.OleDb.OleDbCommand> 직접 생성자를 사용 하는 대신 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-103">To create an <xref:System.Data.OleDb.OleDbDataReader>, you must call the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method of the <xref:System.Data.OleDb.OleDbCommand> object, instead of directly using a constructor.</span></span>  
  
 <span data-ttu-id="983ee-104">닫기 전에 <xref:System.Data.OleDb.OleDbConnection>, 먼저 닫습니다는 <xref:System.Data.OleDb.OleDbDataReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-104">Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object.</span></span> <span data-ttu-id="983ee-105">또한 닫아야는 <xref:System.Data.OleDb.OleDbDataReader> 경우 계획인 개체는 <xref:System.Data.OleDb.OleDbCommand> 개체입니다. 호출한 후까지 출력 매개 변수를 검색할 수 없습니다 예를 들어 <xref:System.Data.OleDb.OleDbDataReader.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-105">You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to resuse an <xref:System.Data.OleDb.OleDbCommand> object.For example, you cannot retrieve output parameters until after you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.</span></span>  
  
 <span data-ttu-id="983ee-106">변경 내용을 결과 데이터를 읽는 동안 다른 프로세스 또는 스레드별로 집합의 사용자에 게 표시 될 수 있습니다는 <xref:System.Data.OleDb.OleDbDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-106">Changes made to a result set by another process or thread while data is being read may be visible to the user of the <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="983ee-107">그러나 정확한 동작은 타이밍에 따라 변합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-107">However, the precise behavior is timing dependent.</span></span>  
  
 <span data-ttu-id="983ee-108"><xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> 및 <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> 후 호출할 수 있는 속성만 <xref:System.Data.OleDb.OleDbDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-108"><xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OleDb.OleDbDataReader> is closed.</span></span> <span data-ttu-id="983ee-109">하지만 <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> 속성에 액세스할 수 동안는 <xref:System.Data.OleDb.OleDbDataReader> 존재 항상 호출 <xref:System.Data.OleDb.OleDbDataReader.Close%2A> 의 값을 반환 하기 전에 <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> 반환 값이 정확 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-109">Although the <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> property may be accessed while the <xref:System.Data.OleDb.OleDbDataReader> exists, always call <xref:System.Data.OleDb.OleDbDataReader.Close%2A> before returning the value of <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> to guarantee an accurate return value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="983ee-110">다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbCommand>, 및 <xref:System.Data.OleDb.OleDbDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-110">The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="983ee-111">이 예제에서는 콘솔에이 작성 하는 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-111">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="983ee-112">마지막는 <xref:System.Data.OleDb.OleDbDataReader> 차례로 <xref:System.Data.OleDb.OleDbConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-112">Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader> and then the <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="983ee-113">
          <see cref="T:System.Data.OleDb.OleDbDataReader" /> 개체를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-113">Closes the <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-114">명시적으로 호출 해야는 <xref:System.Data.OleDb.OleDbDataReader.Close%2A> 메서드를 사용 하 여 통해는 <xref:System.Data.OleDb.OleDbDataReader> 사용할 연결 된 <xref:System.Data.OleDb.OleDbConnection> 다른 용도로 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-114">You must explicitly call the <xref:System.Data.OleDb.OleDbDataReader.Close%2A> method when you are through using the <xref:System.Data.OleDb.OleDbDataReader> to use the associated <xref:System.Data.OleDb.OleDbConnection> for any other purpose.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="983ee-115">호출 하지 마십시오 **닫기** 또는 **Dispose** 연결, DataReader, 또는 다른 관리 개체에는 **Finalize** 클래스의 메서드로 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-115">Do not call **Close** or **Dispose** on a Connection, a DataReader, or any other managed object in the **Finalize** method of your class.</span></span> <span data-ttu-id="983ee-116">종료자에서만 클래스에 직접 속한 관리 되지 않는 리소스를 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-116">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="983ee-117">클래스에 관리 되지 않는 리소스가 없는 경우 포함 되지 않습니다는 **Finalize** 클래스 정의에 메서드.</span><span class="sxs-lookup"><span data-stu-id="983ee-117">If your class does not own any unmanaged resources, do not include a **Finalize** method in your class definition.</span></span> <span data-ttu-id="983ee-118">자세한 내용은 참조 [가비지 수집](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-118">For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="983ee-119">다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbCommand>, 및 <xref:System.Data.OleDb.OleDbDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-119">The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="983ee-120">이 예제에서는 콘솔에이 작성 하는 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-120">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="983ee-121">마지막는 <xref:System.Data.OleDb.OleDbDataReader>, 한 다음은 <xref:System.Data.OleDb.OleDbConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-121">Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, and then the <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="983ee-122">현재 행의 중첩 수준을 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-122">Gets a value that indicates the depth of nesting for the current row.</span></span></summary>
        <value><span data-ttu-id="983ee-123">현재 행의 중첩 수준입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-123">The depth of nesting for the current row.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-124">가장 바깥쪽 테이블의 중첩 수준은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-124">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="983ee-125">현재 행의 열 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-125">Gets the number of columns in the current row.</span></span></summary>
        <value><span data-ttu-id="983ee-126">유효한 레코드 집합에 위치하지 않은 경우에는 0이고, 그렇지 않으면 현재 레코드에 있는 열의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-126">When not positioned in a valid recordset, 0; otherwise the number of columns in the current record.</span></span> <span data-ttu-id="983ee-127">기본값은 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-127">The default is -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-128">숨김 필드도 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-128">Includes hidden fields.</span></span> <span data-ttu-id="983ee-129">숨김 필드를 제외하려면 <xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A>를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="983ee-129">Use <xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 <span data-ttu-id="983ee-130">행을 반환 하지 않는 쿼리를 실행 한 후 <xref:System.Data.OleDb.OleDbDataReader.FieldCount%2A> 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-130">After executing a query that does not return rows, <xref:System.Data.OleDb.OleDbDataReader.FieldCount%2A> returns 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="983ee-131">데이터 소스에 대한 연결이 현재 없는 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-131">There is no current connection to a data source.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-132">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-132">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-133">지정된 열의 값에 해당하는 Boolean 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-133">Gets the value of the specified column as a Boolean.</span></span></summary>
        <returns><span data-ttu-id="983ee-134">열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-134">The value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-135">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 부울 이거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-135">No conversions are performed; therefore the data retrieved must already be a Boolean, or an exception is generated.</span></span>  
  
 <span data-ttu-id="983ee-136">호출 <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-136">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="983ee-137">지정된 캐스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-137">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-138">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-138">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-139">지정된 열의 값에 해당하는 바이트 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-139">Gets the value of the specified column as a byte.</span></span></summary>
        <returns><span data-ttu-id="983ee-140">바이트로 지정된 열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-140">The value of the specified column as a byte.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-141">변환이 수행 되지 않습니다. 따라서 검색 된 데이터 바이트를 이미 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-141">No conversions are performed; therefore the data retrieved must already be a byte.</span></span>  
  
 <span data-ttu-id="983ee-142">호출 <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-142">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="983ee-143">지정된 캐스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-143">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-144">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-144">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="983ee-145">읽기 작업을 시작할 필드 내의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-145">The index within the field from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="983ee-146">바이트 스트림을 읽을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-146">The buffer into which to read the stream of bytes.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="983ee-147">쓰기 작업을 시작할 <c>buffer</c> 내 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-147">The index within the <c>buffer</c> where the write operation is to start.</span></span></param>
        <param name="length"><span data-ttu-id="983ee-148">버퍼로 복사할 최대 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-148">The maximum length to copy into the buffer.</span></span></param>
        <summary><span data-ttu-id="983ee-149">지정된 버퍼 오프셋에서 시작하는 배열로서 지정된 열 오프셋에서 버퍼로 바이트의 스트림을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-149">Reads a stream of bytes from the specified column offset into the buffer as an array starting at the given buffer offset.</span></span></summary>
        <returns><span data-ttu-id="983ee-150">읽은 실제 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-150">The actual number of bytes read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-151"><xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A> 필드에 사용 가능한 바이트 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-151"><xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="983ee-152">대부분의 경우 이것은 필드의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-152">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="983ee-153">그러나 반환 된 숫자 보다 작을 수도 있습니다는 필드의 길이 경우 `GetBytes` 바이트를 얻는 필드에서 이미 사용 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-153">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="983ee-154">예를 들어 있는 경우 수 있습니다 때는 <xref:System.Data.OleDb.OleDbDataReader> 대형 데이터 구조를 버퍼에 읽고 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-154">This may be the case, for example, when the <xref:System.Data.OleDb.OleDbDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="983ee-155">자세한 내용은 참조는 `SequentialAccess` 에 대 한 설정 <xref:System.Data.CommandBehavior>합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-155">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="983ee-156">버퍼를 전달 하는 경우 `null`, <xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A> 필드의 길이 바이트 단위로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-156">If you pass a buffer that is `null`, <xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A> returns the length of the field in bytes.</span></span>  
  
 <span data-ttu-id="983ee-157">변환이 수행 되지 않습니다. 따라서 검색 된 데이터 바이트 배열 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-157">No conversions are performed; therefore, the data retrieved must already be a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-158">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-158">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-159">지정된 열의 값을 문자로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-159">Gets the value of the specified column as a character.</span></span></summary>
        <returns><span data-ttu-id="983ee-160">지정된 열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-160">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-161"><xref:System.Data.OleDb>에는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-161">Not supported for <xref:System.Data.OleDb>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="983ee-162">지정된 캐스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-162">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-163">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-163">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="983ee-164">읽기 작업을 시작할 행 내의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-164">The index within the row from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="983ee-165">데이터를 복사해 올 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-165">The buffer into which to copy data.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="983ee-166">쓰기 작업을 시작할 <c>buffer</c> 내 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-166">The index within the <c>buffer</c> where the write operation is to start.</span></span></param>
        <param name="length"><span data-ttu-id="983ee-167">읽을 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-167">The number of characters to read.</span></span></param>
        <summary><span data-ttu-id="983ee-168">지정된 버퍼 오프셋에서 시작하는 배열로서 지정된 열 오프셋에서 버퍼로 문자의 스트림을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-168">Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</span></span></summary>
        <returns><span data-ttu-id="983ee-169">읽은 실제 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-169">The actual number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-170"><xref:System.Data.OleDb.OleDbDataReader.GetChars%2A> 필드에 사용할 수 있는 문자 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-170"><xref:System.Data.OleDb.OleDbDataReader.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="983ee-171">대부분의 경우 이것은 필드의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-171">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="983ee-172">그러나 반환 된 숫자 보다 작을 수도 있습니다는 필드의 길이 경우 `GetChars` 문자를 가져올 필드에서 이미 사용 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-172">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span> <span data-ttu-id="983ee-173">예를 들어 있는 경우 수 있습니다 때는 <xref:System.Data.OleDb.OleDbDataReader> 대형 데이터 구조를 버퍼에 읽고 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-173">This may be the case, for example, when the <xref:System.Data.OleDb.OleDbDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="983ee-174">자세한 내용은 참조는 `SequentialAccess` 에 대 한 설정 <xref:System.Data.CommandBehavior>합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-174">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="983ee-175">버퍼를 전달 하는 경우 `null`, <xref:System.Data.OleDb.OleDbDataReader.GetChars%2A> 필드의 길이 문자 단위로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-175">If you pass a buffer that is `null`, <xref:System.Data.OleDb.OleDbDataReader.GetChars%2A> returns the length of the field in characters.</span></span>  
  
 <span data-ttu-id="983ee-176">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 문자 배열 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-176">No conversions are performed; therefore, the data retrieved must already be a character array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataReader GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbDataReader GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (ordinal As Integer) As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbDataReader ^ GetData(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-177">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-177">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-178">요청된 열 서수에 대한 <see cref="T:System.Data.OleDb.OleDbDataReader" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-178">Returns an <see cref="T:System.Data.OleDb.OleDbDataReader" /> object for the requested column ordinal.</span></span></summary>
        <returns><span data-ttu-id="983ee-179"><see cref="T:System.Data.OleDb.OleDbDataReader" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-179">An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-180"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 호출 <xref:System.Data.OleDb.OleDbDataReader.GetData%2A> 공급자가 반환 하는 경우는 <xref:System.Data.IDataReader> 열이 있는 지 원하는 <xref:System.Data.IDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-180">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> will call <xref:System.Data.OleDb.OleDbDataReader.GetData%2A> if the provider returns a <xref:System.Data.IDataReader> that has a column that supports <xref:System.Data.IDataReader>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="983ee-181">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-181">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-182">소스 데이터 형식의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-182">Gets the name of the source data type.</span></span></summary>
        <returns><span data-ttu-id="983ee-183">백 엔드 데이터 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-183">The name of the back-end data type.</span></span> <span data-ttu-id="983ee-184">자세한 내용은 [SQL Server 데이터 형식](http://go.microsoft.com/fwlink/?LinkId=198032) 또는 [Access 데이터 형식](http://go.microsoft.com/fwlink/?LinkId=198033)을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="983ee-184">For more information, see [SQL Server data types](http://go.microsoft.com/fwlink/?LinkId=198032) or [Access data types](http://go.microsoft.com/fwlink/?LinkId=198033).</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-185">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-185">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-186">지정된 열의 값에 해당하는 <see cref="T:System.DateTime" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-186">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="983ee-187">지정된 열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-187">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-188">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 해야는 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-188">No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object.</span></span>  
  
 <span data-ttu-id="983ee-189">호출 <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-189">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="983ee-190">지정된 캐스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-190">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader GetDbDataReader (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader GetDbDataReader(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDbDataReader (ordinal As Integer) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ GetDbDataReader(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-191">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-191">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-192">지정된 열의 값에 해당하는 <see cref="T:System.Decimal" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-192">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span></span></summary>
        <returns><span data-ttu-id="983ee-193">지정된 열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-193">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-194">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 해야는 <xref:System.Decimal> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-194">No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object.</span></span>  
  
 <span data-ttu-id="983ee-195">호출 <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-195">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="983ee-196">지정된 캐스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-196">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-197">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-197">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-198">지정된 열의 값을 배정밀도 부동 소수점 숫자로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-198">Gets the value of the specified column as a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="983ee-199">지정된 열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-199">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-200">변환이 수행 되지 않습니다. 따라서 검색 된 데이터에는 배정밀도 부동 소수점 숫자 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-200">No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number.</span></span>  
  
 <span data-ttu-id="983ee-201">호출 <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-201">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="983ee-202">지정된 캐스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-202">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="983ee-203">데이터 판독기의 행을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-203">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></summary>
        <returns><span data-ttu-id="983ee-204">데이터 판독기의 행을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-204">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-205">이 메서드를 사용 하 여 명시적 열거자를 검색할 수 있지만 지 원하는 언어는 `foreach` 구성 하는 것이 데이터 판독기의 행을 반복 하는 직접 루프 구문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-205">Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (index As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="983ee-206">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-206">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-207">개체의 데이터 형식인 <see cref="T:System.Type" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-207">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span></span></summary>
        <returns><span data-ttu-id="983ee-208">개체의 데이터 형식인 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-208">The <see cref="T:System.Type" /> that is the data type of the object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-209">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-209">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-210">지정된 열의 값을 단정밀도 부동 소수점 숫자로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-210">Gets the value of the specified column as a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="983ee-211">지정된 열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-211">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-212">변환이 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-212">No conversions are performed.</span></span> <span data-ttu-id="983ee-213">따라서 검색 된 데이터는 단 정밀도 부동 소수점 숫자를 이미 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-213">Therefore, the data retrieved must already be a single-precision floating-point number.</span></span>  
  
 <span data-ttu-id="983ee-214">호출 <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-214">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="983ee-215">지정된 캐스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-215">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-216">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-216">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-217">지정된 열의 값을 GUID(Globally Unique Identifier)로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-217">Gets the value of the specified column as a globally unique identifier (GUID).</span></span></summary>
        <returns><span data-ttu-id="983ee-218">지정된 열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-218">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-219">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 전역 고유 식별자를 이미 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-219">No conversions are performed; therefore the data retrieved must already be a globally unique identifier.</span></span>  
  
 <span data-ttu-id="983ee-220">호출 <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-220">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="983ee-221">지정된 캐스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-221">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-222">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-222">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-223">지정된 열의 값을 16비트 부호 있는 정수로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-223">Gets the value of the specified column as a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="983ee-224">지정된 열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-224">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-225">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 16 비트 부호 있는 정수를 이미 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-225">No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.</span></span>  
  
 <span data-ttu-id="983ee-226">호출 <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-226">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="983ee-227">지정된 캐스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-227">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-228">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-228">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-229">지정된 열의 값에 해당하는 32비트 부호 있는 정수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-229">Gets the value of the specified column as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="983ee-230">지정된 열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-230">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-231">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 32 비트 부호 있는 정수를 이미 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-231">No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="983ee-232">호출 <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-232">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="983ee-233">지정된 캐스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-233">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-234">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-234">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-235">지정된 열의 값에 해당하는 64비트 부호 있는 정수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-235">Gets the value of the specified column as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="983ee-236">지정된 열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-236">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-237">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 64 비트 부호 있는 정수를 이미 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-237">No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.</span></span>  
  
 <span data-ttu-id="983ee-238">호출 <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-238">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="983ee-239">지정된 캐스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-239">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="983ee-240">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-240">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-241">지정된 열의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-241">Gets the name of the specified column.</span></span></summary>
        <returns><span data-ttu-id="983ee-242">지정된 열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-242">The name of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="983ee-243">열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-243">The name of the column.</span></span></param>
        <summary><span data-ttu-id="983ee-244">열 이름이 지정된 경우 열 서수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-244">Gets the column ordinal, given the name of the column.</span></span></summary>
        <returns><span data-ttu-id="983ee-245">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-245">The zero-based column ordinal.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-246"><xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> 대/소문자 구분 조회를 먼저 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-246"><xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> performs a case-sensitive lookup first.</span></span> <span data-ttu-id="983ee-247">실패 한 경우에 두 번째 대/소문자 구분 검색이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-247">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="983ee-248">메서드에서 throw 된 `IndexOutOfRange` exceptionif 0부터 시작 하는 열 서 수를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-248">The method throws an `IndexOutOfRange` exceptionif the zero-based column ordinal is not found.</span></span>  
  
 <span data-ttu-id="983ee-249"><xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> 가 되지 일본어가 나 너비 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-249"><xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="983ee-250">서 수 기반 조회가 명명 된 조회 보다 효율적 이므로, 것이 없습니다 효율적 호출 <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> 루프 내에서.</span><span class="sxs-lookup"><span data-stu-id="983ee-250">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> within a loop.</span></span> <span data-ttu-id="983ee-251">호출 하 여 시간 절약 <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> 을 한 번 루프 내에서 사용할 정수 변수에 결과 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-251">Save time by calling <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> one time and assigning the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="983ee-252">다음 예제에서는 <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-252">The following example demonstrates how to use the <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="983ee-253">지정된 이름이 올바른 열 이름이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-253">The name specified is not a valid column name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="983ee-254"><see cref="T:System.Data.DataTable" />의 열 메타데이터를 정의하는 <see cref="T:System.Data.OleDb.OleDbDataReader" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-254">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.OleDb.OleDbDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="983ee-255">열 메타데이터를 정의하는 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-255">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-256"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A> 메서드는 OLE db 매핑합니다 **icolumnsrowset:: Getcolumnsrowset** 메서드와 다음 순서 대로 각 열에 대 한 메타 데이터 반환:</span><span class="sxs-lookup"><span data-stu-id="983ee-256">The <xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A> method maps to the OLE DB **IColumnsRowset::GetColumnsRowset** method, and returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="983ee-257">DataReader 열</span><span class="sxs-lookup"><span data-stu-id="983ee-257">DataReader column</span></span>|<span data-ttu-id="983ee-258">OLE DB 열 ID</span><span class="sxs-lookup"><span data-stu-id="983ee-258">OLE DB column ID</span></span>|<span data-ttu-id="983ee-259">설명</span><span class="sxs-lookup"><span data-stu-id="983ee-259">Description</span></span>|  
|-----------------------|----------------------|-----------------|  
|<span data-ttu-id="983ee-260">열 이름</span><span class="sxs-lookup"><span data-stu-id="983ee-260">ColumnName</span></span>|<span data-ttu-id="983ee-261">DBCOLUMN_NAME</span><span class="sxs-lookup"><span data-stu-id="983ee-261">DBCOLUMN_NAME</span></span>|<span data-ttu-id="983ee-262">열의 이름입니다. 이 고유 아닐 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-262">The name of the column; this might not be unique.</span></span> <span data-ttu-id="983ee-263">이 확인할 수 없는 경우에 null 값이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-263">If this cannot be determined, a null value is returned.</span></span> <span data-ttu-id="983ee-264">이 이름은 항상 현재 보기 또는 명령 텍스트에 있는 열의 최근 이름 바꾸기가 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-264">This name always reflects the most recent renaming of the column in the current view or command text.</span></span>|  
|<span data-ttu-id="983ee-265">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="983ee-265">ColumnOrdinal</span></span>|<span data-ttu-id="983ee-266">DBCOLUMN_NUMBER</span><span class="sxs-lookup"><span data-stu-id="983ee-266">DBCOLUMN_NUMBER</span></span>|<span data-ttu-id="983ee-267">열의 0부터 시작하는 서수입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-267">The zero-based ordinal of the column.</span></span> <span data-ttu-id="983ee-268">이 열에 null 값을 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-268">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="983ee-269">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="983ee-269">ColumnSize</span></span>|<span data-ttu-id="983ee-270">DBCOLUMN_COLUMNSIZE</span><span class="sxs-lookup"><span data-stu-id="983ee-270">DBCOLUMN_COLUMNSIZE</span></span>|<span data-ttu-id="983ee-271">열에 있는 값의 가능한 최대 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-271">The maximum possible length of a value in the column.</span></span> <span data-ttu-id="983ee-272">고정 길이 데이터 형식을 사용 하는 열에 대 한 데이터 형식의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-272">For columns that use a fixed-length data type, this is the size of the data type.</span></span>|  
|<span data-ttu-id="983ee-273">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="983ee-273">NumericPrecision</span></span>|<span data-ttu-id="983ee-274">DBCOLUMN_PRECISION</span><span class="sxs-lookup"><span data-stu-id="983ee-274">DBCOLUMN_PRECISION</span></span>|<span data-ttu-id="983ee-275">DbType 숫자 데이터 형식인 경우 열의 최대 전체 자릿수입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-275">If DbType is a numeric data type, this is the maximum precision of the column.</span></span> <span data-ttu-id="983ee-276">DBTYPE_DECIMAL 또는 DBTYPE_NUMERIC의 데이터 형식과 열의 전체 자릿수는 열의 정의에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-276">The precision of columns with a data type of DBTYPE_DECIMAL or DBTYPE_NUMERIC depends on the definition of the column.</span></span> <span data-ttu-id="983ee-277">DbType 숫자 데이터 형식인 경우 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-277">If DbType is not a numeric data type, this is a null value.</span></span>|  
|<span data-ttu-id="983ee-278">NumericScale</span><span class="sxs-lookup"><span data-stu-id="983ee-278">NumericScale</span></span>|<span data-ttu-id="983ee-279">DBCOLUMN_SCALE</span><span class="sxs-lookup"><span data-stu-id="983ee-279">DBCOLUMN_SCALE</span></span>|<span data-ttu-id="983ee-280">DbType DBTYPE_DECIMAL 또는 DBTYPE_NUMERIC 인 경우 소수점 오른쪽 자릿수의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-280">If DbType is DBTYPE_DECIMAL or DBTYPE_NUMERIC, this is the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="983ee-281">그렇지 않으면 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-281">Otherwise, this is a null value.</span></span>|  
|<span data-ttu-id="983ee-282">데이터 형식</span><span class="sxs-lookup"><span data-stu-id="983ee-282">DataType</span></span>|<span data-ttu-id="983ee-283">없음</span><span class="sxs-lookup"><span data-stu-id="983ee-283">None</span></span>|<span data-ttu-id="983ee-284">열의.NET Framework 형식에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-284">Maps to the .NET Framework type of the column.</span></span>|  
|<span data-ttu-id="983ee-285">ProviderType</span><span class="sxs-lookup"><span data-stu-id="983ee-285">ProviderType</span></span>|<span data-ttu-id="983ee-286">DBCOLUMN_TYPE</span><span class="sxs-lookup"><span data-stu-id="983ee-286">DBCOLUMN_TYPE</span></span>|<span data-ttu-id="983ee-287">표시기는 열의 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-287">The indicator of the column's data type.</span></span> <span data-ttu-id="983ee-288">열의 데이터 형식을 행 마다 달라 지, DBTYPE_VARIANT 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-288">If the data type of the column varies from row to row, this must be DBTYPE_VARIANT.</span></span> <span data-ttu-id="983ee-289">이 열에 null 값을 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-289">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="983ee-290">IsLong</span><span class="sxs-lookup"><span data-stu-id="983ee-290">IsLong</span></span>|<span data-ttu-id="983ee-291">DBCOLUMNFLAGS_ISLONG</span><span class="sxs-lookup"><span data-stu-id="983ee-291">DBCOLUMNFLAGS_ISLONG</span></span>|<span data-ttu-id="983ee-292">공급자는 긴 BLOB (Binary Object) 매우 긴 데이터가 포함 된 열이 있으면 DBCOLUMNFLAGS_ISLONG를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-292">The provider sets DBCOLUMNFLAGS_ISLONG if the column contains a Binary Long Object (BLOB) that contains very long data.</span></span> <span data-ttu-id="983ee-293">매우 긴 데이터의 정의 공급자 마다 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-293">The definition of very long data is provider-specific.</span></span> <span data-ttu-id="983ee-294">이 플래그의 설정은 데이터 형식에 대 한 PROVIDER_TYPES 행 집합에 있는 IS_LONG 열의 값에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-294">The setting of this flag corresponds to the value of the IS_LONG column in the PROVIDER_TYPES rowset for the data type.</span></span>|  
|<span data-ttu-id="983ee-295">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="983ee-295">AllowDBNull</span></span>|<span data-ttu-id="983ee-296">DBCOLUMNFLAGS_ISNULLABLE</span><span class="sxs-lookup"><span data-stu-id="983ee-296">DBCOLUMNFLAGS_ISNULLABLE</span></span>|<span data-ttu-id="983ee-297">공급자는 소비자를 null 값 열을 설정할 수 있거나 공급자는 소비자가 열을 null 값으로 설정할 수 있는지 여부를 확인할 수 없는 경우 DBCOLUMNFLAGS_ISNULLABLE를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-297">The provider sets DBCOLUMNFLAGS_ISNULLABLE if the consumer can set the column to a null value, or if the provider cannot determine whether the consumer can set the column to a null value.</span></span> <span data-ttu-id="983ee-298">Null 값으로 설정할 수 없습니다 하는 경우에 열에서 null 값을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-298">A column may contain null values, even if it cannot be set to a null value.</span></span>|  
|<span data-ttu-id="983ee-299">IsReadOnly</span><span class="sxs-lookup"><span data-stu-id="983ee-299">IsReadOnly</span></span>|<span data-ttu-id="983ee-300">DBCOLUMNFLAGS_WRITE</span><span class="sxs-lookup"><span data-stu-id="983ee-300">DBCOLUMNFLAGS_WRITE</span></span>|<span data-ttu-id="983ee-301">`true` 열을 수정할 수 없습니다. 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-301">`true` if the column cannot be modified; otherwise `false`.</span></span> <span data-ttu-id="983ee-302">열은 공급자가 DBCOLUMNFLAGS_WRITE 또는 DBCOLUMNFLAGS_WRITEUNKNOWN 플래그를 설정 하는 경우 쓰기 가능으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-302">The column is assumed to be writable if the provider has set either the DBCOLUMNFLAGS_WRITE or DBCOLUMNFLAGS_WRITEUNKNOWN flag.</span></span>|  
|<span data-ttu-id="983ee-303">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="983ee-303">IsRowVersion</span></span>|<span data-ttu-id="983ee-304">DBCOLUMNFLAGS_ISROWID</span><span class="sxs-lookup"><span data-stu-id="983ee-304">DBCOLUMNFLAGS_ISROWID</span></span>|<span data-ttu-id="983ee-305">공급자는 DBCOLUMNFLAGS_ISROWID 설정 하는 열에 쓸 수 없는 영구 행 식별자를 포함 하는 경우 있고 행 id에만 의미가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-305">The provider sets DBCOLUMNFLAGS_ISROWID if the column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span>|  
|<span data-ttu-id="983ee-306">IsUnique</span><span class="sxs-lookup"><span data-stu-id="983ee-306">IsUnique</span></span>|<span data-ttu-id="983ee-307">DBCOLUMN_ISUNIQUE</span><span class="sxs-lookup"><span data-stu-id="983ee-307">DBCOLUMN_ISUNIQUE</span></span>|<span data-ttu-id="983ee-308">VARIANT_TRUE: 수 BaseTableName에서에서 반환 되는 기본 테이블의 테이블에 있는 각 행이이 열에 동일한 값을 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-308">VARIANT_TRUE: No two rows in the base table-the table returned in BaseTableName-can have the same value in this column.</span></span> <span data-ttu-id="983ee-309">IsUnique 단독으로 표시 되거나이 열에만 적용 되는 UNIQUE 유형의 제약 조건이 있는 경우 해당 열이 키를 나타내는 VARIANT_TRUE 될 수 있도록 보장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-309">IsUnique is guaranteed to be VARIANT_TRUE if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</span></span><br /><br /> <span data-ttu-id="983ee-310">VARIANT_FALSE: 열이 기본 테이블에서 중복 값을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-310">VARIANT_FALSE: The column can contain duplicate values in the base table.</span></span> <span data-ttu-id="983ee-311">이 열의 기본값은 VARIANT_FALSE입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-311">The default of this column is VARIANT_FALSE.</span></span>|  
|<span data-ttu-id="983ee-312">IsKey</span><span class="sxs-lookup"><span data-stu-id="983ee-312">IsKey</span></span>|<span data-ttu-id="983ee-313">DBCOLUMN_KEYCOLUMN</span><span class="sxs-lookup"><span data-stu-id="983ee-313">DBCOLUMN_KEYCOLUMN</span></span>|<span data-ttu-id="983ee-314">VARIANT_TRUE: 열이 행 집합의 열 집합 중 하나를 전체적으로 볼 때, 해당 행을 고유 하 게 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-314">VARIANT_TRUE: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</span></span> <span data-ttu-id="983ee-315">IsKey VARIANT_TRUE로 설정 된 열 집합은 행 집합의 행을 고유 하 게 식별 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-315">The set of columns with IsKey set to VARIANT_TRUE must uniquely identify a row in the rowset.</span></span> <span data-ttu-id="983ee-316">이 열 집합이 열의 최소 집합 임을 않아도가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-316">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="983ee-317">기본 테이블 기본 키, 고유 제약 조건 또는 고유 인덱스에서이 열 집합을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-317">This set of columns may be generated from a base table primary key, a unique constraint or a unique index.</span></span><br /><br /> <span data-ttu-id="983ee-318">VARIANT_FALSE:는 열은 행을 식별할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-318">VARIANT_FALSE: The column is not required to uniquely identify the row.</span></span>|  
|<span data-ttu-id="983ee-319">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="983ee-319">IsAutoIncrement</span></span>|<span data-ttu-id="983ee-320">DBCOLUMN_ISAUTOINCREMENT</span><span class="sxs-lookup"><span data-stu-id="983ee-320">DBCOLUMN_ISAUTOINCREMENT</span></span>|<span data-ttu-id="983ee-321">VARIANT_TRUE: 열 고정 증가 하는 새 행에 값을 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-321">VARIANT_TRUE: The column assigns values to new rows in fixed increments.</span></span><br /><br /> <span data-ttu-id="983ee-322">VARIANT_FALSE: 열 고정 증가 하는 새 행에 값을 할당 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-322">VARIANT_FALSE: The column does not assign values to new rows in fixed increments.</span></span> <span data-ttu-id="983ee-323">이 열의 기본값은 VARIANT_FALSE입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-323">The default of this column is VARIANT_FALSE.</span></span>|  
|<span data-ttu-id="983ee-324">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="983ee-324">BaseSchemaName</span></span>|<span data-ttu-id="983ee-325">DBCOLUMN_BASESCHEMANAME</span><span class="sxs-lookup"><span data-stu-id="983ee-325">DBCOLUMN_BASESCHEMANAME</span></span>|<span data-ttu-id="983ee-326">열이 포함 된 데이터 저장소에 있는 스키마의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-326">The name of the schema in the data store that contains the column.</span></span> <span data-ttu-id="983ee-327">기본 스키마 이름을 확인할 수 없는 경우 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-327">A null value if the base schema name cannot be determined.</span></span> <span data-ttu-id="983ee-328">이 열의 기본값은 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-328">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="983ee-329">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="983ee-329">BaseCatalogName</span></span>|<span data-ttu-id="983ee-330">DBCOLUMN_BASECATALOGNAME</span><span class="sxs-lookup"><span data-stu-id="983ee-330">DBCOLUMN_BASECATALOGNAME</span></span>|<span data-ttu-id="983ee-331">열이 포함 된 데이터 저장소에 있는 카탈로그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-331">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="983ee-332">기본 카탈로그 이름을 확인할 수 없는 경우 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-332">A null value if the base catalog name cannot be determined.</span></span> <span data-ttu-id="983ee-333">이 열의 기본값은 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-333">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="983ee-334">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="983ee-334">BaseTableName</span></span>|<span data-ttu-id="983ee-335">DBCOLUMN_BASETABLENAME</span><span class="sxs-lookup"><span data-stu-id="983ee-335">DBCOLUMN_BASETABLENAME</span></span>|<span data-ttu-id="983ee-336">테이블 또는 뷰의 열이 포함 된 데이터 저장소의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-336">The name of the table or view in the data store that contains the column.</span></span> <span data-ttu-id="983ee-337">기본 테이블 이름을 확인할 수 없는 경우 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-337">A null value if the base table name cannot be determined.</span></span> <span data-ttu-id="983ee-338">이 열의 기본값은 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-338">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="983ee-339">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="983ee-339">BaseColumnName</span></span>|<span data-ttu-id="983ee-340">DBCOLUMN_BASECOLUMNNAME</span><span class="sxs-lookup"><span data-stu-id="983ee-340">DBCOLUMN_BASECOLUMNNAME</span></span>|<span data-ttu-id="983ee-341">데이터 저장소의 열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-341">The name of the column in the data store.</span></span> <span data-ttu-id="983ee-342">별칭이 사용 된 경우 열 이름 열에 반환 된 열 이름과 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-342">This might be different from the column name returned in the ColumnName column if an alias was used.</span></span> <span data-ttu-id="983ee-343">데이터의 열 저장소 행 집합 열이 파생 되지만 동일 하지는 않습니다, 하는 경우 또는 기본 열 이름을 확인할 수 없는 경우 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-343">A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</span></span> <span data-ttu-id="983ee-344">이 열의 기본값은 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-344">The default of this column is a null value.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="983ee-345">올바른 정보를 반환 하는 메타 데이터 열, 호출 해야 되도록 <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> 와 `behavior` 매개 변수 설정 `KeyInfo`합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-345">To make sure that metadata columns return the correct information, you must call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`.</span></span> <span data-ttu-id="983ee-346">그렇지 않으면 스키마 테이블의 열 중 일부 기본값, null 또는 잘못 된 데이터를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-346">Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="983ee-347"><see cref="T:System.Data.OleDb.OleDbDataReader" />가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-347">The <see cref="T:System.Data.OleDb.OleDbDataReader" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-348">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-348">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-349">지정된 열의 값을 문자열로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-349">Gets the value of the specified column as a string.</span></span></summary>
        <returns><span data-ttu-id="983ee-350">지정된 열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-350">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-351">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 문자열 이어야 이미입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-351">No conversions are performed; therefore the data retrieved must already be a string.</span></span>  
  
 <span data-ttu-id="983ee-352">호출 <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-352">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="983ee-353">지정된 캐스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-353">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public TimeSpan GetTimeSpan (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTimeSpan(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTimeSpan (ordinal As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetTimeSpan(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-354">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-354">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-355">지정된 열의 값에 해당하는 <see cref="T:System.TimeSpan" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-355">Gets the value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span></span></summary>
        <returns><span data-ttu-id="983ee-356">지정된 열의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-356">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-357">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 해야는 <xref:System.TimeSpan> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-357">No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object.</span></span>  
  
 <span data-ttu-id="983ee-358">호출 <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-358">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="983ee-359">지정된 캐스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-359">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-360">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-360">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-361">네이티브 형식에 있는 지정된 서수에서 열의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-361">Gets the value of the column at the specified ordinal in its native format.</span></span></summary>
        <returns><span data-ttu-id="983ee-362">반환할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-362">The value to return.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-363">이 메서드는 null 데이터베이스 열에 대해서는 <xref:System.DBNull>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-363">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="983ee-364">특성 열을 복사할 <see cref="T:System.Object" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-364">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span></span></param>
        <summary><span data-ttu-id="983ee-365">현재 행의 열 값으로 개체 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-365">Populates an array of objects with the column values of the current row.</span></span></summary>
        <returns><span data-ttu-id="983ee-366">배열에 포함된 <see cref="T:System.Object" /> 인스턴스의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-366">The number of instances of <see cref="T:System.Object" /> in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-367">대부분의 응용 프로그램의 <xref:System.Data.OleDb.OleDbDataReader.GetValues%2A> 메서드 각 열을 개별적으로 검색 하는 대신 모든 열을 검색 하는 효율적인 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-367">For most applications, the <xref:System.Data.OleDb.OleDbDataReader.GetValues%2A> method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span>  
  
 <span data-ttu-id="983ee-368">전달할 수는 <xref:System.Object> 보다 적은 수의 결과 행에 포함 된 열에 포함 된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-368">You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row.</span></span> <span data-ttu-id="983ee-369">데이터의 양만 <xref:System.Object> 배열 저장 배열에 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-369">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="983ee-370">전달할 수도 있습니다는 <xref:System.Object> 배열 길이가 결과 행에 포함 된 열 수를 초과 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-370">You can also pass an <xref:System.Object> array whose length is more than the number of columns that are contained in the resulting row.</span></span>  
  
 <span data-ttu-id="983ee-371">이 메서드는 null 데이터베이스 열에 대해서는 <xref:System.DBNull>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-371">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
   
  
## Examples  
 [!code-csharp[OleDbDataReader_GetValues#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/oledbdatareader_getvalues/cs/source.cs#1)]
 [!code-vb[OleDbDataReader_GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/oledbdatareader_getvalues/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="983ee-372"><see cref="T:System.Data.OleDb.OleDbDataReader" />에 하나 이상의 행이 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-372">Gets a value that indicates whether the <see cref="T:System.Data.OleDb.OleDbDataReader" /> contains one or more rows.</span></span></summary>
        <value>
          <span data-ttu-id="983ee-373"><see cref="T:System.Data.OleDb.OleDbDataReader" />에 행이 하나 이상 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-373"><see langword="true" /> if the <see cref="T:System.Data.OleDb.OleDbDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="983ee-374">데이터 판독기가 닫혔는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-374">Indicates whether the data reader is closed.</span></span></summary>
        <value>
          <span data-ttu-id="983ee-375"><see cref="T:System.Data.OleDb.OleDbDataReader" />가 닫혔으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-375"><see langword="true" /> if the <see cref="T:System.Data.OleDb.OleDbDataReader" /> is closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-376"><xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> 및 <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> 후 호출할 수 있는 속성만 <xref:System.Data.OleDb.OleDbDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-376"><xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OleDb.OleDbDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="983ee-377">열 서수(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-377">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-378">존재하지 않거나 누락된 값이 열에 포함되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-378">Gets a value that indicates whether the column contains nonexistent or missing values.</span></span></summary>
        <returns>
          <span data-ttu-id="983ee-379">지정된 열 값이 <see cref="T:System.DBNull" />과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-379"><see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-380">이 메서드는 형식화 된를 호출 하기 전에 null 열 값 get 메서드를 호출 (예를 들어 <xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>, <xref:System.Data.OleDb.OleDbDataReader.GetChar%2A>등) 오류가 발생 하지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-380">Call this method to look for null column values before calling the typed get methods (for example, <xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>, <xref:System.Data.OleDb.OleDbDataReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="983ee-381">열 값을 네이티브 형식으로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-381">Gets the value of a column in its native format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="983ee-382">열 서수입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-382">The column ordinal.</span></span></param>
        <summary><span data-ttu-id="983ee-383">열 서수가 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-383">Gets the value of the specified column in its native format given the column ordinal.</span></span></summary>
        <value><span data-ttu-id="983ee-384">지정된 열의 네이티브 형식 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-384">The value of the specified column in its native format.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="983ee-385">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-385">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="983ee-386">열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-386">The column name.</span></span></param>
        <summary><span data-ttu-id="983ee-387">열 이름이 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-387">Gets the value of the specified column in its native format given the column name.</span></span></summary>
        <value><span data-ttu-id="983ee-388">지정된 열의 네이티브 형식 값입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-388">The value of the specified column in its native format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-389">대/소문자 구분 조회를 먼저 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-389">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="983ee-390">실패 한 경우에 두 번째 대/소문자 구분 검색이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-390">If it fails, a second case-insensitive search is made.</span></span>  
  
 <span data-ttu-id="983ee-391">이 메서드는 일본어가 나 너비 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-391">This method is kana-width insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="983ee-392">지정된 이름의 열을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="983ee-392">No column with the specified name was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="983ee-393">일괄 처리 SQL 문의 결과를 읽을 때 데이터 판독기에서 다음 결과로 진행하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-393">Advances the data reader to the next result, when reading the results of batch SQL statements.</span></span></summary>
        <returns>
          <span data-ttu-id="983ee-394">결과 집합이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-394"><see langword="true" /> if there are more result sets; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-395">일괄 처리 SQL 문을 실행 하 여 생성 될 수 있는 여러 결과 처리 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-395">Used to process multiple results that can be generated by executing batch SQL statements.</span></span>  
  
 <span data-ttu-id="983ee-396">기본적으로 데이터 판독기가 첫 번째 결과에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-396">By default, the data reader is positioned on the first result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="983ee-397"><see cref="T:System.Data.OleDb.OleDbDataReader" />를 다음 레코드로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-397">Advances the <see cref="T:System.Data.OleDb.OleDbDataReader" /> to the next record.</span></span></summary>
        <returns>
          <span data-ttu-id="983ee-398">행이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-398"><see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-399">기본 위치는 <xref:System.Data.OleDb.OleDbDataReader> 첫 번째 레코드 앞입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-399">The default position of the <xref:System.Data.OleDb.OleDbDataReader> is before the first record.</span></span> <span data-ttu-id="983ee-400">따라서 호출 해야 <xref:System.Data.OleDb.OleDbDataReader.Read%2A> 데이터에 액세스를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-400">Therefore, you must call <xref:System.Data.OleDb.OleDbDataReader.Read%2A> to start accessing any data.</span></span>  
  
 <span data-ttu-id="983ee-401">동안는 <xref:System.Data.OleDb.OleDbDataReader> 사용 되는 연결 된 <xref:System.Data.OleDb.OleDbConnection> 중인 할 때까지 호출 <xref:System.Data.OleDb.OleDbDataReader.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-401">While the <xref:System.Data.OleDb.OleDbDataReader> is being used, the associated <xref:System.Data.OleDb.OleDbConnection> is busy serving it until you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="983ee-402">다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbCommand>, 및 <xref:System.Data.OleDb.OleDbDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-402">The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="983ee-403">이 예제에서는 콘솔에이 작성 하는 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-403">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="983ee-404">마지막는 <xref:System.Data.OleDb.OleDbDataReader> 차례로 <xref:System.Data.OleDb.OleDbConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-404">Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader> and then the <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="983ee-405">SQL 문을 실행하여 변경, 삽입 또는 삭제된 행 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-405">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span></span></summary>
        <value><span data-ttu-id="983ee-406">변경, 삽입 또는 삭제된 행 수입니다. 영향을 받은 행이 없거나 문이 실패하면 0이고, SELECT 문의 경우는 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-406">The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-407"><xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> 모든 행을 닫을 때까지 속성이 설정 되지 않은 <xref:System.Data.OleDb.OleDbDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-407">The <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.OleDb.OleDbDataReader>.</span></span>  
  
 <span data-ttu-id="983ee-408">이 속성의 값은 누적 합니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-408">The value of this property is cumulative.</span></span> <span data-ttu-id="983ee-409">예를 들어, 일괄 처리 모드의 값에 두 개의 레코드를 삽입 하면 <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> 는 2입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-409">For example, if two records are inserted in batch mode, the value of <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> is two.</span></span>  
  
 <span data-ttu-id="983ee-410"><xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> 및 <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> 후 호출할 수 있는 속성만 <xref:System.Data.OleDb.OleDbDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-410"><xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OleDb.OleDbDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public override int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="983ee-411"><see cref="T:System.Data.OleDb.OleDbDataReader" /> 중에서 숨김 상태가 아닌 필드 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-411">Gets the number of fields in the <see cref="T:System.Data.OleDb.OleDbDataReader" /> that are not hidden.</span></span></summary>
        <value><span data-ttu-id="983ee-412">숨김 상태가 아닌 필드 수입니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-412">The number of fields that are not hidden.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="983ee-413">이 값은 <xref:System.Data.OleDb.OleDbDataReader>에 표시되는 필드 수를 확인하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-413">This value is used to determine how many fields in the <xref:System.Data.OleDb.OleDbDataReader> are visible.</span></span> <span data-ttu-id="983ee-414">예를 들어 부분 기본 키에 대해 SELECT 문을 실행하면 키의 나머지 부분이 숨김 필드로 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-414">For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.</span></span> <span data-ttu-id="983ee-415">숨김 필드는 표시되는 필드 다음에 항상 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="983ee-415">The hidden fields are always appended behind the visible fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>