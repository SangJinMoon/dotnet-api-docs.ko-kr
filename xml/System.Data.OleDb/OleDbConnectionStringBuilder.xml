<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OleDbConnectionStringBuilder.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52d84b836462e84b9ab6b08814d8699858ff2944e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d84b836462e84b9ab6b08814d8699858ff2944e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>Provides a simple way to create and manage the contents of connection strings used by the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnection" /&gt;</ph> 클래스에서 사용하는 연결 문자열의 내용을 손쉽게 만들고 관리할 수 있는 방법을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>The connection string builder lets developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, using properties and methods of the class.</source>
          <target state="translated">개발자는 연결 문자열 작성기를 사용하여 프로그래밍 방식으로 올바른 구문의 연결 문자열을 만들고 이 클래스의 속성과 메서드를 사용하여 기존 연결 문자열의 구문을 분석한 다음 다시 빌드할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>The connection string builder provides strongly typed properties corresponding to the known key/value pairs allowed by OLE DB connections, and developers can add arbitrary key/value pairs for any other connection string values.</source>
          <target state="translated">강력한 형식의 속성에 해당 하는 OLE DB 연결을 허용 하는 알려진된 키/값 쌍을 제공 하는 연결 문자열 작성기와 개발자가 다른 연결 문자열 값에 대 한 임의의 키/값 쌍을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> 인터페이스를 구현합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>This means that the class works with Visual Studio .NET designers at design time.</source>
          <target state="translated">이 클래스는 디자인 타임에 Visual Studio.NET 디자이너에 작동 한다는 것을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>When developers use the designer to build strongly typed DataSets and strongly typed connections within Visual Studio .NET, the strongly typed connection string builder class will display the properties associated with its type and will also have converters that can map common values for known keys.</source>
          <target state="translated">강력한 형식의 연결 문자열 작성기 클래스는은 형식과 연결 된 속성을 표시 하 고 변환기를 가집니다 개발자는 디자이너를 빌드하려면 강력한 형식의 데이터 집합 및 VISUAL Studio 내에서 강력한 형식의 연결을 사용 하는 알려진된 키에 대 한 공통 값을 매핑할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>Developers needing to create connection strings as part of applications can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> class to build and modify connection strings.</source>
          <target state="translated">응용 프로그램에서 연결 문자열을 만들어야 하는 개발자는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 클래스를 사용하여 연결 문자열을 빌드하고 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>The class also makes it easy to manage connection strings stored in an application configuration file.</source>
          <target state="translated">이 클래스를 사용하여 응용 프로그램 구성 파일에 저장된 연결 문자열을 쉽게 관리할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> performs checks only for the limited set of known key/value pairs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 알려진된 키/값 쌍의 제한 된 집합에 대해서만 검사를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>Therefore, this class can be used to create invalid connection strings.</source>
          <target state="translated">따라서이 클래스 잘못 된 연결 문자열을 만드는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>The following table lists the known keys and their corresponding properties within the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> class, and their default values.</source>
          <target state="translated">다음 표에 알려진된 키 및 해당 속성 내에서 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 클래스 및 해당 기본값입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>Besides these specific values, developers can add any key/value pairs to the collection that is contained within the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instance:</source>
          <target state="translated">이러한 특정 값 외에도 개발자가 모든 키/값 쌍 컬렉션에 추가할 수는에 포함 된는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 인스턴스:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>Key</source>
          <target state="translated">Key</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>Default value</source>
          <target state="translated">기본값</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>File Name</source>
          <target state="translated">파일 이름</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>""</source>
          <target state="translated">""</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>Provider</source>
          <target state="translated">공급자</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>""</source>
          <target state="translated">""</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>Data Source</source>
          <target state="translated">데이터 원본</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>""</source>
          <target state="translated">""</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>Persist Security Info</source>
          <target state="translated">Persist Security Info</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>False</source>
          <target state="translated">False</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>OLE DB Services</source>
          <target state="translated">OLE DB 서비스</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>-13</source>
          <target state="translated">-13</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A&gt;</ph> property handles attempts to insert malicious entries.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A&gt;</ph> 속성 악의적 항목을 삽입 시도 처리 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>For example, the following code, using the default <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A&gt;</ph> property (the indexer, in C#) correctly escapes the nested key/value pair:</source>
          <target state="translated">예를 들어 다음 코드를 기본값을 사용 하 여 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A&gt;</ph> 속성 (C# 인덱서) 중첩 된 키/값 쌍을 올바르게 이스케이프:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>The result is the following connection string that handles the invalid value in a safe manner:</source>
          <target state="translated">결과는 안전한 방식으로 잘못된 값을 처리하는 다음 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>The following console application builds connection strings for several OLE DB databases.</source>
          <target state="translated">다음 콘솔 응용 프로그램은 여러 OLE DB 데이터베이스에 대 한 연결 문자열을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>First, the example creates a connection string for a Microsoft Access database, and then creates a connection string for an IBM DB2 database.</source>
          <target state="translated">첫째,이 예제에서는 Microsoft Access 데이터베이스에 대 한 연결 문자열을 만들고 하 고 IBM DB2 데이터베이스에 대 한 연결 문자열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>The example also parses an existing connection string, and demonstrates various ways of manipulating the connection string's contents.</source>
          <target state="translated">또한이 예제에서는 기존 연결 문자열을 구문 분석 하 고 연결 문자열의 내용을 조작 하는 다양 한 방법을 보여 줍니다. 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>This example includes a password to demonstrate how <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> works with connection strings.</source>
          <target state="translated">이 예제에는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>가 연결 문자열로 작업하는 방법을 보여 주기 위한 암호가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>In your applications, we recommend that you use Windows Authentication.</source>
          <target state="translated">응용 프로그램에서는 Windows 인증을 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>If you must use a password, do not include a hard-coded password in your application.</source>
          <target state="translated">암호를 사용해야 하는 경우에는 응용 프로그램에 하드 코드된 암호를 포함하지 마십시오.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbConnectionStringBuilder">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>The basis for the object's internal connection information.</source>
          <target state="translated">개체의 내부 연결 정보를 위한 기초로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>Parsed into key/value pairs.</source>
          <target state="translated">키/값 쌍으로 구문 분석됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>The provided connection string provides the data for the instance's internal connection information.</source>
          <target state="translated">제공된 연결 문자열에서는 인스턴스의 내부 연결 정보에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property, either directly (by setting the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> property) or by passing a connection string as a parameter to the constructor, may affect the set of key/value pairs that are contained within the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instance.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> 직접적 속성 (설정 하 여는 <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> 속성) 연결 문자열을 매개 변수로 생성자에 전달 하 여 영향을 줄 수에 포함 된 키/값 쌍의 집합 또는 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property to "sqloledb," for example, adds all the standard SQL connection string properties.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> 속성을 "sqloledb" 예를 들어 모든 표준 SQL 연결 문자열 속성을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>See the example in this topic for a demonstration of this behavior.</source>
          <target state="translated">이 동작의 데모를 위한이 항목의 예제를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>For some providers, assigning a connection string within the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> constructor causes the order of supplied key/value pairs to be rearranged.</source>
          <target state="translated">일부 공급자에 대 한 연결 문자열 내에서 할당의 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 생성자 하면 제공 된 키/값 쌍의 순서를 다시 정렬 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>The following example creates multiple <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instances, passing a different connection string to the constructor in each case.</source>
          <target state="translated">다음 예제에서는 여러 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 인스턴스를 다른 연결 문자열을 각각의 경우에서 생성자에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>Note how setting the provider associated with the connection changes the set of predefined key/value pairs within the object's collection.</source>
          <target state="translated">연결과 연관 된 공급자를 설정 개체의 컬렉션 내에서 미리 정의 된 키/값 쌍의 집합을 변경 하는 방법을 note 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>This example includes a password to demonstrate how <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> works with connection strings.</source>
          <target state="translated">이 예제에는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>가 연결 문자열로 작업하는 방법을 보여 주기 위한 암호가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>In your applications, we recommend that you use Windows Authentication.</source>
          <target state="translated">응용 프로그램에서는 Windows 인증을 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>If you must use a password, do not include a hard-coded password in your application.</source>
          <target state="translated">암호를 사용해야 하는 경우에는 응용 프로그램에 하드 코드된 암호를 포함하지 마십시오.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
          <source>The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</source>
          <target state="translated">연결 문자열의 형식이 잘못된 경우(예: 키/값 쌍에서 필수 "="가 누락된 경우)</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Clear">
          <source>Clears the contents of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> 인스턴스의 콘텐츠를 지웁니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A&gt;</ph> method removes all key/value pairs from the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>, and resets all corresponding properties to their default values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A&gt;</ph> 모든 키/값 쌍을 제거 하는 메서드는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>, 모든 해당 속성을 기본값으로 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Clear">
          <source>This includes setting the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Count%2A&gt;</ph> property to 0, and setting the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> property to an empty string.</source>
          <target state="translated">여기에는 <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Count%2A&gt;</ph> 속성을 0으로 설정하고 <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> 속성을 빈 문자열로 설정하는 작업이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Clear">
          <source>The following example demonstrates the effect of calling the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 호출한 데 따른 효과 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Clear">
          <source>This example populates the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> with some key/value pairs, and then calls the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A&gt;</ph> method and shows the results.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>를 특정 키/값 쌍으로 채운 다음 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A&gt;</ph> 메서드를 호출하고 결과를 표시합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Clear">
          <source>This example includes a password to demonstrate how <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> works with connection strings.</source>
          <target state="translated">이 예제에는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>가 연결 문자열로 작업하는 방법을 보여 주기 위한 암호가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Clear">
          <source>In your applications, we recommend that you use Windows Authentication.</source>
          <target state="translated">응용 프로그램에서는 Windows 인증을 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Clear">
          <source>If you must use a password, do not include a hard-coded password in your application.</source>
          <target state="translated">암호를 사용해야 하는 경우에는 응용 프로그램에 하드 코드된 암호를 포함하지 마십시오.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph>에서 찾을 수 있는 키입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> contains a specific key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph>에 특정 키가 들어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> contains an element that has the specified key; otherwise false.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph>에 지정한 키를 가진 요소가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)">
          <source>Although setting the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property may implicitly fill in appropriate key/value pairs for the provider, the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey%2A&gt;</ph> method does not return <ph id="ph3">`true`</ph> for implicitly provided keys.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> 공급자에 대 한 적절 한 키/값 쌍 속성이 암시적으로 채워지지만 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey%2A&gt;</ph> 메서드 반환 하지 않습니다 <ph id="ph3">`true`</ph> 암시적으로 제공 된 키에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)">
          <source>This method returns <ph id="ph1">`true`</ph> only for explicitly provided keys.</source>
          <target state="translated">이 메서드가 반환 <ph id="ph1">`true`</ph> 명시적으로 제공 된 키에 대해서만 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instance, sets some of its properties, and then tries to determine whether various keys exist within the object by calling the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 인스턴스를 만들고 해당 속성 중 일부를 설정한 다음 호출 하 여 개체 내에 다양 한 키가 있는지 확인 하려고는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph> is null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph>가 null(Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource">
          <source>Gets or sets the name of the data source to connect to.</source>
          <target state="translated">연결할 데이터 소스의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource" /&gt;</ph> property, or <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph> if none has been supplied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource" /&gt;</ph> 속성의 값이거나, 제공된 값이 없으면 <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource">
          <source>If the value passed in is null when you try to set the property, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A&gt;</ph> property is reset.</source>
          <target state="translated">속성을 설정하려고 할 때 전달된 값이 null이면 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A&gt;</ph> 속성이 다시 설정됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource">
          <source>If the value has not been set and the developer tries to retrieve the property, the return value is <ph id="ph1">`String.Empty`</ph>.</source>
          <target state="translated">반환 값은 값이 설정 하는 경우 개발자가 속성을 검색 하려고 <ph id="ph1">`String.Empty`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource">
          <source>This property corresponds to the "Data Source" key within the connection string.</source>
          <target state="translated">이 속성은 연결 문자열 내의 "Data Source" 키에 해당 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource">
          <source>The following example console application creates a new <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instance, and then sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 콘솔 응용 프로그램에서는 새 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 인스턴스 및 설정의 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource">
          <source>Finally, the example creates a new <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> instance, and uses that object to connect to the indicated data store.</source>
          <target state="translated">마지막으로,이 예제에서는 새 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> 인스턴스 및 사용 하 여 해당 개체 지정된 된 데이터 저장소에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName">
          <source>Gets or sets the name of the Universal Data Link (UDL) file for connecting to the data source.</source>
          <target state="translated">데이터 소스에 연결하기 위한 UDL(Universal Data Link) 파일의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName" /&gt;</ph> property, or <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph> if none has been supplied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName" /&gt;</ph> 속성의 값이거나, 제공된 값이 없으면 <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName">
          <source>If the value passed in is null when you try to set the property, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.FileName%2A&gt;</ph> property is reset.</source>
          <target state="translated">속성을 설정하려고 할 때 전달된 값이 null이면 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.FileName%2A&gt;</ph> 속성이 다시 설정됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName">
          <source>If the value has not been set and the developer tries to retrieve the property, the return value is <ph id="ph1">`String.Empty`</ph>.</source>
          <target state="translated">반환 값은 값이 설정 하는 경우 개발자가 속성을 검색 하려고 <ph id="ph1">`String.Empty`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName">
          <source>This property corresponds to the "FileName" key within the connection string.</source>
          <target state="translated">이 속성은 연결 문자열 내의 "FileName" 키에 해당 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName">
          <source>Setting this property does not cause the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instance to read the contents of the referenced file, even if the file exists and contains valid connection information.</source>
          <target state="translated">이 속성을 일으키지 않는 설정은 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 인스턴스 파일이 있고 유효한 연결 정보를 포함 하는 경우에 참조 된 파일의 내용을 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName">
          <source>Setting this property has no effect other than to indicate the file to read when connecting to the data source.</source>
          <target state="translated">이 속성을 설정 효과가 없습니다 이외의 다른 데이터 원본에 연결할 때 읽을 파일을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)">
          <source>The key of the item to get or set.</source>
          <target state="translated">가져오거나 설정할 항목의 키입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">지정된 키에 연결된 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)">
          <source>In C#, this property is the indexer.</source>
          <target state="translated">C#에서는 이 속성이 인덱서입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)">
          <source>The value associated with the specified key.</source>
          <target state="translated">지정한 키와 연결된 값입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)">
          <source>Because setting the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property may add corresponding items to the collection of key/value pairs (depending on the behavior of the specific provider), you may be able to retrieve a value for a key you have not set explicitly.</source>
          <target state="translated">설정 때문에 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> 속성 (에 따라 특정 공급자의 동작은) 키/값 쌍의 컬렉션에 해당 항목을 추가할 수 있습니다, 명시적으로 설정 하지 않은 키에 대 한 값을 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)">
          <source>For example, as soon as you have set the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property to "sqloledb," you can retrieve the "Workstation ID" value even if you have not set it yourself.</source>
          <target state="translated">예를 들어, 설정으로 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> 속성 "sqloledb"로 검색할 수 있습니다 "Workstation ID" 값을 설정 하지 않은 것 직접 하는 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)">
          <source>See the example in this topic for a demonstration.</source>
          <target state="translated">데모를 위한이 항목의 예제를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A&gt;</ph> property (the indexer, in C#) to retrieve and set values within the collection of key/value pairs.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A&gt;</ph> 속성 (C# 인덱서) 검색 하 고 키/값 쌍의 컬렉션 내에서 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)">
          <source>Note that setting the provider, in this case, also provides default values for all the key/value pairs associated with the selected provider.</source>
          <target state="translated">이 경우 공급자를 설정 합니다. 또한 선택 된 공급자와 연결 된 모든 키/값 쌍에 대 한 기본 값을 제공 하는 참고 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)">
          <source>The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</source>
          <target state="translated">연결 문자열의 형식이 잘못된 경우(예: 키/값 쌍에서 필수 "="가 누락된 경우)</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)">
          <source><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains the keys in the <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>의 키를 포함하는 <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains the keys in the <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>의 키를 포함하는 <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Keys">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is the same order as the associated values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Values%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>에서 값의 순서는 지정되지 않지만 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 속성이 반환하는 <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Values%2A&gt;</ph>의 연결된 값과 순서가 동일합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Keys">
          <source>The following console application example creates a new <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>.</source>
          <target state="translated">다음 콘솔 응용 프로그램 예제에서는 새 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Keys">
          <source>The code loops through the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Keys%2A&gt;</ph> property displaying the key/value pairs.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> 속성이 반환하는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Keys%2A&gt;</ph>을 반복하여 키/값 쌍을 표시합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Keys">
          <source>This example includes a password to demonstrate how <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> works with connection strings.</source>
          <target state="translated">이 예제에는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>가 연결 문자열로 작업하는 방법을 보여 주기 위한 암호가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Keys">
          <source>In your applications, we recommend that you use Windows Authentication.</source>
          <target state="translated">응용 프로그램에서는 Windows 인증을 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Keys">
          <source>If you must use a password, do not include a hard-coded password in your application.</source>
          <target state="translated">암호를 사용해야 하는 경우에는 응용 프로그램에 하드 코드된 암호를 포함하지 마십시오.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
          <source>Gets or sets the value to be passed for the OLE DB Services key within the connection string.</source>
          <target state="translated">연결 문자열 내의 OLE DB 서비스 키에 대해 전달할 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
          <source>Returns the value corresponding to the OLE DB Services key within the connection string.</source>
          <target state="translated">연결 문자열 내의 OLE DB 서비스 키에 해당하는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
          <source>By default, the value is -13.</source>
          <target state="translated">기본적으로 값은 -13입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
          <source>The OLE DB Services key within the connection string defines a combination of values that let developers enable or disable OLE DB services.</source>
          <target state="translated">연결 문자열 내에서 OLE DB 서비스 키를 사용 하면 개발자가 OLE DB 서비스 활성화 또는 비활성화 하는 값의 조합을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
          <source>The property contains a bitwise combination of values, described in the OLE DB documentation.</source>
          <target state="translated">속성은 OLE DB 설명서에서 설명 하는 값의 비트 조합을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
          <source>For more information about appropriate values for this property, see the OLE DB Programmer's Reference, in particular, "Overriding Provider Service Defaults."</source>
          <target state="translated">이 속성에 대 한 적절 한 값에 대 한 자세한 내용은 OLE DB 프로그래머 참조, 특히 "덮어씁니다 공급자 서비스 기본값입니다."를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
          <source>The default value for this property is -13.</source>
          <target state="translated">이 속성의 기본값은-13입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
          <source>This corresponds to a request for resource pooling, automatic transaction enlistment, session-level aggregation, and no client cursor engine.</source>
          <target state="translated">리소스 풀링, 자동 트랜잭션 인 리스트 먼 트, 세션 수준 집계 및 클라이언트 커서 엔진 없음에 대 한 요청에 해당 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
          <source>The following example works with the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A&gt;</ph> property in two ways.</source>
          <target state="translated">다음 예제에서는 작업에서 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A&gt;</ph> 두 가지 방법으로 속성입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
          <source>First, it assigns a value directly to the property, demonstrating the effect this action has on the resulting connection string.</source>
          <target state="translated">먼저,이 동작으로 인해 결과 연결 문자열에 영향을 보여 주는 속성에 직접 값을 할당 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
          <source>Then, the example clears the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> and assigns a complete connection string that contains a value for the OLE DB Services key.</source>
          <target state="translated">그런 다음이 예제에서는 지웁니다는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> OLE DB 서비스 키에 대 한 값이 포함 된 전체 연결 문자열을 할당 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
          <source>This step demonstrates that setting the value from the connection string modifies the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A&gt;</ph> property, as well.</source>
          <target state="translated">이 단계는 연결 문자열에서 값을 설정 합니다. 수정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A&gt;</ph> 속성 뿐입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo">
          <source>Gets or sets a Boolean value that indicates whether security-sensitive information, such as the password, is returned as part of the connection if the connection is open or has ever been in an open state.</source>
          <target state="translated">연결이 현재 열려 있거나 열린 상태일 경우 암호와 같은 중요한 보안 정보가 연결의 일부로 반환되는지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo" /&gt;</ph> property, or <ph id="ph2">&lt;see langword="false" /&gt;</ph> if none has been supplied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo" /&gt;</ph> 속성의 값이거나, 제공된 값이 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo">
          <source>This property corresponds to the "Persist Security Info" key within the connection string.</source>
          <target state="translated">이 속성은 연결 문자열 내의 "Persist Security Info" 키에 해당 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo">
          <source>The following example works with the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A&gt;</ph> property in two ways.</source>
          <target state="translated">다음 예제에서는 작업에서 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A&gt;</ph> 두 가지 방법으로 속성입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo">
          <source>First, it assigns a value directly to the property, demonstrating the effect this action has on the resulting connection string.</source>
          <target state="translated">먼저,이 동작으로 인해 결과 연결 문자열에 영향을 보여 주는 속성에 직접 값을 할당 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo">
          <source>Then, the example clears the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> and assigns a complete connection string that contains a value for the "Persist Security Info" key.</source>
          <target state="translated">그런 다음이 예제에서는 지웁니다는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> "Persist Security Info" 키에 대 한 값이 포함 된 전체 연결 문자열을 할당 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo">
          <source>This step demonstrates that setting the value from the connection string modifies the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A&gt;</ph> property, as well.</source>
          <target state="translated">이 단계는 연결 문자열에서 값을 설정 합니다. 수정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A&gt;</ph> 속성 뿐입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>Gets or sets a string that contains the name of the data provider associated with the internal connection string.</source>
          <target state="translated">내부 연결 문자열과 관련된 데이터 공급자의 이름을 포함하는 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider" /&gt;</ph> property, or <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph> if none has been supplied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider" /&gt;</ph> 속성의 값이거나, 제공된 값이 없으면 <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>If the value passed in is null when you try to set the property, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property is reset.</source>
          <target state="translated">속성을 설정하려고 할 때 전달된 값이 null이면 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> 속성이 다시 설정됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>If the value has not been set and the developer tries to retrieve the property, the return value is <ph id="ph1">`String.Empty`</ph>.</source>
          <target state="translated">반환 값은 값이 설정 하는 경우 개발자가 속성을 검색 하려고 <ph id="ph1">`String.Empty`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>This property corresponds to the "Provider" key within the connection string.</source>
          <target state="translated">이 속성은 연결 문자열 내의 "Provider" 키에 해당 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>Setting the value of the <ph id="ph1">`Provider`</ph> property, either directly (by setting the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> property) or by passing a connection string as a parameter to the constructor, may affect the set of key/value pairs that are contained within the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instance.</source>
          <target state="translated">값을 설정는 <ph id="ph1">`Provider`</ph> 직접 속성 (설정 하 여는 <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> 속성) 또는 연결 문자열을 매개 변수로 생성자에 전달 하 여 영향을 줄 수에 포함 된 키/값 쌍의 집합은 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property to "sqloledb," for example, adds all the standard SQL connection string properties.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> 속성을 "sqloledb" 예를 들어 모든 표준 SQL 연결 문자열 속성을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>See the example in this topic for a demonstration of this behavior.</source>
          <target state="translated">이 동작의 데모를 위한이 항목의 예제를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>For some providers, assigning a connection string within the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> constructor causes the order of supplied key/value pairs to be rearranged.</source>
          <target state="translated">일부 공급자에 대 한 연결 문자열 내에서 할당의 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 생성자 하면 제공 된 키/값 쌍의 순서를 다시 정렬 됩니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>The following example creates multiple <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instances, passing a different connection string to the constructor in each case.</source>
          <target state="translated">다음 예제에서는 여러 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 인스턴스를 다른 연결 문자열을 각각의 경우에서 생성자에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>Note how setting the provider associated with the connection changes the set of predefined key/value pairs within the object's collection.</source>
          <target state="translated">연결과 연관 된 공급자를 설정 개체의 컬렉션 내에서 미리 정의 된 키/값 쌍의 집합을 변경 하는 방법을 note 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>This example includes a password to demonstrate how <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> works with connection strings.</source>
          <target state="translated">이 예제에는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>가 연결 문자열로 작업하는 방법을 보여 주기 위한 암호가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>In your applications, we recommend that you use Windows Authentication.</source>
          <target state="translated">응용 프로그램에서는 Windows 인증을 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
          <source>If you must use a password, do not include a hard-coded password in your application.</source>
          <target state="translated">암호를 사용해야 하는 경우에는 응용 프로그램에 하드 코드된 암호를 포함하지 마십시오.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)">
          <source>The key of the key/value pair to be removed from the connection string in this <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph>의 연결 문자열에서 제거할 키/값 쌍의 키입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)">
          <source>Removes the entry with the specified key from the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> instance.</source>
          <target state="translated">지정된 키를 가진 항목을 <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> 인스턴스에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key existed within the connection string and was removed, <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the key did not exist.</source>
          <target state="translated">연결 문자열에 있던 키가 제거되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 키가 원래 없었으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)">
          <source>Because the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Remove%2A&gt;</ph> method returns a value that indicates its success, it is not required to look for the existence of a key before trying to remove the key/value pair from the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instance.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Remove%2A&gt;</ph> 는 성공을 나타내는 값을 반환 하는 메서드, 키를 키/값 쌍을 제거 하려고 하기 전에 있는지 여부를 확인 하지 않아도 됩니다는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> and demonstrates the behavior of the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Remove%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> 의 동작을 보여 줍니다는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Remove%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)">
          <source><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph> is null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph>가 null(Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>The key of the item to retrieve.</source>
          <target state="translated">검색할 항목의 키입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>The value corresponding to <bpt id="p1">&lt;c&gt;</bpt>keyword.<ept id="p1">&lt;/c&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>keyword<ept id="p1">&lt;/c&gt;</ept>에 해당하는 값입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>Retrieves a value corresponding to the supplied key from the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> instance.</source>
          <target state="translated">제공된 키에 해당하는 값을 <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /&gt;</ph> 인스턴스에서 검색합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="keyword" /&gt;</ph> was found within the connection string; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="keyword" /&gt;</ph>가 연결 문자열에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A&gt;</ph> method lets developers safely retrieve a value from a <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> without needing to verify that the supplied key name is a valid key name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A&gt;</ph> 메서드를 사용하면 제공된 키 이름이 올바른 키 이름인지 확인하지 않고도 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>에서 값을 안전하게 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>Because <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A&gt;</ph> does not raise an exception when you call it, passing in a nonexistent key, you do not have to look for a key before retrieving its value.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A&gt;</ph> 예외가 발생 하지 않으므로 호출 하면, 존재 하지 않는 키를 전달 하는 경우 해당 값을 검색 하기 전에 키를 찾이 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A&gt;</ph> with a nonexistent key will place the value null (<ph id="ph2">`Nothing`</ph> in Visual Basic) in the <ph id="ph3">`value`</ph> parameter.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A&gt;</ph> 존재 하지 않는 키와 값이 null을 배치 합니다 (<ph id="ph2">`Nothing`</ph> Visual basic에서)에 <ph id="ph3">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>The following example demonstrates the behavior of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 동작을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph> contains a null value (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph>에 null 값(Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)이 포함된 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>