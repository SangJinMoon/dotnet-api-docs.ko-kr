<Type Name="OleDbCommandBuilder" FullName="System.Data.OleDb.OleDbCommandBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5bf109e874387fa85ec26fb605a06e51356e71d9" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51907716" /></Metadata><TypeSignature Language="C#" Value="public sealed class OleDbCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <TypeSignature Language="F#" Value="type OleDbCommandBuilder = class&#xA;    inherit DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cea32-101">변경 내용을 조정 하는 데 사용 되는 단일 테이블 명령을 자동으로 생성 된 <see cref="T:System.Data.DataSet" /> 연결 된 데이터베이스입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-101">Automatically generates single-table commands that are used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database.</span></span> <span data-ttu-id="cea32-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea32-103">합니다 <xref:System.Data.OleDb.OleDbDataAdapter> 변경 내용을 조정 하는 데 필요한 SQL 문을 자동으로 생성 하지 않습니다는 <xref:System.Data.DataSet> 연결된 된 데이터 소스를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-103">The <xref:System.Data.OleDb.OleDbDataAdapter> does not automatically generate the SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated data source.</span></span> <span data-ttu-id="cea32-104">만들 수 있습니다는 <xref:System.Data.OleDb.OleDbCommandBuilder> 설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체를 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 의 속성을 <xref:System.Data.OleDb.OleDbDataAdapter>입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-104">However, you can create an <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span> <span data-ttu-id="cea32-105">설정 하지 않으면 추가적인 모든 SQL 문을에서 생성 된 후에 <xref:System.Data.OleDb.OleDbCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-105">Then, any additional SQL statements that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span>  
  
 <span data-ttu-id="cea32-106">합니다 <xref:System.Data.OleDb.OleDbCommandBuilder> 자체에 대 한 수신기를 등록 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 설정할 때마다 이벤트를 <xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-106">The <xref:System.Data.OleDb.OleDbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A> property.</span></span> <span data-ttu-id="cea32-107">만 연결할 수 있습니다 <xref:System.Data.OleDb.OleDbDataAdapter> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder> 서로 사용 하 여 개체를 한 번에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-107">You can only associate one <xref:System.Data.OleDb.OleDbDataAdapter> or <xref:System.Data.OleDb.OleDbCommandBuilder> object with each other at one time.</span></span>  
  
 <span data-ttu-id="cea32-108">INSERT, UPDATE 또는 DELETE 문을 생성 하는 <xref:System.Data.OleDb.OleDbCommandBuilder> 사용 하 여를 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 메타 데이터의 집합을 자동으로 검색할 속성.</span><span class="sxs-lookup"><span data-stu-id="cea32-108">To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.OleDb.OleDbCommandBuilder> uses the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically.</span></span> <span data-ttu-id="cea32-109">변경 하는 경우는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 첫 번째 업데이트 이후 호출 해야 같은 메타 데이터를 검색 한 후의 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 메타 데이터를 업데이트 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-109">If you change the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> after the metadata is retrieved, such as after the first update, you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.</span></span>  
  
 <span data-ttu-id="cea32-110"><xref:System.Data.OleDb.OleDbCommandBuilder> 도 사용 합니다 <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>, 및 <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> 속성에서 참조 하는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="cea32-110">The <xref:System.Data.OleDb.OleDbCommandBuilder> also uses the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>, and <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> properties referenced by the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="cea32-111">호출 해야 합니다 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 이러한 속성 중 하나 이상이 수정 되 면 아니면는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 자체 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-111">The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if one or more of these properties are modified, or if the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> itself is replaced.</span></span> <span data-ttu-id="cea32-112">그렇지 않은 경우는 <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, 및 <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> 이전 값을 유지 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-112">Otherwise the <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties retain their previous values.</span></span>  
  
 <span data-ttu-id="cea32-113">호출 하는 경우 <xref:System.ComponentModel.Component.Dispose%2A>는 <xref:System.Data.OleDb.OleDbCommandBuilder> 에서 분리를 <xref:System.Data.OleDb.OleDbDataAdapter>, 및 생성된 된 명령을 더 이상 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-113">If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.OleDb.OleDbCommandBuilder> is disassociated from the <xref:System.Data.OleDb.OleDbDataAdapter>, and the generated commands are no longer used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cea32-114">다음 예제에서는 합니다 <xref:System.Data.OleDb.OleDbCommand>, 함께 <xref:System.Data.OleDb.OleDbDataAdapter> 고 <xref:System.Data.OleDb.OleDbConnection>, 데이터 원본에서 행을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-114">The following example uses the <xref:System.Data.OleDb.OleDbCommand>, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from a data source.</span></span> <span data-ttu-id="cea32-115">이 예제에서는 초기화 되는지를 <xref:System.Data.DataSet>, 연결 문자열는 SQL SELECT 문 하는 쿼리 문자열 및 문자열 데이터 원본 테이블의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-115">The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table.</span></span> <span data-ttu-id="cea32-116">만듭니다는 <xref:System.Data.OleDb.OleDbCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-116">The example then creates an <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommandBuilder/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommandBuilder/VB/mysample.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-117">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-117">Automatically Generating Commands</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cea32-118"><see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-118">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-119">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-119">Automatically Generating Commands</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cea32-120"><see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-120">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-121">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-121">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommandBuilder (System.Data.OleDb.OleDbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OleDbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommandBuilder(System::Data::OleDb::OleDbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbCommandBuilder : System.Data.OleDb.OleDbDataAdapter -&gt; System.Data.OleDb.OleDbCommandBuilder" Usage="new System.Data.OleDb.OleDbCommandBuilder adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.OleDb.OleDbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter"><span data-ttu-id="cea32-122"><see cref="T:System.Data.OleDb.OleDbDataAdapter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-122">An <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="cea32-123">새 인스턴스를 초기화 합니다 <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> 연결된 된 클래스 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-123">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> class with the associated <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea32-124">합니다 <xref:System.Data.OleDb.OleDbCommandBuilder> 자체에 대 한 수신기를 등록 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 에서 생성 되는 이벤트를 <xref:System.Data.OleDb.OleDbDataAdapter> 이 속성에 지정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-124">The <xref:System.Data.OleDb.OleDbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OleDb.OleDbDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="cea32-125">새 인스턴스를 만들면 <xref:System.Data.OleDb.OleDbCommandBuilder>, 기존 <xref:System.Data.OleDb.OleDbCommandBuilder> 와 연결 된 <xref:System.Data.OleDb.OleDbDataAdapter> 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-125">When you create a new instance <xref:System.Data.OleDb.OleDbCommandBuilder>, any existing <xref:System.Data.OleDb.OleDbCommandBuilder> associated with this <xref:System.Data.OleDb.OleDbDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-126">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-126">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberSignature Language="F#" Value="override this.ApplyParameterInfo : System.Data.Common.DbParameter * System.Data.DataRow * System.Data.StatementType * bool -&gt; unit" Usage="oleDbCommandBuilder.ApplyParameterInfo (parameter, datarow, statementType, whereClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OleDbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbDataAdapter ^ DataAdapter { System::Data::OleDb::OleDbDataAdapter ^ get(); void set(System::Data::OleDb::OleDbDataAdapter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataAdapter : System.Data.OleDb.OleDbDataAdapter with get, set" Usage="System.Data.OleDb.OleDbCommandBuilder.DataAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbCommandBuilder_DataAdapter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cea32-127">가져오거나는 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 개체는 SQL 문을 자동으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-127">Gets or sets an <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object for which SQL statements are automatically generated.</span></span></summary>
        <value><span data-ttu-id="cea32-128"><see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-128">An <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea32-129">합니다 <xref:System.Data.OleDb.OleDbCommandBuilder> 자체에 대 한 수신기를 등록 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 에서 생성 되는 이벤트를 <xref:System.Data.OleDb.OleDbDataAdapter> 이 속성에 지정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-129">The <xref:System.Data.OleDb.OleDbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OleDb.OleDbDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="cea32-130">새 인스턴스를 만들면 <xref:System.Data.OleDb.OleDbCommandBuilder>, 기존 <xref:System.Data.OleDb.OleDbCommandBuilder> 와 연결 된 <xref:System.Data.OleDb.OleDbDataAdapter> 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-130">When you create a new instance <xref:System.Data.OleDb.OleDbCommandBuilder>, any existing <xref:System.Data.OleDb.OleDbCommandBuilder> associated with this <xref:System.Data.OleDb.OleDbDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-131">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-131">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.OleDb.OleDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.OleDb.OleDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::OleDb::OleDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="static member DeriveParameters : System.Data.OleDb.OleDbCommand -&gt; unit" Usage="System.Data.OleDb.OleDbCommandBuilder.DeriveParameters command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="cea32-132"><see cref="T:System.Data.OleDb.OleDbCommand" /> 파생 된 매개 변수 정보는 저장된 프로시저를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-132">The <see cref="T:System.Data.OleDb.OleDbCommand" /> referencing the stored procedure from which the parameter information is to be derived.</span></span> <span data-ttu-id="cea32-133">파생된 매개 변수가 추가 됩니다는 <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> 의 컬렉션을 <see cref="T:System.Data.OleDb.OleDbCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-133">The derived parameters are added to the <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> collection of the <see cref="T:System.Data.OleDb.OleDbCommand" />.</span></span></param>
        <summary><span data-ttu-id="cea32-134">에 지정 된 저장된 프로시저에서 매개 변수 정보를 검색 합니다 <see cref="T:System.Data.OleDb.OleDbCommand" /> 채웁니다 합니다 <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> 지정 된 컬렉션 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-134">Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.OleDb.OleDbCommand" /> and populates the <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> collection of the specified <see cref="T:System.Data.OleDb.OleDbCommand" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea32-135"><xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> 에 대 한 기존 매개 변수 정보를 덮어씁니다를 <xref:System.Data.OleDb.OleDbCommand>입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-135"><xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> overwrites any existing parameter information for the <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
 <span data-ttu-id="cea32-136"><xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> 정보를 가져올 데이터 소스에 추가로 호출을 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-136"><xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> requires an additional call to the data source to obtain the information.</span></span> <span data-ttu-id="cea32-137">매개 변수 정보를 사전에 알고 있는 경우에 정보를 명시적으로 설정 하 여 매개 변수 컬렉션을 채우는 데 더 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-137">If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</span></span>  
  
 <span data-ttu-id="cea32-138">만 사용할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> 저장된 프로시저를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-138">You can only use <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> with stored procedures.</span></span> <span data-ttu-id="cea32-139">사용할 수 없습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> 채우는 데는 <xref:System.Data.OleDb.OleDbParameterCollection> 매개 변수가 있는 SELECT 문과 같은 임의의 TRANSACT-SQL 문을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-139">You cannot use <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> to populate the <xref:System.Data.OleDb.OleDbParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</span></span>  
  
 <span data-ttu-id="cea32-140">자세한 내용은 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-140">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cea32-141">기본 OLE DB 공급자는 저장된 프로시저 매개 변수 정보 반환을 지원 하지 않습니다, 명령 텍스트를 유효한 저장된 프로시저 이름이 아닙니다. 또는 <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> 없습니다 지정 <see langword="StoredProcedure" />합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-141">The underlying OLE DB provider does not support returning stored procedure parameter information, the command text is not a valid stored procedure name, or the <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> specified was not <see langword="StoredProcedure" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-142">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-142">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oleDbCommandBuilder.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cea32-143">자동으로 생성 된 가져옵니다 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체가 데이터 소스에서 삭제 하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-143">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea32-144">사용 하는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 문제 해결에 대 한 메서드를 목적으로 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-144">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="cea32-145">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-145">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="cea32-146">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 수정 및 합니다 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-146">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="cea32-147">응용 프로그램이 명시적으로 호출 해야 SQL 문을 먼저 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 어떤 방식으로 해당 문을 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="cea32-147">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="cea32-148">이 고, 그렇지는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-148">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="cea32-149">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저 됩니다 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-149">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-150">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-150">Automatically Generating Commands</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetDeleteCommand();" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : unit -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbCommandBuilder.GetDeleteCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cea32-151">자동으로 생성 된 가져옵니다 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체가 데이터 소스에서 삭제 하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-151">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions at the data source.</span></span></summary>
        <returns><span data-ttu-id="cea32-152">자동으로 생성 된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체가 삭제 하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-152">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea32-153">사용 하는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 문제 해결에 대 한 메서드를 목적으로 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-153">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="cea32-154">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-154">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="cea32-155">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 수정 및 합니다 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-155">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="cea32-156">응용 프로그램이 명시적으로 호출 해야 SQL 문을 먼저 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 어떤 방식으로 해당 문을 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="cea32-156">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="cea32-157">이 고, 그렇지는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-157">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="cea32-158">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저 됩니다 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-158">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-159">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-159">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : bool -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbCommandBuilder.GetDeleteCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames"><span data-ttu-id="cea32-160">경우 <see langword="true" />, 가능 하면 열 이름과 일치 하는 매개 변수 이름을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-160">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span></span> <span data-ttu-id="cea32-161"><see langword="false" />이면 @p1, @p2 등을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-161">If <see langword="false" />, generate @p1, @p2, and so on.</span></span></param>
        <summary><span data-ttu-id="cea32-162">자동으로 생성 된 가져옵니다 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체가 데이터 소스에서 삭제 하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-162">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions at the data source.</span></span></summary>
        <returns><span data-ttu-id="cea32-163">자동으로 생성 된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체가 삭제 하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-163">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea32-164">사용 하는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 문제 해결에 대 한 메서드를 목적으로 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-164">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="cea32-165">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-165">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="cea32-166">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 수정 및 합니다 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-166">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="cea32-167">응용 프로그램이 명시적으로 호출 해야 SQL 문을 먼저 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 어떤 방식으로 해당 문을 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="cea32-167">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="cea32-168">이 고, 그렇지는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-168">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="cea32-169">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저 됩니다 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-169">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="cea32-170">매개 변수 이름을 생성할 때 기본 동작을 사용 하는 것 @p1, @p2, 다양 한 매개 변수에 대해 등입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-170">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="cea32-171">전달 `true` 에 대 한 합니다 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.OleDb.OleDbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-171">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="cea32-172">다음 조건에 해당 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-172">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="cea32-173"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름을 보다 크거나 같음.</span><span class="sxs-lookup"><span data-stu-id="cea32-173">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="cea32-174">생성 된 매개 변수 이름에 지정 된 조건을 충족 합니다 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-174">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="cea32-175"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-175">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-176">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-176">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cea32-177">자동으로 생성 된 가져옵니다 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체가 데이터 소스에서 삽입 하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-177">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea32-178">사용 하는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 의 텍스트를 반환 하기 때문에 문제 해결에 대 한 메서드를 목적으로 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-178">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="cea32-179">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-179">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="cea32-180">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 수정 및 합니다 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-180">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="cea32-181">응용 프로그램이 명시적으로 호출 해야 SQL 문을 먼저 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 어떤 방식으로 해당 문을 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="cea32-181">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="cea32-182">이 고, 그렇지는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-182">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="cea32-183">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저 됩니다 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-183">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-184">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-184">Automatically Generating Commands</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetInsertCommand();" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : unit -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbCommandBuilder.GetInsertCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cea32-185">자동으로 생성 된 가져옵니다 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체가 데이터 소스에서 삽입 하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-185">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions at the data source.</span></span></summary>
        <returns><span data-ttu-id="cea32-186">자동으로 생성 된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체가 삽입 하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-186">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea32-187">사용 하는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 의 텍스트를 반환 하기 때문에 문제 해결에 대 한 메서드를 목적으로 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-187">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="cea32-188">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-188">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="cea32-189">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 수정 및 합니다 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-189">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="cea32-190">응용 프로그램이 명시적으로 호출 해야 SQL 문을 먼저 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 어떤 방식으로 해당 문을 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="cea32-190">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="cea32-191">이 고, 그렇지는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-191">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="cea32-192">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저 됩니다 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-192">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-193">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-193">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : bool -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbCommandBuilder.GetInsertCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames"><span data-ttu-id="cea32-194">경우 <see langword="true" />, 가능 하면 열 이름과 일치 하는 매개 변수 이름을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-194">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span></span> <span data-ttu-id="cea32-195"><see langword="false" />이면 @p1, @p2 등을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-195">If <see langword="false" />, generate @p1, @p2, and so on.</span></span></param>
        <summary><span data-ttu-id="cea32-196">자동으로 생성 된 가져옵니다 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체가 데이터 소스에서 삽입 하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-196">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions at the data source.</span></span></summary>
        <returns><span data-ttu-id="cea32-197">자동으로 생성 된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체가 삽입 하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-197">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea32-198">사용 하는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 의 텍스트를 반환 하기 때문에 문제 해결에 대 한 메서드를 목적으로 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-198">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="cea32-199">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-199">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="cea32-200">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 수정 및 합니다 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-200">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="cea32-201">응용 프로그램이 명시적으로 호출 해야 SQL 문을 먼저 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 어떤 방식으로 해당 문을 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="cea32-201">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="cea32-202">이 고, 그렇지는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-202">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="cea32-203">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저 됩니다 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-203">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="cea32-204">매개 변수 이름을 생성할 때 기본 동작을 사용 하는 것 @p1, @p2, 다양 한 매개 변수에 대해 등입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-204">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="cea32-205">전달 `true` 에 대 한 합니다 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.OleDb.OleDbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-205">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="cea32-206">다음 조건에 해당 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-206">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="cea32-207"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름을 보다 크거나 같음.</span><span class="sxs-lookup"><span data-stu-id="cea32-207">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="cea32-208">생성 된 매개 변수 이름에 지정 된 조건을 충족 합니다 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-208">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="cea32-209"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-209">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-210">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-210">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : int -&gt; string" Usage="oleDbCommandBuilder.GetParameterName parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : string -&gt; string" Usage="oleDbCommandBuilder.GetParameterName parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterPlaceholder : int -&gt; string" Usage="oleDbCommandBuilder.GetParameterPlaceholder parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cea32-211">자동으로 생성 된 가져옵니다 <see cref="T:System.Data.OleDb.OleDbCommand" /> 데이터 소스에서 업데이트를 수행 하는 데 필요한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-211">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea32-212">사용 하는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 문제 해결에 대 한 메서드를 목적으로 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-212">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="cea32-213">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-213">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="cea32-214">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 수정 및 합니다 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-214">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="cea32-215">응용 프로그램이 명시적으로 호출 해야 SQL 문을 먼저 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 어떤 방식으로 해당 문을 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="cea32-215">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="cea32-216">이 고, 그렇지는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-216">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="cea32-217">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저 됩니다 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-217">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-218">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-218">Automatically Generating Commands</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetUpdateCommand();" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : unit -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbCommandBuilder.GetUpdateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cea32-219">자동으로 생성 된 가져옵니다 <see cref="T:System.Data.OleDb.OleDbCommand" /> 데이터 소스에서 업데이트를 수행 하는 데 필요한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-219">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates at the data source.</span></span></summary>
        <returns><span data-ttu-id="cea32-220">자동으로 생성 된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 업데이트를 수행 하는 데 필요한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-220">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea32-221">사용 하는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 문제 해결에 대 한 메서드를 목적으로 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-221">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="cea32-222">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-222">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="cea32-223">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 수정 및 합니다 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-223">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="cea32-224">응용 프로그램이 명시적으로 호출 해야 SQL 문을 먼저 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 어떤 방식으로 해당 문을 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="cea32-224">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="cea32-225">이 고, 그렇지는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-225">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="cea32-226">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저 됩니다 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-226">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-227">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-227">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : bool -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbCommandBuilder.GetUpdateCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames"><span data-ttu-id="cea32-228">경우 <see langword="true" />, 가능 하면 열 이름과 일치 하는 매개 변수 이름을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-228">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span></span> <span data-ttu-id="cea32-229"><see langword="false" />이면 @p1, @p2 등을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-229">If <see langword="false" />, generate @p1, @p2, and so on.</span></span></param>
        <summary><span data-ttu-id="cea32-230">자동으로 생성 된 가져옵니다 <see cref="T:System.Data.OleDb.OleDbCommand" /> 필요에 따라 열을 사용 하 여 매개 변수 이름에 대 한 데이터 소스에서 업데이트를 수행 하는 데 필요한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-230">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates at the data source, optionally using columns for parameter names.</span></span></summary>
        <returns><span data-ttu-id="cea32-231">자동으로 생성 된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 업데이트를 수행 하는 데 필요한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-231">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea32-232">사용 하는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 문제 해결에 대 한 메서드를 목적으로 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-232">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="cea32-233">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-233">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="cea32-234">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 수정 및 합니다 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-234">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="cea32-235">응용 프로그램이 명시적으로 호출 해야 SQL 문을 먼저 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 어떤 방식으로 해당 문을 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="cea32-235">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="cea32-236">이 고, 그렇지는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-236">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="cea32-237">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저 됩니다 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-237">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="cea32-238">매개 변수 이름을 생성할 때 기본 동작을 사용 하는 것 @p1, @p2, 다양 한 매개 변수에 대해 등입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-238">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="cea32-239">전달 `true` 에 대 한 합니다 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.OleDb.OleDbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-239">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="cea32-240">다음 조건에 해당 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-240">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="cea32-241"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름을 보다 크거나 같음.</span><span class="sxs-lookup"><span data-stu-id="cea32-241">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="cea32-242">생성 된 매개 변수 이름에 지정 된 조건을 충족 합니다 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-242">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="cea32-243"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-243">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-244">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-244">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="QuoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cea32-245">올바른 카탈로그의 경우 따옴표 붙지 않은 식별자를 지정 된 된 따옴표 붙은 올바른 반환 형식의 해당 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-245">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span></span> <span data-ttu-id="cea32-246">여기에 식별자에 포함 된 모든 따옴표를 이스케이프 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-246">This includes correctly escaping any embedded quotes in the identifier.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-247">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-247">Automatically Generating Commands</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.QuoteIdentifier : string -&gt; string" Usage="oleDbCommandBuilder.QuoteIdentifier unquotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier"><span data-ttu-id="cea32-248">원래 따옴표 붙지 않은 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-248">The original unquoted identifier.</span></span></param>
        <summary><span data-ttu-id="cea32-249">올바른 카탈로그의 경우 따옴표 붙지 않은 식별자를 지정 된 된 따옴표 붙은 올바른 반환 형식의 해당 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-249">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span></span> <span data-ttu-id="cea32-250">여기에 식별자에 포함 된 모든 따옴표를 이스케이프 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-250">This includes correctly escaping any embedded quotes in the identifier.</span></span></summary>
        <returns><span data-ttu-id="cea32-251">따옴표 붙은 버전 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-251">The quoted version of the identifier.</span></span> <span data-ttu-id="cea32-252">식별자에 포함 된 따옴표가 올바르게 이스케이프 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-252">Embedded quotes within the identifier are correctly escaped.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-253">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-253">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public string QuoteIdentifier (string unquotedIdentifier, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string QuoteIdentifier(string unquotedIdentifier, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function QuoteIdentifier (unquotedIdentifier As String, connection As OleDbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier, System::Data::OleDb::OleDbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="override this.QuoteIdentifier : string * System.Data.OleDb.OleDbConnection -&gt; string" Usage="oleDbCommandBuilder.QuoteIdentifier (unquotedIdentifier, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier"><span data-ttu-id="cea32-254">따옴표 붙은 형식으로 반환 될 따옴표 붙지 않은 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-254">The unquoted identifier to be returned in quoted format.</span></span></param>
        <param name="connection"><span data-ttu-id="cea32-255">연결이 전달 되 면 관리 래퍼가 OLE DB 공급자 로부터 따옴표 문자를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-255">When a connection is passed, causes the managed wrapper to get the quote character from the OLE DB provider.</span></span> <span data-ttu-id="cea32-256">문자열의 값을 사용 하 여 따옴표로 연결 없음이 전달 되 면 <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> 고 <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-256">When no connection is passed, the string is quoted using values from <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> and <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />.</span></span></param>
        <summary><span data-ttu-id="cea32-257">올바른 카탈로그의 경우 따옴표 붙지 않은 식별자를 지정 된 된 따옴표 붙은 올바른 반환 형식의 해당 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-257">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span></span> <span data-ttu-id="cea32-258">여기에 식별자에 포함 된 모든 따옴표를 이스케이프 합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-258">This includes correctly escaping any embedded quotes in the identifier.</span></span></summary>
        <returns><span data-ttu-id="cea32-259">따옴표 붙은 버전 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-259">The quoted version of the identifier.</span></span> <span data-ttu-id="cea32-260">식별자에 포함 된 따옴표가 올바르게 이스케이프 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-260">Embedded quotes within the identifier are correctly escaped.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-261">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-261">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="QuotePrefix">
      <MemberSignature Language="C#" Value="public string QuotePrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuotePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommandBuilder.QuotePrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property QuotePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QuotePrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuotePrefix : string with get, set" Usage="System.Data.OleDb.OleDbCommandBuilder.QuotePrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbCommandBuilder_QuotePrefix")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteSuffix">
      <MemberSignature Language="C#" Value="public string QuoteSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuoteSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommandBuilder.QuoteSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QuoteSuffix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteSuffix : string with get, set" Usage="System.Data.OleDb.OleDbCommandBuilder.QuoteSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbCommandBuilder_QuoteSuffix")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.RefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshSchema ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshSchema();" />
      <MemberSignature Language="F#" Value="member this.RefreshSchema : unit -&gt; unit" Usage="oleDbCommandBuilder.RefreshSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="override this.SetRowUpdatingHandler : System.Data.Common.DbDataAdapter -&gt; unit" Usage="oleDbCommandBuilder.SetRowUpdatingHandler adapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnquoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cea32-262">따옴표 붙은 식별자를 지정 된 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-262">Given a quoted identifier, returns the correct unquoted form of that identifier.</span></span> <span data-ttu-id="cea32-263">여기에 올바르게 이스케이프 되지 않은 포함 된 모든 따옴표 식별자에서입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-263">This includes correctly un-escaping any embedded quotes in the identifier.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-264">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-264">Automatically Generating Commands</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.UnquoteIdentifier : string -&gt; string" Usage="oleDbCommandBuilder.UnquoteIdentifier quotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier"><span data-ttu-id="cea32-265">식별자가 포함 된 따옴표 제거입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-265">The identifier that will have its embedded quotes removed.</span></span></param>
        <summary><span data-ttu-id="cea32-266">따옴표 붙은 식별자를 지정 된 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-266">Given a quoted identifier, returns the correct unquoted form of that identifier.</span></span> <span data-ttu-id="cea32-267">여기에 올바르게 이스케이프 되지 않은 포함 된 모든 따옴표 식별자에서입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-267">This includes correctly un-escaping any embedded quotes in the identifier.</span></span></summary>
        <returns><span data-ttu-id="cea32-268">포함 된 따옴표가 올바르게 이스케이프 되지 않은 따옴표 붙지 않은 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-268">The unquoted identifier, with embedded quotes correctly un-escaped.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-269">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-269">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public string UnquoteIdentifier (string quotedIdentifier, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnquoteIdentifier(string quotedIdentifier, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnquoteIdentifier (quotedIdentifier As String, connection As OleDbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier, System::Data::OleDb::OleDbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="override this.UnquoteIdentifier : string * System.Data.OleDb.OleDbConnection -&gt; string" Usage="oleDbCommandBuilder.UnquoteIdentifier (quotedIdentifier, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier"><span data-ttu-id="cea32-270">식별자가 포함 된 따옴표 제거입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-270">The identifier that will have its embedded quotes removed.</span></span></param>
        <param name="connection"><span data-ttu-id="cea32-271"><see cref="T:System.Data.OleDb.OleDbConnection" /></span><span class="sxs-lookup"><span data-stu-id="cea32-271">The <see cref="T:System.Data.OleDb.OleDbConnection" />.</span></span></param>
        <summary><span data-ttu-id="cea32-272">따옴표 붙은 식별자를 지정 된 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-272">Given a quoted identifier, returns the correct unquoted form of that identifier.</span></span> <span data-ttu-id="cea32-273">여기에 올바르게 이스케이프 되지 않은 포함 된 모든 따옴표 식별자에서입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-273">This includes correctly un-escaping any embedded quotes in the identifier.</span></span></summary>
        <returns><span data-ttu-id="cea32-274">포함 된 따옴표가 올바르게 이스케이프 되지 않은 따옴표 붙지 않은 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="cea32-274">The unquoted identifier, with embedded quotes correctly un-escaped.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91"><span data-ttu-id="cea32-275">자동 명령 생성</span><span class="sxs-lookup"><span data-stu-id="cea32-275">Automatically Generating Commands</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>