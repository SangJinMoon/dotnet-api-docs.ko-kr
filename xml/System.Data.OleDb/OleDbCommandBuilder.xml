<Type Name="OleDbCommandBuilder" FullName="System.Data.OleDb.OleDbCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b115617c9192c502a2c1876e1d32eaa8ba84486" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390347" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="80411-101">연결된 데이터베이스에서 <see cref="T:System.Data.DataSet" />의 변경 내용을 조정하는 데 사용되는 단일 테이블 명령을 자동으로 생성합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80411-101">Automatically generates single-table commands that are used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database.</span>
      </span>
      <span data-ttu-id="80411-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80411-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80411-103"><xref:System.Data.OleDb.OleDbDataAdapter> 변경 내용을 조정 하는 데 필요한 SQL 문을 자동으로 생성 되지 않습니다는 <xref:System.Data.DataSet> 연결 된 데이터 원본을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-103">The <xref:System.Data.OleDb.OleDbDataAdapter> does not automatically generate the SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated data source.</span></span> <span data-ttu-id="80411-104">만들 수 있습니다는 <xref:System.Data.OleDb.OleDbCommandBuilder> 설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 개체는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 의 속성은 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-104">However, you can create an <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span> <span data-ttu-id="80411-105">를 설정 하지 않는 추가적인 모든 SQL 문을 그러면는 <xref:System.Data.OleDb.OleDbCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-105">Then, any additional SQL statements that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span>  
  
 <span data-ttu-id="80411-106"><xref:System.Data.OleDb.OleDbCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 설정할 때마다 이벤트는 <xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-106">The <xref:System.Data.OleDb.OleDbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A> property.</span></span> <span data-ttu-id="80411-107">만 연결할 수 있습니다 <xref:System.Data.OleDb.OleDbDataAdapter> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder> 서로 개체를 한 번에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80411-107">You can only associate one <xref:System.Data.OleDb.OleDbDataAdapter> or <xref:System.Data.OleDb.OleDbCommandBuilder> object with each other at one time.</span></span>  
  
 <span data-ttu-id="80411-108">INSERT, UPDATE 또는 DELETE 문을 생성 하는 <xref:System.Data.OleDb.OleDbCommandBuilder> 사용 하 여는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 속성을 필수 메타 데이터 집합을 자동으로 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-108">To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.OleDb.OleDbCommandBuilder> uses the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically.</span></span> <span data-ttu-id="80411-109">변경 하는 경우는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 호출 해야 후 첫 번째 업데이트와 같은 메타 데이터를 검색 한 후의 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 메서드 메타 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-109">If you change the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> after the metadata is retrieved, such as after the first update, you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.</span></span>  
  
 <span data-ttu-id="80411-110"><xref:System.Data.OleDb.OleDbCommandBuilder> 또한 사용 하 여는 <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>, 및 <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> 속성에서 참조 되는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-110">The <xref:System.Data.OleDb.OleDbCommandBuilder> also uses the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>, and <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> properties referenced by the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="80411-111">호출 해야 합니다 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 경우 또는 이러한 속성 중 하나 이상이 수정 되는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 자체 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="80411-111">The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if one or more of these properties are modified, or if the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> itself is replaced.</span></span> <span data-ttu-id="80411-112">그렇지 않은 경우는 <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, 및 <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> 속성 이전 값을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-112">Otherwise the <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties retain their previous values.</span></span>  
  
 <span data-ttu-id="80411-113">호출 하는 경우 <xref:System.ComponentModel.Component.Dispose%2A>, <xref:System.Data.OleDb.OleDbCommandBuilder> 에서 분리는 <xref:System.Data.OleDb.OleDbDataAdapter>, 생성된 된 명령을 더 이상 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="80411-113">If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.OleDb.OleDbCommandBuilder> is disassociated from the <xref:System.Data.OleDb.OleDbDataAdapter>, and the generated commands are no longer used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80411-114">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand>, 함께 <xref:System.Data.OleDb.OleDbDataAdapter> 및 <xref:System.Data.OleDb.OleDbConnection>, 데이터 원본에서 행을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-114">The following example uses the <xref:System.Data.OleDb.OleDbCommand>, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from a data source.</span></span> <span data-ttu-id="80411-115">이 예제에서는 초기화 된 전달 <xref:System.Data.DataSet>, 연결 문자열, 쿼리 문자열을는 SQL SELECT 문 및 데이터 원본 테이블의 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-115">The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table.</span></span> <span data-ttu-id="80411-116">이 예에서는 다음 만듭니다는 <xref:System.Data.OleDb.OleDbCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-116">The example then creates an <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommandBuilder/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommandBuilder/VB/mysample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80411-117">
            <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-117">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80411-118">
            <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-118">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommandBuilder (System.Data.OleDb.OleDbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OleDbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommandBuilder(System::Data::OleDb::OleDbDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.OleDb.OleDbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="80411-119">
            <see cref="T:System.Data.OleDb.OleDbDataAdapter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-119">An <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80411-120">관련 <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> 개체를 사용하여 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-120">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> class with the associated <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80411-121"><xref:System.Data.OleDb.OleDbCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 에서 생성 되는 이벤트는 <xref:System.Data.OleDb.OleDbDataAdapter> 이 속성에 지정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-121">The <xref:System.Data.OleDb.OleDbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OleDb.OleDbDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="80411-122">새 인스턴스를 만들 때 <xref:System.Data.OleDb.OleDbCommandBuilder>, 모든 기존 <xref:System.Data.OleDb.OleDbCommandBuilder> 이 연관 <xref:System.Data.OleDb.OleDbDataAdapter> 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="80411-122">When you create a new instance <xref:System.Data.OleDb.OleDbCommandBuilder>, any existing <xref:System.Data.OleDb.OleDbCommandBuilder> associated with this <xref:System.Data.OleDb.OleDbDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OleDbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbDataAdapter ^ DataAdapter { System::Data::OleDb::OleDbDataAdapter ^ get(); void set(System::Data::OleDb::OleDbDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80411-123">SQL 문이 자동으로 생성되는 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-123">Gets or sets an <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object for which SQL statements are automatically generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80411-124">
            <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-124">An <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80411-125"><xref:System.Data.OleDb.OleDbCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 에서 생성 되는 이벤트는 <xref:System.Data.OleDb.OleDbDataAdapter> 이 속성에 지정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-125">The <xref:System.Data.OleDb.OleDbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OleDb.OleDbDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="80411-126">새 인스턴스를 만들 때 <xref:System.Data.OleDb.OleDbCommandBuilder>, 모든 기존 <xref:System.Data.OleDb.OleDbCommandBuilder> 이 연관 <xref:System.Data.OleDb.OleDbDataAdapter> 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="80411-126">When you create a new instance <xref:System.Data.OleDb.OleDbCommandBuilder>, any existing <xref:System.Data.OleDb.OleDbCommandBuilder> associated with this <xref:System.Data.OleDb.OleDbDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.OleDb.OleDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.OleDb.OleDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::OleDb::OleDbCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="80411-127">매개 변수 정보가 파생될 저장 프로시저를 참조하는 <see cref="T:System.Data.OleDb.OleDbCommand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-127">The <see cref="T:System.Data.OleDb.OleDbCommand" /> referencing the stored procedure from which the parameter information is to be derived.</span>
          </span>
          <span data-ttu-id="80411-128">파생된 매개 변수는 <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" />의 <see cref="T:System.Data.OleDb.OleDbCommand" /> 컬렉션에 추가됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-128">The derived parameters are added to the <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> collection of the <see cref="T:System.Data.OleDb.OleDbCommand" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80411-129">
            <see cref="T:System.Data.OleDb.OleDbCommand" />에 지정된 저장 프로시저의 매개 변수 정보를 검색하여 지정된 <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> 개체의 <see cref="T:System.Data.OleDb.OleDbCommand" /> 컬렉션을 채웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-129">Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.OleDb.OleDbCommand" /> and populates the <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> collection of the specified <see cref="T:System.Data.OleDb.OleDbCommand" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80411-130"><xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> 에 대 한 모든 기존 매개 변수 정보는 <xref:System.Data.OleDb.OleDbCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-130"><xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> overwrites any existing parameter information for the <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
 <span data-ttu-id="80411-131"><xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> 정보를 가져오는 데이터 원본에 추가로 호출을 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-131"><xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> requires an additional call to the data source to obtain the information.</span></span> <span data-ttu-id="80411-132">매개 변수 정보는 사전에 알고 있는 경우 정보를 명시적으로 설정 하 여 매개 변수 컬렉션을 채우는 데 더 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-132">If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</span></span>  
  
 <span data-ttu-id="80411-133">만 사용할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> 저장된 프로시저와 함께 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-133">You can only use <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> with stored procedures.</span></span> <span data-ttu-id="80411-134">사용할 수 없습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> 채우는 데는 <xref:System.Data.OleDb.OleDbParameterCollection> 임의의 Transact SQL 문, 매개 변수가 있는 SELECT 문 처럼 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-134">You cannot use <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> to populate the <xref:System.Data.OleDb.OleDbParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</span></span>  
  
 <span data-ttu-id="80411-135">자세한 내용은 참조 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-135">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="80411-136">기본 OLE DB 공급자가 저장 프로시저 매개 변수 정보 반환을 지원하지 않거나, 명령 텍스트가 유효한 저장 프로시저 이름이 아니거나, 지정된 <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" />이 <see langword="StoredProcedure" />가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-136">The underlying OLE DB provider does not support returning stored procedure parameter information, the command text is not a valid stored procedure name, or the <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> specified was not <see langword="StoredProcedure" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80411-137">데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-137">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80411-138">응용 프로그램이 사용할 수는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-138">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="80411-139">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-139">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="80411-140">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 및 수정 된 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-140">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="80411-141">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="80411-141">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="80411-142">그렇지 않은 경우는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-142">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="80411-143">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-143">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80411-144">데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-144">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80411-145">삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-145">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80411-146">응용 프로그램이 사용할 수는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-146">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="80411-147">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-147">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="80411-148">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 및 수정 된 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-148">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="80411-149">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="80411-149">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="80411-150">그렇지 않은 경우는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-150">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="80411-151">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-151">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="80411-152">
            <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-152">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span>
          </span>
          <span data-ttu-id="80411-153">
            <see langword="false" />이면 @p1, @p2 등을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-153">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80411-154">데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-154">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80411-155">삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-155">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80411-156">응용 프로그램이 사용할 수는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-156">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="80411-157">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-157">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="80411-158">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 및 수정 된 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-158">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="80411-159">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="80411-159">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="80411-160">그렇지 않은 경우는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-160">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="80411-161">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-161">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="80411-162">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="80411-162">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="80411-163">전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수에 <xref:System.Data.OleDb.OleDbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-163">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="80411-164">다음 조건에 해당 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-164">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="80411-165"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-165">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="80411-166">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-166">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="80411-167">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="80411-167">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80411-168">데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-168">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80411-169">응용 프로그램이 사용할 수는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 의 텍스트를 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-169">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="80411-170">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-170">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="80411-171">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 및 수정 된 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-171">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="80411-172">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="80411-172">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="80411-173">그렇지 않은 경우는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-173">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="80411-174">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-174">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80411-175">데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-175">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80411-176">삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-176">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80411-177">응용 프로그램이 사용할 수는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 의 텍스트를 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-177">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="80411-178">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-178">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="80411-179">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 및 수정 된 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-179">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="80411-180">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="80411-180">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="80411-181">그렇지 않은 경우는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-181">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="80411-182">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-182">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="80411-183">
            <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-183">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span>
          </span>
          <span data-ttu-id="80411-184">
            <see langword="false" />이면 @p1, @p2 등을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-184">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80411-185">데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-185">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80411-186">삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-186">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80411-187">응용 프로그램이 사용할 수는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 의 텍스트를 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-187">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="80411-188">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-188">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="80411-189">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 및 수정 된 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-189">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="80411-190">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="80411-190">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="80411-191">그렇지 않은 경우는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-191">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="80411-192">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-192">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="80411-193">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="80411-193">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="80411-194">전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수에 <xref:System.Data.OleDb.OleDbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-194">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="80411-195">다음 조건에 해당 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-195">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="80411-196"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-196">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="80411-197">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-197">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="80411-198">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="80411-198">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80411-199">데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-199">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80411-200">응용 프로그램이 사용할 수는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-200">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="80411-201">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-201">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="80411-202">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 및 수정 된 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-202">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="80411-203">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="80411-203">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="80411-204">그렇지 않은 경우는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-204">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="80411-205">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-205">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80411-206">데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-206">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80411-207">업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-207">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80411-208">응용 프로그램이 사용할 수는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-208">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="80411-209">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-209">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="80411-210">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 및 수정 된 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-210">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="80411-211">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="80411-211">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="80411-212">그렇지 않은 경우는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-212">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="80411-213">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-213">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="80411-214">
            <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-214">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span>
          </span>
          <span data-ttu-id="80411-215">
            <see langword="false" />이면 @p1, @p2 등을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-215">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80411-216">선택적으로 매개 변수 이름에 열을 사용하여 데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-216">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates at the data source, optionally using columns for parameter names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80411-217">업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-217">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80411-218">응용 프로그램이 사용할 수는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OleDb.OleDbCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-218">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="80411-219">사용할 수도 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-219">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="80411-220">예를 들어, 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 및 수정 된 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OleDb.OleDbDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-220">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="80411-221">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="80411-221">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="80411-222">그렇지 않은 경우는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> 됩니다 계속 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-222">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="80411-223">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> 또는 <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-223">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="80411-224">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="80411-224">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="80411-225">전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수에 <xref:System.Data.OleDb.OleDbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-225">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="80411-226">다음 조건에 해당 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-226">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="80411-227"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="80411-227">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="80411-228">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="80411-228">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="80411-229">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="80411-229">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="QuoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80411-230">올바른 카탈로그에서 따옴표 붙지 않은 식별자가 제공되는 경우 따옴표 붙은 올바른 형식의 해당 식별자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-230">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span>
          </span>
          <span data-ttu-id="80411-231">여기에는 식별자에 포함된 모든 따옴표를 이스케이프하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-231">This includes correctly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="80411-232">따옴표 붙지 않은 원래 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-232">The original unquoted identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80411-233">올바른 카탈로그에서 따옴표 붙지 않은 식별자가 제공되는 경우 따옴표 붙은 올바른 형식의 해당 식별자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-233">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span>
          </span>
          <span data-ttu-id="80411-234">여기에는 식별자에 포함된 모든 따옴표를 이스케이프하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-234">This includes correctly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80411-235">따옴표를 사용한 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-235">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="80411-236">식별자에 포함된 따옴표가 올바르게 이스케이프되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-236">Embedded quotes within the identifier are correctly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public string QuoteIdentifier (string unquotedIdentifier, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string QuoteIdentifier(string unquotedIdentifier, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function QuoteIdentifier (unquotedIdentifier As String, connection As OleDbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier, System::Data::OleDb::OleDbConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="80411-237">따옴표 붙은 형식으로 반환될 따옴표 붙지 않은 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-237">The unquoted identifier to be returned in quoted format.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="80411-238">연결이 전달되면 관리 래퍼가 OLE DB 공급자로부터 따옴표 문자를 가져오게 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-238">When a connection is passed, causes the managed wrapper to get the quote character from the OLE DB provider.</span>
          </span>
          <span data-ttu-id="80411-239">전달되는 연결이 없을 경우 <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> 및 <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />의 값을 사용하여 따옴표가 붙습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-239">When no connection is passed, the string is quoted using values from <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> and <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80411-240">올바른 카탈로그에서 따옴표 붙지 않은 식별자가 제공되는 경우 따옴표 붙은 올바른 형식의 해당 식별자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-240">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span>
          </span>
          <span data-ttu-id="80411-241">여기에는 식별자에 포함된 모든 따옴표를 이스케이프하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-241">This includes correctly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80411-242">따옴표를 사용한 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-242">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="80411-243">식별자에 포함된 따옴표가 올바르게 이스케이프되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-243">Embedded quotes within the identifier are correctly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnquoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80411-244">따옴표 붙은 식별자가 제공되는 경우 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-244">Given a quoted identifier, returns the correct unquoted form of that identifier.</span>
          </span>
          <span data-ttu-id="80411-245">여기에는 식별자에 포함된 모든 따옴표를 이스케이프 해제하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-245">This includes correctly un-escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="80411-246">포함된 따옴표를 제거할 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-246">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80411-247">따옴표 붙은 식별자가 제공되는 경우 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-247">Given a quoted identifier, returns the correct unquoted form of that identifier.</span>
          </span>
          <span data-ttu-id="80411-248">여기에는 식별자에 포함된 모든 따옴표를 이스케이프 해제하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-248">This includes correctly un-escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80411-249">포함된 따옴표가 이스케이프 해제된, 따옴표 붙지 않은 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-249">The unquoted identifier, with embedded quotes correctly un-escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public string UnquoteIdentifier (string quotedIdentifier, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnquoteIdentifier(string quotedIdentifier, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnquoteIdentifier (quotedIdentifier As String, connection As OleDbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier, System::Data::OleDb::OleDbConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="80411-250">포함된 따옴표를 제거할 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-250">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="80411-251">
            <see cref="T:System.Data.OleDb.OleDbConnection" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-251">The <see cref="T:System.Data.OleDb.OleDbConnection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80411-252">따옴표 붙은 식별자가 제공되는 경우 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-252">Given a quoted identifier, returns the correct unquoted form of that identifier.</span>
          </span>
          <span data-ttu-id="80411-253">여기에는 식별자에 포함된 모든 따옴표를 이스케이프 해제하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-253">This includes correctly un-escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80411-254">포함된 따옴표가 이스케이프 해제된, 따옴표 붙지 않은 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80411-254">The unquoted identifier, with embedded quotes correctly un-escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>