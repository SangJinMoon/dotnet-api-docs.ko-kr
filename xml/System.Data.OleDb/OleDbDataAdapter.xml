<Type Name="OleDbDataAdapter" FullName="System.Data.OleDb.OleDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="910d1a94fccb431e4fbf7a26ace2bb384e968f39" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36685510" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <TypeSignature Language="F#" Value="type OleDbDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="14f7b-101">
        <see cref="T:System.Data.DataSet" />을 채우고 데이터 소스를 업데이트하는 데 사용되는 데이터 명령 집합 및 데이터베이스 연결을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="14f7b-101">Represents a set of data commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update the data source.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-102"><xref:System.Data.OleDb.OleDbDataAdapter> 간의 다리 역할을 한 <xref:System.Data.DataSet> 와 데이터 소스를 검색 하 고 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-102">The <xref:System.Data.OleDb.OleDbDataAdapter> serves as a bridge between a <xref:System.Data.DataSet> and data source for retrieving and saving data.</span></span> <span data-ttu-id="14f7b-103"><xref:System.Data.OleDb.OleDbDataAdapter> 를 사용 하 여이 연결을 제공 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 에 데이터 원본에서 데이터를 로드 하는 <xref:System.Data.DataSet>, 및를 사용 하 여 <xref:System.Data.Common.DbDataAdapter.Update%2A> 에서 변경 내용을 보낼는 <xref:System.Data.DataSet> 데이터 소스에 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-103">The <xref:System.Data.OleDb.OleDbDataAdapter> provides this bridge by using <xref:System.Data.Common.DbDataAdapter.Fill%2A> to load data from the data source into the <xref:System.Data.DataSet>, and using <xref:System.Data.Common.DbDataAdapter.Update%2A> to send changes made in the <xref:System.Data.DataSet> back to the data source.</span></span>  
  
 <span data-ttu-id="14f7b-104">경우는 <xref:System.Data.OleDb.OleDbDataAdapter> 채웁니다는 <xref:System.Data.DataSet>, 만들어집니다 적절 한 테이블 및 열 반환된 된 데이터에 이미 존재 하지 않는 경우.</span><span class="sxs-lookup"><span data-stu-id="14f7b-104">When the <xref:System.Data.OleDb.OleDbDataAdapter> fills a <xref:System.Data.DataSet>, it will create the appropriate tables and columns for the returned data if they do not already exist.</span></span> <span data-ttu-id="14f7b-105">그러나 기본 키 정보에에서 없는 암시적으로 만든된 스키마 하지 않는 한는 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성이 <xref:System.Data.MissingSchemaAction.AddWithKey>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-105">However, primary key information is not included in the implicitly created schema unless the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to <xref:System.Data.MissingSchemaAction.AddWithKey>.</span></span> <span data-ttu-id="14f7b-106">설정할 수도 있습니다는 <xref:System.Data.OleDb.OleDbDataAdapter> 의 스키마를 만들기는 <xref:System.Data.DataSet>를 사용 하 여 데이터를 채우기 전에 기본 키 정보를 포함 하 여 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-106">You may also have the <xref:System.Data.OleDb.OleDbDataAdapter> create the schema of the <xref:System.Data.DataSet>, including primary key information, before filling it with data using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</span></span> <span data-ttu-id="14f7b-107">자세한 내용은 참조 [기존 제약 조건 데이터 집합에 추가](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-107">For more information, see [Adding Existing Constraints to a DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span></span>  
  
 <span data-ttu-id="14f7b-108">참고가 기본 테이블 또는 기본 키 정보와 MSDataShape 공급자를 포함 하 여 일부 OLE DB 공급자를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-108">Note that some OLE DB providers, including the MSDataShape provider, do not return base table or primary key information.</span></span> <span data-ttu-id="14f7b-109">따라서는 <xref:System.Data.OleDb.OleDbDataAdapter> 올바르게 설정할 수 없습니다는 <xref:System.Data.DataTable.PrimaryKey%2A> 속성에서 만들어진 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-109">Therefore, the <xref:System.Data.OleDb.OleDbDataAdapter> cannot correctly set the <xref:System.Data.DataTable.PrimaryKey%2A> property on any created <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="14f7b-110">이러한 경우에 명시적으로 지정 해야 테이블에 대 한 기본 키의 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-110">In these cases you should explicitly specify primary keys for tables in the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="14f7b-111"><xref:System.Data.OleDb.OleDbDataAdapter> 도 포함 되어는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, 및 <xref:System.Data.Common.DataAdapter.TableMappings%2A> 속성을 쉽게 로드 하 고 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-111">The <xref:System.Data.OleDb.OleDbDataAdapter> also includes the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Common.DataAdapter.TableMappings%2A> properties to facilitate the loading and updating of data.</span></span>  
  
 <span data-ttu-id="14f7b-112">인스턴스를 만들 때 <xref:System.Data.OleDb.OleDbDataAdapter>, 속성은 초기 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-112">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, properties are set to their initial values.</span></span> <span data-ttu-id="14f7b-113">이러한 값의 목록에 대 한 참조는 <xref:System.Data.OleDb.OleDbDataAdapter> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-113">For a list of these values, see the <xref:System.Data.OleDb.OleDbDataAdapter> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14f7b-114">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbDataAdapter> 및 <xref:System.Data.OleDb.OleDbConnection>, 레코드를 선택 하는 Access 데이터 소스에서 채우기는 <xref:System.Data.DataSet> 선택한 행과 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-114">The following example uses the <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select records from an Access data source, and populate a <xref:System.Data.DataSet> with the selected rows.</span></span> <span data-ttu-id="14f7b-115">채워진 <xref:System.Data.DataSet> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-115">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="14f7b-116">이를 위해 메서드를 전달 초기화 된 <xref:System.Data.DataSet>, 연결 문자열 및 쿼리 문자열을 SQL SELECT 문입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-116">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is an SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-117">
            <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-117">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-118">
            <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-118">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-119">인스턴스를 만들 때 <xref:System.Data.OleDb.OleDbDataAdapter>, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-119">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="14f7b-120">속성</span><span class="sxs-lookup"><span data-stu-id="14f7b-120">Properties</span></span>|<span data-ttu-id="14f7b-121">초기 값</span><span class="sxs-lookup"><span data-stu-id="14f7b-121">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="14f7b-122">속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-122">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14f7b-123">다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-123">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (System.Data.OleDb.OleDbCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::Data::OleDb::OleDbCommand ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : System.Data.OleDb.OleDbCommand -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter selectCommand" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand">
          <span data-ttu-id="14f7b-124">SELECT 문 또는 저장 프로시저이고 <see cref="T:System.Data.OleDb.OleDbCommand" />의 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 속성으로 설정되는 <see cref="T:System.Data.OleDb.OleDbDataAdapter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-124">An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is a SELECT statement or stored procedure, and is set as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14f7b-125">
            <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 속성으로서 지정된 <see cref="T:System.Data.OleDb.OleDbCommand" />를 사용하여 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-125">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with the specified <see cref="T:System.Data.OleDb.OleDbCommand" /> as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-126">이 구현에서 <xref:System.Data.OleDb.OleDbDataAdapter> 생성자는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 속성에 지정 된 값을는 `selectCommand` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-126">This implementation of the <xref:System.Data.OleDb.OleDbDataAdapter> constructor sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property to the value specified in the `selectCommand` parameter.</span></span>  
  
 <span data-ttu-id="14f7b-127">인스턴스를 만들 때 <xref:System.Data.OleDb.OleDbDataAdapter>, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-127">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="14f7b-128">속성</span><span class="sxs-lookup"><span data-stu-id="14f7b-128">Properties</span></span>|<span data-ttu-id="14f7b-129">초기 값</span><span class="sxs-lookup"><span data-stu-id="14f7b-129">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="14f7b-130">속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-130">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14f7b-131">다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-131">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, System.Data.OleDb.OleDbConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.OleDb.OleDbConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As OleDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::Data::OleDb::OleDbConnection ^ selectConnection);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * System.Data.OleDb.OleDbConnection -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">
          <span data-ttu-id="14f7b-132">
            <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />의 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 속성에서 사용될 SQL SELECT 문이나 저장 프로시저인 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-132">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span>
          </span>
        </param>
        <param name="selectConnection">
          <span data-ttu-id="14f7b-133">연결을 나타내는 <see cref="T:System.Data.OleDb.OleDbConnection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-133">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14f7b-134">
            <see cref="T:System.Data.OleDb.OleDbDataAdapter" />를 사용하여 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-134">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-135">이 구현에서 <xref:System.Data.OleDb.OleDbDataAdapter> 열고 닫습니다는 <xref:System.Data.OleDb.OleDbConnection> 열려 있지 않으면입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-135">This implementation of the <xref:System.Data.OleDb.OleDbDataAdapter> opens and closes an <xref:System.Data.OleDb.OleDbConnection> if it is not already open.</span></span> <span data-ttu-id="14f7b-136">이 호출 해야 하는 응용 프로그램에 유용할 수 있습니다는 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 둘 이상에 대 한 메서드 <xref:System.Data.OleDb.OleDbDataAdapter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-136">This can be useful in an application that must call the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method for two or more <xref:System.Data.OleDb.OleDbDataAdapter> objects.</span></span> <span data-ttu-id="14f7b-137">경우는 <xref:System.Data.OleDb.OleDbConnection> 가 이미 열려 명시적으로 호출 해야 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 또는 **Dispose** 를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-137">If the <xref:System.Data.OleDb.OleDbConnection> is already open, you must explicitly call <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose** to close it.</span></span>  
  
 <span data-ttu-id="14f7b-138">인스턴스를 만들 때 <xref:System.Data.OleDb.OleDbDataAdapter>, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-138">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="14f7b-139">속성</span><span class="sxs-lookup"><span data-stu-id="14f7b-139">Properties</span></span>|<span data-ttu-id="14f7b-140">초기 값</span><span class="sxs-lookup"><span data-stu-id="14f7b-140">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="14f7b-141">속성에 별도 호출을 통해 이러한 속성 중 하나의 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-141">You can change the value of either of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14f7b-142">다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-142">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * string -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">
          <span data-ttu-id="14f7b-143">
            <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />의 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 속성에서 사용될 SQL SELECT 문이나 저장 프로시저인 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-143">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span>
          </span>
        </param>
        <param name="selectConnectionString">
          <span data-ttu-id="14f7b-144">연결 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-144">The connection string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14f7b-145">
            <see cref="T:System.Data.OleDb.OleDbDataAdapter" />를 사용하여 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-145">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-146">이 오버 로드는 <xref:System.Data.OleDb.OleDbDataAdapter> 생성자 사용 하 여는 `selectConnectionString` 매개 변수를 설정의 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-146">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter> constructor uses the `selectConnectionString` parameter to set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="14f7b-147">그러나 연결이 열리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-147">However, it does not open the connection.</span></span> <span data-ttu-id="14f7b-148">여전히 명시적으로 열어야 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-148">You still must explicitly open the connection.</span></span>  
  
 <span data-ttu-id="14f7b-149">인스턴스를 만들 때 <xref:System.Data.OleDb.OleDbDataAdapter>, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-149">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="14f7b-150">속성</span><span class="sxs-lookup"><span data-stu-id="14f7b-150">Properties</span></span>|<span data-ttu-id="14f7b-151">초기 값</span><span class="sxs-lookup"><span data-stu-id="14f7b-151">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="14f7b-152">속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-152">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14f7b-153">다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-153">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ DeleteCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-154">데이터 집합에서 레코드를 삭제하는 SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-154">Gets or sets an SQL statement or stored procedure for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14f7b-155">
            <see cref="T:System.Data.OleDb.OleDbCommand" />의 삭제된 행에 해당하는 데이터 소스의 레코드를 삭제하는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 동안 사용된 <see cref="T:System.Data.DataSet" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-155">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-156">동안 <xref:System.Data.Common.DbDataAdapter.Update%2A>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <xref:System.Data.DataSet>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> 설정 하는 경우 자동으로 생성할 수는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 속성을 사용 하 여는 <xref:System.Data.OleDb.OleDbCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-156">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="14f7b-157">설정 하지 않으면 모든 추가 명령이 생성 한 다음,는 <xref:System.Data.OleDb.OleDbCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-157">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="14f7b-158">이 생성 논리는 키 열에 대 한 정보가 필요는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-158">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="14f7b-159">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-159">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="14f7b-160">때 <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> 할당 되는 이전에 만든 <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand> 가 복제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-160">When <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="14f7b-161"><xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.OleDb.OleDbCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-161">The <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14f7b-162">다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 설정 하 고는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 및 <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-162">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="14f7b-163">이미 만든 것으로 가정는 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-163">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-164">ADO <see langword="Recordset" /> 또는 <see langword="Record" /> 개체의 행과 일치하는 <see cref="T:System.Data.DataSet" />의 행을 추가하거나 새로 고칩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-164">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable, object ADODBRecordSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable, object ADODBRecordSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable, System::Object ^ ADODBRecordSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * obj -&gt; int" Usage="oleDbDataAdapter.Fill (dataTable, ADODBRecordSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="14f7b-165">레코드와 스키마(필요한 경우)로 채울 <see cref="T:System.Data.DataTable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-165">A <see cref="T:System.Data.DataTable" /> to fill with records and, if it is required, schema.</span>
          </span>
        </param>
        <param name="ADODBRecordSet">
          <span data-ttu-id="14f7b-166">ADO <see langword="Recordset" />이나 <see langword="Record" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-166">An ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14f7b-167">지정된 <see cref="T:System.Data.DataTable" /> 및 ADO 개체를 사용하여 ADO <see langword="Recordset" /> 또는 <see langword="Record" /> 개체의 행과 일치하는 <see cref="T:System.Data.DataTable" />의 행을 추가하거나 새로 고칩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-167">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object using the specified <see cref="T:System.Data.DataTable" /> and ADO objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14f7b-168">
            <see cref="T:System.Data.DataTable" />에 성공적으로 새로 고쳐진 행의 수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-168">The number of rows successfully refreshed to the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="14f7b-169">여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-169">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-170">ADO.NET 및 ADO ActiveX Data Objects () 간의 링크는 단방향 작업에는 ADO에서 데이터를 복사할 수 있다는 점에서 <xref:System.Data.DataSet>, ADO.NET에서 데이터에 대 한 업데이트가 처리 되어야 하지만 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-170">The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <xref:System.Data.DataSet>, but any updates to the data must be handled by ADO.NET.</span></span>  
  
 <span data-ttu-id="14f7b-171">이 오버 로드는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 닫히지 않습니다 입력 `Recordset` 의 완료에는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-171">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method does not close the input `Recordset` on completion of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation.</span></span>  
  
 <span data-ttu-id="14f7b-172">이 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 및 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> OLE DB.NET Framework 데이터 공급자를 검색 한 첫 번째 결과 대 한 스키마 정보에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-172">When handling batch SQL statements that return multiple results, this implementation of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the OLE DB.NET Framework Data Provider retrieves schema information for only the first result.</span></span>  
  
 <span data-ttu-id="14f7b-173"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 지정된 된 대상에 행을 추가 하는 작업 <xref:System.Data.DataTable> 개체는 <xref:System.Data.DataSet>만들기는 <xref:System.Data.DataTable> 경우 이미 없는 개체.</span><span class="sxs-lookup"><span data-stu-id="14f7b-173">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="14f7b-174">만들 때 한 <xref:System.Data.DataTable> 개체는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 작업은 일반적으로 열 이름 메타 데이터만 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-174">When you create a <xref:System.Data.DataTable> object, the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation ordinarily creates only column name metadata.</span></span> <span data-ttu-id="14f7b-175">그러나 경우는 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성이 `AddWithKey`, 적절 한 기본 키와 제약 조건도 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-175">However, if the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="14f7b-176">사용할 수는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 메서드가 여러 번 같은 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-176">You can use the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="14f7b-177">기본 키가 있는 경우 이미 존재 하는 일치 하는 행과 들어오는 행이 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-177">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="14f7b-178">들어오는 행에 추가 된 기본 키가 없으면는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-178">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="14f7b-179">기본 키 정보가 있는 경우 중복 행 조정 되어에 한 번만 표시는 <xref:System.Data.DataTable> 에 해당 하는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-179">If primary key information is present, any duplicate rows are reconciled and only appear one time in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="14f7b-180">통해 기본 키 정보가 설정할 수 있습니다 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>를 지정 하 여는 <xref:System.Data.DataTable.PrimaryKey%2A> 속성의는 <xref:System.Data.DataTable>, 또는 설정 하 여는 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성을 `AddWithKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-180">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="14f7b-181"><xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>가 OUTER JOIN의 결과를 반환하면 `DataAdapter`는 결과 <xref:System.Data.DataTable.PrimaryKey%2A>에 대해 <xref:System.Data.DataTable> 값을 설정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-181">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="14f7b-182">중복 행을 올바르게 확인할 수 있도록 하려면 기본 키를 명시적으로 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-182">You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="14f7b-183">자세한 내용은 참조 [기본 키 정의](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-183">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="14f7b-184">.NET Framework Data provider for OLE DB 제대로 작동 하려면 `AddWithKey` 하기 위해서는 네이티브 OLE DB 공급자 DBPROP_UNIQUEROWS 속성을 설정 하 여 필요한 기본 키 정보를 가져옵니다를 어떤 열이 기본 키를 확인 한 다음 DBCOLUMN_KEYCOLUMN를 검사 하 여 열 여 `IColumnsRowset`합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-184">To function correctly with the .NET Framework Data Provider for OLE DB, `AddWithKey` requires that the native OLE DB provider obtains required primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the `IColumnsRowset`.</span></span> <span data-ttu-id="14f7b-185">사용자 각 primary key 제약 조건 수 명시적으로 설정 하는 또는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-185">Alternatively the user may explicitly set the primary key constraints on each <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="14f7b-186">이렇게 하면 들어오는 레코드 기존 레코드와 일치 하는 대신 업데이트 된 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-186">This makes sure that incoming records that match existing records are updated instead of appended.</span></span>  
  
 <span data-ttu-id="14f7b-187">경우는 <xref:System.Data.OleDb.OleDbDataAdapter> 발생할 중복 열을 채우는 동안는 <xref:System.Data.DataTable>, 패턴을 사용 하 고 후속 열의 이름을 생성 "*columnname*1", "*columnname*2", "*columnname*3", 및 기타 등등.</span><span class="sxs-lookup"><span data-stu-id="14f7b-187">If the <xref:System.Data.OleDb.OleDbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="14f7b-188">빈 열 이름에 추가 되는 <xref:System.Data.DataTable>, "1", "2", "3", 및에 후속 빈 열에 대 한 다음 첫 번째 열에 대 한 빈 문자열을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-188">Empty column names are added to the <xref:System.Data.DataTable>, using an empty string for the first column, followed by "1", "2", "3", and so on for the subsequent empty columns.</span></span>  
  
 <span data-ttu-id="14f7b-189">Ado에서 값 `Recordset` 또는 `Record` 개체는 변환 된 공용 언어 런타임 형식에 저장 하기 위해는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-189">Values in ADO `Recordset` or `Record` objects are converted to common language runtime types for storage in the <xref:System.Data.DataSet>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="14f7b-190">이 오버 로드는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 메서드를 암시적으로 호출 하지 않습니다 `Close` 채우기 작업이 완료 될 때 ADO 개체에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-190">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method does not implicitly call `Close` on the ADO object when the fill operation is complete.</span></span> <span data-ttu-id="14f7b-191">따라서 항상 호출 `Close` ADO를 사용 하 여 작업을 마쳤으면 `Recordset` 또는 `Record` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-191">Therefore, always call `Close` when you are finished using ADO `Recordset` or `Record` objects.</span></span> <span data-ttu-id="14f7b-192">이렇게 하면 데이터 원본에 기본 연결이 적절 한 시기에 릴리스 하 고 또한 기존의 참조가 계속 존재 하는 경우 가비지 수집에서 회수 되 고 관리 되지 않는 ADO 개체 때문에 가능한 액세스 위반을 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-192">This makes sure that the underlying connection to a data source is released in a timely manner, and also prevents possible access violations because of unmanaged ADO objects being reclaimed by garbage collection when existing references still exist.</span></span>  
  
 <span data-ttu-id="14f7b-193">호출 하는 경우는 `TableMappings.Add` 에서 메서드는 `DataAdapter` 및 빈 문자열을 원본 테이블 매개 변수를 명시적으로 매핑합니다, dataset 성공적으로 원본 테이블을 사용 하 여 찼는데 데이터 집합은 nothing으로 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-193">When you call the `TableMappings.Add` method on a `DataAdapter` and you explicitly map the source table parameter to an empty string, the dataset is successfully filled using the source table, but the dataset will be populated with nothing.</span></span> <span data-ttu-id="14f7b-194">예를 들어 다음 예제에서는에서 `rDataSet` 아무 것도 없으면 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-194">For example, in the following example, `rDataSet` will be populated with nothing.</span></span>  
  
```  
rAdapter.TableMappings.Add("source table", "");  
rAdapter.Fill(rDataSet, "source table");     
```  
  
 <span data-ttu-id="14f7b-195">이 예제에서는 어떻게 여러 결과 처리할 때 결과 건너뛸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-195">This example shows how you can skip a result when dealing with multiple results.</span></span>  
  
 <span data-ttu-id="14f7b-196">다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 채울는 <xref:System.Data.DataTable> ADO를 사용 하 여 `Recordset`합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-196">The following example uses an <xref:System.Data.OleDb.OleDbDataAdapter> to fill a <xref:System.Data.DataTable> using an ADO `Recordset`.</span></span> <span data-ttu-id="14f7b-197">이 예제 ADO 만들었다고 가정 `Recordset`합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-197">This example assumes that you have created an ADO `Recordset`.</span></span>  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     Dim custTable As DataTable = New DataTable("Customers")  
     custTable.Columns.Add("CustomerID", Type.GetType("System.String"))  
     custTable.Columns.Add("CompanyName", Type.GetType("System.String"))  
     custDS.Tables.Add(custTable)  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custTable, adoRS)  
     adoRS.Close()  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     DataTable custTable = new DataTable("Customers");  
     custTable.Columns.Add("CustomerID", typeof(String));  
     custTable.Columns.Add("CompanyName", typeof(String));  
     custDS.Tables.Add(custTable);  
     //Use ADO objects from ADO library (msado15.dll) imported  
     //  as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custTable, adoRS);  
     adoRS.Close();  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::Object ^ ADODBRecordSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * obj * string -&gt; int" Usage="oleDbDataAdapter.Fill (dataSet, ADODBRecordSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="14f7b-198">레코드와 스키마(필요한 경우)로 채울 <see cref="T:System.Data.DataSet" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-198">A <see cref="T:System.Data.DataSet" /> to fill with records and, if it is required, schema.</span>
          </span>
        </param>
        <param name="ADODBRecordSet">
          <span data-ttu-id="14f7b-199">ADO <see langword="Recordset" />이나 <see langword="Record" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-199">An ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="14f7b-200">테이블 매핑에 사용되는 소스 테이블입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-200">The source table used for the table mappings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14f7b-201">지정된 <see cref="T:System.Data.DataSet" />, ADO 개체 및 소스 테이블 이름을 사용하여 ADO <see langword="Recordset" /> 또는 <see langword="Record" /> 개체의 행과 일치하는 <see cref="T:System.Data.DataSet" />의 행을 추가하거나 새로 고칩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-201">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object using the specified <see cref="T:System.Data.DataSet" />, ADO object, and source table name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14f7b-202">
            <see cref="T:System.Data.DataSet" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-202">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="14f7b-203">여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-203">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-204">ADO.NET 및 ADO ActiveX Data Objects () 간의 링크는 단방향 작업에는 ADO에서 데이터를 복사할 수 있다는 점에서 <xref:System.Data.DataSet>, ADO.NET에서 데이터에 대 한 업데이트가 처리 되어야 하지만 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-204">The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <xref:System.Data.DataSet>, but any updates to the data must be handled by ADO.NET.</span></span>  
  
 <span data-ttu-id="14f7b-205"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 메서드를 호출 하 여 여러 결과를 반복 합니다.는 `NextRecordset` 메서드를는 `Recordset`, 입력 닫는 `Recordset` 의 완료에는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-205">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method iterates through multiple results by calling the `NextRecordset` method on the `Recordset`, closing the input `Recordset` on completion of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation.</span></span>  
  
 <span data-ttu-id="14f7b-206"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 지정된 된 대상에 행을 추가 하는 작업 <xref:System.Data.DataTable> 개체는 <xref:System.Data.DataSet>만들기는 <xref:System.Data.DataTable> 경우 이미 없는 개체.</span><span class="sxs-lookup"><span data-stu-id="14f7b-206">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="14f7b-207">만들 때 한 <xref:System.Data.DataTable> 개체는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 작업은 일반적으로 열 이름 메타 데이터만 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-207">When you create a <xref:System.Data.DataTable> object, the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation ordinarily creates only column name metadata.</span></span> <span data-ttu-id="14f7b-208">그러나 경우는 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성이 `AddWithKey`, 적절 한 기본 키와 제약 조건도 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-208">However, if the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="14f7b-209">기본 키 정보가 있는 경우 중복 행 조정 되어에 한 번만 표시는 <xref:System.Data.DataTable> 에 해당 하는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-209">If primary key information is present, any duplicate rows are reconciled and only appear one time in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="14f7b-210">통해 기본 키 정보가 설정할 수 있습니다 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>를 지정 하 여는 <xref:System.Data.DataTable.PrimaryKey%2A> 속성의는 <xref:System.Data.DataTable>, 또는 설정 하 여는 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성을 `AddWithKey`합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-210">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="14f7b-211">.NET Framework Data provider for OLE DB 제대로 작동 하려면 `AddWithKey` DBPROP_UNIQUEROWS 속성을 설정 하 여 필요한 기본 키 정보를 얻고 다음 열에 기본 키가 확인 하는 네이티브 OLE DB 공급자 필요 DBCOLUMN_KEYCOLUMN를 검사 하 여 열 여 **IColumnsRowset**합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-211">To function correctly with the .NET Framework Data Provider for OLE DB, `AddWithKey` requires the native OLE DB provider to obtain required primary key information by setting the DBPROP_UNIQUEROWS property, and then determine which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the **IColumnsRowset**.</span></span> <span data-ttu-id="14f7b-212">사용자 각 primary key 제약 조건 수 명시적으로 설정 하는 또는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-212">Alternatively the user may explicitly set the primary key constraints on each <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="14f7b-213">이렇게 하면 기존 레코드와 일치하는 들어오는 레코드가 추가되지 않고 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-213">This ensures that incoming records that match existing records are updated instead of appended.</span></span>  
  
 <span data-ttu-id="14f7b-214"><xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>가 OUTER JOIN의 결과를 반환하면 `DataAdapter`는 결과 <xref:System.Data.DataTable.PrimaryKey%2A>에 대해 <xref:System.Data.DataTable> 값을 설정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-214">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="14f7b-215">중복 행을 올바르게 확인할 수 있도록 하려면 기본 키를 명시적으로 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-215">You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="14f7b-216">자세한 내용은 참조 [기본 키 정의](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-216">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="14f7b-217">경우는 `Recordset` 의 시작 하기 전에 닫혀는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 작업, 오류가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-217">If the `Recordset` is closed before the starting of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation, no error results.</span></span> <span data-ttu-id="14f7b-218">행을 반환 하지 않는 쿼리가 표시 되기 때문에 이것이 필요 여러 결과 처리에 닫힌 하 여 `Recordset`합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-218">This is required for handling of multiple results, because queries that do not return rows are indicated by a closed `Recordset`.</span></span> <span data-ttu-id="14f7b-219"><xref:System.Data.OleDb.OleDbDataAdapter> 호출 `NextRecordset` 닫힌에 `Recordset` 하 고 처리를 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-219">The <xref:System.Data.OleDb.OleDbDataAdapter> just calls `NextRecordset` on the closed `Recordset` and continues processing.</span></span>  
  
 <span data-ttu-id="14f7b-220">데이터 집합을 채우는 동안 오류가 발생, 오류 발생 하기 전에 추가 된 행에 유지 된 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-220">If an error is encountered while populating the data set, rows added before the occurrence of the error remain in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="14f7b-221">작업의 나머지 부분 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-221">The rest of the operation is aborted.</span></span>  
  
 <span data-ttu-id="14f7b-222">경우는 <xref:System.Data.Common.DbDataAdapter> 개체 중복 된 열을 채우는 동안 발생 한 <xref:System.Data.DataTable>, 패턴을 사용 하 고 후속 열의 이름을 생성 "*columnname*1","*columnname*2", " *columnname*3", 및 기타 등등.</span><span class="sxs-lookup"><span data-stu-id="14f7b-222">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="14f7b-223">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-223">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="14f7b-224">여러 결과 집합에 추가 될 때는 <xref:System.Data.DataSet> 각 결과 집합은 별도 테이블에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-224">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="14f7b-225">추가 결과 집합이 지정한 테이블 이름 (예를 들어 "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-225">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="14f7b-226">열 및 테이블 이름을 사용 하는 응용 프로그램 명명 패턴과 충돌 하지 않도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-226">Applications that use column and table names should make sure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="14f7b-227">Ado에서 값 `Recordset` 또는 `Record` 개체는 변환 된 공용 언어 런타임 형식에 저장 하기 위해는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-227">Values in ADO `Recordset` or `Record` objects are converted to common language runtime types for storage in the <xref:System.Data.DataSet>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14f7b-228">이 오버 로드는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 메서드를 암시적으로 호출 `Close` 채우기 작업이 완료 될 때 ADO 개체에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-228">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method implicitly calls `Close` on the ADO object when the fill operation is complete.</span></span>  
  
 <span data-ttu-id="14f7b-229">다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 채울는 <xref:System.Data.DataSet> ADO를 사용 하 여 `Recordset` ADO 즉 `Record` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-229">The following example uses an <xref:System.Data.OleDb.OleDbDataAdapter> to fill a <xref:System.Data.DataSet> using an ADO `Recordset` that is an ADO `Record` object.</span></span> <span data-ttu-id="14f7b-230">이 예제 ADO 만들었다고 가정 `RecordSet` 및 `Record` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-230">This example assumes that you have created an ADO `RecordSet` and `Record` object.</span></span>  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custDS, adoRS, "Customers")  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     //Use ADO objects from ADO library (msado15.dll) imported  
     // as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custDS, adoRS, "Customers");  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="14f7b-231">소스 테이블이 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-231">The source table is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ InsertCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-232">데이터 소스에 새 레코드를 삽입하는 데 사용되는 SQL 문 또는 저장 프로시저를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-232">Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14f7b-233">
            <see cref="T:System.Data.OleDb.OleDbCommand" />의 새 행에 해당하는 데이터 소스의 레코드를 삽입하는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 동안 사용된 <see cref="T:System.Data.DataSet" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-233">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-234">동안 <xref:System.Data.Common.DbDataAdapter.Update%2A>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <xref:System.Data.DataSet>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> 설정 하는 경우 자동으로 생성할 수는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 속성을 사용 하 여는 <xref:System.Data.OleDb.OleDbCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-234">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="14f7b-235">설정 하지 않으면 모든 추가 명령이 생성 한 다음,는 <xref:System.Data.OleDb.OleDbCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-235">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="14f7b-236">이 생성 논리는 키 열에 대 한 정보가 필요는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-236">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="14f7b-237">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-237">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="14f7b-238">때 <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> 할당 되는 이전에 만든 <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand> 가 복제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-238">When <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="14f7b-239"><xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.OleDb.OleDbCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-239">The <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14f7b-240">이 명령 실행 하 여 행이 반환 하는 경우 이러한 행에 추가할 수 있습니다는 <xref:System.Data.DataSet> 어떻게 설정 하느냐에 따라는 <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> 의 속성은 <xref:System.Data.OleDb.OleDbCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-240">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14f7b-241">다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 설정 하 고는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 및 <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-241">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="14f7b-242">이미 만든 것으로 가정는 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-242">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As OleDbRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberSignature Language="F#" Value="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " Usage="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-243">데이터 소스에 대해 명령이 실행된 후에 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 수행하는 동안 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-243">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source.</span>
          </span>
          <span data-ttu-id="14f7b-244">업데이트가 시도되어</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-244">The attempt to update is made.</span>
          </span>
          <span data-ttu-id="14f7b-245">이벤트가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-245">Therefore, the event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-246">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Update%2A>, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-246">When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="14f7b-247">실행 순서는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-247">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="14f7b-248">값은 <xref:System.Data.DataRow> 매개 변수 값으로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-248">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="14f7b-249"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-249">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="14f7b-250">명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-250">The command executes.</span></span>  
  
4.  <span data-ttu-id="14f7b-251">명령으로 설정 되어 있으면 `FirstReturnedRecord`, 첫 번째 반환 결과에 배치 되는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-251">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="14f7b-252">에 지정 되므로 출력 매개 변수가 있는 경우는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-252">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="14f7b-253"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-253">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="14f7b-254"><xref:System.Data.DataRow.AcceptChanges%2A>가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="14f7b-254"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14f7b-255">다음 예제와 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 및 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> 되 고 사용 되는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-255">The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As OleDbRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberSignature Language="F#" Value="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " Usage="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-256">데이터 소스에 대해 명령이 실행되기 전에 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 수행하는 동안 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-256">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source.</span>
          </span>
          <span data-ttu-id="14f7b-257">업데이트가 시도되어</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-257">The attempt to update is made.</span>
          </span>
          <span data-ttu-id="14f7b-258">이벤트가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-258">Therefore, the event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-259">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Update%2A>, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-259">When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="14f7b-260">실행 순서는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-260">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="14f7b-261">값은 <xref:System.Data.DataRow> 매개 변수 값으로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-261">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="14f7b-262"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-262">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="14f7b-263">명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-263">The command executes.</span></span>  
  
4.  <span data-ttu-id="14f7b-264">명령으로 설정 되어 있으면 `FirstReturnedRecord`, 첫 번째 반환 결과에 배치 되는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-264">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="14f7b-265">에 지정 되므로 출력 매개 변수가 있는 경우는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-265">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="14f7b-266"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-266">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="14f7b-267"><xref:System.Data.DataRow.AcceptChanges%2A>가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="14f7b-267"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14f7b-268">다음 예제와 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 및 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> 되 고 사용 되는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-268">The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ SelectCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-269">데이터 소스의 레코드를 선택하는 데 사용하는 SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-269">Gets or sets an SQL statement or stored procedure used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14f7b-270">
            <see cref="T:System.Data.OleDb.OleDbCommand" />에 있는 위치에 대한 데이터 소스에서 레코드를 선택하는 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 동안 사용하는 <see cref="T:System.Data.DataSet" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-270">An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> to select records from data source for placement in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-271">때 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 할당 되는 이전에 만든 <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand> 가 복제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-271">When <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="14f7b-272"><xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.OleDb.OleDbCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-272">The <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
 <span data-ttu-id="14f7b-273">경우는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 행이 없으면 반환에 테이블이 추가 되는 <xref:System.Data.DataSet>, 예외가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-273">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns no rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14f7b-274">다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 설정 하 고는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 및 <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-274">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="14f7b-275">이미 만든 것으로 가정는 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-275">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-276">이 멤버에 대한 설명은 <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-276">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14f7b-277">업데이트를 수행하는 동안 데이터 집합의 삭제된 행에 대한 데이터 소스에서 레코드를 삭제하는 데 사용되는 <see cref="T:System.Data.IDbCommand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-277">An <see cref="T:System.Data.IDbCommand" /> used during an update to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-278">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="14f7b-278">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="14f7b-279"><xref:System.Data.OleDb.OleDbDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-279">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-280">이 멤버에 대한 설명은 <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-280">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14f7b-281">업데이트를 수행하는 동안 데이터 소스에서 데이터 집합에 배치할 레코드를 삽입하는 데 사용되는 <see cref="T:System.Data.IDbCommand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-281">An <see cref="T:System.Data.IDbCommand" /> that is used during an update to insert records from a data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-282">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="14f7b-282">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="14f7b-283"><xref:System.Data.OleDb.OleDbDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-283">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-284">이 멤버에 대한 설명은 <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-284">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14f7b-285">업데이트를 수행하는 동안 데이터 소스에서 데이터 집합에 배치할 레코드를 선택하는 데 사용되는 <see cref="T:System.Data.IDbCommand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-285">An <see cref="T:System.Data.IDbCommand" /> that is used during an update to select records from a data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-286">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="14f7b-286">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="14f7b-287"><xref:System.Data.OleDb.OleDbDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-287">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-288">이 멤버에 대한 설명은 <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-288">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14f7b-289">업데이트를 수행하는 동안 데이터 집합의 수정된 행에 대한 레코드를 데이터 소스에서 업데이트하는 데 사용되는 <see cref="T:System.Data.IDbCommand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-289">An <see cref="T:System.Data.IDbCommand" /> used during an update to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-290">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="14f7b-290">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="14f7b-291"><xref:System.Data.OleDb.OleDbDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-291">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-292">이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-292">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14f7b-293">이 인스턴스의 복사본인 새 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-293">A new <see cref="T:System.Object" /> that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-294">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="14f7b-294">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="14f7b-295"><xref:System.Data.OleDb.OleDbDataAdapter> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-295">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ UpdateCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14f7b-296">데이터 소스의 레코드를 업데이트하는 데 사용되는 SQL 문 또는 저장 프로시저를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-296">Gets or sets an SQL statement or stored procedure used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14f7b-297">
            <see cref="T:System.Data.DataSet" />에서 수정된 행에 해당하는 데이터 소스의 레코드를 업데이트하기 위해 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 중에 사용되는 <see cref="T:System.Data.OleDb.OleDbCommand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14f7b-297">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f7b-298">동안 <xref:System.Data.Common.DbDataAdapter.Update%2A>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <xref:System.Data.DataSet>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> 설정 하는 경우 자동으로 생성할 수는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 속성을 사용 하 여는 <xref:System.Data.OleDb.OleDbCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-298">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="14f7b-299">설정 하지 않으면 모든 추가 명령이 생성 한 다음,는 <xref:System.Data.OleDb.OleDbCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-299">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="14f7b-300">이 생성 논리는 키 열에 대 한 정보가 필요는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-300">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="14f7b-301">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-301">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="14f7b-302">때 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> 할당 되는 이전에 만든 <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand> 가 복제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-302">When <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="14f7b-303"><xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.OleDb.OleDbCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-303">The <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14f7b-304">이러한 행이이 명령 실행 하 여 행이 반환 하는 경우와 병합 될 수 있습니다는 <xref:System.Data.DataSet> 어떻게 설정 하느냐에 따라는 <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> 의 속성은 <xref:System.Data.OleDb.OleDbCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-304">If execution of this command returns rows, these rows may be merged with the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14f7b-305">다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 설정 하 고는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 및 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-305">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="14f7b-306">이미 만든 것으로 가정는 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="14f7b-306">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>