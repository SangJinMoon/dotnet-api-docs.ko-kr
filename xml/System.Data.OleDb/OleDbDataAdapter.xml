<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OleDbDataAdapter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50194a2bd3b968b32577535fb7ef20df04c38b1d2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0194a2bd3b968b32577535fb7ef20df04c38b1d2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Represents a set of data commands and a database connection that are used to fill the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and update the data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>을 채우고 데이터 소스를 업데이트하는 데 사용되는 데이터 명령 집합 및 데이터베이스 연결을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> serves as a bridge between a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> and data source for retrieving and saving data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 간의 다리 역할을 한 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 와 데이터 소스를 검색 하 고 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> provides this bridge by using <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> to load data from the data source into the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, and using <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> to send changes made in the <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph> back to the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 를 사용 하 여이 연결을 제공 <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> 에 데이터 원본에서 데이터를 로드 하는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, 및를 사용 하 여 <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> 에서 변경 내용을 보낼는 <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph> 데이터 소스에 다시 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>When the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> fills a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, it will create the appropriate tables and columns for the returned data if they do not already exist.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 채웁니다는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, 만들어집니다 적절 한 테이블 및 열 반환된 된 데이터에 이미 존재 하지 않는 경우.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>However, primary key information is not included in the implicitly created schema unless the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction.AddWithKey&gt;</ph>.</source>
          <target state="translated">그러나 기본 키 정보에에서 없는 암시적으로 만든된 스키마 하지 않는 한는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction.AddWithKey&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>You may also have the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> create the schema of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, including primary key information, before filling it with data using <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>.</source>
          <target state="translated">설정할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 의 스키마를 만들기는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>를 사용 하 여 데이터를 채우기 전에 기본 키 정보를 포함 하 여 <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Existing Constraints to a DataSet<ept id="p1">](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기존 제약 조건 데이터 집합에 추가<ept id="p1">](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Note that some OLE DB providers, including the MSDataShape provider, do not return base table or primary key information.</source>
          <target state="translated">참고가 기본 테이블 또는 기본 키 정보와 MSDataShape 공급자를 포함 하 여 일부 OLE DB 공급자를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> cannot correctly set the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property on any created <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">따라서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 올바르게 설정할 수 없습니다는 <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 속성에서 만들어진 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>In these cases you should explicitly specify primary keys for tables in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이러한 경우에 명시적으로 지정 해야 테이블에 대 한 기본 키의 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> also includes the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> properties to facilitate the loading and updating of data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 도 포함 되어는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> 속성을 쉽게 로드 하 고 데이터를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, properties are set to their initial values.</source>
          <target state="translated">인스턴스를 만들 때 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, 속성은 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> constructor.</source>
          <target state="translated">이러한 값의 목록에 대 한 참조는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, to select records from an Access data source, and populate a <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with the selected rows.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, 레코드를 선택 하는 Access 데이터 소스에서 채우기는 <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> 선택한 행과 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>The filled <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is then returned.</source>
          <target state="translated">채워진 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>To accomplish this, the method is passed an initialized <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, a connection string, and a query string that is an SQL SELECT statement.</source>
          <target state="translated">이를 위해 메서드를 전달 초기화 된 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, 연결 문자열 및 쿼리 문자열을 SQL SELECT 문입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스를 만들 때 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> that is a SELECT statement or stored procedure, and is set as the <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">SELECT 문 또는 저장 프로시저이고 <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph>의 <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> 속성으로 설정되는 <ph id="ph3">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> as the <ph id="ph3">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> 속성으로서 지정된 <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph>를 사용하여 <ph id="ph3">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> constructor sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property to the value specified in the <ph id="ph3">`selectCommand`</ph> parameter.</source>
          <target state="translated">이 구현에서 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 생성자는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 속성에 지정 된 값을는 <ph id="ph3">`selectCommand`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스를 만들 때 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> 속성에서 사용될 SQL SELECT 문이나 저장 프로시저인 문자열입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnection" /&gt;</ph> that represents the connection.</source>
          <target state="translated">연결을 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> opens and closes an <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> if it is not already open.</source>
          <target state="translated">이 구현에서 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 열고 닫습니다는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> 열려 있지 않으면입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>This can be useful in an application that must call the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method for two or more <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> objects.</source>
          <target state="translated">이 호출 해야 하는 응용 프로그램에 유용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> 둘 이상에 대 한 메서드 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> is already open, you must explicitly call <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> or <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept> to close it.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> 가 이미 열려 명시적으로 호출 해야 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> 또는 <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept> 를 닫습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스를 만들 때 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>You can change the value of either of these properties through a separate call to the property.</source>
          <target state="translated">속성에 별도 호출을 통해 이러한 속성 중 하나의 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> 속성에서 사용될 SQL SELECT 문이나 저장 프로시저인 문자열입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>The connection string.</source>
          <target state="translated">연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> constructor uses the <ph id="ph2">`selectConnectionString`</ph> parameter to set the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated">이 오버 로드는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 생성자 사용 하 여는 <ph id="ph2">`selectConnectionString`</ph> 매개 변수를 설정의 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>However, it does not open the connection.</source>
          <target state="translated">그러나 연결이 열리지 않습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>You still must explicitly open the connection.</source>
          <target state="translated">여전히 명시적으로 열어야 연결 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스를 만들 때 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>Gets or sets an SQL statement or stored procedure for deleting records from the data set.</source>
          <target state="translated">데이터 집합에서 레코드를 삭제하는 SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to delete records in the data source that correspond to deleted rows in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph>의 삭제된 행에 해당하는 데이터 소스의 레코드를 삭제하는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> 동안 사용된 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">동안 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> 설정 하는 경우 자동으로 생성할 수는 <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 속성을 사용 하 여는 <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">설정 하지 않으면 모든 추가 명령이 생성 한 다음,는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이 생성 논리는 키 열에 대 한 정보가 필요는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> 할당 되는 이전에 만든 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> 가 복제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> 이전에 만든에 대 한 참조를 유지 관리 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 설정 하 고는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
          <source>It assumes that you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">이미 만든 것으로 가정는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbDataAdapter">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in an ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph3">&lt;see langword="Record" /&gt;</ph> object.</source>
          <target state="translated">ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="Record" /&gt;</ph> 개체의 행과 일치하는 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>의 행을 추가하거나 새로 고칩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to fill with records and, if it is required, schema.</source>
          <target state="translated">레코드와 스키마(필요한 경우)로 채울 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>An ADO <ph id="ph1">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph2">&lt;see langword="Record" /&gt;</ph> object.</source>
          <target state="translated">ADO <ph id="ph1">&lt;see langword="Recordset" /&gt;</ph>이나 <ph id="ph2">&lt;see langword="Record" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Adds or refreshes rows in a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to match those in an ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph3">&lt;see langword="Record" /&gt;</ph> object using the specified <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> and ADO objects.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 및 ADO 개체를 사용하여 ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="Record" /&gt;</ph> 개체의 행과 일치하는 <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>의 행을 추가하거나 새로 고칩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>The number of rows successfully refreshed to the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>에 성공적으로 새로 고쳐진 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, but any updates to the data must be handled by ADO.NET.</source>
          <target state="translated">ADO.NET 및 ADO ActiveX Data Objects () 간의 링크는 단방향 작업에는 ADO에서 데이터를 복사할 수 있다는 점에서 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, ADO.NET에서 데이터에 대 한 업데이트가 처리 되어야 하지만 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method does not close the input <ph id="ph2">`Recordset`</ph> on completion of the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation.</source>
          <target state="translated">이 오버 로드는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> 닫히지 않습니다 입력 <ph id="ph2">`Recordset`</ph> 의 완료에는 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>When handling batch SQL statements that return multiple results, this implementation of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the OLE DB.NET Framework Data Provider retrieves schema information for only the first result.</source>
          <target state="translated">이 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> OLE DB.NET Framework 데이터 공급자를 검색 한 첫 번째 결과 대 한 스키마 정보에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation adds the rows to the specified destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object if it does not already exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> 지정된 된 대상에 행을 추가 하는 작업 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>만들기는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 경우 이미 없는 개체.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation ordinarily creates only column name metadata.</source>
          <target state="translated">만들 때 한 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> 작업은 일반적으로 열 이름 메타 데이터만 만듭니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">그러나 경우는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> 속성이 <ph id="ph2">`AddWithKey`</ph>, 적절 한 기본 키와 제약 조건도 만들어집니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> 메서드가 여러 번 같은 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">기본 키가 있는 경우 이미 존재 하는 일치 하는 행과 들어오는 행이 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">들어오는 행에 추가 된 기본 키가 없으면는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear one time in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that corresponds to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">기본 키 정보가 있는 경우 중복 행 조정 되어에 한 번만 표시는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 에 해당 하는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Primary key information may be set either through <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, by specifying the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property to <ph id="ph5">`AddWithKey`</ph>.</source>
          <target state="translated">통해 기본 키 정보가 설정할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>를 지정 하 여는 <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, 또는 설정 하 여는 <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> 속성을 <ph id="ph5">`AddWithKey`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>가 OUTER JOIN의 결과를 반환하면 <ph id="ph2">`DataAdapter`</ph>는 결과 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>에 대해 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 값을 설정하지 않습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 하려면 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>To function correctly with the .NET Framework Data Provider for OLE DB, <ph id="ph1">`AddWithKey`</ph> requires that the native OLE DB provider obtains required primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the <ph id="ph2">`IColumnsRowset`</ph>.</source>
          <target state="translated">.NET Framework Data provider for OLE DB 제대로 작동 하려면 <ph id="ph1">`AddWithKey`</ph> 하기 위해서는 네이티브 OLE DB 공급자 DBPROP_UNIQUEROWS 속성을 설정 하 여 필요한 기본 키 정보를 가져옵니다를 어떤 열이 기본 키를 확인 한 다음 DBCOLUMN_KEYCOLUMN를 검사 하 여 열 여 <ph id="ph2">`IColumnsRowset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Alternatively the user may explicitly set the primary key constraints on each <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">사용자 각 primary key 제약 조건 수 명시적으로 설정 하는 또는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This makes sure that incoming records that match existing records are updated instead of appended.</source>
          <target state="translated">이렇게 하면 들어오는 레코드 기존 레코드와 일치 하는 대신 업데이트 된 추가 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 발생할 중복 열을 채우는 동안는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, 패턴을 사용 하 고 후속 열의 이름을 생성 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", 및 기타 등등.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Empty column names are added to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, using an empty string for the first column, followed by "1", "2", "3", and so on for the subsequent empty columns.</source>
          <target state="translated">빈 열 이름에 추가 되는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, "1", "2", "3", 및에 후속 빈 열에 대 한 다음 첫 번째 열에 대 한 빈 문자열을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Values in ADO <ph id="ph1">`Recordset`</ph> or <ph id="ph2">`Record`</ph> objects are converted to common language runtime types for storage in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Ado에서 값 <ph id="ph1">`Recordset`</ph> 또는 <ph id="ph2">`Record`</ph> 개체는 변환 된 공용 언어 런타임 형식에 저장 하기 위해는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method does not implicitly call <ph id="ph2">`Close`</ph> on the ADO object when the fill operation is complete.</source>
          <target state="translated">이 오버 로드는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> 메서드를 암시적으로 호출 하지 않습니다 <ph id="ph2">`Close`</ph> 채우기 작업이 완료 될 때 ADO 개체에 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>Therefore, always call <ph id="ph1">`Close`</ph> when you are finished using ADO <ph id="ph2">`Recordset`</ph> or <ph id="ph3">`Record`</ph> objects.</source>
          <target state="translated">따라서 항상 호출 <ph id="ph1">`Close`</ph> ADO를 사용 하 여 작업을 마쳤으면 <ph id="ph2">`Recordset`</ph> 또는 <ph id="ph3">`Record`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This makes sure that the underlying connection to a data source is released in a timely manner, and also prevents possible access violations because of unmanaged ADO objects being reclaimed by garbage collection when existing references still exist.</source>
          <target state="translated">이렇게 하면 데이터 원본에 기본 연결이 적절 한 시기에 릴리스 하 고 또한 기존의 참조가 계속 존재 하는 경우 가비지 수집에서 회수 되 고 관리 되지 않는 ADO 개체 때문에 가능한 액세스 위반을 방지 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>When you call the <ph id="ph1">`TableMappings.Add`</ph> method on a <ph id="ph2">`DataAdapter`</ph> and you explicitly map the source table parameter to an empty string, the dataset is successfully filled using the source table, but the dataset will be populated with nothing.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`TableMappings.Add`</ph> 에서 메서드는 <ph id="ph2">`DataAdapter`</ph> 및 빈 문자열을 원본 테이블 매개 변수를 명시적으로 매핑합니다, dataset 성공적으로 원본 테이블을 사용 하 여 찼는데 데이터 집합은 nothing으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>For example, in the following example, <ph id="ph1">`rDataSet`</ph> will be populated with nothing.</source>
          <target state="translated">예를 들어 다음 예제에서는에서 <ph id="ph1">`rDataSet`</ph> 아무 것도 없으면 채워집니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This example shows how you can skip a result when dealing with multiple results.</source>
          <target state="translated">이 예제에서는 어떻게 여러 결과 처리할 때 결과 건너뛸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> to fill a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> using an ADO <ph id="ph3">`Recordset`</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 채울는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> ADO를 사용 하 여 <ph id="ph3">`Recordset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
          <source>This example assumes that you have created an ADO <ph id="ph1">`Recordset`</ph>.</source>
          <target state="translated">이 예제 ADO 만들었다고 가정 <ph id="ph1">`Recordset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if it is required, schema.</source>
          <target state="translated">레코드와 스키마(필요한 경우)로 채울 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>An ADO <ph id="ph1">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph2">&lt;see langword="Record" /&gt;</ph> object.</source>
          <target state="translated">ADO <ph id="ph1">&lt;see langword="Recordset" /&gt;</ph>이나 <ph id="ph2">&lt;see langword="Record" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The source table used for the table mappings.</source>
          <target state="translated">테이블 매핑에 사용되는 소스 테이블입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in an ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> or <ph id="ph3">&lt;see langword="Record" /&gt;</ph> object using the specified <ph id="ph4">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, ADO object, and source table name.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, ADO 개체 및 소스 테이블 이름을 사용하여 ADO <ph id="ph2">&lt;see langword="Recordset" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="Record" /&gt;</ph> 개체의 행과 일치하는 <ph id="ph4">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>의 행을 추가하거나 새로 고칩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, but any updates to the data must be handled by ADO.NET.</source>
          <target state="translated">ADO.NET 및 ADO ActiveX Data Objects () 간의 링크는 단방향 작업에는 ADO에서 데이터를 복사할 수 있다는 점에서 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, ADO.NET에서 데이터에 대 한 업데이트가 처리 되어야 하지만 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method iterates through multiple results by calling the <ph id="ph2">`NextRecordset`</ph> method on the <ph id="ph3">`Recordset`</ph>, closing the input <ph id="ph4">`Recordset`</ph> on completion of the <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> 메서드를 호출 하 여 여러 결과를 반복 합니다.는 <ph id="ph2">`NextRecordset`</ph> 메서드를는 <ph id="ph3">`Recordset`</ph>, 입력 닫는 <ph id="ph4">`Recordset`</ph> 의 완료에는 <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation adds the rows to the specified destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object if it does not already exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> 지정된 된 대상에 행을 추가 하는 작업 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>만들기는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 경우 이미 없는 개체.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation ordinarily creates only column name metadata.</source>
          <target state="translated">만들 때 한 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> 작업은 일반적으로 열 이름 메타 데이터만 만듭니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">그러나 경우는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> 속성이 <ph id="ph2">`AddWithKey`</ph>, 적절 한 기본 키와 제약 조건도 만들어집니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear one time in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that corresponds to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">기본 키 정보가 있는 경우 중복 행 조정 되어에 한 번만 표시는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 에 해당 하는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Primary key information may be set either through <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, by specifying the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property to <ph id="ph5">`AddWithKey`</ph>.</source>
          <target state="translated">통해 기본 키 정보가 설정할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>를 지정 하 여는 <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, 또는 설정 하 여는 <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> 속성을 <ph id="ph5">`AddWithKey`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>To function correctly with the .NET Framework Data Provider for OLE DB, <ph id="ph1">`AddWithKey`</ph> requires the native OLE DB provider to obtain required primary key information by setting the DBPROP_UNIQUEROWS property, and then determine which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the <bpt id="p1">**</bpt>IColumnsRowset<ept id="p1">**</ept>.</source>
          <target state="translated">.NET Framework Data provider for OLE DB 제대로 작동 하려면 <ph id="ph1">`AddWithKey`</ph> DBPROP_UNIQUEROWS 속성을 설정 하 여 필요한 기본 키 정보를 얻고 다음 열에 기본 키가 확인 하는 네이티브 OLE DB 공급자 필요 DBCOLUMN_KEYCOLUMN를 검사 하 여 열 여 <bpt id="p1">**</bpt>IColumnsRowset<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Alternatively the user may explicitly set the primary key constraints on each <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">사용자 각 primary key 제약 조건 수 명시적으로 설정 하는 또는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This ensures that incoming records that match existing records are updated instead of appended.</source>
          <target state="translated">이렇게 하면 기존 레코드와 일치하는 들어오는 레코드가 추가되지 않고 업데이트됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>가 OUTER JOIN의 결과를 반환하면 <ph id="ph2">`DataAdapter`</ph>는 결과 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>에 대해 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 값을 설정하지 않습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 하려면 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If the <ph id="ph1">`Recordset`</ph> is closed before the starting of the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> operation, no error results.</source>
          <target state="translated">경우는 <ph id="ph1">`Recordset`</ph> 의 시작 하기 전에 닫혀는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> 작업, 오류가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This is required for handling of multiple results, because queries that do not return rows are indicated by a closed <ph id="ph1">`Recordset`</ph>.</source>
          <target state="translated">행을 반환 하지 않는 쿼리가 표시 되기 때문에 이것이 필요 여러 결과 처리에 닫힌 하 여 <ph id="ph1">`Recordset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> just calls <ph id="ph2">`NextRecordset`</ph> on the closed <ph id="ph3">`Recordset`</ph> and continues processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 호출 <ph id="ph2">`NextRecordset`</ph> 닫힌에 <ph id="ph3">`Recordset`</ph> 하 고 처리를 계속 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If an error is encountered while populating the data set, rows added before the occurrence of the error remain in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">데이터 집합을 채우는 동안 오류가 발생, 오류 발생 하기 전에 추가 된 행에 유지 된 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The rest of the operation is aborted.</source>
          <target state="translated">작업의 나머지 부분 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> 개체 중복 된 열을 채우는 동안 발생 한 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, 패턴을 사용 하 고 후속 열의 이름을 생성 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1","<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", " <bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", 및 기타 등등.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> "column1", "Column2" 등에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 각 결과 집합은 별도 테이블에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예를 들어 "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Applications that use column and table names should make sure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하는 응용 프로그램 명명 패턴과 충돌 하지 않도록 해야 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>Values in ADO <ph id="ph1">`Recordset`</ph> or <ph id="ph2">`Record`</ph> objects are converted to common language runtime types for storage in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Ado에서 값 <ph id="ph1">`Recordset`</ph> 또는 <ph id="ph2">`Record`</ph> 개체는 변환 된 공용 언어 런타임 형식에 저장 하기 위해는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method implicitly calls <ph id="ph2">`Close`</ph> on the ADO object when the fill operation is complete.</source>
          <target state="translated">이 오버 로드는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> 메서드를 암시적으로 호출 <ph id="ph2">`Close`</ph> 채우기 작업이 완료 될 때 ADO 개체에 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> to fill a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> using an ADO <ph id="ph3">`Recordset`</ph> that is an ADO <ph id="ph4">`Record`</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 채울는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> ADO를 사용 하 여 <ph id="ph3">`Recordset`</ph> ADO 즉 <ph id="ph4">`Record`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>This example assumes that you have created an ADO <ph id="ph1">`RecordSet`</ph> and <ph id="ph2">`Record`</ph> object.</source>
          <target state="translated">이 예제 ADO 만들었다고 가정 <ph id="ph1">`RecordSet`</ph> 및 <ph id="ph2">`Record`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
          <source>The source table is invalid.</source>
          <target state="translated">소스 테이블이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</source>
          <target state="translated">데이터 소스에 새 레코드를 삽입하는 데 사용되는 SQL 문 또는 저장 프로시저를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to insert records in the data source that correspond to new rows in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph>의 새 행에 해당하는 데이터 소스의 레코드를 삽입하는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> 동안 사용된 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">동안 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> 설정 하는 경우 자동으로 생성할 수는 <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 속성을 사용 하 여는 <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">설정 하지 않으면 모든 추가 명령이 생성 한 다음,는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이 생성 논리는 키 열에 대 한 정보가 필요는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> 할당 되는 이전에 만든 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> 가 복제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> 이전에 만든에 대 한 참조를 유지 관리 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>If execution of this command returns rows, these rows may be added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending on how you set the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated">이 명령 실행 하 여 행이 반환 하는 경우 이러한 행에 추가할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 어떻게 설정 하느냐에 따라는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 설정 하 고는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
          <source>It assumes that you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">이미 만든 것으로 가정는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>Occurs during <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> after a command is executed against the data source.</source>
          <target state="translated">데이터 소스에 대해 명령이 실행된 후에 <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>를 수행하는 동안 발생합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The attempt to update is made.</source>
          <target state="translated">업데이트가 시도되어</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>Therefore, the event occurs.</source>
          <target state="translated">이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, there are two events that occur per data row updated.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The order of execution is as follows:</source>
          <target state="translated">실행 순서는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 매개 변수 값으로 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>, 첫 번째 반환 결과에 배치 되는 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">에 지정 되므로 출력 매개 변수가 있는 경우는 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>가 호출된 경우</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated&gt;</ph> events being used.</source>
          <target state="translated">다음 예제와 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated&gt;</ph> 되 고 사용 되는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>Occurs during <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> before a command is executed against the data source.</source>
          <target state="translated">데이터 소스에 대해 명령이 실행되기 전에 <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>를 수행하는 동안 발생합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The attempt to update is made.</source>
          <target state="translated">업데이트가 시도되어</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>Therefore, the event occurs.</source>
          <target state="translated">이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, there are two events that occur per data row updated.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The order of execution is as follows:</source>
          <target state="translated">실행 순서는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 매개 변수 값으로 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>, 첫 번째 반환 결과에 배치 되는 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">에 지정 되므로 출력 매개 변수가 있는 경우는 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>가 호출된 경우</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated&gt;</ph> events being used.</source>
          <target state="translated">다음 예제와 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated&gt;</ph> 되 고 사용 되는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>Gets or sets an SQL statement or stored procedure used to select records in the data source.</source>
          <target state="translated">데이터 소스의 레코드를 선택하는 데 사용하는 SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> that is used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> to select records from data source for placement in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph>에 있는 위치에 대한 데이터 소스에서 레코드를 선택하는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> 동안 사용하는 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 할당 되는 이전에 만든 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> 가 복제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 이전에 만든에 대 한 참조를 유지 관리 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> returns no rows, no tables are added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and no exception is raised.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 행이 없으면 반환에 테이블이 추가 되는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, 예외가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 설정 하 고는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
          <source>It assumes that you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">이미 만든 것으로 가정는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.DeleteCommand" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.DeleteCommand" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during an update to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated">업데이트를 수행하는 동안 데이터 집합의 삭제된 행에 대한 데이터 소스에서 레코드를 삭제하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.InsertCommand" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.InsertCommand" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during an update to insert records from a data source for placement in the data set.</source>
          <target state="translated">업데이트를 수행하는 동안 데이터 소스에서 데이터 집합에 배치할 레코드를 삽입하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.SelectCommand" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.SelectCommand" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during an update to select records from a data source for placement in the data set.</source>
          <target state="translated">업데이트를 수행하는 동안 데이터 소스에서 데이터 집합에 배치할 레코드를 선택하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.UpdateCommand" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Data.IDbDataAdapter.UpdateCommand" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during an update to update records in the data source for modified rows in the data set.</source>
          <target state="translated">업데이트를 수행하는 동안 데이터 집합의 수정된 행에 대한 레코드를 데이터 소스에서 업데이트하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that is a copy of this instance.</source>
          <target state="translated">이 인스턴스의 복사본인 새 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>Gets or sets an SQL statement or stored procedure used to update records in the data source.</source>
          <target state="translated">데이터 소스의 레코드를 업데이트하는 데 사용되는 SQL 문 또는 저장 프로시저를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to update records in the data source that correspond to modified rows in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에서 수정된 행에 해당하는 데이터 소스의 레코드를 업데이트하기 위해 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> 중에 사용되는 <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">동안 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> 설정 하는 경우 자동으로 생성할 수는 <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 속성을 사용 하 여는 <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">설정 하지 않으면 모든 추가 명령이 생성 한 다음,는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이 생성 논리는 키 열에 대 한 정보가 필요는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> is not cloned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> 할당 되는 이전에 만든 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> 가 복제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> 이전에 만든에 대 한 참조를 유지 관리 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>If execution of this command returns rows, these rows may be merged with the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending on how you set the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object.</source>
          <target state="translated">이러한 행이이 명령 실행 하 여 행이 반환 하는 경우와 병합 될 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 어떻게 설정 하느냐에 따라는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> 설정 하 고는 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
          <source>It assumes that you have already created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
          <target state="translated">이미 만든 것으로 가정는 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>