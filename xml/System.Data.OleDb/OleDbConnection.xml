<Type Name="OleDbConnection" FullName="System.Data.OleDb.OleDbConnection">
  <TypeSignature Language="C#" Value="public sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ac0fa-101">데이터 소스에 대해 열려 있는 연결을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-101">Represents an open connection to a data source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-102"><xref:System.Data.OleDb.OleDbConnection> 개체 데이터 소스에 대 한 고유 연결을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-102">An <xref:System.Data.OleDb.OleDbConnection> object represents a unique connection to a data source.</span></span> <span data-ttu-id="ac0fa-103">클라이언트/서버 데이터베이스 시스템 이므로 네트워크 연결 서버에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-103">With a client/server database system, it is equivalent to a network connection to the server.</span></span> <span data-ttu-id="ac0fa-104">네이티브 OLE DB 공급자, 일부 메서드 또는 속성에서 지 원하는 기능에 따라 프로그램 <xref:System.Data.OleDb.OleDbConnection> 개체를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-104">Depending on the functionality supported by the native OLE DB provider, some methods or properties of an <xref:System.Data.OleDb.OleDbConnection> object may not be available.</span></span>  
  
 <span data-ttu-id="ac0fa-105">인스턴스를 만들 때 <xref:System.Data.OleDb.OleDbConnection>, 모든 속성은 초기 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-105">When you create an instance of <xref:System.Data.OleDb.OleDbConnection>, all properties are set to their initial values.</span></span> <span data-ttu-id="ac0fa-106">이러한 값의 목록에 대 한 참조는 <xref:System.Data.OleDb.OleDbConnection> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-106">For a list of these values, see the <xref:System.Data.OleDb.OleDbConnection> constructor.</span></span>  
  
 <span data-ttu-id="ac0fa-107">단일 둘 이상의 DataReader를 열 수 <xref:System.Data.OleDb.OleDbConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-107">You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>.</span></span> <span data-ttu-id="ac0fa-108">사용 하는 OLE DB 공급자는 단일 연결에서 둘 이상의 DataReader를 지원 하지 않으면, 공급자 각각에 대 한 추가 연결을 암시적으로 엽니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-108">If the OLE DB provider you use does not support more than one DataReader on a single connection, the provider implicitly opens an additional connection for each.</span></span>  
  
 <span data-ttu-id="ac0fa-109">경우는 <xref:System.Data.OleDb.OleDbConnection> 늘어나고의 범위를 닫혀 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-109">If the <xref:System.Data.OleDb.OleDbConnection> goes out of scope, it is not closed.</span></span> <span data-ttu-id="ac0fa-110">따라서 명시적으로 닫아야 연결 호출 하 여 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 또는 **Dispose**, 또는 사용 하 여는 <xref:System.Data.OleDb.OleDbConnection> 내에서 개체는 `Using` 문.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-110">Therefore, you must explicitly close the connection by calling <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose**, or by using the <xref:System.Data.OleDb.OleDbConnection> object within a `Using` statement.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac0fa-111">고성능 응용 프로그램을 배포 하려면 연결 풀링을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-111">To deploy high-performance applications, you must use connection pooling.</span></span> <span data-ttu-id="ac0fa-112">.NET Framework Data Provider for OLE DB를 사용 하면 공급자 자동으로이 관리 하기 때문에 연결 풀링을 사용할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-112">When you use the .NET Framework Data Provider for OLE DB, you do not have to enable connection pooling because the provider manages this automatically.</span></span> <span data-ttu-id="ac0fa-113">연결을 사용 하는 방법에 대 한 자세한 내용은 참조 OLE DB에 대 한.NET Framework Data Provider를 사용 하 여 풀링 [OLE DB, ODBC 및 Oracle 연결 풀링](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-113">For more information about how to use connection pooling with the .NET Framework Data Provider for OLE DB, see [OLE DB, ODBC, and Oracle Connection Pooling](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md).</span></span>  
  
 <span data-ttu-id="ac0fa-114">심각한 <xref:System.Data.OleDb.OleDbException> (예: SQL Server 심각도 수준이 20 이상인 경우)에서 실행 하는 메서드에서 생성 되는 <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbConnection> 닫혔을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-114">If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbConnection> might be closed.</span></span> <span data-ttu-id="ac0fa-115">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-115">However, the user can reopen the connection and continue.</span></span>  
  
 <span data-ttu-id="ac0fa-116">인스턴스를 생성 하는 응용 프로그램은 <xref:System.Data.OleDb.OleDbConnection> 개체 모든 직접 및 간접 호출자가 선언적 이거나 명령 보안 요청을 설정 하 여 코드에 충분 한 권한을 갖도록 요구할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-116">An application that creates an instance of the <xref:System.Data.OleDb.OleDbConnection> object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands.</span></span> <span data-ttu-id="ac0fa-117"><xref:System.Data.OleDb.OleDbConnection> 보안 요청을 사용 하 여 <xref:System.Data.OleDb.OleDbPermission> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-117"><xref:System.Data.OleDb.OleDbConnection> makes security demands using the <xref:System.Data.OleDb.OleDbPermission> object.</span></span> <span data-ttu-id="ac0fa-118">사용자가 해당 코드를 사용 하 여 충분 한 권한이 있는지 확인할 수는 <xref:System.Data.OleDb.OleDbPermissionAttribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-118">Users can verify that their code has sufficient permissions by using the <xref:System.Data.OleDb.OleDbPermissionAttribute> object.</span></span> <span data-ttu-id="ac0fa-119">사용자와 관리자에도 사용할 수는 [Caspol.exe (코드 액세스 보안 정책 도구)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) 컴퓨터, 사용자 및 엔터프라이즈 수준에서 보안 정책을 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-119">Users and administrators can also use the [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) to modify security policy at the computer, user, and enterprise levels.</span></span> <span data-ttu-id="ac0fa-120">자세한 내용은 [코드 액세스 보안 및 ADO.NET](~/docs/framework/data/adonet/code-access-security.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-120">For more information, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).</span></span>  
  
 <span data-ttu-id="ac0fa-121">데이터 서버에서 경고 및 정보 메시지를 처리 하는 방법에 대 한 자세한 내용은 참조 [연결 이벤트](~/docs/framework/data/adonet/connection-events.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-121">For more information about handling warning and informational messages from the data server, see [Connection Events](~/docs/framework/data/adonet/connection-events.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac0fa-122"><xref:System.Data.OleDb.OleDbConnection> 개체가 설정 또는 OLE DB 공급자와 관련 된 동적 속성 검색을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-122">The <xref:System.Data.OleDb.OleDbConnection> object does not support setting or retrieving dynamic properties specific to an OLE DB provider.</span></span> <span data-ttu-id="ac0fa-123">OLE DB 공급자의 연결 문자열에 전달할 수 있는 속성만 지원됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-123">Only properties that can be passed in the connection string for the OLE DB provider are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac0fa-124">다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand> 및 <xref:System.Data.OleDb.OleDbConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-124">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and an <xref:System.Data.OleDb.OleDbConnection>.</span></span> <span data-ttu-id="ac0fa-125"><xref:System.Data.OleDb.OleDbConnection> 열리고으로 설정 된 <xref:System.Data.OleDb.OleDbCommand.Connection%2A> 에 대 한는 <xref:System.Data.OleDb.OleDbCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-125">The <xref:System.Data.OleDb.OleDbConnection> is opened and set as the <xref:System.Data.OleDb.OleDbCommand.Connection%2A> for the <xref:System.Data.OleDb.OleDbCommand>.</span></span> <span data-ttu-id="ac0fa-126">이 예에서는 다음 호출 <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> 연결을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-126">The example then calls <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> and closes the connection.</span></span> <span data-ttu-id="ac0fa-127">이를 위해 <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> 연결 문자열과 쿼리 문자열은 SQL INSERT 문을 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-127">To accomplish this, <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ac0fa-128"><see cref="T:System.Data.OleDb.OleDbConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-128">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac0fa-129"><see cref="T:System.Data.OleDb.OleDbConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-129">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-130">새 인스턴스가 <xref:System.Data.OleDb.OleDbConnection> 만들어지면 읽기/쓰기 속성의 관련된 키워드를 사용 하 여 구체적으로 설정 되어 있지 않으면 다음 초기 값으로 설정 됩니다는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-130">When a new instance of <xref:System.Data.OleDb.OleDbConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.</span></span>  
  
|<span data-ttu-id="ac0fa-131">속성</span><span class="sxs-lookup"><span data-stu-id="ac0fa-131">Properties</span></span>|<span data-ttu-id="ac0fa-132">초기 값</span><span class="sxs-lookup"><span data-stu-id="ac0fa-132">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|<span data-ttu-id="ac0fa-133">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="ac0fa-133">empty string ("")</span></span>|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|<span data-ttu-id="ac0fa-134">15</span><span class="sxs-lookup"><span data-stu-id="ac0fa-134">15</span></span>|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|<span data-ttu-id="ac0fa-135">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="ac0fa-135">empty string ("")</span></span>|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|<span data-ttu-id="ac0fa-136">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="ac0fa-136">empty string ("")</span></span>|  
  
 <span data-ttu-id="ac0fa-137">사용 하 여 이러한 속성에 대 한 값을 변경할 수는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-137">You can change the value for these properties only by using the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac0fa-138">다음 예제는 <xref:System.Data.OleDb.OleDbConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-138">The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="ac0fa-139">데이터베이스를 여는 데 사용하는 연결입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-139">The connection used to open the database.</span></span></param>
        <summary><span data-ttu-id="ac0fa-140">지정된 연결 문자열을 사용하여 <see cref="T:System.Data.OleDb.OleDbConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-140">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnection" /> class with the specified connection string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-141">새 인스턴스가 <xref:System.Data.OleDb.OleDbConnection> 만들어지면 읽기/쓰기 속성의 관련된 키워드를 사용 하 여 구체적으로 설정 되어 있지 않으면 다음 초기 값으로 설정 됩니다는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-141">When a new instance of <xref:System.Data.OleDb.OleDbConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.</span></span>  
  
|<span data-ttu-id="ac0fa-142">속성</span><span class="sxs-lookup"><span data-stu-id="ac0fa-142">Properties</span></span>|<span data-ttu-id="ac0fa-143">초기 값</span><span class="sxs-lookup"><span data-stu-id="ac0fa-143">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|<span data-ttu-id="ac0fa-144">15</span><span class="sxs-lookup"><span data-stu-id="ac0fa-144">15</span></span>|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|<span data-ttu-id="ac0fa-145">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="ac0fa-145">empty string ("")</span></span>|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|<span data-ttu-id="ac0fa-146">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="ac0fa-146">empty string ("")</span></span>|  
  
 <span data-ttu-id="ac0fa-147">사용 하 여 이러한 속성에 대 한 값을 변경할 수는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-147">You can change the value for these properties only by using the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac0fa-148">다음 예제는 <xref:System.Data.OleDb.OleDbConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-148">The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ac0fa-149">데이터베이스 트랜잭션을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-149">Starts a database transaction.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OleDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac0fa-150">현재 <see cref="T:System.Data.IsolationLevel" /> 값을 사용하여 데이터베이스 트랜잭션을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-150">Starts a database transaction with the current <see cref="T:System.Data.IsolationLevel" /> value.</span></span></summary>
        <returns><span data-ttu-id="ac0fa-151">새 트랜잭션을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-151">An object representing the new transaction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-152">명시적으로 커밋하거나 사용 하 여 트랜잭션을 롤백하는 <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> 또는 <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-152">You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method.</span></span> <span data-ttu-id="ac0fa-153">.NET Framework Data Provider for OLE DB 트랜잭션 관리 모델을 올바르게 수행 되었는지 확인, 데이터 원본에서 제공 하는 다른 트랜잭션 관리 모델을 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-153">To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac0fa-154">다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 및 <xref:System.Data.OleDb.OleDbTransaction>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-154">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>.</span></span> <span data-ttu-id="ac0fa-155">사용 하는 방법을 보여 줍니다는 <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, 및 <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-155">It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ac0fa-156">병렬 트랜잭션은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-156">Parallel transactions are not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel"><span data-ttu-id="ac0fa-157">트랜잭션이 실행되어야 하는 격리 수준입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-157">The isolation level under which the transaction should run.</span></span></param>
        <summary><span data-ttu-id="ac0fa-158">지정된 격리 수준으로 데이터베이스 트랜잭션을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-158">Starts a database transaction with the specified isolation level.</span></span></summary>
        <returns><span data-ttu-id="ac0fa-159">새 트랜잭션을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-159">An object representing the new transaction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-160">명시적으로 커밋하거나 사용 하 여 트랜잭션을 롤백하는 <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> 또는 <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-160">You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method.</span></span> <span data-ttu-id="ac0fa-161">.NET Framework Data Provider for OLE DB 트랜잭션 관리 모델을 올바르게 수행 되었는지 확인, 데이터 원본에서 제공 하는 다른 트랜잭션 관리 모델을 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-161">To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac0fa-162">격리 수준을 지정 하지 않으면 기본 공급자에 대 한 기본 격리 수준이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-162">If you do not specify an isolation level, the default isolation level for the underlying provider is used.</span></span> <span data-ttu-id="ac0fa-163">와 격리 수준을 지정 하는 <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> 메서드를 사용 하는 오버 로드를 사용 하 여는 `isolationLevel` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-163">To specify an isolation level with the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> method, use the overload that takes the `isolationLevel` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac0fa-164">다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 및 <xref:System.Data.OleDb.OleDbTransaction>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-164">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>.</span></span> <span data-ttu-id="ac0fa-165">사용 하는 방법을 보여 줍니다는 <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, 및 <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-165">It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, a <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ac0fa-166">병렬 트랜잭션은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-166">Parallel transactions are not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ac0fa-167">데이터베이스 이름.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-167">The database name.</span></span></param>
        <summary><span data-ttu-id="ac0fa-168">열려 있는 <see cref="T:System.Data.OleDb.OleDbConnection" />의 현재 데이터베이스를 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-168">Changes the current database for an open <see cref="T:System.Data.OleDb.OleDbConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-169">제공 된 값이 고 `database` 매개 변수는 올바른 데이터베이스 이름 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-169">The value supplied in the `database` parameter must be a valid database name.</span></span> <span data-ttu-id="ac0fa-170">`database` 매개 변수는 null 값, 빈 문자열 또는 공백 문자로 이루어진 문자열에 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-170">The `database` parameter cannot contain a null value, an empty string, or a string with only blank characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac0fa-171">다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 고 읽기 전용 속성 중 일부를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-171">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#2)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ac0fa-172">데이터베이스 이름이 올바르지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="ac0fa-172">The database name is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ac0fa-173">연결이 열려 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-173">The connection is not open.</span></span></exception>
        <exception cref="T:System.Data.OleDb.OleDbException"><span data-ttu-id="ac0fa-174">데이터베이스를 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-174">Cannot change the database.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac0fa-175">데이터 소스에 대한 연결을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-175">Closes the connection to the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-176"><xref:System.Data.OleDb.OleDbConnection.Close%2A> 메서드 보류 중인 트랜잭션을 모두 롤백합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-176">The <xref:System.Data.OleDb.OleDbConnection.Close%2A> method rolls back any pending transactions.</span></span> <span data-ttu-id="ac0fa-177">그런 다음 연결 풀에 대 한 연결을 해제 하거나 연결 풀링을 사용 하지 않도록 설정 하는 경우 연결을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-177">It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</span></span> <span data-ttu-id="ac0fa-178">경우 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 처리 하는 동안 호출 되는 <xref:System.Data.Common.DbConnection.StateChange> 이벤트를 더 추가 <xref:System.Data.Common.DbConnection.StateChange> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-178">If <xref:System.Data.OleDb.OleDbConnection.Close%2A> is called while handling a <xref:System.Data.Common.DbConnection.StateChange> event, no additional <xref:System.Data.Common.DbConnection.StateChange> events are fired.</span></span>  
  
 <span data-ttu-id="ac0fa-179">응용 프로그램에서 호출할 수 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 한 번 이상.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-179">An application can call <xref:System.Data.OleDb.OleDbConnection.Close%2A> more than one time.</span></span> <span data-ttu-id="ac0fa-180">예외가 생성 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-180">No exception is generated.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ac0fa-181">호출 하지 마십시오 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 또는 **Dispose** 에 <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbDataReader>, 또는 다른 관리 되는 개체에는 `Finalize` 클래스의 메서드로 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-181">Do not call <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose** on an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbDataReader>, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="ac0fa-182">종료자에서만 클래스에 직접 속한 관리 되지 않는 리소스를 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-182">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="ac0fa-183">클래스에 관리되지 않는 리소스가 없는 경우 클래스 정의에 `Finalize` 메서드를 포함하지 마세요.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-183">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="ac0fa-184">자세한 내용은 참조 [가비지 수집](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-184">For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac0fa-185">데이터베이스를 여는 데 사용되는 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-185">Gets or sets the string used to open a database.</span></span></summary>
        <value><span data-ttu-id="ac0fa-186">데이터 소스 이름과 초기 연결을 설정하는 데 필요한 기타 매개 변수를 포함하는 OLE DB 공급자 연결 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-186">The OLE DB provider connection string that includes the data source name, and other parameters needed to establish the initial connection.</span></span> <span data-ttu-id="ac0fa-187">기본값은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-187">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-188"><xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> OLE DB 연결 문자열 형식은 다음과 같은 예외가 최대한 비슷하게 일치 하도록 디자인 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-188">The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> is designed to match OLE DB connection string format as closely as possible with the following exceptions:</span></span>  
  
-   <span data-ttu-id="ac0fa-189">"Provider = `value` " 절이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-189">The "Provider = `value` " clause is required.</span></span> <span data-ttu-id="ac0fa-190">그러나 사용할 수 없습니다 "Provider = MSDASQL".NET Framework Data Provider for OLE DB는 OLE DB Provider for ODBC (MSDASQL) 지원 하지 않으므로 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-190">However, you cannot use "Provider = MSDASQL" because the .NET Framework Data Provider for OLE DB does not support the OLE DB Provider for ODBC (MSDASQL).</span></span> <span data-ttu-id="ac0fa-191">ODBC 데이터 원본에 액세스 하려면 사용 된 <xref:System.Data.Odbc.OdbcConnection> 에 없는 개체는 <xref:System.Data.Odbc> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-191">To access ODBC data sources, use the <xref:System.Data.Odbc.OdbcConnection> object that is in the <xref:System.Data.Odbc> namespace.</span></span>  
  
-   <span data-ttu-id="ac0fa-192">반환 되는 연결 문자열은 사용자가 설정한 동일 ODBC 또는 ADO와 달리 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, 보안 정보에서 뺀 경우 `Persist Security Info` 로 설정 된 `false` (기본값).</span><span class="sxs-lookup"><span data-stu-id="ac0fa-192">Unlike ODBC or ADO, the connection string that is returned is the same as the user-set <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, minus security information if `Persist Security Info` is set to `false` (default).</span></span> <span data-ttu-id="ac0fa-193">.NET Framework Data Provider for OLE DB를 유지 하지 않거나 설정 하지 않으면 연결 문자열에 암호를 반환 된 `Persist Security Info` 키워드를 `true` (권장 하지 않음).</span><span class="sxs-lookup"><span data-stu-id="ac0fa-193">The .NET Framework Data Provider for OLE DB does not persist or return the password in a connection string unless you set the `Persist Security Info` keyword to `true` (not recommended).</span></span> <span data-ttu-id="ac0fa-194">높은 수준의 보안을 유지 하려면 하는 것이 좋습니다를 사용 하는 `Integrated Security` 키워드와 `Persist Security Info` 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-194">To maintain a high level of security, it is strongly recommended that you use the `Integrated Security` keyword with `Persist Security Info` set to `false`.</span></span>  
  
 <span data-ttu-id="ac0fa-195">사용할 수는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 다양 한 데이터 원본에 연결 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-195">You can use the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property to connect to a variety of data sources.</span></span> <span data-ttu-id="ac0fa-196">다음 예제에서는 몇 가지 가능한 연결 문자열을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-196">The following example illustrates several possible connection strings.</span></span>  
  
```  
"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes"  
  
"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\bin\LocalAccess40.mdb"  
  
"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI"  
```  
  
 <span data-ttu-id="ac0fa-197">경우는 `Data Source` 키워드는 연결 문자열에 지정 하지 않으면, 공급자는 사용 가능한 경우 로컬 서버에 연결 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-197">If the `Data Source` keyword is not specified in the connection string, the provider will try to connect to the local server if one is available.</span></span>  
  
 <span data-ttu-id="ac0fa-198">연결 문자열에 대 한 자세한 내용은 참조 [Connection String Keywords with SQL Server Native Client를 사용 하 여](http://go.microsoft.com/fwlink/?LinkId=126696)합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-198">For more information about connection strings, see [Using Connection String Keywords with SQL Server Native Client](http://go.microsoft.com/fwlink/?LinkId=126696).</span></span>  
  
 <span data-ttu-id="ac0fa-199"><xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 연결이 닫힌 경우에 속성을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-199">The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property can be set only when the connection is closed.</span></span> <span data-ttu-id="ac0fa-200">연결 문자열 값의 대부분에 해당 읽기 전용 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-200">Many of the connection string values have corresponding read-only properties.</span></span> <span data-ttu-id="ac0fa-201">연결 문자열 설정 되 면 오류가 검색 될 경우를 제외 하 고 이러한 속성 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-201">When the connection string is set, these properties are updated, except when an error is detected.</span></span> <span data-ttu-id="ac0fa-202">이 경우 어떤 속성도 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-202">In this case, none of the properties are updated.</span></span> <span data-ttu-id="ac0fa-203"><xref:System.Data.OleDb.OleDbConnection> 속성에 포함 된 설정만 반환는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-203"><xref:System.Data.OleDb.OleDbConnection> properties return only those settings that are contained in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>.</span></span>  
  
 <span data-ttu-id="ac0fa-204">다시 설정 하 여 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 닫힌된 연결에서 모든 연결 문자열 값 및 관련된 속성을 기본값으로 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-204">Resetting the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> on a closed connection resets all connection string values and related properties.</span></span> <span data-ttu-id="ac0fa-205">여기에 암호가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-205">This includes the password.</span></span> <span data-ttu-id="ac0fa-206">예를 들어, 포함 된 연결 문자열을 설정 하는 경우 "Initial Catalog = AdventureWorks", 다음 연결 문자열을 다시 설정 하 고 "공급자 = SQLOLEDB; 데이터 원본 MySQLServer; = IntegratedSecurity = SSPI", <xref:System.Data.OleDb.OleDbConnection.Database%2A> 더 이상 속성 AdventureWorks 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-206">For example, if you set a connection string that includes "Initial Catalog= AdventureWorks", and then reset the connection string to "Provider= SQLOLEDB;Data Source= MySQLServer;IntegratedSecurity=SSPI", the <xref:System.Data.OleDb.OleDbConnection.Database%2A> property is no longer set to AdventureWorks.</span></span> <span data-ttu-id="ac0fa-207">(연결 문자열의 초기 카탈로그 값에 해당 하는 `Database` 속성입니다.)</span><span class="sxs-lookup"><span data-stu-id="ac0fa-207">(The Initial Catalog value of the connection string corresponds to the `Database` property.)</span></span>  
  
 <span data-ttu-id="ac0fa-208">연결 문자열의 사전 유효성 검사 속성을 설정 하는 경우 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-208">A preliminary validation of the connection string is performed when the property is set.</span></span> <span data-ttu-id="ac0fa-209">경우에 대 한 값의 `Provider`, `Connect Timeout`, `Persist Security Info`, 또는 `OLE DB Services` 포함 된 문자열에서 이러한 값은 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-209">If values for the `Provider`, `Connect Timeout`, `Persist Security Info`, or `OLE DB Services` are included in the string, these values are checked.</span></span> <span data-ttu-id="ac0fa-210">응용 프로그램 호출 하는 경우는 <xref:System.Data.OleDb.OleDbConnection.Open%2A> 메서드를 연결 문자열 완벽 하 게 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-210">When an application calls the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method, the connection string is fully validated.</span></span> <span data-ttu-id="ac0fa-211">연결 문자열에 잘못 되었거나 지원 되지 않는 속성을 런타임에 예외와 같은 경우 <xref:System.ArgumentException>, 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-211">If the connection string contains invalid or unsupported properties, a run-time exception, such as <xref:System.ArgumentException>, is generated.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ac0fa-212">에 대 한 연결 정보를 제공할 수는 <xref:System.Data.OleDb.OleDbConnection> 유니버설 데이터 링크 (UDL) 파일입니다; 그러나 있습니다 이렇게 해서는 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-212">It is possible to supply connection information for an <xref:System.Data.OleDb.OleDbConnection> in a Universal Data Link (UDL) file; however you should avoid doing so.</span></span> <span data-ttu-id="ac0fa-213">UDL 파일은 암호화 되지 않습니다 및 일반 텍스트로 연결 문자열 정보를 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-213">UDL files are not encrypted and expose connection string information in clear text.</span></span> <span data-ttu-id="ac0fa-214">UDL 파일은 응용 프로그램에 대해 외부 파일 기반 리소스이므로 .NET Framework를 사용하여 보호할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-214">Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.</span></span>  
  
 <span data-ttu-id="ac0fa-215">연결 문자열의 기본 형식은 일련의 세미콜론으로 구분 하는 키워드/값 쌍을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-215">The basic format of a connection string includes a series of keyword/value pairs separated by semicolons.</span></span> <span data-ttu-id="ac0fa-216">각 키워드와 해당 값은 등호(=)로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-216">The equal sign (=) connects each keyword and its value.</span></span> <span data-ttu-id="ac0fa-217">세미콜론, 작은따옴표 문자 또는 큰따옴표를 포함 하는 값에 포함 하려면 값을 큰따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-217">To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks.</span></span> <span data-ttu-id="ac0fa-218">세미콜론과 큰따옴표 문자를 모두 포함 된 값을 작은따옴표로 값을 묶을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-218">If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks.</span></span> <span data-ttu-id="ac0fa-219">작은따옴표 값 큰따옴표 문자로 시작 하는 경우 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-219">The single quotation mark is also useful if the value starts with a double-quote character.</span></span> <span data-ttu-id="ac0fa-220">반대로 값 시작 작은따옴표와 큰따옴표를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-220">Conversely, the double quotation mark can be used if the value starts with a single quotation mark.</span></span> <span data-ttu-id="ac0fa-221">작은따옴표 및 큰따옴표 문자를 모두 포함 된 값, 값을 포함 하는 데 사용 하는 인용 부호 문자 값 내에서 발생할 때마다 배가 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-221">If the value contains both single-quote and double-quote characters, the quotation-mark character used to enclose the value must be doubled every time it occurs within the value.</span></span>  
  
 <span data-ttu-id="ac0fa-222">문자열 값에 선행 또는 후행 공백을 포함 하려면 값 작은따옴표 또는 큰따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-222">To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks.</span></span> <span data-ttu-id="ac0fa-223">따옴표에 포함 하는 경우에 정수, 부울 또는 열거 값 주위 선행 또는 후행 공백은 모두 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-223">Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks.</span></span> <span data-ttu-id="ac0fa-224">그러나 문자열 리터럴 키워드 또는 값 내에 공백이 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-224">However, spaces within a string literal keyword or value are preserved.</span></span> <span data-ttu-id="ac0fa-225">구분 기호를 사용 하지 않고 연결 문자열에서 작은따옴표 또는 큰따옴표를 사용할 수 있습니다 (예를 들어 `Data Source= my'Server` 또는 `Data Source= my"Server`)는 따옴표 문자 값의 첫 번째 또는 마지막 문자는 하지 않는 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-225">Single or double quotation marks may be used within a connection string without using delimiters (for example, `Data Source= my'Server` or `Data Source= my"Server`) unless a quotation-mark character is the first or last character in the value.</span></span>  
  
 <span data-ttu-id="ac0fa-226">키워드 또는 값에는 등호 (=)를 포함 하려면 앞에 다른 등호 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-226">To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign.</span></span> <span data-ttu-id="ac0fa-227">예를 들어 가상의 연결 문자열에</span><span class="sxs-lookup"><span data-stu-id="ac0fa-227">For example, in the hypothetical connection string</span></span>  
  
```  
"key==word=value"  
```  
  
 <span data-ttu-id="ac0fa-228">이 키워드는 "키 단어 ="이 고 값이 "value"입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-228">the keyword is "key=word" and the value is "value".</span></span>  
  
 <span data-ttu-id="ac0fa-229">키워드의 특정 키워드 경우 = 값 쌍 여러 번 연결 문자열에서 마지막으로 발견 된 값 집합에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-229">If a specific keyword in a keyword=value pair occurs multiple times in a connection string, the last occurrence listed is used in the value set.</span></span>  
  
 <span data-ttu-id="ac0fa-230">키워드는 대/소문자 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-230">Keywords are not case sensitive.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ac0fa-231">연결 문자열에 추가 하는 대화 상자에서 사용자 ID와 암호 정보를 검색할 때 사용자 입력에 따라 연결 문자열을 구성할 때 주의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-231">You should use caution when constructing a connection string based on user input, for example, when retrieving user ID and password information from a dialog box and appending it to the connection string.</span></span> <span data-ttu-id="ac0fa-232">응용 프로그램에 사용자 포함할 수 없습니다 추가 연결 문자열 매개 변수에서 이러한 값을 예를 들어로 암호를 입력 했는지 확인 해야 "에서는 데이터베이스 수 없도록" 다른 데이터베이스에 연결 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-232">The application should make sure that a user cannot embed additional connection-string parameters in these values, for example, entering a password as "validpassword;database= somedb" in an attempt to attach to a different database.</span></span> <span data-ttu-id="ac0fa-233">OLE DB 연결에 대 한 확장 속성 연결 문자열 매개 변수를 사용 하는 경우 사용자 Id와 암호 수 있는 경우에 일반 텍스트로 저장 하지 않아야 하 고 하므로 사용자 Id와 암호를 전달 하지 마십시오의 기본 설정은 `Persist Security Info= false` 하지 않습니다 영향을 줄의 `Extended Properties` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-233">If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of `Persist Security Info= false` does not affect the `Extended Properties` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac0fa-234">다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 연결 문자열에 해당 속성 중 일부를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-234">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ac0fa-235">유효하지 않은 연결 문자열 인수가 제공되었거나 필요한 연결 문자열 인수가 제공되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="ac0fa-235">An invalid connection string argument has been supplied or a required connection string argument has not been supplied.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac0fa-236">시도를 종료하고 오류를 생성하기 전에 연결하는 동안 대기할 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-236">Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</span></span></summary>
        <value><span data-ttu-id="ac0fa-237">연결이 열릴 때까지 대기하는 시간(초)입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-237">The time in seconds to wait for a connection to open.</span></span> <span data-ttu-id="ac0fa-238">기본값은 15초입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-238">The default value is 15 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-239">값 0은 제한 없음을 나타냄에 피해 야 합니다.는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 하므로 연결 시도 무기한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-239">A value of 0 indicates no limit, and should be avoided in a <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> because an attempt to connect will wait indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac0fa-240">다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 연결 문자열에 해당 속성 중 일부를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-240">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ac0fa-241">설정한 값이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="ac0fa-241">The value set is less than 0.</span></span></exception>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac0fa-242"><see cref="T:System.Data.OleDb.OleDbCommand" />과 관련된 <see cref="T:System.Data.OleDb.OleDbConnection" /> 개체를 만들거나 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-242">Creates and returns an <see cref="T:System.Data.OleDb.OleDbCommand" /> object associated with the <see cref="T:System.Data.OleDb.OleDbConnection" />.</span></span></summary>
        <returns><span data-ttu-id="ac0fa-243"><see cref="T:System.Data.OleDb.OleDbCommand" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-243">An <see cref="T:System.Data.OleDb.OleDbCommand" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac0fa-244">현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-244">Gets the name of the current database or the database to be used after a connection is opened.</span></span></summary>
        <value><span data-ttu-id="ac0fa-245">현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-245">The name of the current database or the name of the database to be used after a connection is opened.</span></span> <span data-ttu-id="ac0fa-246">기본값은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-246">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-247"><xref:System.Data.OleDb.OleDbConnection.Database%2A> 속성을 동적으로 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-247">The <xref:System.Data.OleDb.OleDbConnection.Database%2A> property updates dynamically.</span></span> <span data-ttu-id="ac0fa-248">SQL 문을 사용 하 여 현재 데이터베이스를 변경 하면 또는 <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> 정보 메시지가 전송 되는 메서드와 속성을 자동으로 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-248">If you change the current database using a SQL statement or the <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> method, an informational message is sent and the property is updated automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac0fa-249">다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 고 읽기 전용 속성 중 일부를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-249">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac0fa-250">데이터 소스의 파일 이름 또는 서버 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-250">Gets the server name or file name of the data source.</span></span></summary>
        <value><span data-ttu-id="ac0fa-251">데이터 소스의 파일 이름 또는 서버 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-251">The server name or file name of the data source.</span></span> <span data-ttu-id="ac0fa-252">기본값은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-252">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-253">데이터베이스에 대 한 연결이 닫힐 경우는 `DataSource` 속성 값을 반환에 `ConnectionString` 데이터 소스 키워드에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-253">If the connection to the database is closed, the `DataSource` property returns whatever is contained in `ConnectionString` for the data source keyword.</span></span> <span data-ttu-id="ac0fa-254">연결이 열려 있는 경우와 `ConnectionString` 데이터 소스 키워드 값으로 시작 "&#124;datadirectory&#124;", 속성 값을 반환에 `ConnectionString` 데이터 소스 키워드입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-254">If the connection is open and the `ConnectionString` data source keyword's value starts with "&#124;datadirectory&#124;", the property returns whatever is contained in `ConnectionString` for the data source keyword only.</span></span> <span data-ttu-id="ac0fa-255">속성에 대 한 네이티브 공급자 반환 반환 하는 데이터베이스 연결이 열려 있으면는 `DBPROP_INIT_DATASOURCE,` 비어 있는 경우 네이티브 공급자 `DBPROP_DATASOURCENAME` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-255">If the connection to the database is open, the property returns what the native provider returns for the `DBPROP_INIT_DATASOURCE,` and if that is empty, the native provider’s `DBPROP_DATASOURCENAME` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac0fa-256">다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 고 읽기 전용 속성 중 일부를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-256">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction"><span data-ttu-id="ac0fa-257">등록할 기존 <see cref="T:System.EnterpriseServices.ITransaction" />에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-257">A reference to an existing <see cref="T:System.EnterpriseServices.ITransaction" /> in which to enlist.</span></span></param>
        <summary><span data-ttu-id="ac0fa-258">지정된 트랜잭션에 분산 트랜잭션으로 참여합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-258">Enlists in the specified transaction as a distributed transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-259">새 ADO.NET 2.0에서 지원은 사용에 대 한는 <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> 메서드를 분산된 트랜잭션에 참여 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-259">New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction.</span></span> <span data-ttu-id="ac0fa-260">연결을 참여 하기 때문에 <xref:System.Transactions.Transaction> 인스턴스에 **EnlistTransaction** 에서 사용할 수 있는 기능을 활용는 <xref:System.Transactions> 분산 트랜잭션에서, 보다선호하는네임스페이스를관리하기위한** 참여가** 이 목적을 위해 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-260">Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction** for this purpose.</span></span> <span data-ttu-id="ac0fa-261">자세한 내용은 참조 [분산 트랜잭션](~/docs/framework/data/adonet/distributed-transactions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-261">For more information, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 <span data-ttu-id="ac0fa-262">계속 사용 하 여 기존 분산된 트랜잭션에 참여할 수 있습니다는 <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> 메서드 자동 인 리스트 먼 트를 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-262">You can continue to enlist in an existing distributed transaction using the <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> method if auto-enlistment is disabled.</span></span> <span data-ttu-id="ac0fa-263">기존 분산된 트랜잭션에 인 리스트 먼 트 하면 즉, 트랜잭션이 커밋되거나 롤백될 경우 데이터 소스에서 코드에 의해 수정 된도 트랜잭션이 커밋 또는 롤백됨.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-263">Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back.</span></span> <span data-ttu-id="ac0fa-264">분산된 트랜잭션에 대 한 자세한 내용은 참조 [분산 트랜잭션을](~/docs/framework/data/adonet/distributed-transactions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-264">For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 <span data-ttu-id="ac0fa-265"><xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> 경우 예외를 반환 된 <xref:System.Data.OleDb.OleDbConnection> 이미 사용 하 여 트랜잭션을 시작 <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-265"><xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> returns an exception if the <xref:System.Data.OleDb.OleDbConnection> has already started a transaction using <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</span></span> <span data-ttu-id="ac0fa-266">그러나 트랜잭션이 데이터 소스에서 시작 된 로컬 트랜잭션 인지 (명시적으로 사용 하 여 BEGIN TRANSACTION 문을 실행 하는 예를 들어 여는 <xref:System.Data.OleDb.OleDbCommand> 개체), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> 로컬 트랜잭션을 롤백하고 기존 트랜잭션에 참여 분산된 트랜잭션 요청한으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-266">However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.OleDb.OleDbCommand> object), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> rolls back the local transaction and enlists in the existing distributed transaction as requested.</span></span> <span data-ttu-id="ac0fa-267">로컬 트랜잭션이 롤백 되었습니다을 사용 하 여 시작 되지 않는 모든 로컬 트랜잭션을 관리 해야 알림과 <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-267">You won't receive notice that the local transaction was rolled back and are responsible for managing any local transactions not started using <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction"><span data-ttu-id="ac0fa-268">등록할 기존 <see cref="T:System.Transactions.Transaction" />에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-268">A reference to an existing <see cref="T:System.Transactions.Transaction" /> in which to enlist.</span></span></param>
        <summary><span data-ttu-id="ac0fa-269">지정된 트랜잭션에 분산 트랜잭션으로 참여합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-269">Enlists in the specified transaction as a distributed transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-270">새 ADO.NET 2.0에서 지원은 사용에 대 한는 <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> 메서드를 분산된 트랜잭션에 참여 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-270">New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction.</span></span> <span data-ttu-id="ac0fa-271">연결을 참여 하기 때문에 <xref:System.Transactions.Transaction> 인스턴스에 **EnlistTransaction** 에서 사용할 수 있는 기능을 활용는 <xref:System.Transactions> 분산 트랜잭션에서, 보다선호하는네임스페이스를관리하기위한** 참여가**를 사용 하는 <xref:System.EnterpriseServices.ITransaction> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-271">Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction**, which uses a <xref:System.EnterpriseServices.ITransaction> object.</span></span> <span data-ttu-id="ac0fa-272">역시 약간 다른 의미 체계: 트랜잭션에 연결을 명시적으로 등록 된, 등록 취소 하거나 수 첫 번째 트랜잭션이 완료 될 때까지 다른 트랜잭션에 참여 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-272">It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.</span></span> <span data-ttu-id="ac0fa-273">분산된 트랜잭션에 대 한 자세한 내용은 참조 [분산 트랜잭션을](~/docs/framework/data/adonet/distributed-transactions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-273">For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOleDbSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetOleDbSchemaTable(valuetype System.Guid schema, object[] restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOleDbSchemaTable (schema As Guid, restrictions As Object()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetOleDbSchemaTable(Guid schema, cli::array &lt;System::Object ^&gt; ^ restrictions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Guid" />
        <Parameter Name="restrictions" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="ac0fa-274">반환할 스키마 테이블을 지정하는 <see cref="T:System.Data.OleDb.OleDbSchemaGuid" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-274">One of the <see cref="T:System.Data.OleDb.OleDbSchemaGuid" /> values that specifies the schema table to return.</span></span></param>
        <param name="restrictions"><span data-ttu-id="ac0fa-275">제한 값의 <see cref="T:System.Object" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-275">An <see cref="T:System.Object" /> array of restriction values.</span></span> <span data-ttu-id="ac0fa-276">이 값은 제한 열의 순서에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-276">These are applied in the order of the restriction columns.</span></span> <span data-ttu-id="ac0fa-277">첫 번째 제한 값은 첫 번째 제한 열에 적용되고, 두 번째 제한 값은 두 번째 제한 열에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-277">That is, the first restriction value applies to the first restriction column, the second restriction value applies to the second restriction column, and so on.</span></span></param>
        <summary><span data-ttu-id="ac0fa-278">GUID에 의해 지정된 대로, 지정된 제한을 적용한 후 데이터 소스로부터 스키마 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-278">Returns schema information from a data source as indicated by a GUID, and after it applies the specified restrictions.</span></span></summary>
        <returns><span data-ttu-id="ac0fa-279">요청한 스키마 정보가 포함된 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-279">A <see cref="T:System.Data.DataTable" /> that contains the requested schema information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-280">스키마 테이블으로 반환 됩니다는 <xref:System.Data.DataTable> 있는 동일한 형식으로 지정 된 OLE DB 스키마 행 집합으로는 `schema` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-280">The schema table is returned as a <xref:System.Data.DataTable> that has the same format as the OLE DB schema rowset specified by the `schema` parameter.</span></span> <span data-ttu-id="ac0fa-281">사용 하 여는 `restrictions` 에 반환 될 행을 필터링 하려면 매개 변수는 <xref:System.Data.DataTable> (예를 들어 지정 하 여 테이블 이름, 형식, 소유자 또는 스키마에 대 한 제한).</span><span class="sxs-lookup"><span data-stu-id="ac0fa-281">Use the `restrictions` parameter to filter the rows to be returned in the <xref:System.Data.DataTable> (for example, by specifying restrictions for table name, type, owner, or schema).</span></span> <span data-ttu-id="ac0fa-282">배열에 값을 전달 하는 경우에 빈 문자열이 나 null 값을 포함 하지 않는 배열 요소에 대 한 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-282">When you pass values in the array, include empty strings or nulls for array elements that do not contain values.</span></span> <span data-ttu-id="ac0fa-283">에 빈 배열을 전달 하는 경우 `restrictions`, (각 테이블 마다 하나씩)는 모든 행이 기본 순서로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-283">If you pass an empty array to `restrictions`, all rows (one for each table) are returned in default order.</span></span> <span data-ttu-id="ac0fa-284">배열의 값은 원본 테이블의 열 순서와 일치 하 고 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-284">Values in the array correspond to the order of the columns in the source table and <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="ac0fa-285">제한 배열의 각 요소는 스키마 행 집합의 해당 열의 내용을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-285">Each element in the restrictions array is compared with the content of the corresponding column in the schema rowset.</span></span> <span data-ttu-id="ac0fa-286">예를 들어 제한 배열의 첫 번째 요소는 행 집합의 첫 번째 열과 비교 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-286">For example, the first element in the restrictions array is compared to first column in the rowset.</span></span> <span data-ttu-id="ac0fa-287">제한 요소는 null이 아니면 하는 경우에 행만 스키마 행 집합에서 제한의 값과 정확히 일치 하는 결과에 추가 됩니다 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-287">If a restriction element is not null, only rows from the schema rowset that exactly match the value of the restriction are added to the resulting <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="ac0fa-288"><xref:System.Data.OleDb.OleDbConnection> 메서드를 호출 하는 기본 OLE DB **idbschemarowset:: Getrowset** 표준 공용 언어 런타임 변환 규칙을 사용 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-288">The <xref:System.Data.OleDb.OleDbConnection> method calls the underlying OLE DB **IDBSchemaRowset::GetRowset** method using standard common language runtime conversion rules.</span></span> <span data-ttu-id="ac0fa-289">자세한 내용은 참조 [COM 데이터 형식](http://msdn.microsoft.com/library/f93ae35d-a416-4218-8700-c8218cc90061)합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-289">For more information, see [COM Data Types](http://msdn.microsoft.com/library/f93ae35d-a416-4218-8700-c8218cc90061).</span></span>  
  
 <span data-ttu-id="ac0fa-290">사용 하 여 리터럴에 대 한 정보를 검색할 수 <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-290">You can retrieve information about literals by using <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>.</span></span> <span data-ttu-id="ac0fa-291">OLE DB 호출에 해당 정보를 제공 **IDBInfo::GetLiteralInfo** 인터페이스 또는 ADO **Connection.OpenSchema** 메서드는 `adSchemaDBInfoLiterals` 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-291">This provides information equivalent to calling the OLE DB **IDBInfo::GetLiteralInfo** interface, or the ADO **Connection.OpenSchema** method with the `adSchemaDBInfoLiterals` constant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac0fa-292">다음 샘플 데이터베이스의 테이블 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-292">The following sample returns a list of tables in a database.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OleDb.OleDbException"><span data-ttu-id="ac0fa-293">지정된 제한 집합이 유효하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="ac0fa-293">The specified set of restrictions is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ac0fa-294"><see cref="T:System.Data.OleDb.OleDbConnection" />가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="ac0fa-294">The <see cref="T:System.Data.OleDb.OleDbConnection" /> is closed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ac0fa-295">OLE DB 공급자가 지정된 스키마 행 집합을 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="ac0fa-295">The specified schema rowset is not supported by the OLE DB provider.</span></span>  
  
 <span data-ttu-id="ac0fa-296">또는</span><span class="sxs-lookup"><span data-stu-id="ac0fa-296">-or-</span></span>  
  
 <span data-ttu-id="ac0fa-297"><paramref name="schema" /> 매개 변수에 <see cref="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals" /> 값이 포함되며 <paramref name="restrictions" /> 매개 변수에 하나 이상의 제한이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="ac0fa-297">The <paramref name="schema" /> parameter contains a value of <see cref="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals" /> and the <paramref name="restrictions" /> parameter contains one or more restrictions.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ac0fa-298">이 <see cref="T:System.Data.OleDb.OleDbConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-298">Returns schema information for the data source of this <see cref="T:System.Data.OleDb.OleDbConnection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac0fa-299">이 <see cref="T:System.Data.OleDb.OleDbConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-299">Returns schema information for the data source of this <see cref="T:System.Data.OleDb.OleDbConnection" />.</span></span></summary>
        <returns><span data-ttu-id="ac0fa-300">스키마 정보를 포함하는 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-300">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName"><span data-ttu-id="ac0fa-301">반환할 스키마의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-301">Specifies the name of the schema to return.</span></span></param>
        <summary><span data-ttu-id="ac0fa-302">스키마 이름에 대해 지정된 문자열을 사용하여 이 <see cref="T:System.Data.OleDb.OleDbConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-302">Returns schema information for the data source of this <see cref="T:System.Data.OleDb.OleDbConnection" /> using the specified string for the schema name.</span></span></summary>
        <returns><span data-ttu-id="ac0fa-303">스키마 정보를 포함하는 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-303">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-304">때 `collectionName` null로 지정 된 <xref:System.Data.DataTable> 를 사용할 수 있는 모든 메타 데이터 및 해당 제한 사항에 대 한 정보가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-304">When `collectionName` is specified as null, the <xref:System.Data.DataTable> will contain information about all the metadata that is available, and its restrictions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName"><span data-ttu-id="ac0fa-305">반환할 스키마의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-305">Specifies the name of the schema to return.</span></span></param>
        <param name="restrictionValues"><span data-ttu-id="ac0fa-306">요청된 스키마에 대한 제한 값의 집합을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-306">Specifies a set of restriction values for the requested schema.</span></span></param>
        <summary><span data-ttu-id="ac0fa-307">스키마 이름에 대해 지정된 문자열과 제한 값에 대해 지정된 문자열 배열을 사용하여 이 <see cref="T:System.Data.OleDb.OleDbConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-307">Returns schema information for the data source of this <see cref="T:System.Data.OleDb.OleDbConnection" /> using the specified string for the schema name and the specified string array for the restriction values.</span></span></summary>
        <returns><span data-ttu-id="ac0fa-308">스키마 정보를 포함하는 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-308">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-309">때 `collectionName` null로 지정 된 <xref:System.Data.DataTable> 를 사용할 수 있는 모든 메타 데이터 및 해당 제한 사항에 대 한 정보가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-309">When `collectionName` is specified as null, the <xref:System.Data.DataTable> will contain information about all the metadata that is available, and its restrictions.</span></span>  
  
 <span data-ttu-id="ac0fa-310">`restrictionValues` 매개 변수 제공 *n* 수준의 특정 컬렉션에 대 한 제한 컬렉션에서 지정 된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-310">The `restrictionValues` parameter can supply *n* depth of values which are specified by the restrictions collection for a specific collection.</span></span> <span data-ttu-id="ac0fa-311">특정된 제한에 값을 설정 하 고 다른 제한 값을 설정 하지 않으려면, 앞의 제한을 null 하 고 다음 값을 지정 하려면 원하는 제한에 적절 한 값을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-311">In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.</span></span>  
  
 <span data-ttu-id="ac0fa-312">이 예는 "Table" 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-312">An example of this is the "Tables" collection.</span></span> <span data-ttu-id="ac0fa-313">다음과 같은 값 (최소한) 전달 해야는 "Table" 컬렉션에 세 가지 제한 (데이터베이스, 소유자 및 테이블 이름), "칼" 소유자와 연결 된 테이블에만 다시 확보 하려는 경우: null, "칼"입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-313">If the "Tables" collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner "Carl," you must pass in the following values (at a minimum): null, "Carl".</span></span> <span data-ttu-id="ac0fa-314">에 제한 값이 전달 되지 않으면, 기본 값은 해당 제한에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-314">If a restriction value is not passed in, the default values are used for that restriction.</span></span> <span data-ttu-id="ac0fa-315">이 null 전달 하는 대로 동일한 매핑을 매개 변수 값에 대 한 빈 문자열을 전달과에서는 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-315">This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value.</span></span> <span data-ttu-id="ac0fa-316">그러면 빈 문자열 ("")의 지정된 된 매개 변수 값으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-316">In that case, the empty string ("") is considered to be the value for the specified parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OleDbInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbInfoMessageEventHandler ^ InfoMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac0fa-317">공급자가 경고나 정보 메시지를 보내면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-317">Occurs when the provider sends a warning or an informational message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-318">서버에서 보낸 정보 메시지를 처리 하는 클라이언트를 만들어야는 <xref:System.Data.OleDb.OleDbInfoMessageEventHandler> 이 이벤트를 수신 하는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-318">Clients that want to process warnings or informational messages sent by the server should create an <xref:System.Data.OleDb.OleDbInfoMessageEventHandler> delegate to listen to this event.</span></span>  
  
 <span data-ttu-id="ac0fa-319"><xref:System.Data.OleDb.OleDbConnection.InfoMessage> 이벤트 심각도가 낮은 메시지가 데이터 소스에서 반환 될 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-319">The <xref:System.Data.OleDb.OleDbConnection.InfoMessage> event occurs when a message with low severity is returned from the data source.</span></span> <span data-ttu-id="ac0fa-320">심각도 낮은 메시지는 예외가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-320">Low severity messages are those that do not cause an exception.</span></span> <span data-ttu-id="ac0fa-321">Microsoft SQL Server에 대 한 여기에 심각도 10 이하인 오류 메시지</span><span class="sxs-lookup"><span data-stu-id="ac0fa-321">For Microsoft SQL Server, this includes error messages that have a severity of 10 or less</span></span>  
  
 <span data-ttu-id="ac0fa-322">자세한 내용 및 예제에 대 한 참조 [연결 이벤트](~/docs/framework/data/adonet/connection-events.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-322">For more information and an example, see [Connection Events](~/docs/framework/data/adonet/connection-events.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac0fa-323"><see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />로 지정된 속성 설정을 사용하여 데이터베이스 연결을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-323">Opens a database connection with the property settings specified by the <see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-324"><xref:System.Data.OleDb.OleDbConnection> 사용 가능한 경우 연결 풀에서 열려 있는 연결을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-324">The <xref:System.Data.OleDb.OleDbConnection> draws an open connection from the connection pool if one is available.</span></span> <span data-ttu-id="ac0fa-325">그렇지 않으면 데이터 원본에 새 연결을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-325">Otherwise, it establishes a new connection to the data source.</span></span> <span data-ttu-id="ac0fa-326">단일 둘 이상의 DataReader를 열 수 <xref:System.Data.OleDb.OleDbConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-326">You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>.</span></span> <span data-ttu-id="ac0fa-327">사용 하는 OLEDB 공급자는 단일 연결에서 둘 이상의 활성 DataReader를 지원 하지 않으면, OLEDB 공급자 각각에 대 한 추가 연결을 암시적으로 엽니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-327">If the OLEDB provider you use does not support more than one active DataReader on a single connection, the OLEDB provider implicitly opens an additional connection for each.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac0fa-328">경우는 <xref:System.Data.OleDb.OleDbConnection> 늘어나고의 범위를 닫혀 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-328">If the <xref:System.Data.OleDb.OleDbConnection> goes out of scope, it is not closed.</span></span> <span data-ttu-id="ac0fa-329">따라서 명시적으로 닫아야 연결 호출 하 여 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 또는 **Dispose**, 내에서 연결을 사용 하 여 또는 `Using` 문.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-329">Therefore, you must explicitly close the connection by calling <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose**, or using the connection within a `Using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ac0fa-330">연결이 이미 열려 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-330">The connection is already open.</span></span></exception>
        <exception cref="T:System.Data.OleDb.OleDbException"><span data-ttu-id="ac0fa-331">연결을 여는 동안 발생한 연결 수준 오류입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-331">A connection-level error occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac0fa-332">연결 문자열의 "Provider= " 절에 지정된 OLE DB 공급자 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-332">Gets the name of the OLE DB provider specified in the "Provider= " clause of the connection string.</span></span></summary>
        <value><span data-ttu-id="ac0fa-333">연결 문자열의 "Provider= " 절에 지정된 공급자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-333">The name of the provider as specified in the "Provider= " clause of the connection string.</span></span> <span data-ttu-id="ac0fa-334">기본값은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-334">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ac0fa-335">다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 고 읽기 전용 속성 중 일부를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-335">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseObjectPool">
      <MemberSignature Language="C#" Value="public static void ReleaseObjectPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseObjectPool() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ReleaseObjectPool" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseObjectPool ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseObjectPool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac0fa-336">마지막 기본 연결이 해제될 때 <see cref="T:System.Data.OleDb.OleDbConnection" /> 개체 풀이 해제될 수 있음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-336">Indicates that the <see cref="T:System.Data.OleDb.OleDbConnection" /> object pool can be released when the last underlying connection is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-337">`ReleaseObjectPool` 풀링된 용 예약 될 리소스를 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-337">`ReleaseObjectPool` can be called to free resources that would otherwise be reserved for pooled <xref:System.Data.OleDb.OleDbConnection> objects.</span></span> <span data-ttu-id="ac0fa-338">연결 개체가 OLE DB 서비스 일반적으로 풀링된 연결을 활성 상태로 유지 된 시간 동안 다시 사용 하지 않는 예를 들어 경우이 메서드를 호출 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-338">You might want to call this method if, for example, the connection object will not be used again for the amount of time that OLE DB services ordinarily keeps pooled connections active.</span></span> <span data-ttu-id="ac0fa-339">참고 메서드만 호출 활성 연결 풀에 존재 하는 실제로 해제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-339">Note that calling the method alone does not actually release the active connections that exist in the pool.</span></span>  
  
 <span data-ttu-id="ac0fa-340">풀을 마지막으로 삭제 하기 전에 다음이 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-340">The following must occur before the pool is finally disposed:</span></span>  
  
1.  <span data-ttu-id="ac0fa-341">호출 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 를 풀에 연결 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-341">Call <xref:System.Data.OleDb.OleDbConnection.Close%2A> to return the connection object to the pool.</span></span>  
  
2.  <span data-ttu-id="ac0fa-342">시간 제한 초과 풀의 각 연결 개체를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-342">Allow each connection object to time out of the pool.</span></span>  
  
3.  <span data-ttu-id="ac0fa-343"><xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-343">Call <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>.</span></span>  
  
4.  <span data-ttu-id="ac0fa-344">가비지 수집을 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-344">Invoke garbage collection.</span></span>  
  
 <span data-ttu-id="ac0fa-345">반대로, 호출 하는 경우 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 모든 활성 연결에서 및 가비지 수집을 호출 하지만 호출 하지 않으면 <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>, 풀링된 개체는 계속 사용할 수에 대 한 예약 된 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-345">Conversely, if you call <xref:System.Data.OleDb.OleDbConnection.Close%2A> on all active connections, and invoke garbage collection, but do not call <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>, the resources reserved for the pooled objects will remain available.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac0fa-346">다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection>, 열, 속성 중 일부를 표시, 연결을 닫고 해제 개체 풀 리소스를 절약 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-346">The following example creates an <xref:System.Data.OleDb.OleDbConnection>, opens it, displays some of its properties, closes the connection, and releases the object pool to conserve resources.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetState">
      <MemberSignature Language="C#" Value="public void ResetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ResetState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac0fa-347"><see cref="P:System.Data.OleDb.OleDbConnection.State" /> 개체의 <see cref="T:System.Data.OleDb.OleDbConnection" /> 속성을 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-347">Updates the <see cref="P:System.Data.OleDb.OleDbConnection.State" /> property of the <see cref="T:System.Data.OleDb.OleDbConnection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-348">일부 OLE DB 공급자는 연결의 현재 상태를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-348">Some OLE DB providers can check the current state of the connection.</span></span> <span data-ttu-id="ac0fa-349">예를 들어 데이터베이스 서버가 이후 재생 된 경우 열린 프로그램 <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbConnection.State%2A> 반환할 속성은 계속 `Open`합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-349">For example, if the database server has recycled since you opened your <xref:System.Data.OleDb.OleDbConnection>, the <xref:System.Data.OleDb.OleDbConnection.State%2A> property will continue to return `Open`.</span></span> <span data-ttu-id="ac0fa-350">호출 하는 OLE DB Provider는 라이브 연결에서이 정보에 대 한 폴링 지원을 사용 하는 경우는 <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> 메서드와 다음 검사는 <xref:System.Data.OleDb.OleDbConnection.State%2A> 속성 알려 연결이 열릴 더 이상.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-350">If you are working with an OLE DB Provider that supports polling for this information on a live connection, calling the <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> method and then checking the <xref:System.Data.OleDb.OleDbConnection.State%2A> property will tell you that the connection is no longer open.</span></span> <span data-ttu-id="ac0fa-351"><xref:System.Data.OleDb.OleDbConnection.ResetState%2A> 방법은 OLE DB 공급자에서 연결의 현재 상태를 확인 하는 기능에 의존 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-351">The <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> method relies on functionality in the OLE DB Provider to verify the current state of the connection.</span></span> <span data-ttu-id="ac0fa-352">OLE DB 공급자가이 기능을 지 원하는 경우를 확인 하려면 DBPROP_CONNECTIONSTATUS 대 한 자세한 내용은 공급자 설명서를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-352">To determine if your OLE DB Provider supports this functionality, check the provider's documentation for information on DBPROP_CONNECTIONSTATUS.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac0fa-353">클라이언트가 연결되는 서버 버전을 포함하는 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-353">Gets a string that contains the version of the server to which the client is connected.</span></span></summary>
        <value><span data-ttu-id="ac0fa-354">연결된 서버의 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-354">The version of the connected server.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-355"><xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> 속성 OLE DB dbprop_dbmsver와 같습니다 속성에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-355">The <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> property maps to the OLE DB DBPROP_DBMSVER property.</span></span> <span data-ttu-id="ac0fa-356">경우 <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> 지원 되지 않습니다 기본 OLE DB 공급자가 빈 문자열이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-356">If <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> is not supported by the underlying OLE DB provider, an empty string is returned.</span></span>  
  
 <span data-ttu-id="ac0fa-357">폼의 버전은 *# #. # #. # # #*, 여기서 처음 두 자리는 주 버전, 다음 두 자리는 부 버전 및 마지막 4 자리는 릴리스 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-357">The version is of the form *##.##.####*, where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version.</span></span> <span data-ttu-id="ac0fa-358">공급자는 제품 버전을이 형식으로 렌더링 해야 하지만 제품 관련 버전을 추가할 수도 있습니다-예를 들어 "04.01.0000 4.1 Rdb"입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-358">The provider must render the product version in this form but can also append the product-specific version—for example, "04.01.0000 Rdb 4.1".</span></span> <span data-ttu-id="ac0fa-359">폼의 문자열은 *major.minor.build*여기서 주 및 부는 정확히 두 자리로 관리 빌드 정확히 네 자리로 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-359">The string is of the form *major.minor.build*, where major and minor are exactly two digits and build is exactly four digits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac0fa-360">다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 고 읽기 전용 속성 중 일부를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-360">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ac0fa-361">연결이 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="ac0fa-361">The connection is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac0fa-362">연결의 현재 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-362">Gets the current state of the connection.</span></span></summary>
        <value><span data-ttu-id="ac0fa-363"><see cref="T:System.Data.ConnectionState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-363">A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values.</span></span> <span data-ttu-id="ac0fa-364">기본값은 Closed입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-364">The default is Closed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-365">다음은 상태 변경은 허용:</span><span class="sxs-lookup"><span data-stu-id="ac0fa-365">The following are allowed state changes:</span></span>  
  
-   <span data-ttu-id="ac0fa-366">`Closed` 를 `Open`를 사용 하 여는 <xref:System.Data.OleDb.OleDbConnection.Open%2A> 의 메서드는 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-366">From `Closed` to `Open`, using the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method of the <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
-   <span data-ttu-id="ac0fa-367">`Open` 를 `Closed`, 하나를 사용 하는 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 메서드 또는 **Dispose** 의 메서드는 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-367">From `Open` to `Closed`, using either the <xref:System.Data.OleDb.OleDbConnection.Close%2A> method or the **Dispose** method of the <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac0fa-368">이전 버전의.NET Framework에서 호출 된 <xref:System.Data.OleDb.OleDbConnection.State%2A> 속성 각 호출에 대해 열린 연결에 대 한 OLE DB DBPROP_CONNECTIONSTATUS 속성에 대 한 호출을 발생 하기 때문에 응용 프로그램 오버 헤드가 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-368">In previous version of the .NET Framework, calling the <xref:System.Data.OleDb.OleDbConnection.State%2A> property increased application overhead because each call caused a call to the OLE DB DBPROP_CONNECTIONSTATUS property for an open connection.</span></span> <span data-ttu-id="ac0fa-369">.NET Framework 2.0 부터는 더 이상는 문제입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-369">With the release of the .NET Framework 2.0, this is no longer an issue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac0fa-370">이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-370">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="ac0fa-371">이 인스턴스의 복사본인 새 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-371">A new <see cref="T:System.Object" /> that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac0fa-372">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="ac0fa-372">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ac0fa-373"><xref:System.Data.OleDb.OleDbConnection> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ac0fa-373">It can be used only when the <xref:System.Data.OleDb.OleDbConnection> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>