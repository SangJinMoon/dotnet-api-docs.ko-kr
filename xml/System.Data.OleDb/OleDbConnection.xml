<Type Name="OleDbConnection" FullName="System.Data.OleDb.OleDbConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b802cc1a9b4877005b91b1d9770aa1885b696e12" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452280" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>데이터 소스에 대해 열려 있는 연결을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection> 개체 데이터 소스에 대 한 고유 연결을 나타냅니다. 클라이언트/서버 데이터베이스 시스템 이므로 네트워크 연결 서버에 해당 합니다. 네이티브 OLE DB 공급자, 일부 메서드 또는 속성에서 지 원하는 기능에 따라 프로그램 <xref:System.Data.OleDb.OleDbConnection> 개체를 사용할 수 없습니다.  
  
 인스턴스를 만들 때 <xref:System.Data.OleDb.OleDbConnection>, 모든 속성은 초기 값으로 설정 됩니다. 이러한 값의 목록에 대 한 참조는 <xref:System.Data.OleDb.OleDbConnection> 생성자입니다.  
  
 단일 둘 이상의 DataReader를 열 수 <xref:System.Data.OleDb.OleDbConnection>합니다. 사용 하는 OLE DB 공급자는 단일 연결에서 둘 이상의 DataReader를 지원 하지 않으면, 공급자 각각에 대 한 추가 연결을 암시적으로 엽니다.  
  
 경우는 <xref:System.Data.OleDb.OleDbConnection> 늘어나고의 범위를 닫혀 있지 않습니다. 따라서 명시적으로 닫아야 연결 호출 하 여 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 또는 **Dispose**, 또는 사용 하 여는 <xref:System.Data.OleDb.OleDbConnection> 내에서 개체는 `Using` 문.  
  
> [!NOTE]
>  고성능 응용 프로그램을 배포 하려면 연결 풀링을 사용 해야 합니다. .NET Framework Data Provider for OLE DB를 사용 하면 공급자 자동으로이 관리 하기 때문에 연결 풀링을 사용할 필요가 없습니다. 연결을 사용 하는 방법에 대 한 자세한 내용은 참조 OLE DB에 대 한.NET Framework Data Provider를 사용 하 여 풀링 [OLE DB, ODBC 및 Oracle 연결 풀링](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md)합니다.  
  
 심각한 <xref:System.Data.OleDb.OleDbException> (예: SQL Server 심각도 수준이 20 이상인 경우)에서 실행 하는 메서드에서 생성 되는 <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbConnection> 닫혔을 수 있습니다. 그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.  
  
 인스턴스를 생성 하는 응용 프로그램은 <xref:System.Data.OleDb.OleDbConnection> 개체 모든 직접 및 간접 호출자가 선언적 이거나 명령 보안 요청을 설정 하 여 코드에 충분 한 권한을 갖도록 요구할 수 있습니다. <xref:System.Data.OleDb.OleDbConnection> 보안 요청을 사용 하 여 <xref:System.Data.OleDb.OleDbPermission> 개체입니다. 사용자가 해당 코드를 사용 하 여 충분 한 권한이 있는지 확인할 수는 <xref:System.Data.OleDb.OleDbPermissionAttribute> 개체입니다. 사용자와 관리자에도 사용할 수는 [Caspol.exe (코드 액세스 보안 정책 도구)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) 컴퓨터, 사용자 및 엔터프라이즈 수준에서 보안 정책을 수정할 수 있습니다. 자세한 내용은 [코드 액세스 보안 및 ADO.NET](~/docs/framework/data/adonet/code-access-security.md)을 참조하세요.  
  
 데이터 서버에서 경고 및 정보 메시지를 처리 하는 방법에 대 한 자세한 내용은 참조 [연결 이벤트](~/docs/framework/data/adonet/connection-events.md)합니다.  
  
> [!NOTE]
>  <xref:System.Data.OleDb.OleDbConnection> 개체가 설정 또는 OLE DB 공급자와 관련 된 동적 속성 검색을 지원 하지 않습니다. OLE DB 공급자의 연결 문자열에 전달할 수 있는 속성만 지원됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbCommand> 및 <xref:System.Data.OleDb.OleDbConnection>합니다. <xref:System.Data.OleDb.OleDbConnection> 열리고으로 설정 된 <xref:System.Data.OleDb.OleDbCommand.Connection%2A> 에 대 한는 <xref:System.Data.OleDb.OleDbCommand>합니다. 이 예에서는 다음 호출 <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> 연결을 닫습니다. 이를 위해 <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> 연결 문자열과 쿼리 문자열은 SQL INSERT 문을 전달 됩니다.  
  
 [!code-csharp[Classic WebData OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.OleDb.OleDbConnection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.OleDb.OleDbConnection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스가 <xref:System.Data.OleDb.OleDbConnection> 만들어지면 읽기/쓰기 속성의 관련된 키워드를 사용 하 여 구체적으로 설정 되어 있지 않으면 다음 초기 값으로 설정 됩니다는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 속성입니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|빈 문자열 ("")|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|빈 문자열 ("")|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|빈 문자열 ("")|  
  
 사용 하 여 이러한 속성에 대 한 값을 변경할 수는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Data.OleDb.OleDbConnection>합니다.  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">데이터베이스를 여는 데 사용하는 연결입니다.</param>
        <summary>지정된 연결 문자열을 사용하여 <see cref="T:System.Data.OleDb.OleDbConnection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스가 <xref:System.Data.OleDb.OleDbConnection> 만들어지면 읽기/쓰기 속성의 관련된 키워드를 사용 하 여 구체적으로 설정 되어 있지 않으면 다음 초기 값으로 설정 됩니다는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 속성입니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|빈 문자열 ("")|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|빈 문자열 ("")|  
  
 사용 하 여 이러한 속성에 대 한 값을 변경할 수는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Data.OleDb.OleDbConnection>합니다.  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터베이스 트랜잭션을 시작합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OleDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Data.IsolationLevel" /> 값을 사용하여 데이터베이스 트랜잭션을 시작합니다.</summary>
        <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명시적으로 커밋하거나 사용 하 여 트랜잭션을 롤백하는 <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> 또는 <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> 메서드. .NET Framework Data Provider for OLE DB 트랜잭션 관리 모델을 올바르게 수행 되었는지 확인, 데이터 원본에서 제공 하는 다른 트랜잭션 관리 모델을 사용 하지 마십시오.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 및 <xref:System.Data.OleDb.OleDbTransaction>합니다. 사용 하는 방법을 보여 줍니다는 <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, 및 <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> 메서드.  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">병렬 트랜잭션은 지원되지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">트랜잭션이 실행되어야 하는 격리 수준입니다.</param>
        <summary>지정된 격리 수준으로 데이터베이스 트랜잭션을 시작합니다.</summary>
        <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명시적으로 커밋하거나 사용 하 여 트랜잭션을 롤백하는 <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> 또는 <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> 메서드. .NET Framework Data Provider for OLE DB 트랜잭션 관리 모델을 올바르게 수행 되었는지 확인, 데이터 원본에서 제공 하는 다른 트랜잭션 관리 모델을 사용 하지 마십시오.  
  
> [!NOTE]
>  격리 수준을 지정 하지 않으면 기본 공급자에 대 한 기본 격리 수준이 사용 됩니다. 와 격리 수준을 지정 하는 <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> 메서드를 사용 하는 오버 로드를 사용 하 여는 `isolationLevel` 매개 변수.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 및 <xref:System.Data.OleDb.OleDbTransaction>합니다. 사용 하는 방법을 보여 줍니다는 <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, 및 <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> 메서드.  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">병렬 트랜잭션은 지원되지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">데이터베이스 이름.</param>
        <summary>열려 있는 <see cref="T:System.Data.OleDb.OleDbConnection" />의 현재 데이터베이스를 변경합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제공 된 값이 고 `database` 매개 변수는 올바른 데이터베이스 이름 이어야 합니다. `database` 매개 변수는 null 값, 빈 문자열 또는 공백 문자로 이루어진 문자열에 포함할 수 없습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 고 읽기 전용 속성 중 일부를 표시 합니다.  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#2)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">데이터베이스 이름이 올바르지 않은 경우</exception>
        <exception cref="T:System.InvalidOperationException">연결이 열려 있지 않습니다.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">데이터베이스를 변경할 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스에 대한 연결을 닫습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 메서드 보류 중인 트랜잭션을 모두 롤백합니다. 그런 다음 연결 풀에 대 한 연결을 해제 하거나 연결 풀링을 사용 하지 않도록 설정 하는 경우 연결을 닫습니다. 경우 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 처리 하는 동안 호출 되는 <xref:System.Data.Common.DbConnection.StateChange> 이벤트를 더 추가 <xref:System.Data.Common.DbConnection.StateChange> 이벤트가 발생 합니다.  
  
 응용 프로그램에서 호출할 수 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 한 번 이상. 예외가 생성 되지 않습니다.  
  
> [!CAUTION]
>  호출 하지 마십시오 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 또는 **Dispose** 에 <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbDataReader>, 또는 다른 관리 되는 개체에는 `Finalize` 클래스의 메서드로 합니다. 종료자에서만 클래스에 직접 속한 관리 되지 않는 리소스를 해제 해야 합니다. 클래스에 관리되지 않는 리소스가 없는 경우 클래스 정의에 `Finalize` 메서드를 포함하지 마세요. 자세한 내용은 참조 [가비지 수집](~/docs/standard/garbage-collection/index.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터베이스를 여는 데 사용되는 문자열을 가져오거나 설정합니다.</summary>
        <value>데이터 소스 이름과 초기 연결을 설정하는 데 필요한 기타 매개 변수를 포함하는 OLE DB 공급자 연결 문자열입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> OLE DB 연결 문자열 형식은 다음과 같은 예외가 최대한 비슷하게 일치 하도록 디자인 되었습니다.  
  
-   "Provider = `value` " 절이 필요 합니다. 그러나 사용할 수 없습니다 "Provider = MSDASQL".NET Framework Data Provider for OLE DB는 OLE DB Provider for ODBC (MSDASQL) 지원 하지 않으므로 합니다. ODBC 데이터 원본에 액세스 하려면 사용 된 <xref:System.Data.Odbc.OdbcConnection> 에 없는 개체는 <xref:System.Data.Odbc> 네임 스페이스입니다.  
  
-   반환 되는 연결 문자열은 사용자가 설정한 동일 ODBC 또는 ADO와 달리 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, 보안 정보에서 뺀 경우 `Persist Security Info` 로 설정 된 `false` (기본값). .NET Framework Data Provider for OLE DB를 유지 하지 않거나 설정 하지 않으면 연결 문자열에 암호를 반환 된 `Persist Security Info` 키워드를 `true` (권장 하지 않음). 높은 수준의 보안을 유지 하려면 하는 것이 좋습니다를 사용 하는 `Integrated Security` 키워드와 `Persist Security Info` 로 설정 `false`합니다.  
  
 사용할 수는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 다양 한 데이터 원본에 연결 하는 속성입니다. 다음 예제에서는 몇 가지 가능한 연결 문자열을 보여 줍니다.  
  
```  
"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes"  
  
"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\bin\LocalAccess40.mdb"  
  
"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI"  
```  
  
 경우는 `Data Source` 키워드는 연결 문자열에 지정 하지 않으면, 공급자는 사용 가능한 경우 로컬 서버에 연결 하려고 합니다.  
  
 연결 문자열에 대 한 자세한 내용은 참조 [Connection String Keywords with SQL Server Native Client를 사용 하 여](http://go.microsoft.com/fwlink/?LinkId=126696)합니다.  
  
 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 연결이 닫힌 경우에 속성을 설정할 수 있습니다. 연결 문자열 값의 대부분에 해당 읽기 전용 속성입니다. 연결 문자열 설정 되 면 오류가 검색 될 경우를 제외 하 고 이러한 속성 업데이트 됩니다. 이 경우 어떤 속성도 업데이트 됩니다. <xref:System.Data.OleDb.OleDbConnection> 속성에 포함 된 설정만 반환는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>합니다.  
  
 다시 설정 하 여 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 닫힌된 연결에서 모든 연결 문자열 값 및 관련된 속성을 기본값으로 다시 설정 합니다. 여기에 암호가 포함 됩니다. 예를 들어, 포함 된 연결 문자열을 설정 하는 경우 "Initial Catalog = AdventureWorks", 다음 연결 문자열을 다시 설정 하 고 "공급자 = SQLOLEDB; 데이터 원본 MySQLServer; = IntegratedSecurity = SSPI", <xref:System.Data.OleDb.OleDbConnection.Database%2A> 더 이상 속성 AdventureWorks 합니다. (연결 문자열의 초기 카탈로그 값에 해당 하는 `Database` 속성입니다.)  
  
 연결 문자열의 사전 유효성 검사 속성을 설정 하는 경우 수행 됩니다. 경우에 대 한 값의 `Provider`, `Connect Timeout`, `Persist Security Info`, 또는 `OLE DB Services` 포함 된 문자열에서 이러한 값은 검사 합니다. 응용 프로그램 호출 하는 경우는 <xref:System.Data.OleDb.OleDbConnection.Open%2A> 메서드를 연결 문자열 완벽 하 게 유효성을 검사 합니다. 연결 문자열에 잘못 되었거나 지원 되지 않는 속성을 런타임에 예외와 같은 경우 <xref:System.ArgumentException>, 생성 됩니다.  
  
> [!CAUTION]
>  에 대 한 연결 정보를 제공할 수는 <xref:System.Data.OleDb.OleDbConnection> 유니버설 데이터 링크 (UDL) 파일입니다; 그러나 있습니다 이렇게 해서는 안 됩니다. UDL 파일은 암호화 되지 않습니다 및 일반 텍스트로 연결 문자열 정보를 노출 합니다. UDL 파일은 응용 프로그램에 대해 외부 파일 기반 리소스이므로 .NET Framework를 사용하여 보호할 수 없습니다.  
  
 연결 문자열의 기본 형식은 일련의 세미콜론으로 구분 하는 키워드/값 쌍을 포함 합니다. 각 키워드와 해당 값은 등호(=)로 연결됩니다. 세미콜론, 작은따옴표 문자 또는 큰따옴표를 포함 하는 값에 포함 하려면 값을 큰따옴표로 묶어야 합니다. 세미콜론과 큰따옴표 문자를 모두 포함 된 값을 작은따옴표로 값을 묶을 수 있습니다. 작은따옴표 값 큰따옴표 문자로 시작 하는 경우 도움이 됩니다. 반대로 값 시작 작은따옴표와 큰따옴표를 사용할 수 있습니다. 작은따옴표 및 큰따옴표 문자를 모두 포함 된 값, 값을 포함 하는 데 사용 하는 인용 부호 문자 값 내에서 발생할 때마다 배가 되어야 합니다.  
  
 문자열 값에 선행 또는 후행 공백을 포함 하려면 값 작은따옴표 또는 큰따옴표로 묶어야 합니다. 따옴표에 포함 하는 경우에 정수, 부울 또는 열거 값 주위 선행 또는 후행 공백은 모두 무시 됩니다. 그러나 문자열 리터럴 키워드 또는 값 내에 공백이 유지 됩니다. 구분 기호를 사용 하지 않고 연결 문자열에서 작은따옴표 또는 큰따옴표를 사용할 수 있습니다 (예를 들어 `Data Source= my'Server` 또는 `Data Source= my"Server`)는 따옴표 문자 값의 첫 번째 또는 마지막 문자는 하지 않는 한 합니다.  
  
 키워드 또는 값에는 등호 (=)를 포함 하려면 앞에 다른 등호 합니다. 예를 들어 가상의 연결 문자열에  
  
```  
"key==word=value"  
```  
  
 이 키워드는 "키 단어 ="이 고 값이 "value"입니다.  
  
 키워드의 특정 키워드 경우 = 값 쌍 여러 번 연결 문자열에서 마지막으로 발견 된 값 집합에서 사용 됩니다.  
  
 키워드는 대/소문자 구분 하지 않습니다.  
  
> [!CAUTION]
>  연결 문자열에 추가 하는 대화 상자에서 사용자 ID와 암호 정보를 검색할 때 사용자 입력에 따라 연결 문자열을 구성할 때 주의 해야 합니다. 응용 프로그램에 사용자 포함할 수 없습니다 추가 연결 문자열 매개 변수에서 이러한 값을 예를 들어로 암호를 입력 했는지 확인 해야 "에서는 데이터베이스 수 없도록" 다른 데이터베이스에 연결 하려고 합니다. OLE DB 연결에 대 한 확장 속성 연결 문자열 매개 변수를 사용 하는 경우 사용자 Id와 암호 수 있는 경우에 일반 텍스트로 저장 하지 않아야 하 고 하므로 사용자 Id와 암호를 전달 하지 마십시오의 기본 설정은 `Persist Security Info= false` 하지 않습니다 영향을 줄의 `Extended Properties` 매개 변수입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 연결 문자열에 해당 속성 중 일부를 가져오거나 설정 합니다.  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">유효하지 않은 연결 문자열 인수가 제공되었거나 필요한 연결 문자열 인수가 제공되지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시도를 종료하고 오류를 생성하기 전에 연결하는 동안 대기할 시간을 가져옵니다.</summary>
        <value>연결이 열릴 때까지 대기하는 시간(초)입니다. 기본값은 15초입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값 0은 제한 없음을 나타냄에 피해 야 합니다.는 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 하므로 연결 시도 무기한 대기 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 연결 문자열에 해당 속성 중 일부를 가져오거나 설정 합니다.  
  
 [!code-csharp[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">설정한 값이 0보다 작은 경우</exception>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.OleDb.OleDbCommand" />과 관련된 <see cref="T:System.Data.OleDb.OleDbConnection" /> 개체를 만들거나 반환합니다.</summary>
        <returns>
          <see cref="T:System.Data.OleDb.OleDbCommand" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름을 가져옵니다.</summary>
        <value>현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection.Database%2A> 속성을 동적으로 업데이트 합니다. SQL 문을 사용 하 여 현재 데이터베이스를 변경 하면 또는 <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> 정보 메시지가 전송 되는 메서드와 속성을 자동으로 업데이트 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 고 읽기 전용 속성 중 일부를 표시 합니다.  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스의 파일 이름 또는 서버 이름을 가져옵니다.</summary>
        <value>데이터 소스의 파일 이름 또는 서버 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터베이스에 대 한 연결이 닫힐 경우는 `DataSource` 속성 값을 반환에 `ConnectionString` 데이터 소스 키워드에 대 한 합니다. 연결이 열려 있는 경우와 `ConnectionString` 데이터 소스 키워드 값으로 시작 "&#124;datadirectory&#124;", 속성 값을 반환에 `ConnectionString` 데이터 소스 키워드입니다. 속성에 대 한 네이티브 공급자 반환 반환 하는 데이터베이스 연결이 열려 있으면는 `DBPROP_INIT_DATASOURCE,` 비어 있는 경우 네이티브 공급자 `DBPROP_DATASOURCENAME` 반환 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 고 읽기 전용 속성 중 일부를 표시 합니다.  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">등록할 기존 <see cref="T:System.EnterpriseServices.ITransaction" />에 대한 참조입니다.</param>
        <summary>지정된 트랜잭션에 분산 트랜잭션으로 참여합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 ADO.NET 2.0에서 지원은 사용에 대 한는 <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> 메서드를 분산된 트랜잭션에 참여 합니다. 연결을 참여 하기 때문에 <xref:System.Transactions.Transaction> 인스턴스에 **EnlistTransaction** 에서 사용할 수 있는 기능을 활용는 <xref:System.Transactions> 분산 트랜잭션에서, 보다선호하는네임스페이스를관리하기위한** 참여가** 이 목적을 위해 합니다. 자세한 내용은 참조 [분산 트랜잭션](~/docs/framework/data/adonet/distributed-transactions.md)합니다.  
  
 계속 사용 하 여 기존 분산된 트랜잭션에 참여할 수 있습니다는 <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> 메서드 자동 인 리스트 먼 트를 사용 하지 않도록 설정 합니다. 기존 분산된 트랜잭션에 인 리스트 먼 트 하면 즉, 트랜잭션이 커밋되거나 롤백될 경우 데이터 소스에서 코드에 의해 수정 된도 트랜잭션이 커밋 또는 롤백됨. 분산된 트랜잭션에 대 한 자세한 내용은 참조 [분산 트랜잭션을](~/docs/framework/data/adonet/distributed-transactions.md)합니다.  
  
 <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> 경우 예외를 반환 된 <xref:System.Data.OleDb.OleDbConnection> 이미 사용 하 여 트랜잭션을 시작 <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>합니다. 그러나 트랜잭션이 데이터 소스에서 시작 된 로컬 트랜잭션 인지 (명시적으로 사용 하 여 BEGIN TRANSACTION 문을 실행 하는 예를 들어 여는 <xref:System.Data.OleDb.OleDbCommand> 개체), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> 로컬 트랜잭션을 롤백하고 기존 트랜잭션에 참여 분산된 트랜잭션 요청한으로 합니다. 로컬 트랜잭션이 롤백 되었습니다을 사용 하 여 시작 되지 않는 모든 로컬 트랜잭션을 관리 해야 알림과 <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">등록할 기존 <see cref="T:System.Transactions.Transaction" />에 대한 참조입니다.</param>
        <summary>지정된 트랜잭션에 분산 트랜잭션으로 참여합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 ADO.NET 2.0에서 지원은 사용에 대 한는 <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> 메서드를 분산된 트랜잭션에 참여 합니다. 연결을 참여 하기 때문에 <xref:System.Transactions.Transaction> 인스턴스에 **EnlistTransaction** 에서 사용할 수 있는 기능을 활용는 <xref:System.Transactions> 분산 트랜잭션에서, 보다선호하는네임스페이스를관리하기위한** 참여가**를 사용 하는 <xref:System.EnterpriseServices.ITransaction> 개체입니다. 역시 약간 다른 의미 체계: 트랜잭션에 연결을 명시적으로 등록 된, 등록 취소 하거나 수 첫 번째 트랜잭션이 완료 될 때까지 다른 트랜잭션에 참여 합니다. 분산된 트랜잭션에 대 한 자세한 내용은 참조 [분산 트랜잭션을](~/docs/framework/data/adonet/distributed-transactions.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOleDbSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetOleDbSchemaTable(valuetype System.Guid schema, object[] restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOleDbSchemaTable (schema As Guid, restrictions As Object()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetOleDbSchemaTable(Guid schema, cli::array &lt;System::Object ^&gt; ^ restrictions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Guid" />
        <Parameter Name="restrictions" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="schema">반환할 스키마 테이블을 지정하는 <see cref="T:System.Data.OleDb.OleDbSchemaGuid" /> 값 중 하나입니다.</param>
        <param name="restrictions">제한 값의 <see cref="T:System.Object" /> 배열입니다. 이 값은 제한 열의 순서에 적용됩니다. 첫 번째 제한 값은 첫 번째 제한 열에 적용되고, 두 번째 제한 값은 두 번째 제한 열에 적용됩니다.</param>
        <summary>GUID에 의해 지정된 대로, 지정된 제한을 적용한 후 데이터 소스로부터 스키마 정보를 반환합니다.</summary>
        <returns>요청한 스키마 정보가 포함된 <see cref="T:System.Data.DataTable" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스키마 테이블으로 반환 됩니다는 <xref:System.Data.DataTable> 있는 동일한 형식으로 지정 된 OLE DB 스키마 행 집합으로는 `schema` 매개 변수입니다. 사용 하 여는 `restrictions` 에 반환 될 행을 필터링 하려면 매개 변수는 <xref:System.Data.DataTable> (예를 들어 지정 하 여 테이블 이름, 형식, 소유자 또는 스키마에 대 한 제한). 배열에 값을 전달 하는 경우에 빈 문자열이 나 null 값을 포함 하지 않는 배열 요소에 대 한 포함 합니다. 에 빈 배열을 전달 하는 경우 `restrictions`, (각 테이블 마다 하나씩)는 모든 행이 기본 순서로 반환 됩니다. 배열의 값은 원본 테이블의 열 순서와 일치 하 고 <xref:System.Data.DataTable>합니다. 제한 배열의 각 요소는 스키마 행 집합의 해당 열의 내용을 비교 합니다. 예를 들어 제한 배열의 첫 번째 요소는 행 집합의 첫 번째 열과 비교 됩니다. 제한 요소는 null이 아니면 하는 경우에 행만 스키마 행 집합에서 제한의 값과 정확히 일치 하는 결과에 추가 됩니다 <xref:System.Data.DataTable>합니다.  
  
 <xref:System.Data.OleDb.OleDbConnection> 메서드를 호출 하는 기본 OLE DB **idbschemarowset:: Getrowset** 표준 공용 언어 런타임 변환 규칙을 사용 하는 방법입니다. 자세한 내용은 참조 [COM 데이터 형식](http://msdn.microsoft.com/library/f93ae35d-a416-4218-8700-c8218cc90061)합니다.  
  
 사용 하 여 리터럴에 대 한 정보를 검색할 수 <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>합니다. OLE DB 호출에 해당 정보를 제공 **IDBInfo::GetLiteralInfo** 인터페이스 또는 ADO **Connection.OpenSchema** 메서드는 `adSchemaDBInfoLiterals` 상수입니다.  
  
   
  
## Examples  
 다음 샘플 데이터베이스의 테이블 목록을 반환합니다.  
  
 [!code-csharp[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OleDb.OleDbException">지정된 제한 집합이 유효하지 않은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.OleDb.OleDbConnection" />가 닫힌 경우</exception>
        <exception cref="T:System.ArgumentException">OLE DB 공급자가 지정된 스키마 행 집합을 지원하지 않는 경우  -또는-  <paramref name="schema" /> 매개 변수에 <see cref="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals" /> 값이 포함되며 <paramref name="restrictions" /> 매개 변수에 하나 이상의 제한이 포함되었습니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Data.OleDb.OleDbConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Data.OleDb.OleDbConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</summary>
        <returns>스키마 정보를 포함하는 <see cref="T:System.Data.DataTable" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">반환할 스키마의 이름을 지정합니다.</param>
        <summary>스키마 이름에 대해 지정된 문자열을 사용하여 이 <see cref="T:System.Data.OleDb.OleDbConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</summary>
        <returns>스키마 정보를 포함하는 <see cref="T:System.Data.DataTable" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 `collectionName` null로 지정 된 <xref:System.Data.DataTable> 를 사용할 수 있는 모든 메타 데이터 및 해당 제한 사항에 대 한 정보가 포함 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">반환할 스키마의 이름을 지정합니다.</param>
        <param name="restrictionValues">요청된 스키마에 대한 제한 값의 집합을 지정합니다.</param>
        <summary>스키마 이름에 대해 지정된 문자열과 제한 값에 대해 지정된 문자열 배열을 사용하여 이 <see cref="T:System.Data.OleDb.OleDbConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</summary>
        <returns>스키마 정보를 포함하는 <see cref="T:System.Data.DataTable" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 `collectionName` null로 지정 된 <xref:System.Data.DataTable> 를 사용할 수 있는 모든 메타 데이터 및 해당 제한 사항에 대 한 정보가 포함 됩니다.  
  
 `restrictionValues` 매개 변수 제공 *n* 수준의 특정 컬렉션에 대 한 제한 컬렉션에서 지정 된 값입니다. 특정된 제한에 값을 설정 하 고 다른 제한 값을 설정 하지 않으려면, 앞의 제한을 null 하 고 다음 값을 지정 하려면 원하는 제한에 적절 한 값을 설정 해야 합니다.  
  
 이 예는 "Table" 컬렉션입니다. 다음과 같은 값 (최소한) 전달 해야는 "Table" 컬렉션에 세 가지 제한 (데이터베이스, 소유자 및 테이블 이름), "칼" 소유자와 연결 된 테이블에만 다시 확보 하려는 경우: null, "칼"입니다. 에 제한 값이 전달 되지 않으면, 기본 값은 해당 제한에 사용 됩니다. 이 null 전달 하는 대로 동일한 매핑을 매개 변수 값에 대 한 빈 문자열을 전달과에서는 다릅니다. 그러면 빈 문자열 ("")의 지정된 된 매개 변수 값으로 간주 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OleDbInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbInfoMessageEventHandler ^ InfoMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>공급자가 경고나 정보 메시지를 보내면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서버에서 보낸 정보 메시지를 처리 하는 클라이언트를 만들어야는 <xref:System.Data.OleDb.OleDbInfoMessageEventHandler> 이 이벤트를 수신 하는 대리자입니다.  
  
 <xref:System.Data.OleDb.OleDbConnection.InfoMessage> 이벤트 심각도가 낮은 메시지가 데이터 소스에서 반환 될 때 발생 합니다. 심각도 낮은 메시지는 예외가 발생 하지 않습니다. Microsoft SQL Server에 대 한 여기에 심각도 10 이하인 오류 메시지  
  
 자세한 내용 및 예제에 대 한 참조 [연결 이벤트](~/docs/framework/data/adonet/connection-events.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />로 지정된 속성 설정을 사용하여 데이터베이스 연결을 엽니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection> 사용 가능한 경우 연결 풀에서 열려 있는 연결을 그립니다. 그렇지 않으면 데이터 원본에 새 연결을 설정 합니다. 단일 둘 이상의 DataReader를 열 수 <xref:System.Data.OleDb.OleDbConnection>합니다. 사용 하는 OLEDB 공급자는 단일 연결에서 둘 이상의 활성 DataReader를 지원 하지 않으면, OLEDB 공급자 각각에 대 한 추가 연결을 암시적으로 엽니다.  
  
> [!NOTE]
>  경우는 <xref:System.Data.OleDb.OleDbConnection> 늘어나고의 범위를 닫혀 있지 않습니다. 따라서 명시적으로 닫아야 연결 호출 하 여 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 또는 **Dispose**, 내에서 연결을 사용 하 여 또는 `Using` 문.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">연결이 이미 열려 있습니다.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">연결을 여는 동안 발생한 연결 수준 오류입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결 문자열의 "Provider= " 절에 지정된 OLE DB 공급자 이름을 가져옵니다.</summary>
        <value>연결 문자열의 "Provider= " 절에 지정된 공급자 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 고 읽기 전용 속성 중 일부를 표시 합니다.  
  
 [!code-csharp[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseObjectPool">
      <MemberSignature Language="C#" Value="public static void ReleaseObjectPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseObjectPool() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ReleaseObjectPool" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseObjectPool ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseObjectPool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>마지막 기본 연결이 해제될 때 <see cref="T:System.Data.OleDb.OleDbConnection" /> 개체 풀이 해제될 수 있음을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ReleaseObjectPool` 풀링된 용 예약 될 리소스를 호출할 수 있습니다 <xref:System.Data.OleDb.OleDbConnection> 개체입니다. 연결 개체가 OLE DB 서비스 일반적으로 풀링된 연결을 활성 상태로 유지 된 시간 동안 다시 사용 하지 않는 예를 들어 경우이 메서드를 호출 할 수 있습니다. 참고 메서드만 호출 활성 연결 풀에 존재 하는 실제로 해제 되지 않습니다.  
  
 풀을 마지막으로 삭제 하기 전에 다음이 발생 해야 합니다.  
  
1.  호출 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 를 풀에 연결 개체를 반환 합니다.  
  
2.  시간 제한 초과 풀의 각 연결 개체를 허용 합니다.  
  
3.  <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>를 호출합니다.  
  
4.  가비지 수집을 호출 합니다.  
  
 반대로, 호출 하는 경우 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 모든 활성 연결에서 및 가비지 수집을 호출 하지만 호출 하지 않으면 <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>, 풀링된 개체는 계속 사용할 수에 대 한 예약 된 리소스입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection>, 열, 속성 중 일부를 표시, 연결을 닫고 해제 개체 풀 리소스를 절약 합니다.  
  
 [!code-csharp[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetState">
      <MemberSignature Language="C#" Value="public void ResetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ResetState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Data.OleDb.OleDbConnection.State" /> 개체의 <see cref="T:System.Data.OleDb.OleDbConnection" /> 속성을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 OLE DB 공급자는 연결의 현재 상태를 확인할 수 있습니다. 예를 들어 데이터베이스 서버가 이후 재생 된 경우 열린 프로그램 <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbConnection.State%2A> 반환할 속성은 계속 `Open`합니다. 호출 하는 OLE DB Provider는 라이브 연결에서이 정보에 대 한 폴링 지원을 사용 하는 경우는 <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> 메서드와 다음 검사는 <xref:System.Data.OleDb.OleDbConnection.State%2A> 속성 알려 연결이 열릴 더 이상. <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> 방법은 OLE DB 공급자에서 연결의 현재 상태를 확인 하는 기능에 의존 합니다. OLE DB 공급자가이 기능을 지 원하는 경우를 확인 하려면 DBPROP_CONNECTIONSTATUS 대 한 자세한 내용은 공급자 설명서를 확인 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트가 연결되는 서버 버전을 포함하는 문자열을 가져옵니다.</summary>
        <value>연결된 서버의 버전입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> 속성 OLE DB dbprop_dbmsver와 같습니다 속성에 매핑됩니다. 경우 <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> 지원 되지 않습니다 기본 OLE DB 공급자가 빈 문자열이 반환 됩니다.  
  
 폼의 버전은 *# #. # #. # # #*, 여기서 처음 두 자리는 주 버전, 다음 두 자리는 부 버전 및 마지막 4 자리는 릴리스 버전입니다. 공급자는 제품 버전을이 형식으로 렌더링 해야 하지만 제품 관련 버전을 추가할 수도 있습니다-예를 들어 "04.01.0000 4.1 Rdb"입니다. 폼의 문자열은 *major.minor.build*여기서 주 및 부는 정확히 두 자리로 관리 빌드 정확히 네 자리로 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbConnection> 고 읽기 전용 속성 중 일부를 표시 합니다.  
  
 [!code-csharp[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">연결이 닫힌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결의 현재 상태를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Data.ConnectionState" /> 값의 비트 조합입니다. 기본값은 Closed입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음은 상태 변경은 허용:  
  
-   `Closed` 를 `Open`를 사용 하 여는 <xref:System.Data.OleDb.OleDbConnection.Open%2A> 의 메서드는 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.  
  
-   `Open` 를 `Closed`, 하나를 사용 하는 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 메서드 또는 **Dispose** 의 메서드는 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.  
  
> [!NOTE]
>  이전 버전의.NET Framework에서 호출 된 <xref:System.Data.OleDb.OleDbConnection.State%2A> 속성 각 호출에 대해 열린 연결에 대 한 OLE DB DBPROP_CONNECTIONSTATUS 속성에 대 한 호출을 발생 하기 때문에 응용 프로그램 오버 헤드가 증가 합니다. .NET Framework 2.0 부터는 더 이상는 문제입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />를 참조하세요.</summary>
        <returns>이 인스턴스의 복사본인 새 <see cref="T:System.Object" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Data.OleDb.OleDbConnection> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>