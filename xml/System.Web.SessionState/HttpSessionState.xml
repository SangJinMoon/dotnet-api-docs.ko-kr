<Type Name="HttpSessionState" FullName="System.Web.SessionState.HttpSessionState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae4ca9a4670ae745ae7f68a9bf24402e4ec78440" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550547" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpSessionState : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpSessionState extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.HttpSessionState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpSessionState&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSessionState sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>세션 수준 설정 및 수명 관리 메서드뿐만 아니라 세션 상태 값에 대한 액세스를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 세션 상태 관리를 사용 하면 여러 요청에 대해 고유한 브라우저 세션와 관련 된 정보를 저장할 수를 제공 합니다. 숫자 인덱스 또는 키 이름에 의해 참조 되는 값의 컬렉션을 저장할 수 있습니다. 세션 값과 기능에 대 한 액세스는 사용할 수 있는 사용 하 여는 <xref:System.Web.SessionState.HttpSessionState> 통해 액세스할 수 있는 클래스는 <xref:System.Web.HttpContext.Session%2A> 현재 <xref:System.Web.HttpContext>, 또는 <xref:System.Web.UI.Page.Session%2A> 의 속성은 <xref:System.Web.UI.Page>합니다.  
  
 세션 데이터는 고유 식별자를 사용 하 여 특정 브라우저 세션에 연결 됩니다. 기본적으로이 식별자는 브라우저에 만료 되지 않는 세션 쿠키에 저장 되지만 세션 식별자를 설정 하 여 URL에 저장 하도록 응용 프로그램을 구성할 수도 있습니다는 `cookieless` 특성을 `true` 또는 <xref:System.Web.HttpCookieMode.UseUri> 요소에 응용 프로그램 구성 합니다. 쿠키의 값을 지정 하 여 브라우저에서 지원 되는지 여부를 결정 하는 ASP.NET 점이 <xref:System.Web.HttpCookieMode.UseDeviceProfile> 에 대 한는 `cookieless` 특성입니다. 값을 지정 하 여 브라우저에 대해 쿠키 사용 되는지 여부를 결정 하는 ASP.NET을 할 수도 있습니다 <xref:System.Web.HttpCookieMode.AutoDetect> 에 대 한는 `cookieless` 특성입니다. 쿠키가 지원 되는 경우 때 <xref:System.Web.HttpCookieMode.UseDeviceProfile> 지정 되었거나 때 활성화 <xref:System.Web.HttpCookieMode.AutoDetect> 지정는 세션 식별자가 고, 그렇지 않으면 쿠키에 저장 되는 URL에 세션 식별자가 저장 됩니다.  
  
 첫 번째 요청 중 세션이 시작 되 고 세션 값에 지정 된 분 수 전에 브라우저에 대 한 새 요청이 상태로 유지 됩니다는 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> 속성 통과 합니다. 새 세션을 시작할 때, 세션 <xref:System.Web.SessionState.SessionStateModule.Start> 이벤트가 발생 합니다. 기본 세션 값을 설정 하는 등 세션의 시작 부분에 추가 작업을 수행 하려면이 이벤트를 사용할 수 있습니다. 세션 시간이 초과 하는 경우는 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 메서드는 ASP.NET 응용 프로그램이 종료 될 세션 또는 <xref:System.Web.SessionState.SessionStateModule.End> 이벤트가 발생 합니다. 필요한 정리를 수행 하려면이 이벤트를 사용할 수 있습니다. <xref:System.Web.SessionState.SessionStateModule.End> 이벤트가 발생할 경우에만 세션 상태 `mode` 로 설정 된 <xref:System.Web.SessionState.SessionStateMode.InProc>합니다.  
  
 성능을 향상 시키기 위해 쿠키를 사용 하는 세션 할당 하지 않으면 세션 저장소 실제로 데이터에 저장 될 때까지 <xref:System.Web.UI.Page.Session%2A> 개체입니다. 자세한 내용은 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 속성을 참조하세요.  
  
 ASP.NET 응용 프로그램 경계를 넘어 세션 상태가 유지 되지 않습니다. 브라우저가 다른 응용 프로그램을 탐색 하는 경우 세션 정보는 새 응용 프로그램에 ´ ù.  
  
 세션 값은 기본적으로 웹 서버에서 메모리에 저장 됩니다. 또한 SQL Server 데이터베이스, ASP.NET 상태 서버에 또는 사용자 지정 서버에 세션 값을 저장할 수 있습니다. 이렇게 하면 ASP.NET 또는 IIS 프로세스 또는 ASP.NET 응용 프로그램이 다시 시작 하는 경우에서 세션 값을 유지 하 고 세션 값을 웹 팜의 모든 서버에서 사용할 수 있도록 합니다. 이 동작을 설정 하 여 구성 된는 `mode` 을 유효한 특성 <xref:System.Web.SessionState.SessionStateMode> 응용 프로그램 구성 요소에는 값입니다. 자세한 내용은 참조 [세션 상태 모드](http://msdn.microsoft.com/library/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4)합니다.  
  
 응용 프로그램 상태를 포함 하는 세션 상태에 대 한 대안 (참조는 <xref:System.Web.HttpApplication.Application%2A> 속성) 및 ASP.NET 캐시 (참조는 <xref:System.Web.Caching> 네임 스페이스), ASP.NET 응용 프로그램의 모든 사용자가 액세스할 수 있는 어떤 저장소 변수; ASP.NET 프로필 (참조는 <xref:System.Web.Profile> 네임 스페이스), 만료 하지 않고 데이터 저장소에 사용자 값을 유지 하는 시간 제한;를 사용 하 여 ASP.NET <xref:System.Web.UI.WebControls?displayProperty=nameWithType>, 컨트롤 값에 유지 하는 <xref:System.Web.UI.Control.ViewState%2A>; <xref:System.Web.HttpResponse.Cookies%2A>; <xref:System.Web.HttpRequest.QueryString%2A> HTTP에서 사용할 수 있는 HTML 폼에 필드 및 속성; `POST` 를 사용 하는 <xref:System.Web.HttpRequest.Form%2A> 컬렉션입니다. 세션 상태 및 기타 상태 관리 방법 간의 차이점에 자세한 내용은 참조 하십시오. [유용한](http://msdn.microsoft.com/library/af79fa0d-4bc8-47a6-9915-d8e355bfb732)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하 고 세션 상태에서 값을 검색 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[HttpSessionState#30](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/session2cs.aspx#30)]
 [!code-aspx-vb[HttpSessionState#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/session2vb.aspx#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Web.Profile" />
    <altmember cref="N:System.Web.Caching" />
  </Docs>
  <Members>
    <Member MemberName="Abandon">
      <MemberSignature Language="C#" Value="public void Abandon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abandon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Abandon" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abandon ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abandon();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 세션을 취소합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 한 번의 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 메서드는 현재 세션은 더 이상 유효 하 고 새 세션을 시작할 수 없습니다. <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 로 인해는 <xref:System.Web.SessionState.SessionStateModule.End> 이벤트를 발생 합니다. 새 <xref:System.Web.SessionState.SessionStateModule.Start> 다음 요청에서 이벤트를 발생 합니다.  
  
 중단 된 레코드나 만료 된 세션에 대 한 세션 식별자는 기본적으로 재활용 됩니다. 즉, 한 요청이 중단 됨 또는 만료 된 세션에 대 한 세션 식별자를 포함 하는 경우 새 세션을 동일한 세션 식별자를 사용 하 여 시작 됩니다. 설정 하 여 해제할 수 있습니다 `regenerateExpiredSessionId` 에 구성 요소의 특성 `true`합니다. 자세한 내용은 참조 [세션 식별자](http://msdn.microsoft.com/library/146ca206-d151-4f2e-a548-bcca05ccf0cb)합니다.  
  
 <xref:System.Web.SessionState.SessionStateModule.End> 이벤트는 지원 경우에만 <xref:System.Web.SessionState.HttpSessionState.Mode%2A> 속성이 <xref:System.Web.SessionState.SessionStateMode.InProc>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">세션 상태 컬렉션에 추가할 항목의 이름입니다.</param>
        <param name="value">세션 상태 컬렉션에 추가할 항목의 값입니다.</param>
        <summary>세션 상태 컬렉션에 새 항목을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `name` 기존 세션 상태 항목 매개 변수 참조, 기존 항목을 지정 된 덮어씁니다 `value`합니다.  
  
   
  
## Examples  
 사용 하 여 세션 상태에서 값을 저장 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.SessionState.HttpSessionState.Add%2A> 메서드. 사용 하 여 세션 상태에서 값을 제거 하는 방법을 보여 줍니다는 <xref:System.Web.SessionState.HttpSessionState.Remove%2A> 메서드. A <xref:System.Web.UI.WebControls.Repeater> 컨트롤을 사용 하는 웹 페이지에 내용을 세션 상태를 표시 합니다. <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> 메서드 세션 상태 컬렉션에서 반복 하 고 채울를 사용 하는 <xref:System.Web.UI.WebControls.Repeater> 제어 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>세션 상태 컬렉션에서 모든 키와 값을 제거합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CodePage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 세션에 대한 문자 집합 식별자를 가져오거나 설정합니다.</summary>
        <value>현재 세션에 대한 문자 집합 식별자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문자 집합 (코드 페이지)는 문자 값을 결정 하는 멀티 바이트 문자 데이터를 해석 하 고 정렬 순서에 사용 됩니다. 코드 페이지 설정이 멀티 바이트 문자가 아닌 데이터를 유니코드 문자 데이터에만 적용 됩니다.  
  
 이 <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> 속성은 이전 버전 ASP와의 호환성을 위해 제공 됩니다. ASP 페이지와 이전 버전과 호환성을 유지 해야 하는 경우 사용 하 여는 <xref:System.Web.HttpResponse.ContentEncoding%2A> 속성 대신 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Contents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contents As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Contents { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 세션 상태 개체에 대한 참조를 가져옵니다.</summary>
        <value>현재 <see cref="T:System.Web.SessionState.HttpSessionState" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.Contents%2A> 속성은 이전 버전 ASP와의 호환성을 위해 제공 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 항목 이름을 나열 하 고 값에 <xref:System.Web.SessionState.HttpSessionState.Contents%2A> 속성입니다.  
  
 [!code-csharp[HttpSessionState#9](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#9)]
 [!code-vb[HttpSessionState#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>응용 프로그램에서 쿠키 없는 세션을 구성할지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>응용 프로그램이 쿠키를 사용하지 않는 세션을 사용하도록 구성되었는지 여부를 나타내는 <see cref="T:System.Web.HttpCookieMode" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.HttpCookieMode.UseCookies" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> 은 `true`, <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> 속성에서 반환 <xref:System.Web.HttpCookieMode.UseUri>고, 그렇지 않으면는 <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> 속성에서 반환 <xref:System.Web.HttpCookieMode.UseCookies>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 `cookieless` 세션 특성을 `true` Web.config 파일에 있습니다. 이 샘플 응용 프로그램 구성에서 <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> 속성은 반환 <xref:System.Web.HttpCookieMode.UseUri>합니다.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">세션 값을 받는 <see cref="T:System.Array" />입니다.</param>
        <param name="index">
          <c>배열</c>에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
        <summary>배열의 지정된 인덱스에서 시작하여 1차원 배열에 세션 상태 값 컬렉션을 복사합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세션 상태 컬렉션의 항목 수를 가져옵니다.</summary>
        <value>컬렉션의 항목 수입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 세션의 모든 세션 상태 변수 이름을 읽는 데 사용할 수 있는 열거자를 반환합니다.</summary>
        <returns>세션 상태 컬렉션에 있는 변수 이름을 반복할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 사용 하 여 세션 상태에서 값을 저장 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.SessionState.HttpSessionState.Add%2A> 메서드. 사용 하 여 세션 상태에서 값을 제거 하는 방법을 보여 줍니다는 <xref:System.Web.SessionState.HttpSessionState.Remove%2A> 메서드. A <xref:System.Web.UI.WebControls.Repeater> 컨트롤은 웹 페이지에 세션 상태의 내용을 표시 하는 데 사용 합니다. <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> 메서드 세션 상태 컬렉션에서 반복 하 고 채울를 사용 하는 <xref:System.Web.UI.WebControls.Repeater> 제어 합니다.  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCookieless">
      <MemberSignature Language="C#" Value="public bool IsCookieless { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsCookieless" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCookieless As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCookieless { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세션 ID가 URL에 포함되어 있는지 HTTP 쿠키에 저장되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          세션이 URL에 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 각 브라우저 세션을 고유 하 게 식별합니다. 기본적으로 세션에 대 한 고유 식별자는 브라우저에서 만료 되지 않는 세션 쿠키에 저장 됩니다. 세션 식별자에에서 저장 되지 쿠키를 설정 하 여 지정할 수는 `cookieless` 특성을 `true` 구성 요소에 있습니다.  
  
> [!NOTE]
>  응용 프로그램의 보안을 강화 하려면 응용 프로그램 호출 해야 할 사용자를 로그 아웃을 허용 해야는 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 메서드. 이렇게 하면 사용자에 대 한 세션에 저장 된 개인 데이터를 검색할 URL에 고유 식별자를 사용 하 여 원치 않는 소스 가능성이 줄어듭니다.  
  
 ASP.NET은 페이지의 URL에는 고유한 세션 ID를 자동으로 삽입 하 여 쿠키 없는 세션 상태를 유지 합니다. 예를 들어 다음 URL에는 고유한 세션 ID lit3py55t21z5v55vlm25s55 포함 하기 위해 ASP.NET에서 수정 되었습니다.  
  
```  
http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx  
```  
  
 ASP.NET 링크의 각 페이지를 브라우저에 보내기 전에 바로 세션 ID 값을 포함 하 여 요청된 되는 모든 페이지에 포함 된 링크를 수정 합니다. 사이트에서 제공 하는 링크의 경로 따라 이동으로 세션 상태가 유지 됩니다. 그러나 사용자 에이전트에는 URL 다시 작성, 하는 경우 세션 상태 인스턴스 손실 됩니다.  
  
 세션 ID는 응용 프로그램 이름 뒤에 오는 슬래시 뒤와 나머지 모든 파일 또는 가상 디렉터리 식별자 앞 URL에 포함 됩니다. 이렇게 하면 사용 하기 전에 응용 프로그램 이름을 확인 하는 ASP.NET의 <xref:System.Web.SessionState.SessionStateModule> 요청에 있습니다.  
  
 쿠키가 없는 세션에서 사용 되는 세션 식별자는 기본적으로 재활용 됩니다. 즉, 만료 된 세션 ID로 요청이 하는 요청과 함께 제공 된 세션 ID를 사용 하 여 새 세션이 시작 됩니다. 이 동작은 검색 엔진 또는 기타 프로그램을 통해 아마도 여러 브라우저에서 쿠키 없는 세션 ID를 포함 하는 링크를 공유 세션 데이터의 원치 않는 공유 될 수 있습니다. 세션 데이터를 여러 클라이언트에서 세션 식별자를 재활용을 비활성화 하 여 공유할의 가능성을 줄일 수 있습니다. 이 위해 설정 된 `regenerateExpiredSessionId` 에 구성 요소의 특성 `true`합니다. 이렇게 하면 만료 된 세션 id는 쿠키 없는 세션 요청이 만들어질 때 생성 되 고 새 세션 id 만료 된 세션 ID로 만든 요청은 HTTP를 사용 하는 경우 `POST` 메서드를 다음 게시 된 모든 데이터를 잃게 됩니다 `regenerateExpiredSessionId` 은 `true`, ASP.NET에서 브라우저 URL에서 새 세션 식별자를 갖고 있는지 확인 하려면 리디렉션을 수행 합니다.  
  
> [!NOTE]
>  설정의 `regenerateExpiredSessionId` 특성을 `true` 가능성을 줄여 줍니다 세션 데이터의 원치 않는 공유를 가져와서 다른 사용자의 세션에 대 한 액세스를 확보 원하지 않는 소스에 대해 보호 하지 않습니다는 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 값 및 서버에 대 한 요청에 포함 합니다. 세션 상태의 개인 또는 중요 한 정보를 저장 하는 경우 것이 좋습니다 브라우저와 포함 된 서버 간의 모든 통신을 암호화 하려면 SSL을 사용 하 여 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 `cookieless` 세션 특성을 Web.config 파일에서 true로 합니다.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNewSession">
      <MemberSignature Language="C#" Value="public bool IsNewSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsNewSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNewSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNewSession { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세션을 현재 요청으로 만들었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          세션을 현재 요청으로 만들었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세션이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          세션이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세션 상태 값의 컬렉션에 대한 액세스가 동기화(스레드로부터 안전)되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          컬렉션에 대한 액세스가 동기화(스레드로부터 안전)되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>개별 세션 값을 가져오거나 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">세션 값의 숫자 인덱스입니다.</param>
        <summary>숫자 인덱스별로 세션 값을 가져오거나 설정합니다.</summary>
        <value>지정된 인덱스 위치에 저장된 세션 상태 값입니다. 항목이 없는 경우 <see langword="null" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">세션 값의 키 이름입니다.</param>
        <summary>이름별로 세션 값을 가져오거나 설정합니다.</summary>
        <value>지정된 이름의 세션 상태 값입니다. 항목이 없는 경우 <see langword="null" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ Keys { System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세션 상태 컬렉션에 저장된 모든 값의 키 컬렉션을 가져옵니다.</summary>
        <value>모든 세션 키가 포함된 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 세션의 LCID(로캘 식별자)를 가져오거나 설정합니다.</summary>
        <value>현재 세션의 문화권을 지정하는 <see cref="T:System.Globalization.CultureInfo" /> 인스턴스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.LCID%2A> 속성은 이전 버전 ASP와의 호환성을 위해 제공 됩니다. ASP 페이지와 이전 버전과 호환성을 유지 해야 하는 경우 사용 하 여는 <xref:System.Globalization.CultureInfo.LCID%2A> 속성 대신 합니다.  
  
 ASP.NET 세션 상태에서 로캘 식별자를 저장 하지 않습니다. <xref:System.Web.SessionState.HttpSessionState.LCID%2A> 속성 액세스는 <xref:System.Globalization.CultureInfo.LCID%2A> 속성을 가져오고 식별자를 설정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.SessionStateMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SessionState.SessionStateMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As SessionStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::SessionStateMode Mode { System::Web::SessionState::SessionStateMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 세션 상태 모드를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.SessionState.SessionStateMode" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 서버를 구성 하는 방법에 대 한 내용은 <xref:System.Web.SessionState.SessionStateMode.StateServer> 또는 <xref:System.Web.SessionState.SessionStateMode.SQLServer> 세션 상태 저장소 참조 [ASP.NET 세션 상태 개요](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 `mode` 세션 특성을 <xref:System.Web.SessionState.SessionStateMode.SQLServer> Web.config 파일에 있습니다. SQL Server 세션 모드에 대 한는 `sqlConnectionString` 특성은도 필요 합니다.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="SQLServer"  
      sqlConnectionString="Data Source=localhost;Integrated Security=SSPI"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">세션 상태 컬렉션에서 삭제할 항목의 이름입니다.</param>
        <summary>세션 상태 컬렉션에서 항목을 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 세션 상태 컬렉션에 지정 된 요소가 없는 경우 `name`, 컬렉션 그대로 유지 됩니다. 예외가 throw되지 않습니다.  
  
   
  
## Examples  
 사용 하 여 세션 상태에서 값을 저장 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.SessionState.HttpSessionState.Add%2A> 메서드. 사용 하 여 세션 상태에서 값을 제거 하는 방법을 보여 줍니다는 <xref:System.Web.SessionState.HttpSessionState.Remove%2A> 메서드. A <xref:System.Web.UI.WebControls.Repeater> 컨트롤은 웹 페이지에 세션 상태의 내용을 표시 하는 데 사용 합니다. <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> 메서드 세션 상태 컬렉션에서 반복 하 고 채울를 사용 하는 <xref:System.Web.UI.WebControls.Repeater> 제어 합니다.  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>세션 상태 컬렉션에서 모든 키와 값을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.RemoveAll%2A> 와 동일한 기능을 수행 <xref:System.Web.SessionState.HttpSessionState.Clear%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">세션 상태 컬렉션에서 제거할 항목의 인덱스입니다.</param>
        <summary>세션 상태 컬렉션에서 지정된 인덱스의 항목을 삭제합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" />가 0보다 작은 경우  
  
 \- 또는 -  
  
 <paramref name="index" />가 <see cref="P:System.Web.SessionState.HttpSessionState.Count" />보다 크거나 같은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionID">
      <MemberSignature Language="C#" Value="public string SessionID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SessionID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세션의 고유 식별자를 가져옵니다.</summary>
        <value>고유 세션 식별자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 속성을 사용 하는 서버에서 세션 데이터와 함께 브라우저를 고유 하 게 식별 합니다. <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 값은 임의로 ASP.NET에서 생성 하 고 브라우저에서 만료 되지 않는 세션 쿠키에 저장 합니다. <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 값 ASP.NET 응용 프로그램을 각 요청과 함께 쿠키에 전송 됩니다.  
  
 ASP.NET 응용 프로그램에서 쿠키를 사용 하지 않도록 설정 하 고는 여전히 확인 하려는 경우 세션 상태, 세션 식별자를 설정 하 여 쿠키 대신 URL에 저장 하도록 응용 프로그램을 구성할 수 있습니다는 `cookieless` 구성의 특성 요소를 `true`, 또는 <xref:System.Web.HttpCookieMode.UseUri>, 응용 프로그램에 대 한 Web.config 파일에 있습니다. 쿠키의 값을 지정 하 여 브라우저에서 지원 되는지 여부를 결정 하는 ASP.NET 점이 <xref:System.Web.HttpCookieMode.UseDeviceProfile> 에 대 한는 `cookieless` 특성입니다. 값을 지정 하 여 브라우저에 대해 쿠키 사용 되는지 여부를 결정 하는 ASP.NET을 할 수도 있습니다 <xref:System.Web.HttpCookieMode.AutoDetect> 에 대 한는 `cookieless` 특성입니다. 쿠키가 지원 되는 경우 때 <xref:System.Web.HttpCookieMode.UseDeviceProfile> 지정 되었거나 때 활성화 <xref:System.Web.HttpCookieMode.AutoDetect> 지정는 세션 식별자가 고, 그렇지 않으면 쿠키에 저장 되는 URL에 세션 식별자가 저장 됩니다. 자세한 내용은 <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> 속성을 참조하세요.  
  
 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 서버와 브라우저 쿠키 또는 URL에서 일반 텍스트로 전송 됩니다. 결과적으로, 원하지 않는 소스에 액세스할 수 있는 다른 사용자의 세션을 확보 하 여는 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 값과 서버에 대 한 요청에 포함 합니다. 세션 상태의 개인 또는 중요 한 정보를 저장 하는 경우 것이 좋습니다 브라우저와 포함 된 서버 간의 모든 통신을 암호화 하려면 SSL을 사용 하 여 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>합니다.  
  
 ASP.NET 될 때까지 세션 데이터에 대 한 저장소 할당 하지 않고 쿠키 기반 세션 상태를 사용할 때의 <xref:System.Web.UI.Page.Session%2A> 개체를 사용 합니다. 결과적으로, 새 세션 ID는 세션 개체에 액세스할 때까지 각 페이지 요청에 대해 생성 됩니다. 전체 세션에 대 한 정적 세션 ID를 필요로 하는 응용 프로그램을 구현 하거나 수는 `Session_Start` 응용 프로그램의 Global.asax 파일 및 저장소 데이터에 대 한 메서드는 <xref:System.Web.UI.Page.Session%2A> 또는 세션 ID를 수정 하려면 개체의 다른 부분에 코드를 사용할 수 있습니다 명시적으로의 데이터를 저장 하도록 응용 프로그램의 <xref:System.Web.UI.Page.Session%2A> 개체입니다.  
  
 응용 프로그램에서 쿠키 없는 세션 상태를 사용 하는 경우 세션 ID는 첫 번째 페이지 보기에 생성 되며 전체 세션에 대 한 유지 관리 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 쿠키 없는 세션 식별자를 사용 하도록 세션 상태를 구성 하는 Web.config 파일을 보여 줍니다. 자세한 내용은 <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> 속성을 참조하세요.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticObjects As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpStaticObjectsCollection ^ StaticObjects { System::Web::HttpStaticObjectsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET 응용 프로그램 파일 Global.asax에서 <see langword="&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;" /> 태그로 선언된 개체 컬렉션을 가져옵니다.</summary>
        <value>Global.asax 파일에 선언된 개체를 포함하는 <see cref="T:System.Web.HttpStaticObjectsCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이지에 개체 serialization을 지원 하지 않는 경우 및 <xref:System.Web.SessionState.HttpSessionState.Mode%2A> 도 독립 프로세스 (<xref:System.Web.SessionState.SessionStateMode.SQLServer> 또는 <xref:System.Web.SessionState.SessionStateMode.StateServer>), 개체가 생성 되지 것입니다 및이 컬렉션에 추가 되지 것입니다.  
  
 <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> 속성은 이전 버전 ASP와의 호환성을 위해 제공 됩니다.  
  
   
  
## Examples  
 다음 코드 예제 목록이 `id` 및 개체 유형의 개체에는 <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> 컬렉션입니다.  
  
 [!code-csharp[HttpSessionState#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#10)]
 [!code-vb[HttpSessionState#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세션 상태 값의 컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
        <value>컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세션 상태 공급자가 세션을 종료하기 전에 요청 사이에 허용되는 시간(분)을 가져오거나 설정합니다.</summary>
        <value>제한 시간(분)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> 속성을 사용 하 여 응용 프로그램에 대 한 Web.config 파일에서 설정할 수 있습니다는 `timeout` 구성 요소 또는 있습니다 특성으로 설정할 수는 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> 응용 프로그램 코드를 사용 하 여 직접 속성 값입니다.  
  
 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> 속성을 525, 600 분 (1 년) 보다 큰 값으로 설정 수 없습니다. 기본값은 20 분입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 `timeout` Web.config 파일에 30 분으로 세션 특성입니다.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>