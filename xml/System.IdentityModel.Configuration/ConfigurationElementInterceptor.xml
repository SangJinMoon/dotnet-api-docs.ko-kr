<Type Name="ConfigurationElementInterceptor" FullName="System.IdentityModel.Configuration.ConfigurationElementInterceptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bfbf277736148da61c67d434f0bfa47e7e74fbf3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36560141" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConfigurationElementInterceptor : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigurationElementInterceptor extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationElementInterceptor&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationElementInterceptor : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type ConfigurationElementInterceptor = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="46d14-101">WIF(Windows Identity Foundation) 구성 스키마에는 사용자 지정 토큰 처리기를 지정할 때와 같이 사용자가 임의 요소 및 특성을 지정할 수 있는 부분이 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="46d14-101">There are parts of the Windows Identity Foundation (WIF) configuration schema in which users can specify arbitrary elements and attributes; for example, when specifying a custom token handler.</span>
      </span>
      <span data-ttu-id="46d14-102">
        <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> 클래스는 이러한 케이스를 처리하기 위해 구현됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="46d14-102">The <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> class is implemented to handle these cases.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationElementInterceptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConfigurationElementInterceptor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46d14-103">
            <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNodeList ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.ConfigurationElementInterceptor.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildNodes As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNodeList ^ ChildNodes { System::Xml::XmlNodeList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Xml.XmlNodeList" Usage="System.IdentityModel.Configuration.ConfigurationElementInterceptor.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46d14-104">이 요소의 자식 노드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-104">Gets the child nodes of this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46d14-105">자식 노드의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-105">The collection of child nodes.</span>
          </span>
          <span data-ttu-id="46d14-106">이 요소에 자식 노드가 없는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-106">
              <see langword="null" /> if this element has no child nodes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeElement">
      <MemberSignature Language="C#" Value="protected override void DeserializeElement (System.Xml.XmlReader reader, bool serializeCollectionKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DeserializeElement(class System.Xml.XmlReader reader, bool serializeCollectionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DeserializeElement (reader As XmlReader, serializeCollectionKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DeserializeElement(System::Xml::XmlReader ^ reader, bool serializeCollectionKey);" />
      <MemberSignature Language="F#" Value="override this.DeserializeElement : System.Xml.XmlReader * bool -&gt; unit" Usage="configurationElementInterceptor.DeserializeElement (reader, serializeCollectionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="serializeCollectionKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="46d14-107">구성 파일에서 읽는 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-107">The <see cref="T:System.Xml.XmlReader" /> that reads from the configuration file.</span>
          </span>
        </param>
        <param name="serializeCollectionKey">
          <span data-ttu-id="46d14-108">컬렉션 키 속성만 serialize하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-108">
              <see langword="true" /> to serialize only the collection key properties; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46d14-109">구성 파일에서 XML을 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-109">Reads XML from the configuration file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAsXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement ElementAsXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement ElementAsXml" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.ConfigurationElementInterceptor.ElementAsXml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementAsXml As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ ElementAsXml { System::Xml::XmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementAsXml : System.Xml.XmlElement" Usage="System.IdentityModel.Configuration.ConfigurationElementInterceptor.ElementAsXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46d14-110">이 인스턴스가 나타내는 XML 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-110">Gets the XML element represented by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46d14-111">XML 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-111">The XML element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializeUnrecognizedAttribute">
      <MemberSignature Language="C#" Value="protected override bool OnDeserializeUnrecognizedAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnDeserializeUnrecognizedAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnDeserializeUnrecognizedAttribute (name As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnDeserializeUnrecognizedAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnDeserializeUnrecognizedAttribute : string * string -&gt; bool" Usage="configurationElementInterceptor.OnDeserializeUnrecognizedAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="46d14-112">인식할 수 없는 특성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-112">The name of the unrecognized attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="46d14-113">인식할 수 없는 특성의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-113">The value of the unrecognized attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46d14-114">deserialization하는 동안 알 수 없는 특성을 발견했는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-114">Gets a value that indicates whether an unknown attribute is encountered during deserialization.</span>
          </span>
          <span data-ttu-id="46d14-115">항상 <see langword="true" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-115">Always returns <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46d14-116">항상 <see langword="true" />를 반환하며, 이는 인식할 수 없는 특성이 발생했음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-116">Always returns <see langword="true" />, which indicates that an unrecognized attribute has been encountered.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46d14-117"><xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> 클래스는 특히 임의의 사용자 정의 특성 및 요소를 처리 하도록 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="46d14-117">The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements.</span></span> <span data-ttu-id="46d14-118">따라서이 메서드는 다음과 같이 반환 됩니다. `true` 인식할 수 없는 요소나 특성 파서가 실행 되도록.NET Framework가 감지 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="46d14-118">For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializeUnrecognizedElement">
      <MemberSignature Language="C#" Value="protected override bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnDeserializeUnrecognizedElement(string elementName, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnDeserializeUnrecognizedElement (elementName As String, reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnDeserializeUnrecognizedElement(System::String ^ elementName, System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.OnDeserializeUnrecognizedElement : string * System.Xml.XmlReader -&gt; bool" Usage="configurationElementInterceptor.OnDeserializeUnrecognizedElement (elementName, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="46d14-119">알 수 없는 하위 요소의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-119">The name of the unknown subelement.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="46d14-120">deserialization에 사용되는 XML 판독기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-120">The XML reader that is being used for deserialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46d14-121">deserialize하는 동안 알 수 없는 요소를 발견했는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-121">Gets a value that indicates whether an unknown element is encountered during deserialization.</span>
          </span>
          <span data-ttu-id="46d14-122">항상 <see langword="true" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-122">Always returns <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46d14-123">항상 <see langword="true" />를 반환하며, 이는 인식할 수 없는 요소가 발생했음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-123">Always returns <see langword="true" />, which indicates that an unrecognized element has been encountered.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46d14-124"><xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> 클래스는 특히 임의의 사용자 정의 특성 및 요소를 처리 하도록 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="46d14-124">The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements.</span></span> <span data-ttu-id="46d14-125">따라서이 메서드는 다음과 같이 반환 됩니다. `true` 인식할 수 없는 요소나 특성 파서가 실행 되도록.NET Framework가 감지 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="46d14-125">For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected override void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Reset(class System.Configuration.ConfigurationElement parentElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.Reset(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Reset (parentElement As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Reset(System::Configuration::ConfigurationElement ^ parentElement);" />
      <MemberSignature Language="F#" Value="override this.Reset : System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementInterceptor.Reset parentElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement">
          <span data-ttu-id="46d14-126">구성 요소의 부모 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-126">The parent node of the configuration element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46d14-127">잠금 및 속성 컬렉션을 비롯하여 <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> 개체의 내부 상태를 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46d14-127">Resets the internal state of the <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> object, including the locks and the properties collections.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>