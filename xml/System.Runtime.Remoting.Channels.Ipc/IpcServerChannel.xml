<Type Name="IpcServerChannel" FullName="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba05a87a78f75e1edab18d55f3189b145b38d9bd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36536758" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class IpcServerChannel : System.Runtime.Remoting.Channels.IChannel, System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IpcServerChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class IpcServerChannel&#xA;Implements IChannel, IChannelReceiver, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class IpcServerChannel : System::Runtime::Remoting::Channels::IChannel, System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <TypeSignature Language="F#" Value="type IpcServerChannel = class&#xA;    interface IChannelReceiver&#xA;    interface IChannel&#xA;    interface ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="04c6b-101">IPC 시스템을 사용하여 메시지를 전송하는 원격 호출용 서버 채널을 구현합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="04c6b-101">Implements a server channel for remote calls that uses the IPC system to transmit messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04c6b-102">채널은 원격 호출을 전송 하기는.NET Framework remoting 인프라에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-102">Channels are used by the .NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="04c6b-103">클라이언트는 원격 개체를 호출할 때 호출이 클라이언트 채널에서 전송 및 서버 채널에서 수신 되는 메시지에 serialize 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-103">When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="04c6b-104">메시지를 받은 후 역직렬화 사용 되며 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-104">After the message is received, it is deserialized and processed.</span></span> <span data-ttu-id="04c6b-105">반환 된 값은 서버 채널에서 전송 및 클라이언트 채널에서 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-105">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="04c6b-106"><xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 클래스는 동일한 컴퓨터에 응용 프로그램 도메인 간에 메시지를 전송 Windows 프로세스 간 통신 (IPC) 시스템을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-106">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class uses the Windows interprocess communication (IPC) system to transport messages between application domains on the same computer.</span></span> <span data-ttu-id="04c6b-107">와 동일한 컴퓨터에 응용 프로그램 도메인 간에 통신 하는 경우이 IPC 채널은 TCP 또는 HTTP 채널 보다 훨씬 빠릅니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-107">When communicating between application domains on the same computer, the IPC channel is much faster than the TCP or HTTP channels.</span></span>  
  
 <span data-ttu-id="04c6b-108">서버 쪽에서 메시지의 추가 처리를 수행 하려면의 구현을 지정는 <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> 인터페이스에 의해 처리 되는 모든 메시지는 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 인스턴스에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-108">To perform additional processing of messages on the server side, specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance are passed.</span></span>  
  
 <span data-ttu-id="04c6b-109"><xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 인스턴스 이진 또는 SOAP 형식으로 직렬화 하는 메시지를 수락 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-109">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance accepts messages serialized in either binary or SOAP format.</span></span>  
  
 <span data-ttu-id="04c6b-110">A <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 개체에 설정할 수 있는 구성 속성에 연결 된 구성 파일에 실행 시간 (정적을 호출 하 여 <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> 메서드) 또는 프로그래밍 방식으로 (전달 하 여 프로그램 <xref:System.Collections.IDictionary> 컬렉션에는 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> 생성자)입니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-110">A <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method) or programmatically (by passing an <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor).</span></span> <span data-ttu-id="04c6b-111">이러한 구성 속성 목록은 설명서를 참조 하십시오.는 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-111">For a list of these configuration properties, see the documentation for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="04c6b-112">설정할 때의 `exclusiveAddressUse` 속성을 `false` 에 `properties` 인수를 여러 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 명명 된 파이프에 대 한 개체를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-112">When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe.</span></span> <span data-ttu-id="04c6b-113">이 경우 요청 수 등록 채널 중 하나로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-113">In such a case requests can go to any of the channels registered.</span></span> <span data-ttu-id="04c6b-114">이 설정은 alc가 사용 되는 경우에 안전 하다 고 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-114">This setting is considered secure only if ALCs are also used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04c6b-115">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-115">The following code example illustrates how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class.</span></span>  
  
 [!code-cpp[Remoting_Ipc#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#10)]
 [!code-csharp[Remoting_Ipc#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#10)]  
  
 <span data-ttu-id="04c6b-116">위의 코드를 사용 하 여 다음과 같은 원격 개체를 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-116">The preceding code is used to expose the following remote object.</span></span>  
  
 [!code-cpp[Remoting_Ipc#0](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/counter.cpp#0)]
 [!code-csharp[Remoting_Ipc#0](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/counter.cs#0)]  
  
 <span data-ttu-id="04c6b-117">이 개체를 원격으로 사용 하는 클라이언트의 예제를 보려면 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-117">For an example of a client using this object remotely, see <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="04c6b-118">
            <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-118">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : string -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel portName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName">
          <span data-ttu-id="04c6b-119">채널에서 사용할 IPC 포트의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-119">The name of the IPC port to be used by the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04c6b-120">지정된 IPC 포트 이름을 사용하여 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-120">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified IPC port name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="04c6b-121">다음 코드 예제에서는이 생성자를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-121">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[Remoting_Ipc#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#11)]
 [!code-csharp[Remoting_Ipc#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (properties, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="04c6b-122">채널에서 사용할 구성 속성의 값을 지정하는 <see cref="T:System.Collections.IDictionary" /> 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-122">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</span>
          </span>
        </param>
        <param name="sinkProvider">
          <span data-ttu-id="04c6b-123">채널에서 사용할 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-123">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04c6b-124">지정된 채널 속성 및 싱크를 사용하여 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-124">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel properties and sink.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04c6b-125">채널 구성 속성에 대 한 자세한 내용은 참조 [채널 및 포맷터 구성 속성](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe)합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-125">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).</span></span>  
  
 <span data-ttu-id="04c6b-126">싱크 기능이 필요 하지 않은 경우에 설정 된 `sinkProvider` 매개 변수를 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-126">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="04c6b-127">설정할 때의 `exclusiveAddressUse` 속성을 `false` 에 `properties` 인수를 여러 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 명명 된 파이프에 대 한 개체를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-127">When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe.</span></span> <span data-ttu-id="04c6b-128">이 경우 요청 수 등록 채널 중 하나로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-128">In such a case requests can go to any of the channels registered.</span></span> <span data-ttu-id="04c6b-129">이 설정은 alc가 사용 되는 경우에 안전 하다 고 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-129">This setting is considered secure only if ALCs are also used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04c6b-130">다음 코드 예제에서는이 생성자를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-130">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#41)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string name, string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ name, System::String ^ portName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : string * string -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (name, portName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="04c6b-131">채널 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-131">The name of the channel.</span>
          </span>
        </param>
        <param name="portName">
          <span data-ttu-id="04c6b-132">채널에서 사용할 IPC 포트의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-132">The name of the IPC port to be used by the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04c6b-133">지정된 채널 이름 및 IPC 포트 이름을 사용하여 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-133">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel name and IPC port name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04c6b-134">이 생성자는 설정의 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> 사용 하 여 속성의 `name` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-134">This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="04c6b-135">둘 이상의 채널을 등록 하려면 각 채널은 고유한 이름을 가져야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-135">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04c6b-136">다음 코드 예제에서는이 생성자를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-136">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#42)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, class System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider, securityDescriptor As CommonSecurityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider, System::Security::AccessControl::CommonSecurityDescriptor ^ securityDescriptor);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IServerChannelSinkProvider * System.Security.AccessControl.CommonSecurityDescriptor -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (properties, sinkProvider, securityDescriptor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
        <Parameter Name="securityDescriptor" Type="System.Security.AccessControl.CommonSecurityDescriptor" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="04c6b-137">채널에서 사용할 구성 속성의 값을 지정하는 <see cref="T:System.Collections.IDictionary" /> 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-137">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</span>
          </span>
        </param>
        <param name="sinkProvider">
          <span data-ttu-id="04c6b-138">채널에서 사용할 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-138">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span>
          </span>
        </param>
        <param name="securityDescriptor">
          <span data-ttu-id="04c6b-139">채널에서 사용할 <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-139">A <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> to be used by the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04c6b-140">지정된 채널 속성, 싱크 및 보안 설명자를 사용하여 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-140">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel properties, sink, and security descriptor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04c6b-141">채널 구성 속성에 대 한 자세한 내용은 참조 [채널 및 포맷터 구성 속성](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe)합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-141">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).</span></span>  
  
 <span data-ttu-id="04c6b-142">싱크 기능이 필요 하지 않은 경우에 설정 된 `sinkProvider` 매개 변수를 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-142">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span> <span data-ttu-id="04c6b-143">보안 설명자가 필요 하지 않은 경우에 설정 된 `securityDescriptor` 매개 변수를 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-143">If you do not require a security descriptor, set the `securityDescriptor` parameter to `null`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="04c6b-144">설정할 때의 `exclusiveAddressUse` 속성을 `false` 에 `properties` 인수를 여러 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 명명 된 파이프에 대 한 개체를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-144">When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe.</span></span> <span data-ttu-id="04c6b-145">이 경우 요청 수 등록 채널 중 하나로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-145">In such a case requests can go to any of the channels registered.</span></span> <span data-ttu-id="04c6b-146">이 설정은 alc가 사용 되는 경우에 안전 하다 고 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-146">This setting is considered secure only if ALCs are also used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string name, string portName, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string portName, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, portName As String, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ name, System::String ^ portName, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : string * string * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (name, portName, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="04c6b-147">채널 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-147">The name of the channel.</span>
          </span>
        </param>
        <param name="portName">
          <span data-ttu-id="04c6b-148">채널에서 사용할 IPC 포트의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-148">The name of the IPC port to be used by the channel.</span>
          </span>
        </param>
        <param name="sinkProvider">
          <span data-ttu-id="04c6b-149">채널에서 사용할 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-149">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04c6b-150">지정된 채널 이름, IPC 포트 이름 및 싱크를 사용하여 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-150">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel name, IPC port name, and sink.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04c6b-151">이 생성자는 설정의 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> 사용 하 여 속성의 `name` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-151">This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="04c6b-152">둘 이상의 채널을 등록 하려면 각 채널은 고유한 이름을 가져야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-152">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
 <span data-ttu-id="04c6b-153">싱크 기능이 필요 하지 않은 경우에 설정 된 `sinkProvider` 매개 변수를 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-153">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04c6b-154">다음 코드 예제에서는이 생성자를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-154">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#43)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChannelData { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelData : obj" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04c6b-155">채널 관련 데이터를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-155">Gets channel-specific data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04c6b-156">채널 관련 데이터가 들어 있는 <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-156">A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance that contains channel-specific data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04c6b-157">인스턴스로 반환 되더라도 <xref:System.Object?displayProperty=nameWithType> 이 속성의 값 클래스의 인스턴스로 캐스팅 될 수 <xref:System.Runtime.Remoting.Channels.ChannelDataStore> 을 채널을 설명 하는 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 개체에서 수신 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-157">Although returned as an instance of the <xref:System.Object?displayProperty=nameWithType> class, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> that describes the channel to which the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object listens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04c6b-158">다음 코드 예제에서는 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData%2A> 속성을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-158">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#15)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelName : string" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04c6b-159">현재 채널의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-159">Gets the name of the current channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04c6b-160">채널 이름이 들어 있는 <see cref="T:System.String" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-160">A <see cref="T:System.String" /> instance that contains the name of the channel.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04c6b-161">등록 된 모든 채널에는 고유한 이름이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-161">Every registered channel has a unique name.</span></span> <span data-ttu-id="04c6b-162">이름은 호출할 때 특정 채널을 검색 하 고 <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04c6b-162">The name is used to retrieve a specific channel when calling the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> method.</span></span> <span data-ttu-id="04c6b-163">기본 이름은 "ipc 서버"입니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-163">The default name is "ipc server".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04c6b-164">다음 코드 예제에서는 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> 속성을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-164">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#12)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelPriority : int" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04c6b-165">현재 채널의 우선 순위를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-165">Gets the priority of the current channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04c6b-166">채널에 할당된 우선 순위를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-166">An integer that indicates the priority assigned to the channel.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04c6b-167">에 표시할 데이터 채널에서 순서를 제어 하는 우선 순위는 <xref:System.Runtime.Remoting.ObjRef> instance;이 높은 우선 순위 채널이 우선 순위가 낮은 채널 앞에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-167">The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels.</span></span> <span data-ttu-id="04c6b-168">클라이언트에 나열 된 순서로 서버 채널에 연결 하려고는 <xref:System.Runtime.Remoting.ObjRef> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="04c6b-168">Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance.</span></span> <span data-ttu-id="04c6b-169">기본 우선 순위는 20 개입니다. 음수 우선 순위 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-169">The default priority is 20; negative priorities are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04c6b-170">다음 코드 예제에서는 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority%2A> 속성을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-170">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#13)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannelUri">
      <MemberSignature Language="C#" Value="public string GetChannelUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetChannelUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChannelUri () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetChannelUri();" />
      <MemberSignature Language="F#" Value="member this.GetChannelUri : unit -&gt; string" Usage="ipcServerChannel.GetChannelUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04c6b-171">현재 채널의 URI를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-171">Returns the URI of the current channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04c6b-172">채널 URI가 들어 있는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-172">A <see cref="T:System.String" /> that contains the URI of the channel.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04c6b-173">채널 URI는 원격 서버 채널을 지정 하는 클라이언트에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-173">The channel URI is used by the client to specify a remote server channel.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04c6b-174">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04c6b-174">The following code example illustrates how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri%2A> method.</span></span>  
  
 [!code-cpp[Remoting_Ipc#12](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#12)]
 [!code-csharp[Remoting_Ipc#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public virtual string[] GetUrlsForUri (string objectUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUrlsForUri (objectUri As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetUrlsForUri(System::String ^ objectUri);" />
      <MemberSignature Language="F#" Value="abstract member GetUrlsForUri : string -&gt; string[]&#xA;override this.GetUrlsForUri : string -&gt; string[]" Usage="ipcServerChannel.GetUrlsForUri objectUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectUri">
          <span data-ttu-id="04c6b-175">URL이 필요한 개체의 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-175">The URI of the object for which URLs are required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04c6b-176">현재 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> 인스턴스에 호스팅되었고 지정된 URI를 사용하는 개체의 모든 URL이 들어 있는 배열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-176">Returns an array of all the URLs for the object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04c6b-177">현재 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 인스턴스에 호스팅되었고 지정된 URI를 사용하는 개체에 대한 URL의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-177">An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04c6b-178">이 메서드를 사용 하 여는 <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04c6b-178">This method is used by the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04c6b-179">다음 코드 예제에서는 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-179">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri%2A> method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool with get, set" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04c6b-180">현재 채널이 보안 채널인지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-180">Gets or sets a Boolean value that indicates whether the current channel is secure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04c6b-181">현재 인스턴스가 안전한 상태인지를 나타내는 부울 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-181">A Boolean value that indicates whether the current instance is secure.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member Parse : string *  -&gt; string&#xA;override this.Parse : string *  -&gt; string" Usage="ipcServerChannel.Parse (url, objectURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="04c6b-182">잘 알려진 원격 개체의 URI를 추출할 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-182">The URL from which to extract the URI of the remote well-known object.</span>
          </span>
        </param>
        <param name="objectURI">
          <span data-ttu-id="04c6b-183">이 메서드가 반환될 때 잘 알려진 원격 개체의 URI를 보유하는 <see cref="T:System.String" /> 인스턴스를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-183">When this method returns, contains a <see cref="T:System.String" /> instance that holds the URI of the remote well-known object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04c6b-184">지정된 URL에서 채널 URI와 잘 알려진 원격 개체 URI를 추출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-184">Extracts the channel URI and the remote well-known object URI from the specified URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04c6b-185">현재 채널의 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-185">The URI of the current channel.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04c6b-186">개체의 URI는 특정 개체 인스턴스를 고유 하 게 식별 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-186">The URI of an object is a value that uniquely identifies a specific object instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04c6b-187">다음 코드 예제에서는 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-187">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : obj -&gt; unit&#xA;override this.StartListening : obj -&gt; unit" Usage="ipcServerChannel.StartListening data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="04c6b-188">초기화 상태를 지정하는 개체이거나, 특정 상태를 채널에 전달하지 않으려는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-188">An object that specifies an initialization state, or <see langword="null" />, if you do not want to pass a specific state to the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04c6b-189">현재 채널에게 요청 수신을 시작하도록 지시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-189">Instructs the current channel to start listening for requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04c6b-190">새로 초기화 된 채널에서 수신 대기를 시작 하려면이 메서드를 호출할 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-190">It is not necessary to call this method to begin listening on a newly initialized channel.</span></span>  
  
 <span data-ttu-id="04c6b-191">후 채널에서 수신을 다시 시작 하려면이 메서드를 사용 하 여는 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A> 메서드가 호출 된 채널에서 수신 대기를 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-191">Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A> method has been called to stop listening on the channel.</span></span>  
  
 <span data-ttu-id="04c6b-192">채널에 전달 하는 특정 초기화 상태는 데이터 개체를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-192">The data object can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="04c6b-193">채널에 특정 상태를 전달 하지 않을 경우 전달 `null` 로 `data` 매개 변수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-193">If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="04c6b-194">지정된 수신 대기 포트를 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-194">The specified listening port is not available.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StopListening : obj -&gt; unit&#xA;override this.StopListening : obj -&gt; unit" Usage="ipcServerChannel.StopListening data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="04c6b-195">초기화 상태를 지정하는 개체이거나, 특정 상태를 채널에 전달하지 않으려는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-195">An object that specifies an initialization state, or <see langword="null" />, if you do not want to pass a specific state to the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04c6b-196">현재 채널에게 요청 수신을 중지하도록 지시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04c6b-196">Instructs the current channel to stop listening for requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04c6b-197">이 메서드를 사용 하 여 채널에서 수신 대기를 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-197">Use this method to stop listening on a channel.</span></span> <span data-ttu-id="04c6b-198">수신 대기를 다시 시작 하려면 사용 하 여는 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04c6b-198">To restart listening, use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A> method.</span></span>  
  
 <span data-ttu-id="04c6b-199">채널에 전달 하는 특정 초기화 상태는 데이터 개체를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-199">The data object can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="04c6b-200">채널에 특정 상태를 전달 하지 않을 경우 전달 `null` 로 `data` 매개 변수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04c6b-200">If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>