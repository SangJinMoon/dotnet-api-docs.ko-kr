<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UpDownBase.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55b440d3834f92bc6d1ccf23d8375238343d79af1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b440d3834f92bc6d1ccf23d8375238343d79af1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.UpDownBase">
          <source>Implements the basic functionality required by a spin box (also known as an up-down control).</source>
          <target state="translated">스핀 상자(up-down 컨트롤이라고도 함)에 필요한 기본 기능을 구현합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>A spin box consists of a text box and a small vertical scroll bar, commonly referred to as a spin button control.</source>
          <target state="translated">스핀 상자 텍스트 상자 및 스핀 단추 컨트롤으로 참조 작은 세로 스크롤 막대에 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> class links the two controls and allows the user to change the display in the text box by clicking the up or down buttons or by entering the appropriate type of value directly into the text box.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> 클래스 두 컨트롤을 연결 하 고 위쪽을 클릭 하 여 또는 아래로 단추 또는 텍스트 상자에 직접 적절 한 유형의 값을 입력 하 여 텍스트 상자에 표시 되는 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>Use the spin box in cases where you want to limit the list of values a user can select, similar to a list box or combo box.</source>
          <target state="translated">사용자는 값의 목록을 제한 하려는 경우 스핀 상자를 사용 하 여 선택할 수, 목록 상자 또는 콤보 상자와 비슷합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>Depending upon the type of list you want to display, the advantage to using a spin box is that it allows you to quickly set a range of valid values, rather than adding items one at a time.</source>
          <target state="translated">스핀 상자를 사용 하는 장점이 신속 하 게 한 번에 한 항목을 추가 하지 않고 유효한 값의 범위를 설정할 수 있습니다 수 있다는 점입니다 목록 표시 하려면 형식에 따라, 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>Implementing a spin box requires less data validation than a text box, as you can limit the data type when you derive a class from <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>.</source>
          <target state="translated">클래스를 파생 하는 경우 데이터 형식을 제한할 수 있으므로 텍스트 상자가 보다 적은 데이터 유효성 검사 스핀 상자를 구현 하려면 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>An example of this is the <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> class, which limits the values to the numeric type and uses a <ph id="ph2">&lt;xref:System.Windows.Forms.NumericUpDown.Minimum%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.NumericUpDown.Maximum%2A&gt;</ph> property to validate the data.</source>
          <target state="translated">이 예로 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 숫자 형식으로 값을 제한 하 고 사용 하는 클래스는 <ph id="ph2">&lt;xref:System.Windows.Forms.NumericUpDown.Minimum%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.NumericUpDown.Maximum%2A&gt;</ph> 속성에서 데이터 유효성 검사 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>To allow the user to use the arrow keys to change the contents of a spin box, set the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.InterceptArrowKeys%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">사용자가 스핀 상자 내용을 변경 하려면 화살표 키를 사용할 수 있도록 설정 된 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.InterceptArrowKeys%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>To restrict the user to values you specify, set the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ReadOnly%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">사용자 지정 값을 제한 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ReadOnly%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>To control the alignment of text in the spin box, set the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.TextAlign%2A&gt;</ph> property.</source>
          <target state="translated">스핀 상자에 텍스트의 맞춤을 제어 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.TextAlign%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>To set the alignment of the up and down buttons in relation to the text box portion of the control, set the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.UpDownAlign%2A&gt;</ph> property to either <ph id="ph2">&lt;xref:System.Windows.Forms.LeftRightAlignment.Left&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.LeftRightAlignment.Right&gt;</ph>.</source>
          <target state="translated">위쪽 및 아래쪽 단추 컨트롤의 텍스트 상자 부분 관련 하 여 맞춤을 설정 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.UpDownAlign%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Windows.Forms.LeftRightAlignment.Left&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.LeftRightAlignment.Right&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.UpButton%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.DownButton%2A&gt;</ph> methods, when overridden, handle the clicking of the up or down buttons.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.UpButton%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.DownButton%2A&gt;</ph> 메서드를 재정의 될 때, 위쪽 또는 아래쪽 단추를 클릭 하 고 처리 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>When overridden, the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ValidateEditText%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.UpdateEditText%2A&gt;</ph> methods validate the value (either selected or entered) and update the text displayed in the spin box.</source>
          <target state="translated">재정의 된 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ValidateEditText%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.UpdateEditText%2A&gt;</ph> 메서드 (선택 되거나 입력) 값의 유효성을 검사 하 고 스핀 상자에 표시 되는 텍스트를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>If the value fails validation, use the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.Select%2A&gt;</ph> method to select the text that is not valid.</source>
          <target state="translated">유효성 검사 실패 하는 값을 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.Select%2A&gt;</ph> 메서드 유효 하지 않은 텍스트를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>This allows the user to quickly correct the text by simply typing in a new value without having to manually select or delete the existing text.</source>
          <target state="translated">이 사용자를가 직접 선택 하거나 기존 텍스트를 삭제 하지 않고도 새 값에서을 입력 하 여 텍스트를 신속 하 게 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_2015](~/includes/net-2015-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> control will be resized based on the system DPI setting when the app.config file contains the following entry:</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_2015](~/includes/net-2015-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> 컨트롤 app.config 파일에 다음 항목이 포함 되어 있으면 시스템 DPI 설정에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> and sets some of its properties derived from <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 에서 파생 된 해당 속성 중 일부를 설정 하 고 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>This code requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> control named <ph id="ph2">`numericUpDown1`</ph>, two <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> controls named <ph id="ph4">`comboBox1`</ph> and <ph id="ph5">`comboBox2`</ph>, and three <ph id="ph6">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> controls named <ph id="ph7">`checkBox1`</ph>, <ph id="ph8">`checkBox2`</ph>, and <ph id="ph9">`checkBox2`</ph> created on a form.</source>
          <target state="translated">이 코드를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 라는 컨트롤 <ph id="ph2">`numericUpDown1`</ph>, 두 개의 <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> 라는 컨트롤 <ph id="ph4">`comboBox1`</ph> 및 <ph id="ph5">`comboBox2`</ph>, 3 및 <ph id="ph6">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 라는 컨트롤 <ph id="ph7">`checkBox1`</ph>, <ph id="ph8">`checkBox2`</ph>, 및 <ph id="ph9">`checkBox2`</ph> 폼에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>Add the following items to <ph id="ph1">`comboBox1`</ph>: <ph id="ph2">`None`</ph>, <ph id="ph3">`Fixed3D`</ph>, and <ph id="ph4">`FixedSingle`</ph>.</source>
          <target state="translated">다음 항목을 추가 <ph id="ph1">`comboBox1`</ph>: <ph id="ph2">`None`</ph>, <ph id="ph3">`Fixed3D`</ph>, 및 <ph id="ph4">`FixedSingle`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>Add the following items to <ph id="ph1">`comboBox2`</ph>: <ph id="ph2">`Left`</ph>, <ph id="ph3">`Right`</ph>, and <ph id="ph4">`Center`</ph>.</source>
          <target state="translated">다음 항목을 추가 <ph id="ph1">`comboBox2`</ph>: <ph id="ph2">`Left`</ph>, <ph id="ph3">`Right`</ph>, 및 <ph id="ph4">`Center`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>The code allows you to change the property values at run time and see how each affects the appearance and behavior of the spin box.</source>
          <target state="translated">코드를 사용 하면 런타임 시 속성 값을 변경 하 고 각각에 미치는 모양 및 동작 스핀 상자의 참조 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.UpDownBase">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.DownButton" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Windows.Forms.UpDownBase.UpButton" /&gt;</ph>, <ph id="ph4">&lt;see cref="M:System.Windows.Forms.UpDownBase.UpdateEditText" /&gt;</ph>, and <ph id="ph5">&lt;see cref="M:System.Windows.Forms.UpDownBase.ValidateEditText" /&gt;</ph>.</source>
          <target state="translated">상속 하는 경우 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph>, 멤버를 재정의 해야 합니다: <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.DownButton" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Windows.Forms.UpDownBase.UpButton" /&gt;</ph>, <ph id="ph4">&lt;see cref="M:System.Windows.Forms.UpDownBase.UpdateEditText" /&gt;</ph>, 및 <ph id="ph5">&lt;see cref="M:System.Windows.Forms.UpDownBase.ValidateEditText" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.AutoScroll">
          <source>Gets a value indicating whether the container will allow the user to scroll to any controls placed outside of its visible boundaries.</source>
          <target state="translated">컨테이너에서 표시되는 경계 외부에 있는 컨트롤까지 스크롤할 수 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.AutoScroll">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated">모든 경우에 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.AutoScroll">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> control does not use the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.AutoScroll%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> 컨트롤이 사용 하지 않는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.AutoScroll%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.AutoScrollMargin">
          <source>Gets or sets the size of the auto-scroll margin.</source>
          <target state="translated">자동 스크롤 여백의 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.AutoScrollMargin">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the height and width, in pixels, of the auto-scroll margin.</source>
          <target state="translated">자동 스크롤 여백의 높이와 너비를 픽셀 단위로 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.AutoScrollMargin">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> control does not use the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.AutoScrollMargin%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> 컨트롤이 사용 하지 않는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.AutoScrollMargin%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.AutoScrollMargin">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> or <ph id="ph2">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph>가 0 미만인 경우</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.AutoScrollMinSize">
          <source>Gets or sets the minimum size of the auto-scroll area.</source>
          <target state="translated">자동 스크롤 영역의 최소 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.AutoScrollMinSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the minimum height and width, in pixels, of the scroll bars.</source>
          <target state="translated">스크롤 막대의 최소 높이와 너비를 픽셀 단위로 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.AutoScrollMinSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> control does not use the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.AutoScrollMinSize%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> 컨트롤이 사용 하지 않는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.AutoScrollMinSize%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.AutoSize">
          <source>Gets or sets a value indicating whether the control should automatically resize based on its contents.</source>
          <target state="translated">내용에 따라 컨트롤의 크기를 자동으로 조정할지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.AutoSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the control should automatically resize based on its contents; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컨트롤의 크기를 내용에 따라 자동으로 조정하도록 나타내려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.UpDownBase.AutoSizeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.UpDownBase.AutoSize" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.UpDownBase.AutoSize" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.UpDownBase.AutoSizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.UpDownBase.AutoSizeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.UpDownBase.AutoSizeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.AutoSizeChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.AutoSizeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.UpDownBase.AutoSizeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.UpDownBase.AutoSizeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.UpDownBase.AutoSizeChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.DomainUpDown&gt;</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>와 같은 한 <ph id="ph2">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DomainUpDown&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.UpDownBase.AutoSizeChanged">
          <source>Then name the instance <ph id="ph1">`UpDownBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.AutoSizeChanged&gt;</ph> event.</source>
          <target state="translated">다음 인스턴스 이름을 <ph id="ph1">`UpDownBase1`</ph> 이벤트 처리기가 연결 확인 하 고는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.AutoSizeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.BackColor">
          <source>Gets or sets the background color for the text box portion of the spin box (also known as an up-down control).</source>
          <target state="translated">스핀 상자(up-down 컨트롤이라고도 함)의 텍스트 상자 부분 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.BackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of the text box portion of the spin box.</source>
          <target state="translated">스핀 상자의 텍스트 상자 부분 배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.BackgroundImage">
          <source>Gets or sets the background image for the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph>의 배경 이미지를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.BackgroundImage">
          <source>The background image for the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph>의 배경 이미지입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.BackgroundImage">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.BackgroundImage%2A&gt;</ph> property has no effect on the appearance of the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> control; therefore, it is hidden in the designer and from IntelliSense.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.BackgroundImage%2A&gt;</ph> 속성의 모양에 영향을 주지는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> 제어; IntelliSense와 디자이너에서 숨겨진 따라서 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.UpDownBase.BackgroundImageChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.UpDownBase.BackgroundImage" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.UpDownBase.BackgroundImage" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.BackgroundImageLayout">
          <source>Gets or sets the layout of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.UpDownBase.BackgroundImage" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.UpDownBase.BackgroundImage" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph>의 레이아웃을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.BackgroundImageLayout">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.BackgroundImageLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.BackgroundImageLayout%2A&gt;</ph> property has no effect on the appearance of the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> control; therefore, it is hidden in the designer and from IntelliSense.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.BackgroundImageLayout%2A&gt;</ph> 속성의 모양에 영향을 주지는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> 제어; IntelliSense와 디자이너에서 숨겨진 따라서 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.UpDownBase.BackgroundImageLayoutChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.UpDownBase.BackgroundImageLayout" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.UpDownBase.BackgroundImageLayout" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.BorderStyle">
          <source>Gets or sets the border style for the spin box (also known as an up-down control).</source>
          <target state="translated">스핀 상자(up-down 컨트롤이라고도 함)의 테두리 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.BorderStyle">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.BorderStyle">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.BorderStyle">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A&gt;</ph> property to create borderless and flat controls in addition to the default three-dimensional control.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A&gt;</ph> 여백 및 플랫 만들 속성 기본 3 차원 컨트롤 외에도 제어 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.BorderStyle">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> and sets some of its properties derived from <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 에서 파생 된 해당 속성 중 일부를 설정 하 고 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.BorderStyle">
          <source>This code requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> control named <ph id="ph2">`numericUpDown1`</ph>, two <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> controls named <ph id="ph4">`comboBox1`</ph> and <ph id="ph5">`comboBox2`</ph>, and three <ph id="ph6">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> controls named <ph id="ph7">`checkBox1`</ph>, <ph id="ph8">`checkBox2`</ph>, and <ph id="ph9">`checkBox2`</ph> created on a form.</source>
          <target state="translated">이 코드를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 라는 컨트롤 <ph id="ph2">`numericUpDown1`</ph>, 두 개의 <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> 라는 컨트롤 <ph id="ph4">`comboBox1`</ph> 및 <ph id="ph5">`comboBox2`</ph>, 3 및 <ph id="ph6">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 라는 컨트롤 <ph id="ph7">`checkBox1`</ph>, <ph id="ph8">`checkBox2`</ph>, 및 <ph id="ph9">`checkBox2`</ph> 폼에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.BorderStyle">
          <source>Add the following items to <ph id="ph1">`comboBox1`</ph>: <ph id="ph2">`None`</ph>, <ph id="ph3">`Fixed3D`</ph>, and <ph id="ph4">`FixedSingle`</ph>.</source>
          <target state="translated">다음 항목을 추가 <ph id="ph1">`comboBox1`</ph>: <ph id="ph2">`None`</ph>, <ph id="ph3">`Fixed3D`</ph>, 및 <ph id="ph4">`FixedSingle`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.BorderStyle">
          <source>Add the following items to <ph id="ph1">`comboBox2`</ph>: <ph id="ph2">`Left`</ph>, <ph id="ph3">`Right`</ph>, and <ph id="ph4">`Center`</ph>.</source>
          <target state="translated">다음 항목을 추가 <ph id="ph1">`comboBox2`</ph>: <ph id="ph2">`Left`</ph>, <ph id="ph3">`Right`</ph>, 및 <ph id="ph4">`Center`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.BorderStyle">
          <source>The code allows you to change the property values at run time and see how each affects the appearance and behavior of the spin box.</source>
          <target state="translated">코드를 사용 하면 런타임 시 속성 값을 변경 하 고 각각에 미치는 모양 및 동작 스핀 상자의 참조 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.BorderStyle">
          <source>The value assigned is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph> values.</source>
          <target state="translated">할당된 값이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.ChangingText">
          <source>Gets or sets a value indicating whether the text property is being changed internally by its parent class.</source>
          <target state="translated">텍스트 속성이 부모 클래스에 의해 내부적으로 변경되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ChangingText">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.UpDownBase.Text" /&gt;</ph> property is being changed internally by the <ph id="ph3">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> class; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Windows.Forms.UpDownBase.Text" /&gt;</ph> 속성이 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> 클래스에 의해 내부적으로 변경되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ChangingText">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ChangingText%2A&gt;</ph> property acts as a flag for the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ChangingText%2A&gt;</ph> 속성이 역할에 대 한 플래그를는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ChangingText">
          <source>This property is used by derived classes to indicate when the class is changing the current <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> property internally.</source>
          <target state="translated">파생된 클래스에서 클래스 현재 변경 하는 경우를 나타내기 위해이 속성은 사용 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> 속성 내부적으로 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ChangingText">
          <source>If this property is set to <ph id="ph1">`false`</ph>, the control requires that the user is changing the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> property and will set the <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.UserEdit%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">이 속성은로 설정 하는 경우 <ph id="ph1">`false`</ph>는 컨트롤을 사용 하려면 사용자가 변경는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> 속성 설정 됩니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.UserEdit%2A&gt;</ph> 속성을 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.ContextMenu">
          <source>Gets or sets the shortcut menu associated with the spin box (also known as an up-down control).</source>
          <target state="translated">스핀 상자(up-down 컨트롤이라고도 함)와 연결된 바로 가기 메뉴를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ContextMenu">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> associated with the spin box.</source>
          <target state="translated">스핀 상자와 연결된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ContextMenu">
          <source>The preferred way to associate a shortcut menu with a tree node is with the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ContextMenuStrip%2A&gt;</ph> property.</source>
          <target state="translated">와 트리 노드 바로 가기 메뉴를 연결 하는 기본 방법은 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ContextMenuStrip%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.ContextMenuStrip">
          <source>Gets or sets the shortcut menu for the spin box (also known as an up-down control).</source>
          <target state="translated">스핀 상자(up-down 컨트롤이라고도 함)의 바로 가기 메뉴를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ContextMenuStrip">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph> associated with the control.</source>
          <target state="translated">컨트롤과 연결된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ContextMenuStrip">
          <source>The shortcut menu appears when the user right-clicks the spin box.</source>
          <target state="translated">바로 가기 메뉴에 있는 스핀 상자를 마우스 오른쪽 단추로 클릭할 때 나타납니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.CreateParams">
          <source>Gets the required creation parameters when the control handle is created.</source>
          <target state="translated">컨트롤 핸들이 만들어지는 경우 필요한 작성 매개 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.CreateParams">
          <source>The creation parameters.</source>
          <target state="translated">만들기 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.CreateParams">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.CreateParams">
          <source>Associated enumeration <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">연관 된 열거형 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.DefaultSize">
          <source>Gets the default size of the control.</source>
          <target state="translated">컨트롤의 기본 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.DefaultSize">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> of the control.</source>
          <target state="translated">컨트롤의 기본 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.DockPadding">
          <source>Gets the dock padding settings for all edges of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> 컨트롤의 모든 가장자리에 대한 도킹 안쪽 여백 설정을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.DockPadding">
          <source>The dock paddings settings for this control.</source>
          <target state="translated">이 컨트롤에 대한 도킹 안쪽 여백 설정입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.DockPadding">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> control does not use the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.DockPadding%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph> 컨트롤이 사용 하지 않는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.DockPadding%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.DownButton">
          <source>When overridden in a derived class, handles the clicking of the down button on the spin box (also known as an up-down control).</source>
          <target state="translated">파생 클래스에서 재정의되면 스핀 상자(up-down 컨트롤이라고도 함)의 아래쪽 단추를 클릭하는 동작을 처리합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.DownButton">
          <source>When overriding this method in a derived class, be sure to call the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.UpdateEditText" /&gt;</ph> method.</source>
          <target state="translated">파생된 클래스에서이 메서드를 재정의 하는 경우 호출 해야는 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.UpdateEditText" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.Focused">
          <source>Gets a value indicating whether the control has input focus.</source>
          <target state="translated">컨트롤에 입력 포커스가 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.Focused">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control has focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컨트롤에 포커스가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.ForeColor">
          <source>Gets or sets the foreground color of the spin box (also known as an up-down control).</source>
          <target state="translated">스핀 상자(up-down 컨트롤이라고도 함)의 전경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ForeColor">
          <source>The foreground <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> of the spin box.</source>
          <target state="translated">스핀 상자의 전경 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ForeColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ForeColor%2A&gt;</ph> property will change the color of the text in the textbox portion of the spin box.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ForeColor%2A&gt;</ph> 속성 스핀 상자에서 텍스트 상자 부분에 있는 텍스트의 색이 변경 됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.InterceptArrowKeys">
          <source>Gets or sets a value indicating whether the user can use the UP ARROW and DOWN ARROW keys to select values.</source>
          <target state="translated">위쪽 화살표 및 아래쪽 화살표 키를 사용하여 값을 선택할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.InterceptArrowKeys">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control allows the use of the UP ARROW and DOWN ARROW keys to select values; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">위쪽 화살표 및 아래쪽 화살표 키를 사용하여 값을 선택할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.InterceptArrowKeys">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.InterceptArrowKeys">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.InterceptArrowKeys%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the spin box (also known as an up-down control) has focus, the user can use the UP ARROW and DOWN ARROW keys to select values.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.InterceptArrowKeys%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph> 및 스핀 상자 (up-down 컨트롤이 라고도 함)에 포커스가, 사용자 위쪽 화살표 및 아래쪽 화살표 키를 사용 하 여 값을 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.InterceptArrowKeys">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> and sets some of its properties derived from <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 에서 파생 된 해당 속성 중 일부를 설정 하 고 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.InterceptArrowKeys">
          <source>This code requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> control named <ph id="ph2">`numericUpDown1`</ph>, two <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> controls named <ph id="ph4">`comboBox1`</ph> and <ph id="ph5">`comboBox2`</ph>, and three <ph id="ph6">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> controls named <ph id="ph7">`checkBox1`</ph>, <ph id="ph8">`checkBox2`</ph>, and <ph id="ph9">`checkBox2`</ph> created on a form.</source>
          <target state="translated">이 코드를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 라는 컨트롤 <ph id="ph2">`numericUpDown1`</ph>, 두 개의 <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> 라는 컨트롤 <ph id="ph4">`comboBox1`</ph> 및 <ph id="ph5">`comboBox2`</ph>, 3 및 <ph id="ph6">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 라는 컨트롤 <ph id="ph7">`checkBox1`</ph>, <ph id="ph8">`checkBox2`</ph>, 및 <ph id="ph9">`checkBox2`</ph> 폼에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.InterceptArrowKeys">
          <source>Add the following items to <ph id="ph1">`comboBox1`</ph>: <ph id="ph2">`None`</ph>, <ph id="ph3">`Fixed3D`</ph>, and <ph id="ph4">`FixedSingle`</ph>.</source>
          <target state="translated">다음 항목을 추가 <ph id="ph1">`comboBox1`</ph>: <ph id="ph2">`None`</ph>, <ph id="ph3">`Fixed3D`</ph>, 및 <ph id="ph4">`FixedSingle`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.InterceptArrowKeys">
          <source>Add the following items to <ph id="ph1">`comboBox2`</ph>: <ph id="ph2">`Left`</ph>, <ph id="ph3">`Right`</ph>, and <ph id="ph4">`Center`</ph>.</source>
          <target state="translated">다음 항목을 추가 <ph id="ph1">`comboBox2`</ph>: <ph id="ph2">`Left`</ph>, <ph id="ph3">`Right`</ph>, 및 <ph id="ph4">`Center`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.InterceptArrowKeys">
          <source>The code allows you to change the property values at run time and see how each affects the appearance and behavior of the spin box.</source>
          <target state="translated">코드를 사용 하면 런타임 시 속성 값을 변경 하 고 각각에 미치는 모양 및 동작 스핀 상자의 참조 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.MaximumSize">
          <source>Gets or sets the maximum size of the spin box (also known as an up-down control).</source>
          <target state="translated">스핀 상자(up-down 컨트롤이라고도 함)의 최대 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.MaximumSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>, which is the maximum size of the spin box.</source>
          <target state="translated">스핀 상자의 최대 크기인 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.MaximumSize">
          <source>Regardless of the specified value, the <ph id="ph1">&lt;xref:System.Drawing.Size.Height%2A&gt;</ph> of the maximum size will always be 0.</source>
          <target state="translated">지정된 된 값에 관계 없이 <ph id="ph1">&lt;xref:System.Drawing.Size.Height%2A&gt;</ph> 의 최대 크기는 항상 0이 됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.MinimumSize">
          <source>Gets or sets the minimum size of the spin box (also known as an up-down control).</source>
          <target state="translated">스핀 상자(up-down 컨트롤이라고도 함)의 최소 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.MinimumSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>, which is the minimum size of the spin box.</source>
          <target state="translated">스핀 상자의 최소 크기인 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.UpDownBase.MouseEnter">
          <source>Occurs when the mouse pointer enters the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> control.</source>
          <target state="translated">마우스 포인터가 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> 컨트롤에 들어가면 이 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.UpDownBase.MouseHover">
          <source>Occurs when the mouse pointer rests on the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> control.</source>
          <target state="translated">마우스 포인터가 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> 컨트롤을 가리키면 이 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.UpDownBase.MouseLeave">
          <source>Occurs when the mouse pointer leaves the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> control.</source>
          <target state="translated">마우스 포인터가 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> 컨트롤을 벗어나면 이 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.UpDownBase.MouseMove">
          <source>Occurs when the user moves the mouse pointer over the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> control.</source>
          <target state="translated">마우스 포인터를 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UpDownBase" /&gt;</ph> 컨트롤 위로 이동하면 이 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnChanged(System.Object,System.EventArgs)">
          <source>The source of the event.</source>
          <target state="translated">이벤트 소스입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnChanged(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnChanged(System.Object,System.EventArgs)">
          <source>When overridden in a derived class, raises the Changed event.</source>
          <target state="translated">파생 클래스에서 재정의되면 Changed 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnFontChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnFontChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnFontChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnFontChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnFontChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnFontChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnFontChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnFontChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnFontChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnFontChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnHandleCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnHandleCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnHandleCreated(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnHandleCreated(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnHandleCreated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnHandleCreated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnHandleCreated%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnHandleCreated(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnHandleCreated(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnHandleCreated(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnHandleCreated(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnHandleCreated(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnHandleCreated(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnHandleDestroyed(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnHandleDestroyed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnHandleDestroyed(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnHandleDestroyed(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnHandleDestroyed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnHandleDestroyed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnHandleDestroyed%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnHandleDestroyed(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnHandleDestroyed(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnHandleDestroyed(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LayoutEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LayoutEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnLayout%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnLayout%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Example</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDown" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDown" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnMouseDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnMouseDown%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>If a double-click occurs, the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnMouseUp%2A&gt;</ph> method will raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event.</source>
          <target state="translated">두 번 클릭이 발생 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnMouseUp%2A&gt;</ph> 메서드로 인해 발생는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnMouseUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnMouseUp%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseWheel" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseWheel" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>If the spin box (also known as an up-down control) has focus when this event occurs, the direction the user scrolled the mouse wheel is determined, and either the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.UpButton%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.DownButton%2A&gt;</ph> method is called.</source>
          <target state="translated">사용자 방향 마우스 스크롤이 이벤트가 발생할 때 스핀 상자 (up-down 컨트롤이 라고도 함)에 포커스가 있으면 휠을 결정 됩니다 및 중 하나는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.UpButton%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.DownButton%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnMouseWheel%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnMouseWheel%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnPaint%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnPaint%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>The source of the event.</source>
          <target state="translated">이벤트 소스입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.InterceptArrowKeys%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the user presses the UP ARROW key, the <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.UpButton%2A&gt;</ph> method is called.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.InterceptArrowKeys%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph> 위쪽 화살표 키를 누르면는 <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.UpButton%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>Likewise, if the user presses the DOWN ARROW key, the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.DownButton%2A&gt;</ph> method is called.</source>
          <target state="translated">마찬가지로, 아래쪽 화살표 키를 누를 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.DownButton%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
          <source>The source of the event.</source>
          <target state="translated">이벤트 소스입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyPressEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyPressEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyPress" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyPress" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)">
          <source>The source of the event.</source>
          <target state="translated">이벤트 소스입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)">
          <source>This method validates the text in the text box portion of the control when the spin box (also known as an up-down control) loses focus.</source>
          <target state="translated">이 메서드는 스핀 상자 (up-down 컨트롤이 라고도 함) 포커스를 잃을 때 컨트롤의 텍스트 상자 부분에 있는 텍스트를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)">
          <source>The source of the event.</source>
          <target state="translated">이벤트 소스입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)">
          <source>This method adjusts the size of the spin box (also known as an up-down control) when the text box portion of the control is resized.</source>
          <target state="translated">이 메서드는 스핀 상자 (up-down 컨트롤이 라고도 함)의 크기를 조정 컨트롤의 텍스트 상자 부분 크기를 조정할 때.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnTextBoxResize%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnTextBoxResize%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged(System.Object,System.EventArgs)">
          <source>The source of the event.</source>
          <target state="translated">이벤트 소스입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged(System.Object,System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged(System.Object,System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged(System.Object,System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged(System.Object,System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged(System.Object,System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged(System.Object,System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged(System.Object,System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged(System.Object,System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged(System.Object,System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged(System.Object,System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.PreferredHeight">
          <source>Gets the height of the spin box (also known as an up-down control).</source>
          <target state="translated">스핀 상자(up-down 컨트롤이라고도 함)의 높이를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.PreferredHeight">
          <source>The height, in pixels, of the spin box.</source>
          <target state="translated">스핀 상자의 높이(픽셀)입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.PreferredHeight">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.PreferredHeight%2A&gt;</ph> property value is based on the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph> property of the text box portion of the control and is adjusted for the style of border.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.PreferredHeight%2A&gt;</ph> 속성 값은 기반는 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph> 속성 컨트롤의 텍스트 상자 부분 테두리의 스타일에 대 한 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.PreferredHeight">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> and sets some of its properties derived from <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 에서 파생 된 해당 속성 중 일부를 설정 하 고 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.PreferredHeight">
          <source>This code requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> control, two <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> controls, and three <ph id="ph3">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> controls created on a form.</source>
          <target state="translated">이 코드를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 컨트롤, 두 개의 <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> 컨트롤과 3 <ph id="ph3">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 폼에 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.PreferredHeight">
          <source>Label the <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> controls <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.BorderStyle%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.TextAlign%2A&gt;</ph>.</source>
          <target state="translated">레이블은 <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> 컨트롤 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.BorderStyle%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.TextAlign%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.PreferredHeight">
          <source>Label the <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> controls <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.InterceptArrowKeys%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.ReadOnly%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.UpDownBase.UpDownAlign%2A&gt;</ph>.</source>
          <target state="translated">레이블은 <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 컨트롤 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.InterceptArrowKeys%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.ReadOnly%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.UpDownBase.UpDownAlign%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.PreferredHeight">
          <source>The code allows you to change the property values at run time and see how each affects the appearance and behavior of the spin box.</source>
          <target state="translated">코드를 사용 하면 런타임 시 속성 값을 변경 하 고 각각에 미치는 모양 및 동작 스핀 상자의 참조 수 있습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.PreferredHeight">
          <source>Add the following items to the combo box labeled BorderStyle: <ph id="ph1">`None`</ph>, <ph id="ph2">`Fixed3D`</ph>, and <ph id="ph3">`FixedSingle`</ph>.</source>
          <target state="translated">BorderStyle 콤보 상자에 다음 항목을 추가: <ph id="ph1">`None`</ph>, <ph id="ph2">`Fixed3D`</ph>, 및 <ph id="ph3">`FixedSingle`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.PreferredHeight">
          <source>Add the following items to the combo box labeled TextAlign: <ph id="ph1">`Left`</ph>, <ph id="ph2">`Right`</ph>, and <ph id="ph3">`Center`</ph>.</source>
          <target state="translated">TextAlign 콤보 상자에 다음 항목을 추가: <ph id="ph1">`Left`</ph>, <ph id="ph2">`Right`</ph>, 및 <ph id="ph3">`Center`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>Gets or sets a value indicating whether the text can be changed by the use of the up or down buttons only.</source>
          <target state="translated">위쪽 또는 아래쪽 단추를 사용해야만 텍스트를 변경할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the text can be changed by the use of the up or down buttons only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">위쪽 또는 아래쪽 단추를 사용해야만 텍스트를 변경할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>By setting the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ReadOnly%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, you will eliminate the need for much validation of the <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> property.</source>
          <target state="translated">설정 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ReadOnly%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>의 유효성을 검사할에 대 한 필요성을 제거 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>The user will be restricted to the use of the up and down buttons to change the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> values.</source>
          <target state="translated">사용자가을 사용 하는 위쪽 및 아래쪽 단추를 변경 하려면 제한 된 수의 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>It will only allow them to select values you specify.</source>
          <target state="translated">만 지정한 값을 선택 하도록 허용 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>In the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.DomainUpDown&gt;</ph>, the behavior described is slightly different.</source>
          <target state="translated">파생된 클래스에서 <ph id="ph1">&lt;xref:System.Windows.Forms.DomainUpDown&gt;</ph>, 설명한 동작은 약간 다릅니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ReadOnly%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> and a key is pressed, the control selects the first item in the collection where the first character matches the key pressed.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ReadOnly%2A&gt;</ph> 로 설정 된 <ph id="ph2">`true`</ph> 및 키를 누르면, 컨트롤이 첫 번째 문자 키를 누르면와 일치 하는 컬렉션의 첫 번째 항목을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> and sets some of its properties derived from <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 에서 파생 된 해당 속성 중 일부를 설정 하 고 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>This code requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> control, two <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> controls, and three <ph id="ph3">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> controls created on a form.</source>
          <target state="translated">이 코드를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 컨트롤, 두 개의 <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> 컨트롤과 3 <ph id="ph3">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 폼에 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>Label the <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> controls <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.BorderStyle%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.TextAlign%2A&gt;</ph>.</source>
          <target state="translated">레이블은 <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> 컨트롤 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.BorderStyle%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.TextAlign%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>Label the <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> controls <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.InterceptArrowKeys%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.ReadOnly%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.UpDownBase.UpDownAlign%2A&gt;</ph>.</source>
          <target state="translated">레이블은 <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 컨트롤 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.InterceptArrowKeys%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.ReadOnly%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.UpDownBase.UpDownAlign%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>The code allows you to change the property values at run time and see how each affects the appearance and behavior of the spin box.</source>
          <target state="translated">코드를 사용 하면 런타임 시 속성 값을 변경 하 고 각각에 미치는 모양 및 동작 스핀 상자의 참조 수 있습니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>Add the following items to the combo box labeled BorderStyle: <ph id="ph1">`None`</ph>, <ph id="ph2">`Fixed3D`</ph>, and <ph id="ph3">`FixedSingle`</ph>.</source>
          <target state="translated">BorderStyle 콤보 상자에 다음 항목을 추가: <ph id="ph1">`None`</ph>, <ph id="ph2">`Fixed3D`</ph>, 및 <ph id="ph3">`FixedSingle`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.ReadOnly">
          <source>Add the following items to the combo box labeled TextAlign: <ph id="ph1">`Left`</ph>, <ph id="ph2">`Right`</ph>, and <ph id="ph3">`Center`</ph>.</source>
          <target state="translated">TextAlign 콤보 상자에 다음 항목을 추가: <ph id="ph1">`Left`</ph>, <ph id="ph2">`Right`</ph>, 및 <ph id="ph3">`Center`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.RescaleConstantsForDpi(System.Int32,System.Int32)">
          <source>The DPI value prior to the change.</source>
          <target state="translated">변경 전의 DPI 값입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.RescaleConstantsForDpi(System.Int32,System.Int32)">
          <source>The DPI value after the change.</source>
          <target state="translated">변경 후의 DPI 값입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.RescaleConstantsForDpi(System.Int32,System.Int32)">
          <source>Provides constants for rescaling the control when a DPI change occurs.</source>
          <target state="translated">DPI가 변경될 때 컨트롤 크기를 재조정하기 위한 상수를 제공합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.Select(System.Int32,System.Int32)">
          <source>The position of the first character to be selected.</source>
          <target state="translated">선택된 첫째 문자의 위치입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.Select(System.Int32,System.Int32)">
          <source>The total number of characters to be selected.</source>
          <target state="translated">선택된 문자의 총 수입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.Select(System.Int32,System.Int32)">
          <source>Selects a range of text in the spin box (also known as an up-down control) specifying the starting position and number of characters to select.</source>
          <target state="translated">스핀 상자(up-down 컨트롤이라고도 함)에서 선택할 문자의 시작 위치와 수를 지정하는 텍스트의 범위를 선택합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.Select(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.Select%2A&gt;</ph> method can be used when the spin box gets focus, or when the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> property fails data validation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.Select%2A&gt;</ph> 스핀 상자에 포커스를 가져오면 하거나 메서드를 사용할 수는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> 속성 데이터 유효성 검사에 실패 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.Select(System.Int32,System.Int32)">
          <source>When adding the validation code for the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ValidateEditText%2A&gt;</ph> method in a derived class, call the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Select%2A&gt;</ph> method when validation fails.</source>
          <target state="translated">에 대 한 유효성 검사 코드를 추가 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ValidateEditText%2A&gt;</ph> 파생된 클래스, 호출의에서 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Select%2A&gt;</ph> 유효성 검사가 실패할 때 메서드.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.Select(System.Int32,System.Int32)">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.Select(System.Int32,System.Int32)">
          <source>This code requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> control and a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> have been created on a form and the <ph id="ph3">&lt;xref:System.Drawing&gt;</ph> namespace has been added as a reference.</source>
          <target state="translated">이 코드를 실행 하려면 한 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 폼에 만든 및 <ph id="ph3">&lt;xref:System.Drawing&gt;</ph> 네임 스페이스를 참조로 추가 되었습니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.Select(System.Int32,System.Int32)">
          <source>On the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event for the button, the point size of text in the <ph id="ph2">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> control increases.</source>
          <target state="translated">에 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> 단추에 대 한 이벤트에서 텍스트의 포인트 크기는 <ph id="ph2">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 증가 제어 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.Select(System.Int32,System.Int32)">
          <source>This prompts the control to adjust its <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.PreferredHeight%2A&gt;</ph> property so that all the text is visible in the control.</source>
          <target state="translated">컨트롤을 조정 하 라는 메시지를 표시 해당 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.PreferredHeight%2A&gt;</ph> 속성의 모든 텍스트 컨트롤에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.Select(System.Int32,System.Int32)">
          <source>After the user enters a new value and leaves the <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> control, the text is converted to a numeric value from a string value and validated to be between the <ph id="ph2">&lt;xref:System.Windows.Forms.NumericUpDown.Minimum%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.NumericUpDown.Maximum%2A&gt;</ph> values.</source>
          <target state="translated">사용자가 새 값을 입력 하 고 벗어날 후의 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 컨트롤, 텍스트 문자열 값에서 숫자 값으로 변환 되 고 사이의 값인지 확인는 <ph id="ph2">&lt;xref:System.Windows.Forms.NumericUpDown.Minimum%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.NumericUpDown.Maximum%2A&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.Select(System.Int32,System.Int32)">
          <source>If the value is not valid, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> is displayed with the error, and the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Select%2A&gt;</ph> method will select the text so the user can enter a new value.</source>
          <target state="translated">값 유효 하지 않을 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> 는 오류와 함께 표시 되 고 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Select%2A&gt;</ph> 메서드에서 사용자는 새 값을 입력할 수 있도록 텍스트를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.Text">
          <source>Gets or sets the text displayed in the spin box (also known as an up-down control).</source>
          <target state="translated">스핀 상자(up-down 컨트롤이라고도 함)에 표시되는 텍스트를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.Text">
          <source>The string value displayed in the spin box.</source>
          <target state="translated">스핀 상자에 표시되는 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.Text">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.UpdateEditText%2A&gt;</ph> method is called if the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> property is set while the <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.UserEdit%2A&gt;</ph> property is set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.UpdateEditText%2A&gt;</ph> 경우 메서드가 호출 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> 속성을 설정 하는 동안는 <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.UserEdit%2A&gt;</ph> 속성이로 설정 된 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.Text">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ValidateEditText%2A&gt;</ph> method is called if the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> property is set while the <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.UserEdit%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.ValidateEditText%2A&gt;</ph> 경우 메서드가 호출 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> 속성을 설정 하는 동안는 <ph id="ph3">&lt;xref:System.Windows.Forms.UpDownBase.UserEdit%2A&gt;</ph> 속성이로 설정 된 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.Text">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.Text">
          <source>This code requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> control and a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> have been created on a form and the <ph id="ph3">&lt;xref:System.Drawing&gt;</ph> namespace has been added as a reference.</source>
          <target state="translated">이 코드를 실행 하려면 한 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 폼에 만든 및 <ph id="ph3">&lt;xref:System.Drawing&gt;</ph> 네임 스페이스를 참조로 추가 되었습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.Text">
          <source>On the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event for the button, the point size of text in the <ph id="ph2">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> control increases.</source>
          <target state="translated">에 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> 단추에 대 한 이벤트에서 텍스트의 포인트 크기는 <ph id="ph2">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 증가 제어 합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.Text">
          <source>This prompts the control to adjust its <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.PreferredHeight%2A&gt;</ph> property so all the text is visible in the control.</source>
          <target state="translated">컨트롤을 조정 하 라는 메시지를 표시 해당 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.PreferredHeight%2A&gt;</ph> 속성의 모든 텍스트 컨트롤에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.Text">
          <source>After the user enters a new value and leaves the <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> control, the text is converted to a numeric value from a string value and validated to be between the <ph id="ph2">&lt;xref:System.Windows.Forms.NumericUpDown.Minimum%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.NumericUpDown.Maximum%2A&gt;</ph> values.</source>
          <target state="translated">사용자가 새 값을 입력 하 고 벗어날 후의 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 컨트롤, 텍스트 문자열 값에서 숫자 값으로 변환 되 고 사이의 값인지 확인는 <ph id="ph2">&lt;xref:System.Windows.Forms.NumericUpDown.Minimum%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.NumericUpDown.Maximum%2A&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.Text">
          <source>If the value is not valid, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> is displayed with the error, and the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Select%2A&gt;</ph> method will select the text so the user can enter a new value.</source>
          <target state="translated">값 유효 하지 않을 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> 는 오류와 함께 표시 되 고 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.Select%2A&gt;</ph> 메서드에서 사용자는 새 값을 입력할 수 있도록 텍스트를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.TextAlign">
          <source>Gets or sets the alignment of the text in the spin box (also known as an up-down control).</source>
          <target state="translated">스핀 상자(up-down 컨트롤이라고도 함)의 텍스트 맞춤을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.TextAlign">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.TextAlign">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.HorizontalAlignment.Left" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.HorizontalAlignment.Left" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.TextAlign">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> and sets some of its properties derived from <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 에서 파생 된 해당 속성 중 일부를 설정 하 고 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.TextAlign">
          <source>This code requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> control named <ph id="ph2">`numericUpDown1`</ph>, two <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> controls named <ph id="ph4">`comboBox1`</ph> and <ph id="ph5">`comboBox2`</ph>, and three <ph id="ph6">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> controls named <ph id="ph7">`checkBox1`</ph>, <ph id="ph8">`checkBox2`</ph>, and <ph id="ph9">`checkBox2`</ph> created on a form.</source>
          <target state="translated">이 코드를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 라는 컨트롤 <ph id="ph2">`numericUpDown1`</ph>, 두 개의 <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> 라는 컨트롤 <ph id="ph4">`comboBox1`</ph> 및 <ph id="ph5">`comboBox2`</ph>, 3 및 <ph id="ph6">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 라는 컨트롤 <ph id="ph7">`checkBox1`</ph>, <ph id="ph8">`checkBox2`</ph>, 및 <ph id="ph9">`checkBox2`</ph> 폼에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.TextAlign">
          <source>Add the following items to <ph id="ph1">`comboBox1`</ph>: <ph id="ph2">`None`</ph>, <ph id="ph3">`Fixed3D`</ph>, and <ph id="ph4">`FixedSingle`</ph>.</source>
          <target state="translated">다음 항목을 추가 <ph id="ph1">`comboBox1`</ph>: <ph id="ph2">`None`</ph>, <ph id="ph3">`Fixed3D`</ph>, 및 <ph id="ph4">`FixedSingle`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.TextAlign">
          <source>Add the following items to <ph id="ph1">`comboBox2`</ph>: <ph id="ph2">`Left`</ph>, <ph id="ph3">`Right`</ph>, and <ph id="ph4">`Center`</ph>.</source>
          <target state="translated">다음 항목을 추가 <ph id="ph1">`comboBox2`</ph>: <ph id="ph2">`Left`</ph>, <ph id="ph3">`Right`</ph>, 및 <ph id="ph4">`Center`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.TextAlign">
          <source>The code allows you to change the property values at run time and see how each affects the appearance and behavior of the spin box.</source>
          <target state="translated">코드를 사용 하면 런타임 시 속성 값을 변경 하 고 각각에 미치는 모양 및 동작 스핀 상자의 참조 수 있습니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.TextAlign">
          <source>The value assigned is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated">할당된 값이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.UpButton">
          <source>When overridden in a derived class, handles the clicking of the up button on the spin box (also known as an up-down control).</source>
          <target state="translated">파생 클래스에서 재정의되면 스핀 상자(up-down 컨트롤이라고도 함)의 위쪽 단추를 클릭하는 동작을 처리합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.UpButton">
          <source>When overriding this method in a derived class, be sure to call the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.UpdateEditText" /&gt;</ph> method.</source>
          <target state="translated">파생된 클래스에서이 메서드를 재정의 하는 경우 호출 해야는 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.UpDownBase.UpdateEditText" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.UpdateEditText">
          <source>When overridden in a derived class, updates the text displayed in the spin box (also known as an up-down control).</source>
          <target state="translated">파생 클래스에서 재정의되면 스핀 상자(up-down 컨트롤이라고도 함)에 표시되는 텍스트를 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.UpdateEditText">
          <source>When overriding this method in a derived class, be sure to update the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.UpDownBase.Text" /&gt;</ph> property of the spin box.</source>
          <target state="translated">파생된 클래스에서이 메서드를 재정의 하는 경우 업데이트 해야는 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.UpDownBase.Text" /&gt;</ph> 스핀 상자 속성입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.UpDownAlign">
          <source>Gets or sets the alignment of the up and down buttons on the spin box (also known as an up-down control).</source>
          <target state="translated">스핀 상자(up-down 컨트롤이라고도 함)에서 위쪽 및 아래쪽 단추의 맞춤을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.UpDownAlign">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.UpDownAlign">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.LeftRightAlignment.Right" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.LeftRightAlignment.Right" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.UpDownAlign">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> and sets some of its properties derived from <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 에서 파생 된 해당 속성 중 일부를 설정 하 고 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.UpDownAlign">
          <source>This code requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> control named <ph id="ph2">`numericUpDown1`</ph>, two <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> controls named <ph id="ph4">`comboBox1`</ph> and <ph id="ph5">`comboBox2`</ph>, and three <ph id="ph6">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> controls named <ph id="ph7">`checkBox1`</ph>, <ph id="ph8">`checkBox2`</ph>, and <ph id="ph9">`checkBox2`</ph> created on a form.</source>
          <target state="translated">이 코드를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> 라는 컨트롤 <ph id="ph2">`numericUpDown1`</ph>, 두 개의 <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> 라는 컨트롤 <ph id="ph4">`comboBox1`</ph> 및 <ph id="ph5">`comboBox2`</ph>, 3 및 <ph id="ph6">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 라는 컨트롤 <ph id="ph7">`checkBox1`</ph>, <ph id="ph8">`checkBox2`</ph>, 및 <ph id="ph9">`checkBox2`</ph> 폼에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.UpDownAlign">
          <source>Add the following items to <ph id="ph1">`comboBox1`</ph>: <ph id="ph2">`None`</ph>, <ph id="ph3">`Fixed3D`</ph>, and <ph id="ph4">`FixedSingle`</ph>.</source>
          <target state="translated">다음 항목을 추가 <ph id="ph1">`comboBox1`</ph>: <ph id="ph2">`None`</ph>, <ph id="ph3">`Fixed3D`</ph>, 및 <ph id="ph4">`FixedSingle`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.UpDownAlign">
          <source>Add the following items to <ph id="ph1">`comboBox2`</ph>: <ph id="ph2">`Left`</ph>, <ph id="ph3">`Right`</ph>, and <ph id="ph4">`Center`</ph>.</source>
          <target state="translated">다음 항목을 추가 <ph id="ph1">`comboBox2`</ph>: <ph id="ph2">`Left`</ph>, <ph id="ph3">`Right`</ph>, 및 <ph id="ph4">`Center`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.UpDownAlign">
          <source>The code allows you to change the property values at run time and see how each affects the appearance and behavior of the spin box.</source>
          <target state="translated">코드를 사용 하면 런타임 시 속성 값을 변경 하 고 각각에 미치는 모양 및 동작 스핀 상자의 참조 수 있습니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.UpDownAlign">
          <source>The value assigned is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated">할당된 값이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.UpDownBase.UserEdit">
          <source>Gets or sets a value indicating whether a value has been entered by the user.</source>
          <target state="translated">값을 입력했는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.UserEdit">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user has changed the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.UpDownBase.Text" /&gt;</ph> property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Windows.Forms.UpDownBase.Text" /&gt;</ph> 속성을 변경했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.UserEdit">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> property is set while the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.UserEdit%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.UpDownBase.UpdateEditText%2A&gt;</ph> method is called.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> 속성을 설정 하는 동안는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.UserEdit%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph3">`true`</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.UpDownBase.UpdateEditText%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.UpDownBase.UserEdit">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> property is set while the <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.UserEdit%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.UpDownBase.ValidateEditText%2A&gt;</ph> method is called.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.UpDownBase.Text%2A&gt;</ph> 속성을 설정 하는 동안는 <ph id="ph2">&lt;xref:System.Windows.Forms.UpDownBase.UserEdit%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph3">`false`</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.UpDownBase.ValidateEditText%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.ValidateEditText">
          <source>When overridden in a derived class, validates the text displayed in the spin box (also known as an up-down control).</source>
          <target state="translated">파생 클래스에서 재정의되면 스핀 상자(up-down 컨트롤이라고도 함)에 표시되는 텍스트의 유효성을 검사합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.ValidateEditText">
          <source>Some examples of validation include comparing the text entered to the data type set in your derived class, comparing the text to a list of values, or verifying the text to be within a range of values.</source>
          <target state="translated">유효성 검사 등과 같은 데이터 형식으로 파생된 클래스를 설정 값의 목록에 텍스트를 비교 하거나 텍스트를 확인할 값의 범위 내에 입력 한 텍스트를 비교 합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.ValidateEditText">
          <source>When overriding this method in a derived class, be sure to add code in this method to validate the text of the spin box.</source>
          <target state="translated">파생된 클래스에서이 메서드를 재정의할 때 스핀 상자 텍스트의 유효성을 검사 하려면이 메서드의 코드를 추가 해야 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.ValidateEditText">
          <source>This method will be called if the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.UpDownBase.UserEdit" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="false" /&gt;</ph> when the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.UpDownBase.Text" /&gt;</ph> property is set.</source>
          <target state="translated">경우이 메서드는 호출의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.UpDownBase.UserEdit" /&gt;</ph> 속성이로 설정 되어 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 때는 <ph id="ph3">&lt;see cref="P:System.Windows.Forms.UpDownBase.Text" /&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.WndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">처리할 Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.UpDownBase.WndProc(System.Windows.Forms.Message@)">
          <source>Processes Windows messages.</source>
          <target state="translated">Windows 메시지를 처리합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.WndProc(System.Windows.Forms.Message@)">
          <source>for calling to unmanaged code.</source>
          <target state="translated">에 대 한 비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.UpDownBase.WndProc(System.Windows.Forms.Message@)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연관 된 열거: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>