<Type Name="BindingManagerBase" FullName="System.Windows.Forms.BindingManagerBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40d487e63b8c4a75f7fc5c25827c2a3808b40ec0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BindingManagerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingManagerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingManagerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingManagerBase abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5d48b-101">동일한 데이터 소스 및 데이터 멤버에 바인딩되는 <see cref="T:System.Windows.Forms.Binding" /> 개체를 모두 관리합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5d48b-101">Manages all <see cref="T:System.Windows.Forms.Binding" /> objects that are bound to the same data source and data member.</span>
      </span>
      <span data-ttu-id="5d48b-102">이 클래스는 추상 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5d48b-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-103"><xref:System.Windows.Forms.BindingManagerBase> 동일한 데이터 소스에 바인딩된 Windows Form에 데이터 바인딩된 컨트롤의 동기화를 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-103">The <xref:System.Windows.Forms.BindingManagerBase> enables the synchronization of data-bound controls on a Windows Form that are bound to the same data source.</span></span> <span data-ttu-id="5d48b-104">(단순 컨트롤에 데이터 소스에 바인딩하는 방법에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.Binding> 클래스입니다.) 예를 들어 폼 두 개가 포함 <xref:System.Windows.Forms.TextBox> 동일한 데이터 소스에 있지만 서로 다른 열에 바인딩되는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-104">(For more information about simple binding a control to a data source, see the <xref:System.Windows.Forms.Binding> class.) For example, suppose that a form contains two <xref:System.Windows.Forms.TextBox> controls that are bound to the same data source but to different columns.</span></span> <span data-ttu-id="5d48b-105">데이터 원본 수는 <xref:System.Data.DataTable> 고객 이름 포함 하는 열 이름과 성을 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-105">The data source might be a <xref:System.Data.DataTable> that contains customer names, while the columns might contain the first and last names.</span></span> <span data-ttu-id="5d48b-106">두 개의 동일한 고객에 대 한 올바른 성과 이름을 표시 하기 위해 동기화 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-106">The two controls must be synchronized in order to display the correct first and last names together for the same customer.</span></span> <span data-ttu-id="5d48b-107"><xref:System.Windows.Forms.CurrencyManager>에서 상속 되는 <xref:System.Windows.Forms.BindingManagerBase> 클래스, 데이터 소스에서 현재 항목에 대 한 포인터를 유지 관리 하 여 이러한 동기화를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-107">The <xref:System.Windows.Forms.CurrencyManager>, which inherits from the <xref:System.Windows.Forms.BindingManagerBase> class, accomplishes this synchronization by maintaining a pointer to the current item in the data source.</span></span> <span data-ttu-id="5d48b-108"><xref:System.Windows.Forms.TextBox> 같은 행에 대 한 정보를 표시 하도록 컨트롤은 현재 항목에 바인딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-108">The <xref:System.Windows.Forms.TextBox> controls are bound to the current item so they display the information for the same row.</span></span> <span data-ttu-id="5d48b-109">현재 항목이 변경 될 때는 <xref:System.Windows.Forms.CurrencyManager> 는 바인딩된 컨트롤의 데이터를 새로 고칠 수 있도록 모든를 알립니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-109">When the current item changes, the <xref:System.Windows.Forms.CurrencyManager> notifies all the bound controls so that they can refresh their data.</span></span> <span data-ttu-id="5d48b-110">또한 설정할 수 있습니다는 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 속성에 있는 행을 지정 하는 <xref:System.Data.DataTable> 를 가리키는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-110">Furthermore, you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to specify the row in the <xref:System.Data.DataTable> that the controls point to.</span></span> <span data-ttu-id="5d48b-111">데이터 원본에 있는 행의 수를 확인 하려면 사용 하 여는 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-111">To determine how many rows exist in the data source, use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 <span data-ttu-id="5d48b-112"><xref:System.Windows.Forms.CurrencyManager> 는 데이터 소스에서 현재 항목 포인터를 반드시 유지 하지 않는 때문에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-112">The <xref:System.Windows.Forms.CurrencyManager> is necessary because data sources do not necessarily maintain a current-item pointer.</span></span> <span data-ttu-id="5d48b-113">예를 들어, 배열 및 <xref:System.Collections.ArrayList> 개체를 데이터 원본 수 있지만 현재 항목을 반환 하는 속성을 갖지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-113">For instance, arrays and <xref:System.Collections.ArrayList> objects can be data sources, but they do not have a property that returns the current item.</span></span> <span data-ttu-id="5d48b-114">현재 항목을 사용은 <xref:System.Windows.Forms.BindingManagerBase.Current%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-114">To get the current item, use the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property.</span></span>  
  
 <span data-ttu-id="5d48b-115"><xref:System.Windows.Forms.PropertyManager> 에서 상속 되는 <xref:System.Windows.Forms.BindingManagerBase>, 데이터 원본에 있는 현재 개체의 속성이 아니라 개체의 현재 속성을 유지 하기 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-115">The <xref:System.Windows.Forms.PropertyManager> also inherits from the <xref:System.Windows.Forms.BindingManagerBase>, and it is used to maintain the current property of an object, rather than the property of a current object in a data source.</span></span> <span data-ttu-id="5d48b-116">이러한 이유로 설정 하는 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 또는 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 속성에 대 한는 <xref:System.Windows.Forms.PropertyManager> 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-116">For this reason, trying to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> or <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property for a <xref:System.Windows.Forms.PropertyManager> has no effect.</span></span>  
  
 <span data-ttu-id="5d48b-117">만들려는 <xref:System.Windows.Forms.BindingManagerBase>를 사용 하 여는 <xref:System.Windows.Forms.BindingContext> 중 하나를 반환 하는 클래스는 <xref:System.Windows.Forms.CurrencyManager> 또는 <xref:System.Windows.Forms.PropertyManager>관리 되는 데이터 원본에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-117">To create a <xref:System.Windows.Forms.BindingManagerBase>, use the <xref:System.Windows.Forms.BindingContext> class, which returns either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>, depending on the data source being managed.</span></span>  
  
 <span data-ttu-id="5d48b-118">솔루션 프로그래머는 컨트롤에 직접 바인딩하는 것이 좋습니다는 <xref:System.Windows.Forms.BindingSource> 구성 요소를 데이터 원본 및 대상 실제 데이터 원본에 데이터 커넥터 역할을 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-118">Solutions programmers are encouraged to bind controls directly to a <xref:System.Windows.Forms.BindingSource> component, which acts as both a data source and data connector to the actual target data source.</span></span> <span data-ttu-id="5d48b-119"><xref:System.Windows.Forms.BindingSource> 컨트롤과 해당 대상 사이의 현재 위치 관리를 포함 하 여 모두 간단 하 고 복잡 한 데이터 바인딩 크게 단순화 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-119"><xref:System.Windows.Forms.BindingSource> greatly simplifies both simple and complex data binding, including managing currency between the control and its target.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d48b-120">다음 코드 예제에서는 <xref:System.Windows.Forms.BindingContext> 반환 하는 <xref:System.Windows.Forms.BindingManagerBase> 특정 데이터 원본에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-120">The following code example uses the <xref:System.Windows.Forms.BindingContext> to return a <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="5d48b-121">(이 예제에서는 사용자가 선언한 가정 `myBindingManagerBase` 모듈의 선언 섹션에 있습니다.) 예제에서는 그런 이벤트 대리자는 <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> 및 <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-121">(The example assumes you have declared `myBindingManagerBase` in the Declarations section of the module.) The example then adds event delegates to the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> and <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> events.</span></span> <span data-ttu-id="5d48b-122">이 예제에서는 4 개의 메서드를 포함 하는 마지막으로, (`MoveNext`, `MovePrevious`, `MoveFirst`, 및 `MoveLast`)를 증가 또는 감소 시키는 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 속성을 설정은 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 목록에서 첫 번째 또는 마지막 행을 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-122">Lastly, the example contains four methods (`MoveNext`, `MovePrevious`, `MoveFirst`, and `MoveLast`) that increment or decrement the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property, and set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the first or last row in the list.</span></span> <span data-ttu-id="5d48b-123">사용 하 여 목록에서 마지막 행이 결정 됩니다는 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-123">The last row in the list is determined by using the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="5d48b-124">상속 하는 경우 <see cref="T:System.Windows.Forms.BindingManagerBase" />, 추상 멤버를 재정의 해야 합니다: <see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Count" />, <see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Current" />, <see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />, <see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />, <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />, <see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" /><see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />, <see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />, 및 <see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="5d48b-124">When you inherit from <see cref="T:System.Windows.Forms.BindingManagerBase" />, you must override the following abstract members: <see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Count" />, <see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Current" />, <see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />, <see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />, <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />, <see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />, <see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />, <see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />, and <see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Windows.Forms.PropertyManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingManagerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingManagerBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-125">
            <see cref="T:System.Windows.Forms.BindingManagerBase" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-125">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingManagerBase" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-126">기본 생성자 집합은 <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> 속성을 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-126">The default constructor sets the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public abstract void AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-127">파생된 클래스에서 재정의되면 내부 목록에 새 항목을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-127">When overridden in a derived class, adds a new item to the underlying list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-128"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> 메서드 내부 목록에 해당 항목의 형식에 대 한 기본 생성자를 사용 하 여 새 항목을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-128">The <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> method adds a new item to the underlying list by using the default constructor for that item's type.</span></span> <span data-ttu-id="5d48b-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> 사용자 지정 구성 요소에 복잡 한 데이터 바인딩 지원 추가 프로그래머가 사용 하는 데 주로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is intended primarily to be used by programmers adding complex data-binding support to their custom component.</span></span>  
  
 <span data-ttu-id="5d48b-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> 응용 프로그램 프로그래머를 사용자 지정 된 항목을 만들기 위한 고유 코드를 삽입할 수 있는 다음과 같은 패턴을 사용 하 여 일반적으로 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is commonly implemented using the following pattern that allows application programmers to inject their own code for creating customized items:</span></span>  
  
1.  <span data-ttu-id="5d48b-131"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A>는 <xref:System.Windows.Forms.BindingSource.AddingNew> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-131"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> raises the <xref:System.Windows.Forms.BindingSource.AddingNew> event.</span></span>  
  
2.  <span data-ttu-id="5d48b-132">프로그래머는 처리 하 여 사용자 지정 항목을 제공할 수는 <xref:System.Windows.Forms.BindingSource.AddingNew> 이벤트와 설정은 <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> 속성의는 <xref:System.ComponentModel.AddingNewEventArgs> 새 항목에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-132">The programmer can supply a custom item by handling the <xref:System.Windows.Forms.BindingSource.AddingNew> event and setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter to the new item.</span></span> <span data-ttu-id="5d48b-133">그렇지 않은 경우 구성 요소가 기본 생성자를 사용 하 여 항목을 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-133">Otherwise, the component should create an item using the default constructor.</span></span>  
  
3.  <span data-ttu-id="5d48b-134">데이터 소스를 구현 하지 않는 경우는 <xref:System.ComponentModel.IEditableObject> 인터페이스, 데이터 원본 및 기본 목록에 항목이 즉시 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-134">If the data source does not implement the <xref:System.ComponentModel.IEditableObject> interface, the item is immediately added to the data source and underlying list.</span></span> <span data-ttu-id="5d48b-135">이 인터페이스를 사용할 수 있으면 추가 작업이 하 여 처리 됩니다는 <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> 및 <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d48b-135">If this interface is supported, then the addition is transacted by the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-136">데이터 바인딩 작업이 완료되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-136">Occurs at the completion of a data-binding operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-137"><xref:System.Windows.Forms.BindingManagerBase.BindingComplete> 이 이벤트는 다음을 포함할 수 있는 한 데이터 바인딩 작업이 완료 된 후 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-137">The <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event occurs after the completion of a data-binding operation, which may include the following:</span></span>  
  
-   <span data-ttu-id="5d48b-138">바인딩된 컨트롤의 속성에 데이터 소스에서 정보를 푸시합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-138">Pushing information from the data source into the property of its bound control.</span></span>  
  
-   <span data-ttu-id="5d48b-139">연결 된 데이터 소스에 바인딩된 컨트롤에서 정보 가져오기.</span><span class="sxs-lookup"><span data-stu-id="5d48b-139">Pulling information from a bound control into its associated data source.</span></span>  
  
 <span data-ttu-id="5d48b-140">바인딩 작업의 완료 상태에 관계 없이이 이벤트는 발생 참고를 검사 하 여이 상태를 확인할 수 있습니다 하지만 <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> 의 속성은 <xref:System.Windows.Forms.BindingCompleteEventArgs> 이벤트와 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-140">Note that this event is raised regardless of the completion status of the binding operation, although this status can be determined by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter associated with the event.</span></span> <span data-ttu-id="5d48b-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> 오류 및 예외 정보가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> may also contain error and exception information.</span></span> <span data-ttu-id="5d48b-142">바인딩 작업 예를 들어,에 있는 데이터 원본의 null 값을 밀어는 <xref:System.Windows.Forms.DateTimePicker> 컨트롤은 예외를 이후 생성 한 <xref:System.DateTime> 수 없습니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-142">For example, a binding operation that attempts to push a null value from a data source into a <xref:System.Windows.Forms.DateTimePicker> control will generate an exception, since a <xref:System.DateTime> cannot be `null`.</span></span> <span data-ttu-id="5d48b-143">이 경우 바인딩 작업, 성공적으로 완료 되지 않더라도 <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> 이벤트가 발생 하 고 시도가 실패 한 바인딩에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-143">In this case, although the binding operation does not successfully complete, the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event will be raised, and the event will contain information on the failed binding attempt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d48b-144">다음 코드 예제에서는 처리 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> 이벤트 및 동일한 데이터 소스에 바인딩된 여러 컨트롤의 컨트롤 값 중 하나가 변경 되 면 들이 동기화 상태가 유지 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-144">The following code example demonstrates how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed.</span></span> <span data-ttu-id="5d48b-145">이 예제를 실행 하려면 Windows Form과 호출에 코드를 붙여넣습니다는 `InitializeControlsAndData` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d48b-145">To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      </Docs>
    </Member>
    <Member MemberName="Bindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingsCollection Bindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingsCollection Bindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bindings As BindingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingsCollection ^ Bindings { System::Windows::Forms::BindingsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-146">관리되는 바인딩의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-146">Gets the collection of bindings being managed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d48b-147">이 <see cref="T:System.Windows.Forms.BindingsCollection" />가 관리하는 <see cref="T:System.Windows.Forms.Binding" /> 개체가 포함된 <see cref="T:System.Windows.Forms.BindingManagerBase" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-147">A <see cref="T:System.Windows.Forms.BindingsCollection" /> that contains the <see cref="T:System.Windows.Forms.Binding" /> objects managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d48b-148">다음 코드 예제에서는 <xref:System.Windows.Forms.BindingManagerBase> 특정 데이터 원본에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-148">The following code example gets the <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="5d48b-149">이 예제에서는 다음 사용 하 여는 <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> 동일한 데이터 소스에 바인딩된 속성을 각 컨트롤에 대 한 정보를 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-149">The example then uses the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to print information about each control bound to the same data source.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      </Docs>
    </Member>
    <Member MemberName="CancelCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void CancelCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelCurrentEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-150">파생 클래스에서 재정의되면 현재 편집을 취소합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-150">When overridden in a derived class, cancels the current edit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-151">데이터 원본 구현 하는 경우에이 메서드는 지원의 <xref:System.ComponentModel.IEditableObject> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-151">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="5d48b-152">개체를 구현 하지 않는 경우는 <xref:System.ComponentModel.IEditableObject> 인터페이스에는 데이터 변경 내용이 삭제 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-152">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be discarded.</span></span>  
  
 <span data-ttu-id="5d48b-153">호출 된 <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> 메서드를 사용 하면은 <xref:System.Windows.Forms.Binding.Format> 이벤트를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-153">Calling the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> method causes the <xref:System.Windows.Forms.Binding.Format> event to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d48b-154">다음 코드 예제에서는 모두는 <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> 및 <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d48b-154">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="5d48b-155">호출 하는 경우는 <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> 메서드는 데이터 변경 내용이 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-155">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="5d48b-156">호출 하는 경우는 <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> 메서드를 변경 내용이 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-156">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-157">파생 클래스에서 재정의된 경우 <see cref="T:System.Windows.Forms.BindingManagerBase" />가 관리하는 행의 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-157">When overridden in a derived class, gets the number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d48b-158">
            <see cref="T:System.Windows.Forms.BindingManagerBase" />가 관리하는 행의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-158">The number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-159">사용 하 여는 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 속성 목록에 의해 유지 관리 하는 행의 마지막 항목을 확인 하는 <xref:System.Windows.Forms.BindingManagerBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-159">Use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property to determine the last item in the list of rows maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="5d48b-160">마지막 항목으로 이동 하려면 설정는 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 속성을는 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 속성 값 1 뺀 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-160">To go to the last item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property value minus 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d48b-161">다음 코드 설정 하는 예제에서는 네 가지 메서드는 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-161">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="5d48b-162">`MoveNext` 메서드는 속성을 1 씩 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-162">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="5d48b-163">`MovePrevious` 메서드 감소 속성을 1 씩 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-163">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="5d48b-164">`MoveFirst` 메서드는 속성을 0으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-164">The `MoveFirst` method sets the property to 0.</span></span> <span data-ttu-id="5d48b-165">`MoveLast` 속성의 값을 설정 하는 메서드는 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 속성 값-1입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-165">The `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public abstract object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Current" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-166">파생된 클래스에서 재정의되면 현재 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-166">When overridden in a derived class, gets the current object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d48b-167">현재 개체를 나타내는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-167">An <see cref="T:System.Object" /> that represents the current object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-168"><xref:System.Windows.Forms.BindingManagerBase.Current%2A> 개체 데이터 소스에서 현재 항목의 값을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-168">The <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object contains the value of the current item in the data source.</span></span> <span data-ttu-id="5d48b-169">현재 항목의 값을 사용 하려면 항목을 캐스팅 해야는 <xref:System.Type> 에 포함 된 개체의는 <xref:System.Windows.Forms.Binding.DataSource%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-169">To use the value of the current item, you must cast the item to the <xref:System.Type> of the object contained by the <xref:System.Windows.Forms.Binding.DataSource%2A>.</span></span> <span data-ttu-id="5d48b-170">예를 들어 한 <xref:System.Data.DataTable> 포함 <xref:System.Data.DataRowView> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-170">For example, a <xref:System.Data.DataTable> contains <xref:System.Data.DataRowView> objects.</span></span> <span data-ttu-id="5d48b-171">를 현재 개체의 형식을 확인 하려면 사용 된 <xref:System.Object.GetType%2A> 및 <xref:System.Type.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d48b-171">To determine the type of the current object, use the <xref:System.Object.GetType%2A> and <xref:System.Type.ToString%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d48b-172">때는 <xref:System.Windows.Forms.Binding.DataSource%2A> 는 <xref:System.Data.DataSet>, <xref:System.Data.DataViewManager>, 또는 <xref:System.Data.DataTable>를 바인딩하는 실제로 <xref:System.Data.DataView>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-172">When the <xref:System.Windows.Forms.Binding.DataSource%2A> is a <xref:System.Data.DataSet>, <xref:System.Data.DataViewManager>, or <xref:System.Data.DataTable>, you are actually binding to a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="5d48b-173">결과적으로 각 <xref:System.Windows.Forms.BindingManagerBase.Current%2A> 개체가 <xref:System.Data.DataRowView> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-173">Consequently, each <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object is a <xref:System.Data.DataRowView> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d48b-174">다음 코드 예제에서는 값을 인쇄는 <xref:System.Windows.Forms.BindingManagerBase.Current%2A> 개체는 <xref:System.Windows.Forms.BindingManagerBase> 에 <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-174">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="5d48b-175">이 예에서는 데이터 원본이 가정는 <xref:System.Data.DataTable> 포함 하는 <xref:System.Data.DataColumn> 라는 `CustName`합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-175">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-176">현재 바인딩된 항목이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-176">Occurs when the currently bound item changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-177"><xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> 이벤트가 발생할 때마다는 <xref:System.Windows.Forms.BindingManagerBase.Current%2A> 속성 변경 또는 <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-177">The <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property changes or the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs.</span></span>  
  
 <span data-ttu-id="5d48b-178">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-178">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d48b-179">다음 코드 예제에서는 값을 인쇄는 <xref:System.Windows.Forms.BindingManagerBase.Current%2A> 개체는 <xref:System.Windows.Forms.BindingManagerBase> 에 <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-179">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="5d48b-180">이 예에서는 데이터 원본이 가정는 <xref:System.Data.DataTable> 포함 하는 <xref:System.Data.DataColumn> 라는 `CustName`합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-180">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-181">현재 바인딩된 항목의 상태가 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-181">Occurs when the state of the currently bound item changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-182"><xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> 이벤트에서 현재 바인딩된 항목이 변경 될 때마다 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-182">The <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs whenever there is a change in the state in the currently bound item.</span></span> <span data-ttu-id="5d48b-183">이 항목의 속성 중 하나가 변경 하거나 항목 자체를 대체 하거나 이동할 경우 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-183">This can occur if one of the properties of this item is changed or if the item itself is replaced or moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d48b-184">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-184">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="5d48b-185">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-185">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span> <span data-ttu-id="5d48b-186">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-186">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="5d48b-187">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-187">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="5d48b-188">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.BindingManagerBase>와 같은 한 <xref:System.Windows.Forms.PropertyManager> 또는 <xref:System.Windows.Forms.CurrencyManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-188">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="5d48b-189">다음 인스턴스 이름을 `BindingManagerBase1` 이벤트 처리기가 연결 확인 하 고는 <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-189">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#82](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#82)]
 [!code-vb[System.Windows.Forms.EventExamples#82](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#82)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-190">
            <see cref="T:System.Exception" />에서 자동으로 <see cref="T:System.Windows.Forms.BindingManagerBase" />이 처리되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-190">Occurs when an <see cref="T:System.Exception" /> is silently handled by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-191">이 이벤트는 정보를 제공 하 고 CLS 공용 언어 사양 ()를 보고-규격 예외만 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-191">This event is informational and reports Common Language Specification (CLS)-compliant exceptions only.</span></span> <span data-ttu-id="5d48b-192">어떤 유형의 예외가 발생 확인 하려면이 이벤트를 처리 하 고 확인는 <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> 의 속성은 <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-192">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="5d48b-193">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-193">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d48b-194">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-194">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="5d48b-195">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.BindingManagerBase.DataError> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-195">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span> <span data-ttu-id="5d48b-196">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-196">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="5d48b-197">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-197">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="5d48b-198">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.BindingManagerBase>와 같은 한 <xref:System.Windows.Forms.PropertyManager> 또는 <xref:System.Windows.Forms.CurrencyManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-198">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="5d48b-199">다음 인스턴스 이름을 `BindingManagerBase1` 이벤트 처리기가 연결 확인 하 고는 <xref:System.Windows.Forms.BindingManagerBase.DataError> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-199">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#83](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#83)]
 [!code-vb[System.Windows.Forms.EventExamples#83](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#83)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void EndCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndCurrentEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-200">파생 클래스에서 재정의되면 현재 편집을 끝냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-200">When overridden in a derived class, ends the current edit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-201">데이터 원본 구현 하는 경우에이 메서드는 지원의 <xref:System.ComponentModel.IEditableObject> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-201">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="5d48b-202">이 경우 변경 내용이 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-202">In that case, changes will be saved.</span></span> <span data-ttu-id="5d48b-203">개체를 구현 하지 않는 경우는 <xref:System.ComponentModel.IEditableObject> 인터페이스는 데이터 변경 내용이 저장 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-203">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d48b-204">다음 코드 예제에서는 모두는 <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> 및 <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d48b-204">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="5d48b-205">호출 하는 경우는 <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> 메서드는 데이터 변경 내용이 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-205">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="5d48b-206">호출 하는 경우는 <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> 메서드를 변경 내용이 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-206">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemProperties">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-207">데이터 소스에 대한 속성 설명자의 목록을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-207">Gets the list of property descriptors for the data source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-208">파생 클래스에서 재정의되면 바인딩에 대한 속성 설명자의 컬렉션을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-208">When overridden in a derived class, gets the collection of property descriptors for the binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d48b-209">바인딩에 대한 속성 설명자를 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-209">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d48b-210">다음 코드 예제에서는 <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> 반환 하는 메서드는 <xref:System.ComponentModel.PropertyDescriptorCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-210">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection>.</span></span> <span data-ttu-id="5d48b-211">이 예제에서는 출력의 <xref:System.ComponentModel.MemberDescriptor.Name%2A> 및 현재 값 <xref:System.Data.DataColumn> 를 사용 하는 <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> 의 메서드는 <xref:System.ComponentModel.PropertyDescriptor>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-211">The example prints the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and value of the current <xref:System.Data.DataColumn> using the <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetItemProperties (dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSources">
          <span data-ttu-id="5d48b-212">데이터 소스가 들어 있는 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-212">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span>
          </span>
        </param>
        <param name="listAccessors">
          <span data-ttu-id="5d48b-213">테이블의 바인딩된 속성이 들어 있는 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-213">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d48b-214">지정된 <see cref="T:System.Collections.ArrayList" />를 사용하여 바인딩에 대한 속성 설명자의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-214">Gets the collection of property descriptors for the binding using the specified <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d48b-215">바인딩에 대한 속성 설명자를 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-215">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-216">이 메서드는 데이터 바인딩된 컨트롤을 만드는 개발자가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-216">This method is used by developers creating data-bound controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (Type listType, int offset, System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Type listType, int32 offset, class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetItemProperties (listType As Type, offset As Integer, dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(Type ^ listType, int offset, System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listType" Type="System.Type" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listType">
          <span data-ttu-id="5d48b-217">바인딩된 목록의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-217">The <see cref="T:System.Type" /> of the bound list.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="5d48b-218">메서드를 재귀적으로 호출하는 데 사용되는 카운터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-218">A counter used to recursively call the method.</span>
          </span>
        </param>
        <param name="dataSources">
          <span data-ttu-id="5d48b-219">데이터 소스가 들어 있는 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-219">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span>
          </span>
        </param>
        <param name="listAccessors">
          <span data-ttu-id="5d48b-220">테이블의 바인딩된 속성이 들어 있는 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-220">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d48b-221">이 <see cref="T:System.Windows.Forms.BindingManagerBase" />가 관리하는 항목의 속성 목록을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-221">Gets the list of properties of the items managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d48b-222">바인딩에 대한 속성 설명자를 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-222">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-223">이 오버 로드는 개발자가 데이터 바인딩된 컨트롤을 만들려면 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-223">This overload is used by developers to create data-bound controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d48b-224">다음 코드 예제에서는 <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> 반환 하는 메서드는 <xref:System.ComponentModel.PropertyDescriptorCollection> 에 대 한는 <xref:System.Windows.Forms.BindingManagerBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-224">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection> for a <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="5d48b-225">예제에서는 다음 출력는 <xref:System.ComponentModel.MemberDescriptor.Name%2A> 및 <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> 각 <xref:System.ComponentModel.PropertyDescriptor> 컬렉션에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-225">The example then prints out the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of each <xref:System.ComponentModel.PropertyDescriptor> in the collection.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="protected internal abstract string GetListName (System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetListName(class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetListName (listAccessors As ArrayList) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::String ^ GetListName(System::Collections::ArrayList ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="5d48b-226">테이블의 바인딩된 속성이 들어 있는 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-226">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d48b-227">파생 클래스에서 재정의된 경우 바인딩에 대한 데이터를 제공하는 목록 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-227">When overridden in a derived class, gets the name of the list supplying the data for the binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d48b-228">바인딩에 대한 데이터를 제공하는 목록 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-228">The name of the list supplying the data for the binding.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-229">바인딩이 보류되었는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-229">Gets a value indicating whether binding is suspended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d48b-230">바인딩이 보류되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-230">
              <see langword="true" /> if binding is suspended; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected internal void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnBindingComplete (args As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Forms.BindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="5d48b-231">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-231">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d48b-232">
            <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-232">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-233">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-233">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="5d48b-234">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-234">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="5d48b-235">또한 <xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-235">The <xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="5d48b-236">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-236">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5d48b-237">파생 클래스에서 <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5d48b-237">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="5d48b-238">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-238">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d48b-239">
            <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-239">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-240">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-240">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="5d48b-241">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-241">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="5d48b-242">또한 <xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-242">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="5d48b-243">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-243">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5d48b-244">파생 클래스에서 <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5d48b-244">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="onCurrentChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onCurrentChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onCurrentChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onCurrentChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onCurrentChangedHandler;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-245">
            <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> 이벤트의 이벤트 처리기를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-245">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="5d48b-246">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-246">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d48b-247">
            <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-247">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-248">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-248">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="5d48b-249">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-249">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="5d48b-250">또한 <xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-250">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="5d48b-251">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-251">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5d48b-252">파생 클래스에서 <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5d48b-252">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected internal void OnDataError (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDataError(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnDataError (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnDataError(Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="5d48b-253">
            <see cref="T:System.Exception" /> 이벤트를 발생시킨 <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-253">An <see cref="T:System.Exception" /> that caused the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event to occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d48b-254">
            <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-254">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-255">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-255">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="5d48b-256">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-256">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="5d48b-257">또한 <xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-257">The <xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="5d48b-258">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-258">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5d48b-259">파생 클래스에서 <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5d48b-259">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="onPositionChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onPositionChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onPositionChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onPositionChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onPositionChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onPositionChangedHandler;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-260">
            <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> 이벤트의 이벤트 처리기를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-260">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Position { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-261">파생 클래스에서 재정의되면, 이 데이터 소스에 바인딩된 컨트롤이 가리키는 내부 목록에서의 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-261">When overridden in a derived class, gets or sets the position in the underlying list that controls bound to this data source point to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d48b-262">내부 목록에서 위치를 지정하는 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-262">A zero-based index that specifies a position in the underlying list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-263">사용 하 여는 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 속성에서 관리 하는 기본 목록에서 반복 하는 <xref:System.Windows.Forms.BindingManagerBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-263">Use the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to iterate through the underlying list maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="5d48b-264">첫 번째 항목으로 이동 하려면 설정의 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 0입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-264">To go to the first item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to 0.</span></span> <span data-ttu-id="5d48b-265">목록의 끝으로 이동 하려면 설정는 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 의 값에는 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 속성 값-1입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-265">To go to the end of the list, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 <span data-ttu-id="5d48b-266"><xref:System.Windows.Forms.BindingManagerBase.PositionChanged> 이벤트가 발생할 때의 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 속성 값이 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-266">The <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event occurs when the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property value changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d48b-267">다음 코드 설정 하는 예제에서는 네 가지 메서드는 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-267">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="5d48b-268">`MoveNext` 메서드는 속성을 1 씩 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-268">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="5d48b-269">`MovePrevious` 메서드 감소 속성을 1 씩 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-269">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="5d48b-270">`MoveFirst` 속성을 0으로 설정 하는 메서드 및 `MoveLast` 속성의 값을 설정 하는 메서드는 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 속성 값-1입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-270">The `MoveFirst` method sets the property to 0, and the `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-271">
            <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> 속성 값이 변경된 후에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-271">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-272">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-272">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d48b-273">다음 코드 예제에서는 한 <xref:System.Windows.Forms.Binding>, 다음의 컬렉션에 추가 <xref:System.Windows.Forms.Binding> 에 대 한 개체는 <xref:System.Windows.Forms.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-273">The following code example creates a <xref:System.Windows.Forms.Binding>, and then adds it to a collection of <xref:System.Windows.Forms.Binding> objects for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="5d48b-274">이 예제에서는 다음 가져옵니다는 <xref:System.Windows.Forms.BindingManagerBase> 데이터 소스 및 대리자를 추가 대 한는 <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-274">The example then gets the <xref:System.Windows.Forms.BindingManagerBase> for the data source and adds a delegate to the <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PullData">
      <MemberSignature Language="C#" Value="protected void PullData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PullData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PullData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PullData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PullData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-275">정보를 반환하지 않고 데이터를 데이터 바인딩된 컨트롤에서 데이터 소스로 끌어옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-275">Pulls data from the data-bound control into the data source, returning no information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-276"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> 메서드는 프로그래밍 방식으로 데이터 소스에 다시 데이터 바인딩된 컨트롤에서 정보를 추출 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-276">The <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> method is a programmatic way to pull information from the data-bound control back into the data source.</span></span> <span data-ttu-id="5d48b-277">일반적으로 컨트롤을 자동으로 업데이트가 바인딩된 데이터 소스 포커스를 잃으면는 컨트롤의 표준 작업에 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-277">It is not required for standard operation of a control, since normally a control automatically updates its bound data source when focus leaves it.</span></span>  
  
 <span data-ttu-id="5d48b-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> 발생는 <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> 적절 하 게 원본 이벤트 및 데이터에 대해 변경 이벤트.</span><span class="sxs-lookup"><span data-stu-id="5d48b-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> raises the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and change events on the data source as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PushData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="PushData">
      <MemberSignature Language="C#" Value="protected void PushData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PushData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-279">정보를 반환하지 않고 데이터를 데이터 소스에서 데이터 바인딩된 컨트롤로 밀어 넣습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-279">Pushes data from the data source into the data-bound control, returning no information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-280"><xref:System.Windows.Forms.BindingManagerBase.PushData%2A> 메서드는 프로그래밍 방식으로 컨트롤을 데이터 바인딩된 컨트롤에 데이터 소스에서 정보를 푸시 하려면.</span><span class="sxs-lookup"><span data-stu-id="5d48b-280">The <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method is a programmatic way to push information from the data source into the data-bound control.</span></span> <span data-ttu-id="5d48b-281">데이터 원본 구현 하는 경우이 메서드는 필요 하지는 <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType> 있기 때문는 <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> 이벤트에 의해 자동으로 해당 현재 위치 관리자를 통해 업데이트할 수를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-281">This method is not required if the data source implements the <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType> interface, because the <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> event should automatically cause the control to be updated through its currency manager.</span></span>  
  
 <span data-ttu-id="5d48b-282">이 메서드가 때 발생 하는 경우는 <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> 수행 중인 작업는 <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> 메서드 반환 값이 즉시 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-282">If this method is issued when a <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> operation is being performed, the <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method returns immediately with a value of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PullData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public abstract void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5d48b-283">삭제할 행의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-283">The index of the row to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d48b-284">파생 클래스에서 재정의되면 지정된 인덱스에 있는 행을 내부 목록에서 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-284">When overridden in a derived class, deletes the row at the specified index from the underlying list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-285"><xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> 방법은 메서드 작동 방식을 결정할 수 데이터 원본에 의존 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-285">The <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method relies on the underlying data source to determine how the method behaves.</span></span> <span data-ttu-id="5d48b-286">(참조는 <xref:System.Windows.Forms.Binding> 지원 되는 데이터 원본의 목록에 대 한 클래스입니다.) 에 대 한 구현 하는 클래스 <xref:System.Collections.IList>, <xref:System.ComponentModel.IBindingList>, 또는 <xref:System.ComponentModel.ITypedList>도 강력 하 게 형식화 된 구현 하는 클래스 <xref:System.Collections.IList>, <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> 메서드는 실제로 해당 내용을 제거 하는 대신 기본 목록에는 행을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-286">(See the <xref:System.Windows.Forms.Binding> class for a list of supported data sources.) For classes that implement <xref:System.Collections.IList>, <xref:System.ComponentModel.IBindingList>, or <xref:System.ComponentModel.ITypedList>, as well as strongly typed classes that implement <xref:System.Collections.IList>, the <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method actually deletes the row in the underlying list instead of removing its contents.</span></span>  
  
 <span data-ttu-id="5d48b-287">내부 목록에 구현 하는 경우는 <xref:System.ComponentModel.IBindingList> 인터페이스는 <xref:System.ComponentModel.IBindingList.AllowRemove%2A> 속성을 반환 해야 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-287">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, the <xref:System.ComponentModel.IBindingList.AllowRemove%2A> property must return `true`.</span></span> <span data-ttu-id="5d48b-288">내부 목록에 구현 하는 경우는 <xref:System.Collections.IList> 인터페이스는 <xref:System.Collections.IList.IsFixedSize%2A> 속성을 반환 해야 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-288">If the underlying list implements the <xref:System.Collections.IList> interface, the <xref:System.Collections.IList.IsFixedSize%2A> property must return `false`.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_RemoveAt#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CPP/bindingmanagerbase_removeat.cpp#1)]
 [!code-csharp[BindingManagerBase_RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CS/bindingmanagerbase_removeat.cs#1)]
 [!code-vb[BindingManagerBase_RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/VB/bindingmanagerbase_removeat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="5d48b-289">지정된 <paramref name="index" />에 행이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-289">There is no row at the specified <paramref name="index" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public abstract void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResumeBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-290">파생 클래스에서 재정의되면 데이터 바인딩을 다시 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-290">When overridden in a derived class, resumes data binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> 및 <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> 데이터 바인딩 했다가 일시적 중단을 허용 하는 두 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="5d48b-292">데이터 바인딩 유효성 검사를 수행 하기 전에 데이터 필드를 편집 하려면 사용자를 허용 해야 하는 경우에 일반적으로 일시 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-292">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="5d48b-293">사용자는 두 번째 필드;에 맞는 것으로 필드를 변경 해야 할 수는 예를 들어 그렇지 않으면 첫 번째 필드의 유효성 검사 오류에 포함 되도록 두 번째 필드를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-293">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public abstract void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SuspendBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-294">파생 클래스에서 재정의되면 데이터 바인딩을 보류합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-294">When overridden in a derived class, suspends data binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> 및 <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> 데이터 바인딩 했다가 일시적 중단을 허용 하는 두 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="5d48b-296">데이터 바인딩 유효성 검사를 수행 하기 전에 데이터 필드를 편집 하려면 사용자를 허용 해야 하는 경우에 일반적으로 일시 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-296">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="5d48b-297">사용자는 두 번째 필드;에 맞는 것으로 필드를 변경 해야 할 수는 예를 들어 그렇지 않으면 첫 번째 필드의 유효성 검사 오류에 포함 되도록 두 번째 필드를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-297">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="UpdateIsBinding">
      <MemberSignature Language="C#" Value="protected abstract void UpdateIsBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateIsBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub UpdateIsBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void UpdateIsBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d48b-298">파생 클래스에서 재정의되면 바인딩을 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d48b-298">When overridden in a derived class, updates the binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d48b-299"><xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A> 메서드는 바인딩된 컨트롤과 데이터 소스 간의 데이터 바인딩을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-299">The <xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A> method updates the data binding between the bound control and its data source.</span></span> <span data-ttu-id="5d48b-300">복잡 한 데이터 바인딩 시나리오에 대 한 다시 설정 현재 위치를 기본 목록 맨 앞으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d48b-300">For complex data-binding scenarios, it also resets the current position to the beginning of the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
  </Members>
</Type>