<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Application.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac523cf5709c7b9981a55cf02267bf0f36cec7fa6ac.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23cf5709c7b9981a55cf02267bf0f36cec7fa6ac</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>Provides <ph id="ph1">&lt;see langword="static" /&gt;</ph> methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application.</source>
          <target state="translated">응용 프로그램을 시작 및 중지하기 위한 메서드, Windows 메시지를 처리하기 위한 메서드, 응용 프로그램에 대한 정보를 가져오기 위한 속성 등과 같이 응용 프로그램을 관리하기 위한 <ph id="ph1">&lt;see langword="static" /&gt;</ph> 메서드 및 속성을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> class has methods to start and stop applications and threads, and to process Windows messages, as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> 클래스에는 메서드가 시작 하 고 응용 프로그램 및 스레드를 중지 하 고 다음과 같이 Windows 메시지를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> starts an application message loop on the current thread and, optionally, makes a form visible.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> 현재 스레드에서 응용 프로그램 메시지 루프를 시작 하 고 필요에 따라으로 폼을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> stops a message loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> 메시지 루프를 중지 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> processes messages while your program is in a loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> 루프에서 프로그램이 동안 메시지를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.AddMessageFilter%2A&gt;</ph> adds a message filter to the application message pump to monitor Windows messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.AddMessageFilter%2A&gt;</ph> Windows 메시지를 모니터링 하는 응용 프로그램 메시지 펌프에 메시지 필터를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> lets you stop an event from being raised or perform special operations before invoking an event handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> 이벤트 발생을 중지 하거나 이벤트 처리기를 호출 하기 전에 특별 한 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>This class has <ph id="ph1">&lt;xref:System.Windows.Forms.Application.CurrentCulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CurrentInputLanguage%2A&gt;</ph> properties to get or set culture information for the current thread.</source>
          <target state="translated">이 클래스에 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.CurrentCulture%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CurrentInputLanguage%2A&gt;</ph> 문화권 현재 스레드에 대 한 정보를 속성을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>You cannot create an instance of this class.</source>
          <target state="translated">이 클래스의 인스턴스를 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The following code example lists numbers in a list box on a form.</source>
          <target state="translated">다음 코드 예제에서는 폼의 목록 상자에 숫자를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>Each time you click <ph id="ph1">`button1`</ph>, the application adds another number to the list.</source>
          <target state="translated">클릭할 때마다 <ph id="ph1">`button1`</ph>, 응용 프로그램 목록에 다른 숫자를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> to start the application, which creates the form, <ph id="ph3">`listBox1`</ph> and <ph id="ph4">`button1`</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph> 메서드 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> 폼을 생성 하는 응용 프로그램을 시작 하려면 <ph id="ph3">`listBox1`</ph> 및 <ph id="ph4">`button1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>When the user clicks <ph id="ph1">`button1`</ph>, the <ph id="ph2">`button1_Click`</ph> method displays a <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">사용자가 클릭할 때 <ph id="ph1">`button1`</ph>, <ph id="ph2">`button1_Click`</ph> 메서드 표시는 <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>If the user clicks <ph id="ph1">`No`</ph> on the <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>, the <ph id="ph3">`button1_Click`</ph> method adds a number to the list.</source>
          <target state="translated">사용자가 클릭할 경우 <ph id="ph1">`No`</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>, <ph id="ph3">`button1_Click`</ph> 메서드 목록에 숫자를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>If the user clicks <ph id="ph1">`Yes`</ph>, the application calls <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> to process all remaining messages in the queue and then to quit.</source>
          <target state="translated">사용자가 클릭할 경우 <ph id="ph1">`Yes`</ph>, 응용 프로그램 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 큐에 남아 있는 모든 메시지를 처리 하 고 종료 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The call to <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> will fail in partial trust.</source>
          <target state="translated">에 대 한 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 부분 신뢰 환경에서 실패 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IMessageFilter" /&gt;</ph> interface you want to install.</source>
          <target state="translated">설치하려는<ph id="ph1">&lt;see cref="T:System.Windows.Forms.IMessageFilter" /&gt;</ph> 인터페이스를 구현한 것입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Adds a message filter to monitor Windows messages as they are routed to their destinations.</source>
          <target state="translated">Windows 메시지가 대상 위치로 라우팅될 때 해당 메시지를 모니터링하기 위해 메시지 필터를 추가합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Use a message filter to prevent specific events from being raised or to perform special operations for an event before it is passed to an event handler.</source>
          <target state="translated">특정 이벤트가 발생 하지 않도록 설정 하려면 또는 이벤트 처리기에 전달 되기 전에 이벤트에 대 한 특별 한 작업을 수행 하는 메시지 필터를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Message filters are unique to a specific thread.</source>
          <target state="translated">메시지 필터는 특정 스레드에 고유 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>To prevent a message from being dispatched, the <ph id="ph1">`value`</ph> parameter instance that you pass to this method must override the <ph id="ph2">&lt;xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A&gt;</ph> method with the code to handle the message.</source>
          <target state="translated">메시지가 디스패치되 되지 않게 하려면는 <ph id="ph1">`value`</ph> 이 메서드에 전달 하는 매개 변수 인스턴스를 재정의 해야 합니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A&gt;</ph> 메시지를 처리 하는 코드를 사용 하 여 메서드.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The method must return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">`false`</ph>를 반환해야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Adding message filters to the message pump for an application can degrade performance.</source>
          <target state="translated">응용 프로그램에 대 한 메시지 펌프에 메시지 필터를 추가 하면 성능이 저하 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The following code example creates a message filter called <ph id="ph1">`TestMessageFilter`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 라는 메시지 필터를 만들고 <ph id="ph1">`TestMessageFilter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>This filter blocks all messages relating to the left mouse button.</source>
          <target state="translated">이 필터는 마우스 왼쪽된 단추와 관련 된 모든 메시지를 차단 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Before you can use a message filter, you must provide an implementation for the <ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> interface.</source>
          <target state="translated">에 대 한 구현을 제공 해야 메시지 필터를 사용 하려면 먼저는 <ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">비관리 코드를 호출할 직접 실행 호출자입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.AllowQuit">
          <source>Gets a value indicating whether the caller can quit this application.</source>
          <target state="translated">호출자가 해당 응용 프로그램을 끝낼 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.AllowQuit">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the caller can quit this application; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">호출자가 해당 응용 프로그램을 끝낼 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.AllowQuit">
          <source>This property returns <ph id="ph1">`false`</ph> if it is called from a <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> being hosted within a Web browser.</source>
          <target state="translated">이 속성은 반환 <ph id="ph1">`false`</ph> 에서 호출 되 면는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> 웹 브라우저 내에서 호스트 되 고 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.AllowQuit">
          <source>Thus, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> cannot quit the <ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph>.</source>
          <target state="translated">따라서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> 종료할 수 없습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>Occurs when the application is about to shut down.</source>
          <target state="translated">응용 프로그램이 종료되려고 할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>You must attach the event handlers to the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> event to perform unhandled, required tasks before the application stops running.</source>
          <target state="translated">이벤트 처리기를 연결 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 처리 되지 않은, 수행 하도록 이벤트를 응용 프로그램의 실행이 중지 되기 전에 작업 해야 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>You can close files opened by this application, or dispose of objects that garbage collection did not reclaim.</source>
          <target state="translated">이 응용 프로그램 또는 개체를 가비지 수집이 회수 하지 않은 처리에서 연 파일을 닫을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>Because this is a static event, you must detach any event handlers attached to this event in the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph> event handler itself.</source>
          <target state="translated">이 이벤트에 연결 된 모든 이벤트 처리기를 분리 해야 정적 이벤트 이기 때문에 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph> 자체 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>If you do not detach these handlers, they will remain attached to the event and continue to consume memory.</source>
          <target state="translated">이러한 처리기를 분리 하면 경우 이벤트에 연결 된 상태로 유지는 및 메모리 사용을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The following code example displays two forms and exits the application when both forms are closed.</source>
          <target state="translated">다음 코드 예제에서는 두 개의 폼을 표시 하 고 모두 폼이 닫히면 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>When the application starts and exits, the position of each form is remembered.</source>
          <target state="translated">응용 프로그램 시작 하 고 종료 하는 경우 각 폼의 위치가 기억 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>This example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph> event to know when the form positions should be persisted to the file, and when the <ph id="ph2">`FileStream`</ph> should be closed.</source>
          <target state="translated">사용 하 여 보여 주는이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph> 시점과 폼 위치는 파일에 유지 해야 하는 시점에 대해 알아야 하는 이벤트는 <ph id="ph2">`FileStream`</ph> 을 닫아야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The class <ph id="ph1">`MyApplicationContext`</ph> inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> and keeps track of when each form is closed, and exits the current thread when they both are.</source>
          <target state="translated">클래스 <ph id="ph1">`MyApplicationContext`</ph> 에서 상속 <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 한 각 폼 닫혀 있고 모두 있을 때에 현재 스레드를 종료 하는 경우를 추적 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The class remembers the position of each form when it is closed.</source>
          <target state="translated">클래스를 닫을 때 각 폼의 위치를 기억 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph> event occurs, the class writes the positions of each for the user to the file.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph> 이벤트가 발생 하면 클래스 각각에 대 한 사용자의 위치는 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The form position data is stored in a file titled <ph id="ph1">`appdata.txt`</ph> that is created in the location determined by <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">폼 위치 데이터 파일에 저장 됩니다 <ph id="ph1">`appdata.txt`</ph> 의해 결정 된 위치에 만들어진 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">`Application.Run(context)`</ph> to start the application given the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph> 메서드 호출 <ph id="ph2">`Application.Run(context)`</ph> 제공 된 응용 프로그램을 시작 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class overview.</source>
          <target state="translated">이 코드에 표시 된 예의 일부는는 <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> for the whole code listing.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 전체 코드 목록에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>Gets the path for the application data that is shared among all users.</source>
          <target state="translated">모든 사용자가 공유하는 응용 프로그램 데이터의 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>The path for the application data that is shared among all users.</source>
          <target state="translated">모든 사용자가 공유하는 응용 프로그램 데이터의 경로입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>If a path does not exist, one is created in the following format:</source>
          <target state="translated">경로가 존재 하지 않을 경우 다음과 같은 형식에는 하나이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source><bpt id="p1">*</bpt>Base Path<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated"><bpt id="p1">*</bpt>기본 경로<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> first looks to see if the assembly containing the main executable has the <ph id="ph2">`AssemblyInformationalVersion`</ph> attribute on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> 첫 번째은 주 실행 파일을 포함 하는 어셈블리에 있는지 확인할 수 있는지 확인은 <ph id="ph2">`AssemblyInformationalVersion`</ph> 특성이 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>If this attribute exists, it is used for both <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">둘 다에 대해 사용 되는이 특성이 존재 하면 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>If this attribute does not exist, both properties use the version of the executable file instead.</source>
          <target state="translated">이 특성이 없는 경우 두 속성 대신 실행 파일의 버전을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>The path will be different depending on whether the Windows Forms application is deployed using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">경로 사용 하 여 Windows Forms 응용 프로그램은 배포 여부에 따라 달라 집니다 <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> applications are stored in a per-user application cache in the C:\Documents and Settings<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept> directory.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 응용 프로그램 C:\Documents and Settings에 사용자별으로 응용 프로그램 캐시에 저장 된<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept> 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>로컬 액세스 및 ClickOnce 응용 프로그램의 원격 데이터<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CommonAppDataRegistry">
          <source>Gets the registry key for the application data that is shared among all users.</source>
          <target state="translated">모든 사용자가 공유하는 응용 프로그램 데이터의 레지스트리 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataRegistry">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> representing the registry key of the application data that is shared among all users.</source>
          <target state="translated">모든 사용자가 공유하는 응용 프로그램 데이터의 레지스트리 키를 나타내는 <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataRegistry">
          <source>If the key does not exist, it is created in the following format:</source>
          <target state="translated">키가 없는 경우 다음 형식으로 만들어집니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataRegistry">
          <source>LocalMachine\Software<ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated">LocalMachine\Software<ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CompanyName">
          <source>Gets the company name associated with the application.</source>
          <target state="translated">응용 프로그램과 관련된 회사 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CompanyName">
          <source>The company name.</source>
          <target state="translated">회사 이름입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CompanyName">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 가져오고 텍스트 상자에 해당 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CompanyName">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">예제를 실행 하려면 <ph id="ph1">`textBox1`</ph> 폼에 배치 되었습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>Gets or sets the culture information for the current thread.</source>
          <target state="translated">현재 스레드에 대한 문화권 정보를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> representing the culture information for the current thread.</source>
          <target state="translated">현재 스레드에 대한 문화권 정보를 나타내는 <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 가져오고 텍스트 상자에 해당 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">예제를 실행 하려면 <ph id="ph1">`textBox1`</ph> 폼에 배치 되었습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>for all windows to set this property.</source>
          <target state="translated">이 속성을 설정 하는 모든 창입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>Gets or sets the current input language for the current thread.</source>
          <target state="translated">현재 스레드의 현재 입력 언어를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguage" /&gt;</ph> representing the current input language for the current thread.</source>
          <target state="translated">현재 스레드의 현재 입력 언어를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguage" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 가져오고 텍스트 상자에 해당 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">예제를 실행 하려면 <ph id="ph1">`textBox1`</ph> 폼에 배치 되었습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">비관리 코드를 호출할 직접 실행 호출자입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Processes all Windows messages currently in the message queue.</source>
          <target state="translated">현재 메시지 큐에 있는 모든 Windows 메시지를 처리합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>When you run a Windows Form, it creates the new form, which then waits for events to handle.</source>
          <target state="translated">Windows Form을 실행 하면 다음 이벤트를 처리할 때까지 대기 하는 새 양식을 만듭니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Each time the form handles an event, it processes all the code associated with that event.</source>
          <target state="translated">폼에 이벤트를 처리할 때마다 해당 이벤트와 연결 된 모든 코드를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>All other events wait in the queue.</source>
          <target state="translated">다른 모든 이벤트는 큐에서 대기 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>While your code handles the event, your application does not respond.</source>
          <target state="translated">코드에서 이벤트를 처리 하는 동안 응용 프로그램 응답 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>For example, the window does not repaint if another window is dragged on top.</source>
          <target state="translated">예를 들어 다른 창 맨 위로 끌면 경우 창이 그려지지 않습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> in your code, your application can handle the other events.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> 응용 프로그램 코드에서 다른 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>For example, if you have a form that adds data to a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> and add <ph id="ph2">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> to your code, your form repaints when another window is dragged over it.</source>
          <target state="translated">예를 들어, 데이터를 추가 하는 폼을 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 추가 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> 코드에 폼이 다시 그려집니다 다른 창 위로 끌 때.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>If you remove <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> from your code, your form will not repaint until the click event handler of the button is finished executing.</source>
          <target state="translated">제거 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> 사용자 코드에서 폼이 그려집니다 단추의 click 이벤트 처리기가 완료 될 때까지 실행 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>For more information on messaging, see <bpt id="p1">[</bpt>User Input in Windows Forms<ept id="p1">](~/docs/framework/winforms/user-input-in-windows-forms.md)</ept>.</source>
          <target state="translated">메시징에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>Windows Forms에 사용자 입력<ept id="p1">](~/docs/framework/winforms/user-input-in-windows-forms.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Unlike Visual Basic 6.0, the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> method does not call the <ph id="ph2">&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Visual Basic 6.0과 달리는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> 메서드를 호출 하지 않습니다는 <ph id="ph2">&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Typically, you use this method in a loop to process messages.</source>
          <target state="translated">일반적으로 메시지를 처리 하는 루프에서이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Calling this method causes the current thread to be suspended while all waiting window messages are processed.</source>
          <target state="translated">이 메서드를 호출 하면 현재 스레드가 모든 대기 중인 창 메시지를 처리 하는 동안 일시 중단 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>If a message causes an event to be triggered, then other areas of your application code may execute.</source>
          <target state="translated">메시지로 인해 시작 옵션으로 이벤트를 응용 프로그램 코드의 다른 영역 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>This can cause your application to exhibit unexpected behaviors that are difficult to debug.</source>
          <target state="translated">이 인해 응용 프로그램을 디버그 하기 어려운 예기치 않은 동작이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>If you perform operations or computations that take a long time, it is often preferable to perform those operations on a new thread.</source>
          <target state="translated">연산 또는 시간이 오래 걸리는 계산을 수행 하면 것이 새 스레드에 대해 작업을 수행 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>For more information about asynchronous programming, see <bpt id="p1">[</bpt>Asynchronous Programming Model (APM)<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)</ept>.</source>
          <target state="translated">비동기 프로그래밍에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>비동기 프로그래밍 모델 (APM)<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>When the example runs, a user can select graphics files from an <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>.</source>
          <target state="translated">예제를 실행 하는 경우 선택할 수 있는 그래픽 파일에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>The selected files are displayed in the form.</source>
          <target state="translated">선택한 파일은 폼에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> method forces a repaint of the form for each graphics file opened.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> 메서드를 사용 하면 열려 있는 각 그래픽 파일에 대 한 폼의 다시 그리기 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>To run this example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> named <ph id="ph2">`PictureBox1`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> named <ph id="ph4">`OpenFileDialog1`</ph>, and a button named <ph id="ph5">`fileButton`</ph>.</source>
          <target state="translated">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> 라는 <ph id="ph2">`PictureBox1`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> 라는 <ph id="ph4">`OpenFileDialog1`</ph>, 이라는 버튼 <ph id="ph5">`fileButton`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Call the <ph id="ph1">`InitializePictureBox`</ph> and <ph id="ph2">`InitializeOpenFileDialog`</ph> methods from the form's constructor or <ph id="ph3">`Load`</ph> method.</source>
          <target state="translated">호출 된 <ph id="ph1">`InitializePictureBox`</ph> 및 <ph id="ph2">`InitializeOpenFileDialog`</ph> 폼의 생성자에서 메서드 또는 <ph id="ph3">`Load`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>In <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>, if you add an <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> to your form by using a drag operation, you will have to modify the following <ph id="ph3">`InitializeOpenFileDialog`</ph> method by removing the line that creates a new instance of <ph id="ph4">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>추가 하는 경우, 한 <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> 끌기 작업을 사용 하 여 폼에 다음을 수정 해야 합니다 <ph id="ph3">`InitializeOpenFileDialog`</ph> 의 새 인스턴스를 만드는 줄을 제거 하 여 메서드 <ph id="ph4">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>The example also requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control and the <ph id="ph3">&lt;xref:System.Windows.Forms.FileDialog.FileOk&gt;</ph> event of the <ph id="ph4">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> are connected to the event handlers defined in the example.</source>
          <target state="translated">이 예제에서는 필요는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> 의 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 제어 및 <ph id="ph3">&lt;xref:System.Windows.Forms.FileDialog.FileOk&gt;</ph> 의 이벤트는 <ph id="ph4">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> 예제에 정의 된 이벤트 처리기에 연결 되어 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>When the example is running, display the dialog box by clicking the button.</source>
          <target state="translated">이 예제를 실행할 때 단추를 클릭 하 여 대화 상자를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>Enables visual styles for the application.</source>
          <target state="translated">응용 프로그램에 비주얼 스타일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>This method enables visual styles for the application.</source>
          <target state="translated">이 메서드는 응용 프로그램에 대 한 비주얼 스타일을 활성화합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>Visual styles are the colors, fonts, and other visual elements that form an operating system theme.</source>
          <target state="translated">비주얼 스타일 색, 글꼴 및 운영 체제 테마를 구성 하는 기타 시각적 요소 됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>Controls will draw with visual styles if the control and the operating system support it.</source>
          <target state="translated">컨트롤 및 운영 체제에서 지 원하는 경우 비주얼 스타일으로 컨트롤을 그립니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>To have an effect, <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> must be called before creating any controls in the application; typically, <ph id="ph2">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> is the first line in the <ph id="ph3">`Main`</ph> function.</source>
          <target state="translated">스타일이 적용 되려면 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> 응용 프로그램에 컨트롤을 만들기 전에 호출 해야 일반적으로 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> 의 첫 번째 줄은는 <ph id="ph3">`Main`</ph> 함수입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>A separate manifest is not required to enable visual styles when calling <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph>.</source>
          <target state="translated">별도 매니페스트를 호출할 때 비주얼 스타일을 사용 하지 않아도 됩니다 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>Prior to the .NET Framework 2.0, the <ph id="ph1">`FlatStyle`</ph> property of some controls, such as controls that derive from <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph>, had to be set to <ph id="ph3">&lt;xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType&gt;</ph> in order for the controls to be drawn with visual styles.</source>
          <target state="translated">.NET Framework 2.0 이전 버전의 <ph id="ph1">`FlatStyle`</ph> 에서 파생 되는 컨트롤과 같은 일부 컨트롤의 속성 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph>로 설정 해야 할 <ph id="ph3">&lt;xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType&gt;</ph> 컨트롤을 비주얼 스타일으로 그리기 위해.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>In applications written with the .NET Framework 2.0, this is no longer necessary.</source>
          <target state="translated">.NET Framework 2.0으로 작성 된 응용 프로그램에서는 이것이 더 이상 필요 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>This method will have no effect for controls hosted in Internet Explorer.</source>
          <target state="translated">이 메서드는 Internet Explorer에서 호스팅되는 컨트롤에 대 한 영향을 주지 않습니다 갖습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>The following code example demonstrates calling <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A&gt;</ph> in the <ph id="ph2">`Main`</ph> function to enable visual styles for the application.</source>
          <target state="translated">다음 코드 예제에서는 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A&gt;</ph> 에 <ph id="ph2">`Main`</ph> 함수를 응용 프로그램에 대 한 비주얼 스타일을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>Occurs when the application is about to enter a modal state.</source>
          <target state="translated">응용 프로그램이 모달 상태로 전환되려고 할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">정적 이벤트 이기 때문에 메모리 누수가 발생 하거나 응용 프로그램이 삭제 될 때 이벤트 처리기를 분리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnterThreadModal&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnterThreadModal&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnterThreadModal&gt;</ph> event.</source>
          <target state="translated">예제 코드를 실행 하려면 Windows Forms에 붙여 넣고 이벤트 처리기가 연결 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnterThreadModal&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>Requires <ph id="ph1">&lt;see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /&gt;</ph> permission to listen to the event.</source>
          <target state="translated">필요한 <ph id="ph1">&lt;see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /&gt;</ph> 이벤트를 수신할 수 있는 권한이 있습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>Gets the path for the executable file that started the application, including the executable name.</source>
          <target state="translated">응용 프로그램을 시작한 실행 파일의 경로(실행 파일 이름 포함)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>The path and executable name for the executable file that started the application.</source>
          <target state="translated">응용 프로그램을 시작한 실행 파일의 경로 및 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>This path will be different depending on whether the Windows Forms application is deployed using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">이 경로는 Windows Forms 응용 프로그램이 <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>를 사용하여 배포되는지 여부에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> applications are stored in a per-user application cache in the C:\Documents and Settings<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept> directory.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 응용 프로그램 C:\Documents and Settings에 사용자별으로 응용 프로그램 캐시에 저장 된<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept> 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>로컬 액세스 및 ClickOnce 응용 프로그램의 원격 데이터<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>for getting the path.</source>
          <target state="translated">에 경로 가져오는 중입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</source>
          <target state="translated">모든 메시지 펌프에 끝나야 함을 알리고 메시지가 처리된 후 모든 응용 프로그램 창을 닫습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Exit">
          <source>Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</source>
          <target state="translated">모든 메시지 펌프에 끝나야 함을 알리고 메시지가 처리된 후 모든 응용 프로그램 창을 닫습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method stops all running message loops on all threads and closes all windows of the application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 메서드는 모든 스레드에서 실행 중인 모든 메시지 루프를 중지 하 고 응용 프로그램의 모든 창을 닫습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>This method does not necessarily force the application to exit.</source>
          <target state="translated">이 메서드는 응용 프로그램 종료를 반드시 강제로 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method is typically called from within a message loop, and forces <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> to return.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 메시지 루프 및 힘 내에서 메서드는 일반적으로 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> 돌아갑니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>To exit a message loop for the current thread only, call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>.</source>
          <target state="translated">현재 스레드에 대 한 메시지 루프를 종료 하려면 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> raises the following events and performs the associated conditional actions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 다음 이벤트를 발생 시키고 연결된 된 조건부 작업을 수행:</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event is raised for every form represented by the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> property.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> 나타내는 각 폼에 대 한 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>This event can be canceled by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of their <ph id="ph2">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> parameter to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">설정 하 여이 이벤트는 취소할 수는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 속성의 해당 <ph id="ph2">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> 매개 변수를 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>If one of more of the handlers cancels the event, then <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> returns without further action.</source>
          <target state="translated">다음 중 하나 이상의 처리기에서 이벤트를 취소 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 추가 작업 없이 반환 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>Otherwise, a <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event is raised for every open form, then all running message loops and forms are closed.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> 열린 모든 폼에 대 한 이벤트는 다음 실행 중인 모든 메시지 루프와 forms 닫힙니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method does not raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events, which are obsolete as of <ph id="ph4">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 메서드 발생 하지 않습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 이벤트는의 일부로 사용 되지 않으므로 <ph id="ph4">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The following code example lists numbers in a list box on a form.</source>
          <target state="translated">다음 코드 예제에서는 폼의 목록 상자에 숫자를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>Each time you click <ph id="ph1">`button1`</ph>, the application adds another number to the list.</source>
          <target state="translated">클릭할 때마다 <ph id="ph1">`button1`</ph>, 응용 프로그램 목록에 다른 숫자를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> to start the application, which creates the form, <ph id="ph3">`listBox1`</ph>, and <ph id="ph4">`button1`</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph> 메서드 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> 폼을 생성 하는 응용 프로그램을 시작 하려면 <ph id="ph3">`listBox1`</ph>, 및 <ph id="ph4">`button1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>When the user clicks <ph id="ph1">`button1`</ph>, the <ph id="ph2">`button1_Click`</ph> method adds numbers one to three to the list box, and displays a <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">사용자가 클릭할 때 <ph id="ph1">`button1`</ph>, <ph id="ph2">`button1_Click`</ph> 숫자 목록 상자에 1 ~ 3을 추가 하 고 표시 하는 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>If the user clicks <bpt id="p1">**</bpt>No<ept id="p1">**</ept> on the <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>, the <ph id="ph2">`button1_Click`</ph> method adds another number to the list.</source>
          <target state="translated">사용자가 클릭할 경우 <bpt id="p1">**</bpt>아니요<ept id="p1">**</ept> 에 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>, <ph id="ph2">`button1_Click`</ph> 메서드 목록에 다른 숫자를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>If the user clicks <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>, the application calls <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>, to process all remaining messages in the queue and then to quit.</source>
          <target state="translated">사용자가 클릭할 경우 <bpt id="p1">**</bpt>예<ept id="p1">**</ept>, 응용 프로그램 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>, 큐에 남아 있는 모든 메시지를 처리 하 고 종료 됩니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The example requires that <ph id="ph1">`listBox1`</ph> and <ph id="ph2">`button1`</ph> have been instantiated and placed on a form.</source>
          <target state="translated">예제를 실행 하려면 <ph id="ph1">`listBox1`</ph> 및 <ph id="ph2">`button1`</ph> 인스턴스화되고 폼에 배치 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">비관리 코드를 호출할 직접 실행 호출자입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
          <source>Returns whether any <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> within the application cancelled the exit.</source>
          <target state="translated">응용 프로그램 내의 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>이 종료를 취소했는지 여부를 반환합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
          <source>Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</source>
          <target state="translated">모든 메시지 펌프에 끝나야 함을 알리고 메시지가 처리된 후 모든 응용 프로그램 창을 닫습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
          <source>For permission to terminate a running application thread.</source>
          <target state="translated">실행을 종료 하는 권한에 대 한 응용 프로그램 스레드입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>Exits the message loop on the current thread and closes all windows on the thread.</source>
          <target state="translated">현재 스레드의 메시지 루프를 종료하고 스레드의 모든 창을 닫습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>Use this method to exit the message loop of the current thread.</source>
          <target state="translated">이 메서드를 사용 하 여 현재 스레드의 메시지 루프를 종료 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>This method causes the call to <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> for the current thread to return.</source>
          <target state="translated">이 메서드를 호출을 사용 하면 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> 현재 스레드를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>To exit the entire application, call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>.</source>
          <target state="translated">전체 응용 프로그램을 종료 하려면 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">비관리 코드를 호출할 직접 실행 호출자입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)">
          <source>The Windows event message to filter.</source>
          <target state="translated">필터링할 Windows 이벤트 메시지입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)">
          <source>Runs any filters against a window message, and returns a copy of the modified message.</source>
          <target state="translated">창 메시지에 대한 필터를 실행하고 수정된 메시지의 복사본을 반환합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the filters were processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">필터가 처리되었으면 <ph id="ph1">&lt;see langword="True" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.Idle">
          <source>Occurs when the application finishes processing and is about to enter the idle state.</source>
          <target state="translated">응용 프로그램이 처리를 끝내고 유휴 상태가 되려고 할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>If you have tasks that you must perform before the thread becomes idle, attach them to this event.</source>
          <target state="translated">수행 해야 하는 작업이 있는 경우 스레드가 유휴 상태가, 전에이 이벤트에 첨부 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">정적 이벤트 이기 때문에 메모리 누수가 발생 하거나 응용 프로그램이 삭제 될 때 이벤트 처리기를 분리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Idle&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Idle&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>To run the example code, paste it into a Windows Form and make sure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Idle&gt;</ph> event.</source>
          <target state="translated">예제 코드를 실행 하려면 Windows Form에 붙여 넣고 이벤트 처리기와 연결 되어 있는지 확인은 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Idle&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>Occurs when the application is about to leave a modal state.</source>
          <target state="translated">응용 프로그램이 모달 상태에서 벗어나려고 할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">정적 이벤트 이기 때문에 메모리 누수가 발생 하거나 응용 프로그램이 삭제 될 때 이벤트 처리기를 분리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.LeaveThreadModal&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.LeaveThreadModal&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.LeaveThreadModal&gt;</ph> event.</source>
          <target state="translated">예제 코드를 실행 하려면 Windows Forms에 붙여 넣고 이벤트 처리기가 연결 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.LeaveThreadModal&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>Gets the path for the application data of a local, non-roaming user.</source>
          <target state="translated">로밍 사용자가 아닌 로컬 사용자의 응용 프로그램 데이터 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The path for the application data of a local, non-roaming user.</source>
          <target state="translated">로밍 사용자가 아닌 로컬 사용자의 응용 프로그램 데이터 경로입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>A local user is one whose user profile is stored on the system on which the user logged on.</source>
          <target state="translated">로컬 사용자가 하나 사용자 프로필이 사용자가 로그온에 시스템에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>If a path does not exist, one is created in the following format:</source>
          <target state="translated">경로가 존재 하지 않을 경우 다음과 같은 형식에는 하나이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source><bpt id="p1">*</bpt>Base Path<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated"><bpt id="p1">*</bpt>기본 경로<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>A typical base path is C:\Documents and Settings<ph id="ph1">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept>\Local Settings\Application Data.</source>
          <target state="translated">일반적인 기본 경로 C:\Documents and 설정을<ph id="ph1">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept>\local 데이터입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>This path will be different, however, if the Windows Forms application is deployed by using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">그러나이 경로 다를 수,를 사용 하 여 Windows Forms 응용 프로그램 배포 하는 경우 <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> creates its own application data directory that is isolated from all other applications.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 다른 모든 응용 프로그램에서 격리 된 자체 응용 프로그램 데이터 디렉터리를 만듭니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>로컬 액세스 및 ClickOnce 응용 프로그램의 원격 데이터<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The following code example displays two forms and exits the application when both forms are closed.</source>
          <target state="translated">다음 코드 예제에서는 두 개의 폼을 표시 하 고 모두 폼이 닫히면 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>When the application starts and exits, the position of each form is remembered.</source>
          <target state="translated">응용 프로그램 시작 하 고 종료 하는 경우 각 폼의 위치가 기억 됩니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>Although this example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph> property to store application data for the user, the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A&gt;</ph> can be used instead.</source>
          <target state="translated">하지만이 예제를 사용 하 여 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph> 사용자에 대 한 응용 프로그램 데이터를 저장 하는 속성의 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A&gt;</ph> 대신 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The <ph id="ph1">`MyApplicationContext`</ph> class inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> and keeps track when each form is closed, and exits the current thread when they both are.</source>
          <target state="translated"><ph id="ph1">`MyApplicationContext`</ph> 클래스에서 상속 <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 각 폼 닫혀 있고 모두 있을 때에 현재 스레드를 종료 하는 시기를 추적 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The class stores the positions of each form for the user.</source>
          <target state="translated">이 클래스는 사용자에 대 한 각 폼의 위치를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The form position data is stored in a file titled <ph id="ph1">`Appdata.txt`</ph> that is created in the location determined by <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">폼 위치 데이터 파일에 저장 됩니다 <ph id="ph1">`Appdata.txt`</ph> 의해 결정 된 위치에 만들어진 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">`Application.Run(context)`</ph> to start the application given the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph> 메서드 호출 <ph id="ph2">`Application.Run(context)`</ph> 제공 된 응용 프로그램을 시작 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class overview.</source>
          <target state="translated">이 코드에 표시 된 예의 일부는는 <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">일부 코드는 간단 하 게 나타내기 위해 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> for the whole code listing.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 전체 코드 목록에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.MessageLoop">
          <source>Gets a value indicating whether a message loop exists on this thread.</source>
          <target state="translated">이 스레드에 메시지 루프가 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.MessageLoop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a message loop exists; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">메시지 루프가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.MessageLoop">
          <source>When hosting Windows Forms in other environments, such as unmanaged applications, this property will always return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">관리 되지 않는 응용 프로그램과 같은 다른 환경에서 Windows Forms를 호스팅하는 경우이 속성은 항상 반환 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.MessageLoop">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.Application.RegisterMessageLoop%2A&gt;</ph> to instruct Windows Forms if the hosting environment still has an active message loop.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.RegisterMessageLoop%2A&gt;</ph> 에 대 한 호스팅 환경에 아직 활성 메시지 경우 Windows Forms 명령입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>Initializes OLE on the current thread.</source>
          <target state="translated">현재 스레드의 OLE를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Threading.ApartmentState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ApartmentState" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>Call this method before calling any <ph id="ph1">`Microsoft.Win32`</ph> method that requires OLE.</source>
          <target state="translated">이 메서드를 호출 하기 전에 호출 <ph id="ph1">`Microsoft.Win32`</ph> OLE를 필요로 하는 메서드.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OleRequired">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OleRequired%2A&gt;</ph> first checks to see if OLE has been initialized on the current thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OleRequired%2A&gt;</ph> 먼저 현재 스레드의 OLE를 초기화 하는 경우를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>If not, it initializes the thread for OLE.</source>
          <target state="translated">파일이 없으면 OLE에 대 한 스레드를 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>Unless a thread calls OLE methods directly, you do not need to call this method.</source>
          <target state="translated">스레드가 OLE 메서드를 직접 호출 하지 않으면이 메서드를 호출할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that represents the exception that was thrown.</source>
          <target state="translated">throw된 예외를 나타내는 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.ThreadException" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.ThreadException" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> to raise an exception that will halt processing of the application.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> 를 응용 프로그램의 처리를 중단 하는 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> class has a <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> 클래스에는 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>You can attach an event handler to this event to do whatever custom processing you need for unhandled exceptions.</source>
          <target state="translated">처리 되지 않은 예외에 대 한 필요한 사용자 지정 처리를 수행 하기 위해이 이벤트는 이벤트 처리기를 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>If you do not attach an event handler, <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> will execute the default behavior, which involves displaying a dialog box to inform the user that there has been an error.</source>
          <target state="translated">이벤트 처리기를 연결 하지 않는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> 오류가 발생 했음을 사용자에 게 알리기 위해 대화 상자를 표시 하는 기본 동작을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> only implements default exception behavior for unhandled exceptions that occur on threads owned by Windows Forms.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> Windows Forms에서 소유 하는 스레드에서 발생 하는 처리 되지 않은 예외에 대 한 기본 예외 동작을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>Unhandled exceptions on other threads are handled by the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event.</source>
          <target state="translated">다른 스레드에서 처리 되지 않은 예외를 처리는 <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>Gets a collection of open forms owned by the application.</source>
          <target state="translated">응용 프로그램에서 소유한 열려 있는 폼의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormCollection" /&gt;</ph> containing all the currently open forms owned by this application.</source>
          <target state="translated">이 응용 프로그램에서 소유하는 현재 열려 있는 폼을 모두 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> property represents a read-only collection of forms owned by the application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> 속성 응용 프로그램에서 소유 하는 폼의 읽기 전용 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>This collection can be searched by index position or by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">이 컬렉션을 검색 하는 인덱스 위치 또는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>Caller must have permission to access all windows, as defined by the <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph> value of the <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph> enumeration.</source>
          <target state="translated">호출자에 게에 정의 된 대로 모든 창에 액세스할 수 있는 권한이 있어야는 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph> 의 값은 <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.ProductName">
          <source>Gets the product name associated with this application.</source>
          <target state="translated">이 응용 프로그램과 관련된 제품 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>The product name.</source>
          <target state="translated">제품 이름입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source><ph id="ph1">`ProductName`</ph> is taken from the metadata of the assembly containing the main form of the current application.</source>
          <target state="translated"><ph id="ph1">`ProductName`</ph> 현재 응용 프로그램의 기본 폼을 포함 하는 어셈블리의 메타 데이터에서 가져옵니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>You can set it by setting <ph id="ph1">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph> inside of your assembly manifest.</source>
          <target state="translated">설정 하 여 설정할 수 있습니다 <ph id="ph1">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph> 어셈블리 매니페스트 내에서.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>For more information, see <bpt id="p1">[</bpt>Assembly Manifest<ept id="p1">](~/docs/framework/app-domains/assembly-manifest.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>어셈블리 매니페스트<ept id="p1">](~/docs/framework/app-domains/assembly-manifest.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 가져오고 텍스트 상자에 해당 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">예제를 실행 하려면 <ph id="ph1">`textBox1`</ph> 폼에 배치 되었습니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>Gets the product version associated with this application.</source>
          <target state="translated">이 응용 프로그램과 관련된 제품 버전을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>The product version.</source>
          <target state="translated">제품 버전입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>Typically, a version number displays as <bpt id="p1">*</bpt>major number<ept id="p1">*</ept>.<bpt id="p2">*</bpt>minor number<ept id="p2">*</ept>.<bpt id="p3">*</bpt>build number<ept id="p3">*</ept>.<bpt id="p4">*</bpt>private part number<ept id="p4">*</ept>.</source>
          <target state="translated">으로 버전 번호를 표시 하는 일반적으로 <bpt id="p1">*</bpt>수 주<ept id="p1">*</ept>.<bpt id="p2">*</bpt> 부 번호<ept id="p2">*</ept>.<bpt id="p3">*</bpt> 빌드 번호<ept id="p3">*</ept>.<bpt id="p4">*</bpt> 전용 부분 번호<ept id="p4">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>You can set it explicitly by setting the assembly version within your assembly manifest.</source>
          <target state="translated">어셈블리 매니페스트 내에서 어셈블리 버전을 설정 하 여 명시적으로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>For more information, see <bpt id="p1">[</bpt>Assembly Manifest<ept id="p1">](~/docs/framework/app-domains/assembly-manifest.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>어셈블리 매니페스트<ept id="p1">](~/docs/framework/app-domains/assembly-manifest.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> first looks to see if the assembly containing the main executable has the <ph id="ph2">`AssemblyInformationalVersion`</ph> attribute on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> 첫 번째은 주 실행 파일을 포함 하는 어셈블리에 있는지 확인할 수 있는지 확인은 <ph id="ph2">`AssemblyInformationalVersion`</ph> 특성이 있습니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>If this attribute exists, it is used for both <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">둘 다에 대해 사용 되는이 특성이 존재 하면 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>If this attribute does not exist, both properties use the version of the executable file instead.</source>
          <target state="translated">이 특성이 없는 경우 두 속성 대신 실행 파일의 버전을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 가져오고 텍스트 상자에 해당 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">예제를 실행 하려면 <ph id="ph1">`textBox1`</ph> 폼에 배치 되었습니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> objects to pass to the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Application.Idle" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> 이벤트에 전달할 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Application.Idle" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.Idle" /&gt;</ph> event in hosted scenarios.</source>
          <target state="translated">호스팅된 시나리오에서 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.Idle" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>This method is used when hosting Windows Forms in another environment, such as an unmanaged application.</source>
          <target state="translated">이 메서드는 관리 되지 않는 응용 프로그램과 같은 다른 환경에서 Windows Forms를 호스팅하는 경우에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>You should call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.RaiseIdle%2A&gt;</ph> when the hosting application enters an idle state.</source>
          <target state="translated">호출 해야 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.RaiseIdle%2A&gt;</ph> 호스팅 응용 프로그램 유휴 상태로 전환 하는 경우.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>This enables some Windows Forms controls and components to do important background work while the user is not interacting with the application.</source>
          <target state="translated">따라서 일부 Windows Forms 컨트롤 및 구성 요소는 사용자가 응용 프로그램 상호 작용 하지 하는 동안 중요 한 배경 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>The method to call when Windows Forms needs to check if the hosting environment is still sending messages.</source>
          <target state="translated">Windows Forms이 호스팅된 환경에서 아직 메시지를 보내고 있는지 여부를 확인해야 할 경우 호출할 메서드입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>Registers a callback for checking whether the message loop is running in hosted environments.</source>
          <target state="translated">호스팅된 환경에서 메시지 루프가 실행 중인지 여부를 확인하기 위한 콜백을 등록합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>This method is used when hosting Windows Forms in another environment, such as an unmanaged application.</source>
          <target state="translated">이 메서드는 관리 되지 않는 응용 프로그램과 같은 다른 환경에서 Windows Forms를 호스팅하는 경우에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>In hosted environments, the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.MessageLoop%2A&gt;</ph> property will always return false if Windows Forms is not processing messages.</source>
          <target state="translated">호스팅된 환경에서의 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.MessageLoop%2A&gt;</ph> 속성은 항상 Windows Forms 메시지를 처리 하지 않은 경우 false를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>Use this callback to tell Windows Forms if the hosting environment is still processing messages.</source>
          <target state="translated">사용 하 여이 콜백을 Windows Forms 호스팅 환경에서 아직 메시지를 처리 하는 경우.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IMessageFilter" /&gt;</ph> to remove from the application.</source>
          <target state="translated">응용 프로그램에서 제거할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IMessageFilter" /&gt;</ph>를 구현한 것입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Removes a message filter from the message pump of the application.</source>
          <target state="translated">응용 프로그램의 메시지 펌프에서 메시지 필터를 제거합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>You can remove a message filter when you no longer want to capture Windows messages before they are dispatched.</source>
          <target state="translated">더 이상 디스패치 되기 전에 Windows 메시지를 캡처하려고 할 때 메시지 필터를 제거할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Before you can use a message filter, you must provide an implementation for the <ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> interface.</source>
          <target state="translated">에 대 한 구현을 제공 해야 메시지 필터를 사용 하려면 먼저는 <ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The following class creates a message filter called <ph id="ph1">`TestMessageFilter`</ph>.</source>
          <target state="translated">다음 클래스는 라는 메시지 필터를 만듭니다 <ph id="ph1">`TestMessageFilter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>This filter blocks all messages relating to the left mouse button.</source>
          <target state="translated">이 필터는 마우스 왼쪽된 단추와 관련 된 모든 메시지를 차단 합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Gets a value specifying whether the current application is drawing controls with visual styles.</source>
          <target state="translated">현재 응용 프로그램에서 비주얼 스타일로 컨트롤을 그리고 있는지 여부를 지정하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if visual styles are enabled for controls in the client area of application windows; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">응용 프로그램 창의 클라이언트 영역에서 컨트롤에 비주얼 스타일이 사용되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>If you are drawing a custom control, use this property to decide whether to draw the control with or without visual styles, so that its appearance is consistent with other controls in the application.</source>
          <target state="translated">사용자 지정 컨트롤을 그리는 경우이 속성을 사용 하 여 모양을 응용 프로그램의 다른 컨트롤과 일치 되도록 비주얼 스타일로 컨트롤을 그릴 것인지를 결정 하 합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>The following table shows the four conditions that must exist for <ph id="ph1">&lt;xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A&gt;</ph> to return <ph id="ph2">`true`</ph>.</source>
          <target state="translated">다음 표에서 존재 해야 하는 4 개의 상태를 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A&gt;</ph> 반환할 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Condition</source>
          <target state="translated">조건</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>The operating system supports visual styles</source>
          <target state="translated">운영 체제에서 지원 비주얼 스타일</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>To verify this condition separately, use the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> class.</source>
          <target state="translated">이 조건을 별도로 확인하려면 <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A&gt;</ph> 클래스의 <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> 속성을 사용하세요.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>The user has enabled visual styles in the operating system</source>
          <target state="translated">사용자가 운영 체제에서 비주얼 스타일 활성화</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>To verify this condition separately, use the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> class.</source>
          <target state="translated">이 조건을 별도로 확인하려면 <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A&gt;</ph> 클래스의 <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> 속성을 사용하세요.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Visual styles are enabled in the application</source>
          <target state="translated">응용 프로그램에서 비주얼 스타일을 사용 하는</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Visual styles can be enabled in an application by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> method or by using an application manifest that specifies that ComCtl32.dll version 6 or later will be used to draw controls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> 메서드를 호출하여 또는 컨트롤 그리기에 ComCtl32.dll 버전 6 이상을 사용하도록 지정하는 응용 프로그램 매니페스트를 사용하여 응용 프로그램에서 비주얼 스타일을 사용하도록 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Visual styles are being used to draw the client area of application windows</source>
          <target state="translated">비주얼 스타일은 응용 프로그램 창의 클라이언트 영역을 그리는 데 사용 되 고</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>To verify this condition separately, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph> class and verify that it has the value <ph id="ph3">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAreaEnabled?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAndNonClientAreasEnabled?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 조건을 별도로 확인하려면 <ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph> 클래스의 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> 속성을 사용하고 값이 <ph id="ph3">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAreaEnabled?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAndNonClientAreasEnabled?displayProperty=nameWithType&gt;</ph>인지 확인하세요.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Restart">
          <source>Shuts down the application and starts a new instance immediately.</source>
          <target state="translated">응용 프로그램을 종료하고 즉시 새 인스턴스를 시작합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>The most common reason for calling <ph id="ph1">`Restart`</ph> is to start a new version of the application that you have downloaded through <ph id="ph2">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> using the <ph id="ph3">`Update`</ph> or <ph id="ph4">`UpdateAsync`</ph> method.</source>
          <target state="translated">호출에 대 한 가장 일반적인 이유 <ph id="ph1">`Restart`</ph> 통해 다운로드 한 응용 프로그램의 새 버전을 시작 하는 것 <ph id="ph2">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 를 사용 하는 <ph id="ph3">`Update`</ph> 또는 <ph id="ph4">`UpdateAsync`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>Applications are restarted in the context in which they were initially run.</source>
          <target state="translated">처음 실행 하는 것 컨텍스트에서 응용 프로그램 다시 시작 됩니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>If your application was started using a URL pointing directly to the application's main executable file, it will be restarted using the same URL.</source>
          <target state="translated">응용 프로그램에서 직접 응용 프로그램의 주 실행 파일을 가리키는 URL을 사용 하 여 시작 된 경우 동일한 URL을 사용 하 여 시작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>If your application is a <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> application, it will be restarted using <ph id="ph2">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">응용 프로그램이 <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 응용 프로그램을 사용 하 여 시작할 수 있습니다 <ph id="ph2">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>If your application was originally supplied command-line options when it first executed, <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Restart%2A&gt;</ph> will launch the application again with the same options.</source>
          <target state="translated">응용 프로그램 먼저 실행 하는 경우 명령줄 옵션이 제공된 되었으면 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Restart%2A&gt;</ph> 동일한 옵션을 사용 하 여 다시 응용 프로그램을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Restart">
          <source>Your code is not a Windows Forms application.</source>
          <target state="translated">사용자 코드가 Windows Forms 응용 프로그램이 아닌 경우.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Restart">
          <source>You cannot call this method in this context.</source>
          <target state="translated">이 컨텍스트에서 이 메서드를 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>Requires <ph id="ph1">&lt;see cref="M:System.Security.Permissions.SecurityPermission.IsUnrestricted" /&gt;</ph> permission.</source>
          <target state="translated">필요한 <ph id="ph1">&lt;see cref="M:System.Security.Permissions.SecurityPermission.IsUnrestricted" /&gt;</ph> 권한.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>Begins running a standard application message loop on the current thread.</source>
          <target state="translated">현재 스레드에서 표준 응용 프로그램 메시지 루프를 실행하기 시작합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run">
          <source>Begins running a standard application message loop on the current thread, without a form.</source>
          <target state="translated">폼을 사용하지 않고 현재 스레드에서 표준 응용 프로그램 메시지 루프를 실행하기 시작합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>In a Win32-based or Windows Forms application, a message loop is a routine in code that processes user events, such as mouse clicks and keyboard strokes.</source>
          <target state="translated">Win32 기반 또는 Windows Forms 응용 프로그램 메시지 루프는 마우스 클릭과 키보드 입력과 같은 사용자 이벤트를 처리 하는 코드에는 루틴입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>Every running Windows-based application requires an active message loop, called the main message loop.</source>
          <target state="translated">실행 중인 모든 Windows 기반 응용 프로그램에는 기본 메시지 루프를 호출 하면 현재 메시지 루프가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>When the main message loop is closed, the application exits.</source>
          <target state="translated">기본 메시지 루프를 닫을 때 응용 프로그램이 종료 됩니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>In Windows Forms, this loop is closed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method is called, or when the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> method is called on the thread that is running the main message loop.</source>
          <target state="translated">Windows Forms에서이 루프는 닫힙니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 메서드를 호출할 경우 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> 기본 메시지 루프를 실행 하는 스레드에서 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>Most Windows Forms developers will not need to use this version of the method.</source>
          <target state="translated">대부분 Windows Forms 개발자가이 버전의 메서드를 사용 하지 않아도 됩니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>You should use the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29&gt;</ph> overload to start an application with a main form, so that the application terminates when the main form is closed.</source>
          <target state="translated">사용 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29&gt;</ph> 오버 로드를 응용 프로그램 기본 폼이 닫힐 때 종료 되도록 응용 프로그램 기본 폼을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>For all other situations, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29&gt;</ph> overload, which supports supplying an <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> object for better control over the lifetime of the application.</source>
          <target state="translated">사용 하 여 다른 모든 상황에서 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29&gt;</ph> 오버 로드를 지 원하는 제공는 <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 효율적으로 제어할 응용 프로그램의 수명에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run">
          <source>A main message loop is already running on this thread.</source>
          <target state="translated">주 메시지 루프가 이미 이 스레드에서 실행되고 있는 경우</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> in which the application is run.</source>
          <target state="translated">응용 프로그램이 실행되는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>Begins running a standard application message loop on the current thread, with an <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph>를 사용하여 현재 스레드에서 표준 응용 프로그램 메시지 루프를 실행하기 시작합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The message loop runs until <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> is called or the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event is raised on the context object.</source>
          <target state="translated">메시지 루프 실행 될 때까지 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> 라고 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> 컨텍스트 개체에서 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The example displays two forms and exits the application when both forms are closed.</source>
          <target state="translated">이 예제에서는 두 개의 폼을 표시 하 고 모두 폼이 닫히면 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>When the application starts and exits, the position of each form is remembered.</source>
          <target state="translated">응용 프로그램 시작 하 고 종료 하는 경우 각 폼의 위치가 기억 됩니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>This example demonstrates how to use an <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>, along with the <ph id="ph2">`Application.Run(context)`</ph> method, to display multiple forms when the application starts.</source>
          <target state="translated">사용 하는 방법을 보여 주는이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>와 함께 <ph id="ph2">`Application.Run(context)`</ph> 방법에서 응용 프로그램이 시작 될 때 여러 폼을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The class <ph id="ph1">`MyApplicationContext`</ph> inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> and keeps track when each form is closed, and exits the current thread when they both are.</source>
          <target state="translated">클래스 <ph id="ph1">`MyApplicationContext`</ph> 에서 상속 <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 각 폼 닫혀 있고 모두 있을 때에 현재 스레드를 종료 하는 시기를 추적 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The class stores the positions of each form for the user.</source>
          <target state="translated">이 클래스는 사용자에 대 한 각 폼의 위치를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The form position data is stored in a file titled <ph id="ph1">`Appdata.txt`</ph> that is created in the location determined by <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">폼 위치 데이터 파일에 저장 됩니다 <ph id="ph1">`Appdata.txt`</ph> 의해 결정 된 위치에 만들어진 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">`Application.Run(context)`</ph> to start the application given the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph> 메서드 호출 <ph id="ph2">`Application.Run(context)`</ph> 제공 된 응용 프로그램을 시작 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The code for the <ph id="ph1">`AppForm1`</ph> and <ph id="ph2">`AppForm2`</ph> forms is not shown for the purpose of brevity.</source>
          <target state="translated">에 대 한 코드는 <ph id="ph1">`AppForm1`</ph> 및 <ph id="ph2">`AppForm2`</ph> forms 간단 하 게 나타내기 위해 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class overview for the whole code listing.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 전체 코드 목록에 대 한 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>A main message loop is already running on this thread.</source>
          <target state="translated">주 메시지 루프가 이미 이 스레드에서 실행되고 있는 경우</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the form to make visible.</source>
          <target state="translated">표시하려는 폼을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>Begins running a standard application message loop on the current thread, and makes the specified form visible.</source>
          <target state="translated">현재 스레드에서 표준 응용 프로그램 메시지 루프의 실행을 시작하고 지정된 폼을 표시합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>Typically, the main function of an application calls this method and passes to it the main window of the application.</source>
          <target state="translated">일반적으로 응용 프로그램의 main 함수는이 메서드를 호출 하 고 응용 프로그램의 주 창에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>This method adds an event handler to the <ph id="ph1">`mainForm`</ph> parameter for the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event.</source>
          <target state="translated">이벤트 처리기를 추가 하는이 메서드는 <ph id="ph1">`mainForm`</ph> 에 대 한 매개 변수는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The event handler calls <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> to clean up the application.</source>
          <target state="translated">이벤트 처리기 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> 응용 프로그램을 정리 합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> class will be called prior to the return of this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> 이 메서드의 반환 하기 전에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The following code example lists numbers in a list box on a form.</source>
          <target state="translated">다음 코드 예제에서는 폼의 목록 상자에 숫자를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>Each time you click <ph id="ph1">`button1`</ph>, the application adds another number to the list.</source>
          <target state="translated">클릭할 때마다 <ph id="ph1">`button1`</ph>, 응용 프로그램 목록에 다른 숫자를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> to start the application, which creates the form, <ph id="ph3">`listBox1`</ph>, and <ph id="ph4">`button1`</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph> 메서드 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> 폼을 생성 하는 응용 프로그램을 시작 하려면 <ph id="ph3">`listBox1`</ph>, 및 <ph id="ph4">`button1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>When the user clicks <ph id="ph1">`button1`</ph>, the <ph id="ph2">`button1_Click`</ph> method adds numbers one to three to the list box, and displays a <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">사용자가 클릭할 때 <ph id="ph1">`button1`</ph>, <ph id="ph2">`button1_Click`</ph> 숫자 목록 상자에 1 ~ 3을 추가 하 고 표시 하는 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>If the user clicks <bpt id="p1">**</bpt>No<ept id="p1">**</ept> on the <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>, the <ph id="ph2">`button1_Click`</ph> method adds another number to the list.</source>
          <target state="translated">사용자가 클릭할 경우 <bpt id="p1">**</bpt>아니요<ept id="p1">**</ept> 에 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>, <ph id="ph2">`button1_Click`</ph> 메서드 목록에 다른 숫자를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>If the user clicks <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>, the application calls <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> to process all remaining messages in the queue and then to quit.</source>
          <target state="translated">사용자가 클릭할 경우 <bpt id="p1">**</bpt>예<ept id="p1">**</ept>, 응용 프로그램 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 큐에 남아 있는 모든 메시지를 처리 하 고 종료 됩니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The example requires that <ph id="ph1">`listBox1`</ph> and <ph id="ph2">`button1`</ph> have been created and placed on a form.</source>
          <target state="translated">예제를 실행 하려면 <ph id="ph1">`listBox1`</ph> 및 <ph id="ph2">`button1`</ph> 만들고 폼에 배치 합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>A main message loop is already running on the current thread.</source>
          <target state="translated">주 메시지 루프가 이미 현재 스레드에서 실행되고 있는 경우</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat">
          <source>Gets or sets the format string to apply to top-level window captions when they are displayed with a warning banner.</source>
          <target state="translated">경고 배너와 함께 최상위 창 캡션이 표시될 때 이 캡션에 적용될 서식 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat">
          <source>The format string to apply to top-level window captions.</source>
          <target state="translated">최상위 창 캡션에 적용될 서식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat">
          <source>for all windows to set this property.</source>
          <target state="translated">이 속성을 설정 하는 모든 창입니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>The default value to use for new controls.</source>
          <target state="translated">새 컨트롤에 사용할 기본값입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, new controls that support <bpt id="p1">&lt;c&gt;</bpt>UseCompatibleTextRendering<ept id="p1">&lt;/c&gt;</ept> use the <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> based <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> class for text rendering; if <ph id="ph4">&lt;see langword="false" /&gt;</ph>, new controls use the <ph id="ph5">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> based <ph id="ph6">&lt;see cref="T:System.Windows.Forms.TextRenderer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 <bpt id="p1">&lt;c&gt;</bpt>UseCompatibleTextRendering<ept id="p1">&lt;/c&gt;</ept>을 지원하는 새 컨트롤이 텍스트 렌더링에 <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> 기반의 <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 클래스를 사용하고, <ph id="ph4">&lt;see langword="false" /&gt;</ph>이면 새 컨트롤이 <ph id="ph5">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> 기반의 <ph id="ph6">&lt;see cref="T:System.Windows.Forms.TextRenderer" /&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>Sets the application-wide default for the <bpt id="p1">&lt;c&gt;</bpt>UseCompatibleTextRendering<ept id="p1">&lt;/c&gt;</ept> property defined on certain controls.</source>
          <target state="translated">특정 컨트롤에 정의된 <bpt id="p1">&lt;c&gt;</bpt>UseCompatibleTextRendering<ept id="p1">&lt;/c&gt;</ept> 속성에 대한 응용 프로그램 수준의 기본값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>Certain Windows Forms controls can render their text using either the <ph id="ph1">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class, which is based on the <ph id="ph2">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> graphics library, or the <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> class, which is based on the <ph id="ph4">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> graphics library.</source>
          <target state="translated">특정 Windows Forms 컨트롤 중 하나를 사용 하 여 해당 텍스트를 렌더링할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> 클래스를 기반으로 하는 <ph id="ph2">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> 그래픽 라이브러리 또는 <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> 클래스를 기반으로 하는 <ph id="ph4">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> 그래픽 라이브러리입니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>This change was made in the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> because of performance and localization issues with <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>.</source>
          <target state="translated">이 변경 되었는지는 <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> 와 성능 및 지역화 문제로 인해 <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> to set the default value of the <ph id="ph2">`UseCompatibleTextRendering`</ph> property for controls that support it.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> 의 기본값을 설정 하는 <ph id="ph2">`UseCompatibleTextRendering`</ph> 지 원하는 컨트롤에 대 한 속성.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>The <ph id="ph1">`UseCompatibleTextRendering`</ph> property is intended to provide visual compatibility between Windows Forms controls that render text using the <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class and <ph id="ph3">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> and <ph id="ph4">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph> applications that perform custom text rendering using the <ph id="ph5">&lt;xref:System.Drawing.Graphics&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">`UseCompatibleTextRendering`</ph> 속성은 해당 렌더링 텍스트를 사용 하 여 Windows Forms 컨트롤 간의 시각적 호환성을 제공 하기 위한는 <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> 클래스 및 <ph id="ph3">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> 및 <ph id="ph4">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph> 는 를사용하여사용자지정텍스트렌더링을수행하는응용프로그램<ph id="ph5">&lt;xref:System.Drawing.Graphics&gt;</ph>클래스입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>In most cases, if your application is not being upgraded from <ph id="ph1">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> or <ph id="ph2">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph>, it is recommended that you leave <ph id="ph3">`UseCompatibleTextRendering`</ph> set to the default value of <ph id="ph4">`false`</ph>.</source>
          <target state="translated">대부분의 경우에서 응용 프로그램을 업그레이드 하는 경우 <ph id="ph1">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> 또는 <ph id="ph2">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph>를 그대로 사용 하는 것이 좋습니다. <ph id="ph3">`UseCompatibleTextRendering`</ph> 의 기본값으로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>The <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> based <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class was introduced in the <ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> to improve performance, make text look better, and improve support for international fonts.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> 기반 <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> 클래스에 도입 된는 <ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> 성능 향상을 위해 텍스트를 더 보기 좋게 및 국가별 글꼴에 대 한 지원 향상을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>In earlier versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, the <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> based <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> class was used to perform all text rendering.</source>
          <target state="translated">이전 버전의 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> 기반 <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> 클래스는 모든 텍스트 렌더링을 수행 하는 데 사용 되었습니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source><ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> calculates character spacing and word wrapping differently from <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> 문자 간격 및 줄 바꿈 다르게에서 계산 <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>In a Windows Forms application that uses the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> class to render text, this could cause the text for controls that use <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> to appear different from the other text in the application.</source>
          <target state="translated">사용 하는 Windows Forms 응용 프로그램에는 <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> 텍스트를 렌더링 하는 클래스를 사용 하는 컨트롤에 대 한 텍스트 될 수 <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> 다른 응용 프로그램에 다른 텍스트를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>To resolve this incompatibility, you can set the <ph id="ph1">`UseCompatibleTextRendering`</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이러한 호환성 문제를 해결 하려면 설정할 수 있습니다는 <ph id="ph1">`UseCompatibleTextRendering`</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>To set <ph id="ph1">`UseCompatibleTextRendering`</ph> to <ph id="ph2">`true`</ph> for all supported controls in the application, call the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> method with a parameter of <ph id="ph4">`true`</ph>.</source>
          <target state="translated">설정 하려면 <ph id="ph1">`UseCompatibleTextRendering`</ph> 를 <ph id="ph2">`true`</ph> 응용 프로그램에서 지원 되는 모든 컨트롤에 대 한 호출의 <ph id="ph3">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> 의 매개 변수를 사용 하 여 메서드 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>You should never call this method if your Windows Forms code is hosted in another application, such as Internet Explorer.</source>
          <target state="translated">Windows Forms 코드 Internet Explorer와 같은 다른 응용 프로그램에서 호스팅되는 경우이 메서드는 호출 하지 말아야 합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>Only call this method in stand-alone Windows Forms applications.</source>
          <target state="translated">만 독립 실행형 Windows Forms 응용 프로그램에서이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>To set the default value for <ph id="ph1">`UseCompatibleTextRendering`</ph> in <ph id="ph2">[!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]</ph> or later, see <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 기본값을 설정 하려면 <ph id="ph1">`UseCompatibleTextRendering`</ph> 에 <ph id="ph2">[!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]</ph> 이상 <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>In <ph id="ph1">[!INCLUDE[csprcslong](~/includes/csprcslong-md.md)]</ph> or later, a call to <ph id="ph2">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> is automatically generated in the Program.cs file.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[csprcslong](~/includes/csprcslong-md.md)]</ph> 이후 버전에 대 한 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> Program.cs 파일에서 자동으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>To change the text rendering default, modify the generated code.</source>
          <target state="translated">텍스트 렌더링 기본값을 변경 하려면 생성 된 코드를 수정 합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>You can only call this method before the first window is created by your Windows Forms application.</source>
          <target state="translated">Windows Forms 응용 프로그램에서 첫 번째 창이 만들어진 후에 이 메서드를 호출한 경우</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PowerState" /&gt;</ph> indicating the power activity mode to which to transition.</source>
          <target state="translated">전환할 전원 모드를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PowerState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to force the suspended mode immediately; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to cause Windows to send a suspend request to every application.</source>
          <target state="translated">일시 중단 모드를 즉시 적용하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, Windows에서 각 응용 프로그램에 일시 중단 요청을 보내게 하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to disable restoring the system's power status to active on a wake event, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to enable restoring the system's power status to active on a wake event.</source>
          <target state="translated">깨우기 이벤트가 발생할 때 시스템의 전원 상태를 활성 상태로 복원하지 않으려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 깨우기 이벤트가 발생할 때 시스템의 전원 상태를 활성 상태로 복원하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source>Suspends or hibernates the system, or requests that the system be suspended or hibernated.</source>
          <target state="translated">시스템을 일시 중단하거나 최대 절전 모드로 전환하거나, 시스템을 일시 중단하거나 최대 절전 모드로 전환하도록 요구합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the system is being suspended, otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">시스템이 일시 중단되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source>If an application does not respond to a suspend request within 20 seconds, Windows determines that it is in a non-responsive state, and that the application can either be put to sleep or terminated.</source>
          <target state="translated">20 초 내 응용 프로그램 일시 중단 요청에 응답 하지 않으면, 응답 하지 않는 상태 인지 하 고 있는지 응용 프로그램 수 중지 하거나 종료 확인 합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source>Once an application responds to a suspend request, however, it can take whatever time it needs to clean up resources and shut down active processes.</source>
          <target state="translated">하지만 응용 프로그램 일시 중단 요청에 응답, 리소스를 정리 하 고 활성 프로세스를 종료 하는 데 필요한 만큼의 시간 걸릴 수 있습니다 합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>Instructs the application how to respond to unhandled exceptions.</source>
          <target state="translated">처리되지 않은 예외에 응답하는 방법을 응용 프로그램에 지시합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</source>
          <target state="translated">다음 코드 예제에서는 Windows Forms 스레드와 다른 스레드에서 발생 하는 예외 발생 하는 예외에 대 한 이벤트 처리기를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>It sets <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> 모든 예외는 응용 프로그램의 사용자 구성 파일 설정에 관계 없이 응용 프로그램에서 처리할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>It uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to handle UI thread exceptions, and the <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle non-UI thread exceptions.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> UI 스레드가 예외를 처리 하는 이벤트 및 <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> UI가 아닌 스레드 예외를 처리 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>Since <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</source>
          <target state="translated">이후 <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> 응용 프로그램을 방지할 수의 종료,이 예제에서는 오류를 기록 하기만 종료 전에 응용 프로그램 이벤트 로그에 있습니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>This example assumes that you have defined two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls, <ph id="ph2">`button1`</ph> and <ph id="ph3">`button2`</ph>, on your <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">이 예에서는 두 개를 정의 했다고 가정 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤 <ph id="ph2">`button1`</ph> 및 <ph id="ph3">`button2`</ph>의 프로그램 <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UnhandledExceptionMode" /&gt;</ph> value describing how the application should behave if an exception is thrown without being caught.</source>
          <target state="translated">예외가 catch되지 않고 throw되는 경우 응용 프로그램의 동작을 설명하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UnhandledExceptionMode" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>Instructs the application how to respond to unhandled exceptions.</source>
          <target state="translated">처리되지 않은 예외에 응답하는 방법을 응용 프로그램에 지시합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>It is often not feasible to catch all of the exceptions thrown by Windows Forms.</source>
          <target state="translated">모든 Windows Forms에서 throw 된 예외를 catch 하는 수는 종종 없습니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.</source>
          <target state="translated">이 메서드를 사용 하 여 Windows Forms 구성 요소에서 throw 된 처리 되지 않은 모든 예외를 catch 하 고 작업을 계속할지 여부는 사용자에 게 노출 하 고 실행을 중단할지 응용 프로그램을 지시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> before you instantiate the main form of your application using the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> 사용 하 여 응용 프로그램의 기본 폼을 인스턴스화하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>To catch exceptions that occur in threads not created and owned by Windows Forms, use the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event handler.</source>
          <target state="translated">스레드가 생성 되지 발생 하는 예외를 catch 하 고 사용 하 여 Windows Forms에서 소유 하는 <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</source>
          <target state="translated">다음 코드 예제에서는 Windows Forms 스레드와 다른 스레드에서 발생 하는 예외 발생 하는 예외에 대 한 이벤트 처리기를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>It sets <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> 모든 예외는 응용 프로그램의 사용자 구성 파일 설정에 관계 없이 응용 프로그램에서 처리할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>It uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to handle UI thread exceptions, and the <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle non-UI thread exceptions.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> UI 스레드가 예외를 처리 하는 이벤트 및 <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> UI가 아닌 스레드 예외를 처리 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>Since <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</source>
          <target state="translated">이후 <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> 응용 프로그램을 방지할 수의 종료,이 예제에서는 오류를 기록 하기만 종료 전에 응용 프로그램 이벤트 로그에 있습니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>This example assumes that you have defined two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls, <ph id="ph2">`button1`</ph> and <ph id="ph3">`button2`</ph>, on your <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">이 예에서는 두 개를 정의 했다고 가정 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤 <ph id="ph2">`button1`</ph> 및 <ph id="ph3">`button2`</ph>의 프로그램 <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>You cannot set the exception mode after the application has created its first window.</source>
          <target state="translated">응용 프로그램에서 창을 처음 만든 후에는 예외 모드를 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UnhandledExceptionMode" /&gt;</ph> value describing how the application should behave if an exception is thrown without being caught.</source>
          <target state="translated">예외가 catch되지 않고 throw되는 경우 응용 프로그램의 동작을 설명하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UnhandledExceptionMode" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to set the thread exception mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스레드 예외 모드를 설정하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Instructs the application how to respond to unhandled exceptions, optionally applying thread-specific behavior.</source>
          <target state="translated">처리되지 않은 예외에 응답하고 필요에 따라 스레드 관련 동작을 적용하는 방법을 응용 프로그램에 지시합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>It is often not feasible to catch all of the exceptions thrown by Windows Forms.</source>
          <target state="translated">모든 Windows Forms에서 throw 된 예외를 catch 하는 수는 종종 없습니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.</source>
          <target state="translated">이 메서드를 사용 하 여 Windows Forms 구성 요소에서 throw 된 처리 되지 않은 모든 예외를 catch 하 고 작업을 계속할지 여부는 사용자에 게 노출 하 고 실행을 중단할지 응용 프로그램을 지시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> before you instantiate the main form of your application using the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> method.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> 사용 하 여 응용 프로그램의 기본 폼을 인스턴스화하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>When <ph id="ph1">`threadScope`</ph> is <ph id="ph2">`true`</ph>, the thread exception mode is set.</source>
          <target state="translated">때 <ph id="ph1">`threadScope`</ph> 은 <ph id="ph2">`true`</ph>, 스레드 예외 모드를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>The thread exception mode overrides the application exception mode if <ph id="ph1">`mode`</ph> is not set to <ph id="ph2">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph>.</source>
          <target state="translated">스레드 예외 모드를 사용 하는 경우 응용 프로그램 예외 모드를 재정의 <ph id="ph1">`mode`</ph> 로 설정 되지 않은 <ph id="ph2">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>When <ph id="ph1">`threadScope`</ph> is <ph id="ph2">`false`</ph>, the application exception mode is set.</source>
          <target state="translated">때 <ph id="ph1">`threadScope`</ph> 은 <ph id="ph2">`false`</ph>, 응용 프로그램 예외 모드를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>The application exception mode is used for all threads that have the <ph id="ph1">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph> mode.</source>
          <target state="translated">응용 프로그램 예외 모드 포함 된 모든 스레드에 사용 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph> 모드입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Setting the application exception mode does not affect the setting of the current thread.</source>
          <target state="translated">응용 프로그램 예외 모드를 설정 하는 경우에 현재 스레드의 설정을 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>To catch exceptions that occur in threads not created and owned by Windows Forms, use the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event handler.</source>
          <target state="translated">스레드가 생성 되지 발생 하는 예외를 catch 하 고 사용 하 여 Windows Forms에서 소유 하는 <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</source>
          <target state="translated">다음 코드 예제에서는 Windows Forms 스레드와 다른 스레드에서 발생 하는 예외 발생 하는 예외에 대 한 이벤트 처리기를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>It sets <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> 모든 예외는 응용 프로그램의 사용자 구성 파일 설정에 관계 없이 응용 프로그램에서 처리할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>It uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to handle UI thread exceptions, and the <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle non-UI thread exceptions.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> UI 스레드가 예외를 처리 하는 이벤트 및 <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> UI가 아닌 스레드 예외를 처리 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Since <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</source>
          <target state="translated">이후 <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> 응용 프로그램을 방지할 수의 종료,이 예제에서는 오류를 기록 하기만 종료 전에 응용 프로그램 이벤트 로그에 있습니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>This example assumes that you have defined two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls, <ph id="ph2">`button1`</ph> and <ph id="ph3">`button2`</ph>, on your <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">이 예에서는 두 개를 정의 했다고 가정 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤 <ph id="ph2">`button1`</ph> 및 <ph id="ph3">`button2`</ph>의 프로그램 <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>You cannot set the exception mode after the application has created its first window.</source>
          <target state="translated">응용 프로그램에서 창을 처음 만든 후에는 예외 모드를 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>Gets the path for the executable file that started the application, not including the executable name.</source>
          <target state="translated">응용 프로그램을 시작한 실행 파일의 경로(실행 파일 이름 제외)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>The path for the executable file that started the application.</source>
          <target state="translated">응용 프로그램을 시작한 실행 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>This path will be different depending on whether the Windows Forms application is deployed using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">이 경로는 Windows Forms 응용 프로그램이 <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>를 사용하여 배포되는지 여부에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> applications are stored in a per-user application cache in the C:\Documents and Settings<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept> directory.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 응용 프로그램 C:\Documents and Settings에 사용자별으로 응용 프로그램 캐시에 저장 된<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept> 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>로컬 액세스 및 ClickOnce 응용 프로그램의 원격 데이터<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">다음 코드 예제에서는이 속성을 가져오고 텍스트 상자에 해당 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">예제를 실행 하려면 <ph id="ph1">`textBox1`</ph> 폼에 배치 되었습니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>for getting the path.</source>
          <target state="translated">에 경로 가져오는 중입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Occurs when an untrapped thread exception is thrown.</source>
          <target state="translated">포착되지 않은 스레드 예외가 throw될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>This event allows your Windows Forms application to handle otherwise unhandled exceptions that occur in Windows Forms threads.</source>
          <target state="translated">이 이벤트는 Windows Forms 응용을 프로그램에서 Windows Forms 스레드에서 발생 하는 예외를 처리할 그렇지 않으면 처리 되지 않은을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Attach your event handlers to the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to deal with these exceptions, which will leave your application in an unknown state.</source>
          <target state="translated">이벤트 처리기에 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> 알 수 없는 상태에 응용 프로그램을 유지 하 되 이러한 예외를 처리 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Where possible, exceptions should be handled by a structured exception handling block.</source>
          <target state="translated">가능한 경우 구조적된 예외 처리 블록에서 예외를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>You can change whether this callback is used for unhandled Windows Forms thread exceptions by setting <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>.</source>
          <target state="translated">이 콜백을 설정 하 여 처리 되지 않은 Windows Forms 스레드 예외에 대 한 사용 되는지 여부를 변경할 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>To catch exceptions that occur in threads not created and owned by Windows Forms, use the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event handler.</source>
          <target state="translated">스레드가 생성 되지 발생 하는 예외를 catch 하 고 사용 하 여 Windows Forms에서 소유 하는 <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>To guarantee that no activations of this event are missed, you must attach a handler before you call <ph id="ph1">&lt;xref:System.Windows.Application.Run%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 이벤트의 활성화 되지 누락을 보장 하기 위해 연결 해야를 호출 하기 전에 처리기 <ph id="ph1">&lt;xref:System.Windows.Application.Run%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">정적 이벤트 이기 때문에 메모리 누수가 발생 하거나 응용 프로그램이 삭제 될 때 이벤트 처리기를 분리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</source>
          <target state="translated">다음 코드 예제에서는 Windows Forms 스레드와 다른 스레드에서 발생 하는 예외 발생 하는 예외에 대 한 이벤트 처리기를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>It sets <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> 모든 예외는 응용 프로그램의 사용자 구성 파일 설정에 관계 없이 응용 프로그램에서 처리할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>It uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to handle UI thread exceptions, and the <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle non-UI thread exceptions.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> UI 스레드가 예외를 처리 하는 이벤트 및 <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> UI가 아닌 스레드 예외를 처리 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Since <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</source>
          <target state="translated">이후 <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> 응용 프로그램을 방지할 수의 종료,이 예제에서는 오류를 기록 하기만 종료 전에 응용 프로그램 이벤트 로그에 있습니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>This example assumes that you have defined two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls, <ph id="ph2">`button1`</ph> and <ph id="ph3">`button2`</ph>, on your <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">이 예에서는 두 개를 정의 했다고 가정 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤 <ph id="ph2">`button1`</ph> 및 <ph id="ph3">`button2`</ph>의 프로그램 <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>for the immediate caller to call unmanaged code when adding a handler to this event.</source>
          <target state="translated">이 이벤트 처리기를 추가할 때 관리 되지 않는 코드를 호출 하는 직접 실행 호출자의 합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>Occurs when a thread is about to shut down.</source>
          <target state="translated">스레드가 종료되려고 할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>When the main thread for an application is about to be shut down, this event is raised first, followed by an <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.ApplicationExit" /&gt;</ph> event.</source>
          <target state="translated">응용 프로그램의 주 스레드가 종료되려고 할 때 이 이벤트가 발생한 다음 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.ApplicationExit" /&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>You must attach the event handlers to the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event to perform any unhandled, required tasks before the thread stops running.</source>
          <target state="translated">이벤트 처리기를 연결 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> 필요한 작업을 수행 하는 이벤트 처리 되지 않은, 스레드가 실행을 중지 하기 전에 필요한 작업입니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>Close files opened by this thread, or dispose of objects that the garbage collector did not reclaim.</source>
          <target state="translated">이 스레드를 배치 하거나 가비지 수집기가 회수 하는 개체에 의해 열린 파일을 닫습니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">정적 이벤트 이기 때문에 메모리 누수가 발생 하거나 응용 프로그램이 삭제 될 때 이벤트 처리기를 분리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event.</source>
          <target state="translated">예제 코드를 실행 하려면 Windows Forms에 붙여 넣고 이벤트 처리기가 연결 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.UnregisterMessageLoop">
          <source>Unregisters the message loop callback made with <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)" /&gt;</ph>를 사용하여 등록한 메시지 루프 콜백의 등록을 취소합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>Gets the path for the application data of a user.</source>
          <target state="translated">사용자의 응용 프로그램 데이터 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The path for the application data of a user.</source>
          <target state="translated">사용자의 응용 프로그램 데이터 경로입니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>If a path does not exist, one is created in the following format:</source>
          <target state="translated">경로가 존재 하지 않을 경우 다음과 같은 형식에는 하나이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source><bpt id="p1">*</bpt>Base Path<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated"><bpt id="p1">*</bpt>기본 경로<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>Data stored in this path is part of user profile that is enabled for roaming.</source>
          <target state="translated">이 경로에 저장 된 데이터에는 로밍를 사용 하는 사용자 프로필의 일부입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>A roaming user works on more than one computer in a network.</source>
          <target state="translated">로밍 사용자는 네트워크에 둘 이상의 컴퓨터에서 작동합니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on.</source>
          <target state="translated">로밍 사용자에 대 한 사용자 프로필은 네트워크의 서버에 유지 되 고 사용자가 로그온 할 때 시스템에 로드 됩니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.</source>
          <target state="translated">로밍에 대 한 것으로 간주 되려면 사용자 프로필에 대 한 운영 체제 로밍 프로필 지원 하 고 사용 하도록 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>A typical base path is C:\Documents and Settings<ph id="ph1">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept>\Application Data.</source>
          <target state="translated">일반적인 기본 경로 C:\Documents and 설정을<ph id="ph1">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept>\Application 데이터입니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>This path will be different, however, if the Windows Forms application is deployed by using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">그러나이 경로 다를 수,를 사용 하 여 Windows Forms 응용 프로그램 배포 하는 경우 <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> creates its own application data directory that is isolated from all other applications.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 다른 모든 응용 프로그램에서 격리 된 자체 응용 프로그램 데이터 디렉터리를 만듭니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>로컬 액세스 및 ClickOnce 응용 프로그램의 원격 데이터<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The following code example displays two forms and exits the application when both forms are closed.</source>
          <target state="translated">다음 코드 예제에서는 두 개의 폼을 표시 하 고 모두 폼이 닫히면 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>When the application starts and exits, the position of each form is remembered.</source>
          <target state="translated">응용 프로그램 시작 하 고 종료 하는 경우 각 폼의 위치가 기억 됩니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>This example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph> property to store application data for the user.</source>
          <target state="translated">사용 하 여 보여 주는이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph> 속성을 사용자에 대 한 응용 프로그램 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The class <ph id="ph1">`MyApplicationContext`</ph> inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> and keeps track when each form is closed, and exits the current thread when they both are.</source>
          <target state="translated">클래스 <ph id="ph1">`MyApplicationContext`</ph> 에서 상속 <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 각 폼 닫혀 있고 모두 있을 때에 현재 스레드를 종료 하는 시기를 추적 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The class stores the positions of each form for the user.</source>
          <target state="translated">이 클래스는 사용자에 대 한 각 폼의 위치를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The form position data is stored in a file titled <ph id="ph1">`Appdata.txt`</ph> that is created in the location determined by <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">폼 위치 데이터 파일에 저장 됩니다 <ph id="ph1">`Appdata.txt`</ph> 의해 결정 된 위치에 만들어진 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">`Application.Run(context)`</ph> to start the application given the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph> 메서드 호출 <ph id="ph2">`Application.Run(context)`</ph> 제공 된 응용 프로그램을 시작 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class overview.</source>
          <target state="translated">이 코드에 표시 된 예의 일부는는 <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">일부 코드는 간단 하 게 나타내기 위해 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> for the whole code listing.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 전체 코드 목록에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>Gets the registry key for the application data of a user.</source>
          <target state="translated">사용자의 응용 프로그램 데이터에 대한 레지스트리 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> representing the registry key for the application data specific to the user.</source>
          <target state="translated">사용자의 응용 프로그램 데이터에 대한 레지스트리 키를 나타내는 <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>If the key does not exist, it is created in the following format:</source>
          <target state="translated">키가 없는 경우 다음 형식으로 만들어집니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>CurrentUser\Software<ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated">CurrentUser\Software<ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>Data stored in this key is part of user profile that is enabled for roaming.</source>
          <target state="translated">이 키에 저장 된 데이터에는 로밍를 사용 하는 사용자 프로필의 일부입니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>A roaming user works on more than one computer in a network.</source>
          <target state="translated">로밍 사용자는 네트워크에 둘 이상의 컴퓨터에서 작동합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on.</source>
          <target state="translated">로밍 사용자에 대 한 사용자 프로필은 네트워크의 서버에 유지 되 고 사용자가 로그온 할 때 시스템에 로드 됩니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.</source>
          <target state="translated">로밍에 대 한 것으로 간주 되려면 사용자 프로필에 대 한 운영 체제 로밍 프로필 지원 하 고 사용 하도록 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source>Gets or sets whether the wait cursor is used for all open forms of the application.</source>
          <target state="translated">대기 커서가 응용 프로그램의 열려 있는 모든 폼에 사용되는지 여부를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> is the wait cursor is used for all open forms; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">대기 커서가 열려 있는 모든 폼에 사용되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.UseWaitCursor%2A&gt;</ph> property of all open forms in the application will be set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">이 속성이로 설정 된 경우 <ph id="ph1">`true`</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.UseWaitCursor%2A&gt;</ph> 응용 프로그램에서 열려 있는 모든 폼의 속성으로 설정 됩니다 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source>This call will not return until this property has been set on all forms.</source>
          <target state="translated">모든 양식에서이 속성이 설정 되어 될 때까지이 호출이 반환 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source>Use this property when you have a long-running operation, and want to indicate in all application forms that the operation is still processing.</source>
          <target state="translated">장기 실행 작업을 포함할 때 작업 아직 처리 중인 모든 응용 프로그램 폼에 상태를 표시 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>Gets a value that specifies how visual styles are applied to application windows.</source>
          <target state="translated">비주얼 스타일이 응용 프로그램 창에 적용되는 방법을 지정하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.VisualStyles.VisualStyleState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VisualStyles.VisualStyleState" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>This <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> property determines whether visual styles are enabled in client areas or nonclient areas of application windows.</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> 속성 클라이언트 영역 또는 응용 프로그램 창의 비클라이언트 영역에서 비주얼 스타일을 사용 하는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>Generally, this property should be set within the main form's constructor or <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">일반적으로이 속성은 기본 폼의 생성자 내에서 또는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> property to one of the <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType&gt;</ph> values within the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler for a <ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> 속성 중 하나에 <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType&gt;</ph> 내에서 값의 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> 에 대 한 이벤트 처리기는 <ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType&gt;</ph> enumeration.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType&gt;</ph> 열거형입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>