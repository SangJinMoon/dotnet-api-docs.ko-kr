<Type Name="PaintEventArgs" FullName="System.Windows.Forms.PaintEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6df08a54404eb51439a52a283b5160268c6abb77" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46598301" /></Metadata><TypeSignature Language="C#" Value="public class PaintEventArgs : EventArgs, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PaintEventArgs extends System.EventArgs implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.PaintEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PaintEventArgs&#xA;Inherits EventArgs&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PaintEventArgs : EventArgs, IDisposable" />
  <TypeSignature Language="F#" Value="type PaintEventArgs = class&#xA;    inherit EventArgs&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7634d-101"><see cref="E:System.Windows.Forms.Control.Paint" /> 이벤트에 대한 데이터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-101">Provides data for the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7634d-102"><xref:System.Windows.Forms.Control.Paint> 이벤트 컨트롤을 그리면 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-102">The <xref:System.Windows.Forms.Control.Paint> event occurs when a control is redrawn.</span></span> <span data-ttu-id="7634d-103">A <xref:System.Windows.Forms.PaintEventArgs> 지정 된 <xref:System.Windows.Forms.PaintEventArgs.Graphics%2A> 컨트롤을 그리는 데 및 <xref:System.Windows.Forms.PaintEventArgs.ClipRectangle%2A> 그릴.</span><span class="sxs-lookup"><span data-stu-id="7634d-103">A <xref:System.Windows.Forms.PaintEventArgs> specifies the <xref:System.Windows.Forms.PaintEventArgs.Graphics%2A> to use to paint the control and the <xref:System.Windows.Forms.PaintEventArgs.ClipRectangle%2A> in which to paint.</span></span>  
  
 <span data-ttu-id="7634d-104">이벤트 모델에 대 한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-104">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7634d-105">다음 예제에서는 처리 합니다 <xref:System.Windows.Forms.Control.Paint> 이벤트 및 사용 하 여는 <xref:System.Windows.Forms.PaintEventArgs> 클래스를 폼에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-105">The following example demonstrates handling the <xref:System.Windows.Forms.Control.Paint> event and using the <xref:System.Windows.Forms.PaintEventArgs> class to draw rectangles on the form.</span></span> <span data-ttu-id="7634d-106">합니다 <xref:System.Windows.Forms.Control.MouseDown> 고 <xref:System.Windows.Forms.Control.MouseUp> 처리 되는 사각형의 크기를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-106">The <xref:System.Windows.Forms.Control.MouseDown> and <xref:System.Windows.Forms.Control.MouseUp> events are handled to determine the size of the rectangle.</span></span> <span data-ttu-id="7634d-107">또한는 <xref:System.Windows.Forms.Control.Invalidate%2A> 다시 그려져 야 하므로 사각형의 영역을 무효화 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-107">The example also demonstrates the <xref:System.Windows.Forms.Control.Invalidate%2A> method to invalidate the area of the rectangle, causing it to be redrawn.</span></span>  
  
 [!code-cpp[Demontrates Form Paint Event#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Demontrates Form Paint Event/CPP/form1.cpp#1)]
 [!code-csharp[Demontrates Form Paint Event#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Demontrates Form Paint Event/CS/form1.cs#1)]
 [!code-vb[Demontrates Form Paint Event#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Demontrates Form Paint Event/VB/form1.vb#1)]  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Graphics" />
    <altmember cref="T:System.Drawing.Rectangle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PaintEventArgs (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.PaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PaintEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipRect);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.PaintEventArgs : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; System.Windows.Forms.PaintEventArgs" Usage="new System.Windows.Forms.PaintEventArgs (graphics, clipRect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="7634d-108">항목을 그리는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-108">The <see cref="T:System.Drawing.Graphics" /> used to paint the item.</span></span></param>
        <param name="clipRect"><span data-ttu-id="7634d-109">칠할 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-109">The <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle in which to paint.</span></span></param>
        <summary><span data-ttu-id="7634d-110">지정한 그래픽과 클리핑 사각형을 사용하여 <see cref="T:System.Windows.Forms.PaintEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-110">Initializes a new instance of the <see cref="T:System.Windows.Forms.PaintEventArgs" /> class with the specified graphics and clipping rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7634d-111">합니다 <xref:System.Drawing.Graphics> 로 식별 되는 `graphics` 매개 변수는 삭제 때는 <xref:System.Windows.Forms.PaintEventArgs> 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-111">The <xref:System.Drawing.Graphics> identified by the `graphics` parameter is disposed when the <xref:System.Windows.Forms.PaintEventArgs> is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7634d-112">다음 코드 예제에 줄과 텍스트를 그립니다는 <xref:System.Windows.Forms.PictureBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-112">The following code examples draws lines and text on a <xref:System.Windows.Forms.PictureBox> control.</span></span>  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="ClipRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ClipRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ClipRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.PaintEventArgs.ClipRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ClipRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ClipRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.PaintEventArgs.ClipRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7634d-113">항목을 그릴 사각형을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-113">Gets the rectangle in which to paint.</span></span></summary>
        <value><span data-ttu-id="7634d-114">항목을 그릴 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-114">The <see cref="T:System.Drawing.Rectangle" /> in which to paint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7634d-115">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-115">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="7634d-116">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-116">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="7634d-117">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-117">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="7634d-118">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Control>와 같은 <xref:System.Windows.Forms.Button> 또는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-118">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="7634d-119">다음 인스턴스 이름을 `Control1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-119">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#42](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#42)]
 [!code-vb[System.Windows.Forms.EventExamples#42](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#42)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7634d-120"><see cref="T:System.Windows.Forms.PaintEventArgs" />에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-120">Releases the resources used by the <see cref="T:System.Windows.Forms.PaintEventArgs" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.PaintEventArgs.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="paintEventArgs.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7634d-121"><see cref="T:System.Windows.Forms.PaintEventArgs" />에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-121">Releases all resources used by the <see cref="T:System.Windows.Forms.PaintEventArgs" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7634d-122"><xref:System.Windows.Forms.PaintEventArgs.Dispose> 사용을 마치면 <xref:System.Windows.Forms.PaintEventArgs>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-122">Call <xref:System.Windows.Forms.PaintEventArgs.Dispose> when you are finished using the <xref:System.Windows.Forms.PaintEventArgs>.</span></span> <span data-ttu-id="7634d-123"><xref:System.Windows.Forms.PaintEventArgs.Dispose> 메서드를 사용하면 <xref:System.Windows.Forms.PaintEventArgs>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-123">The <xref:System.Windows.Forms.PaintEventArgs.Dispose> method leaves the <xref:System.Windows.Forms.PaintEventArgs> in an unusable state.</span></span> <span data-ttu-id="7634d-124">호출한 후 <xref:System.Windows.Forms.PaintEventArgs.Dispose>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Windows.Forms.PaintEventArgs> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Windows.Forms.PaintEventArgs> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-124">After calling <xref:System.Windows.Forms.PaintEventArgs.Dispose>, you must release all references to the <xref:System.Windows.Forms.PaintEventArgs> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.PaintEventArgs> was occupying.</span></span> <span data-ttu-id="7634d-125">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-125">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7634d-126"><xref:System.Windows.Forms.PaintEventArgs.Dispose>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Windows.Forms.PaintEventArgs>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="7634d-126">Always call <xref:System.Windows.Forms.PaintEventArgs.Dispose> before you release your last reference to the <xref:System.Windows.Forms.PaintEventArgs>.</span></span> <span data-ttu-id="7634d-127">이렇게 하지 않으면 가비지 수집기가 <xref:System.Windows.Forms.PaintEventArgs> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-127">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Forms.PaintEventArgs> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md"><span data-ttu-id="7634d-128">관리되지 않는 리소스 정리</span><span class="sxs-lookup"><span data-stu-id="7634d-128">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.PaintEventArgs.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="paintEventArgs.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="7634d-129">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-129"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="7634d-130"><see cref="T:System.Windows.Forms.PaintEventArgs" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-130">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.PaintEventArgs" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7634d-131">이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="7634d-131">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="7634d-132">`Dispose()` 보호 된 호출 <xref:System.Windows.Forms.PaintEventArgs.Dispose%28System.Boolean%29> 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-132">`Dispose()` invokes the protected <xref:System.Windows.Forms.PaintEventArgs.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="7634d-133"><xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-133"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="7634d-134">경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 되는 개체가 보유 한 모든 리소스를 해제이 <xref:System.Windows.Forms.PaintEventArgs> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-134">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.PaintEventArgs> references.</span></span> <span data-ttu-id="7634d-135">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-135">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7634d-136">
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-136">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="7634d-137"><see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</span><span class="sxs-lookup"><span data-stu-id="7634d-137">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="7634d-138">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-138">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="7634d-139">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-139">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md"><span data-ttu-id="7634d-140">Dispose 메서드 구현</span><span class="sxs-lookup"><span data-stu-id="7634d-140">Implementing a Dispose method</span></span></related>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md"><span data-ttu-id="7634d-141">관리되지 않는 리소스 정리</span><span class="sxs-lookup"><span data-stu-id="7634d-141">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~PaintEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.PaintEventArgs.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!PaintEventArgs ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="paintEventArgs.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7634d-142">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-142">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.PaintEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.PaintEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7634d-143">그리는 데 사용되는 그래픽을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-143">Gets the graphics used to paint.</span></span></summary>
        <value><span data-ttu-id="7634d-144">그리는 데 사용되는 <see cref="T:System.Drawing.Graphics" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-144">The <see cref="T:System.Drawing.Graphics" /> object used to paint.</span></span> <span data-ttu-id="7634d-145"><see cref="T:System.Drawing.Graphics" /> 개체는 표시 장치에 개체를 그리기 위한 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-145">The <see cref="T:System.Drawing.Graphics" /> object provides methods for drawing objects on the display device.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7634d-146">다음 예제에서는 처리 합니다 <xref:System.Windows.Forms.Control.Paint> 이벤트 및 사용 하 여는 <xref:System.Windows.Forms.PaintEventArgs> 클래스를 폼에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-146">The following example demonstrates handling the <xref:System.Windows.Forms.Control.Paint> event and using the <xref:System.Windows.Forms.PaintEventArgs> class to draw rectangles on the form.</span></span> <span data-ttu-id="7634d-147">합니다 <xref:System.Windows.Forms.Control.MouseDown> 고 <xref:System.Windows.Forms.Control.MouseUp> 처리 되는 사각형의 크기를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-147">The <xref:System.Windows.Forms.Control.MouseDown> and <xref:System.Windows.Forms.Control.MouseUp> events are handled to determine the size of the rectangle.</span></span> <span data-ttu-id="7634d-148">또한는 <xref:System.Windows.Forms.Control.Invalidate%2A> 다시 그려져 야 하므로 사각형의 영역을 무효화 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="7634d-148">The example also demonstrates the <xref:System.Windows.Forms.Control.Invalidate%2A> method to invalidate the area of the rectangle, causing it to be redrawn.</span></span>  
  
 [!code-cpp[Demontrates Form Paint Event#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Demontrates Form Paint Event/CPP/form1.cpp#1)]
 [!code-csharp[Demontrates Form Paint Event#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Demontrates Form Paint Event/CS/form1.cs#1)]
 [!code-vb[Demontrates Form Paint Event#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Demontrates Form Paint Event/VB/form1.vb#1)]  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
  </Members>
</Type>