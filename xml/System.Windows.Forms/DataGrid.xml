<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataGrid.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56e20ff4412b37cc3e698dd8ebc4663849a168342.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e20ff4412b37cc3e698dd8ebc4663849a168342</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGrid">
          <source>Displays ADO.NET data in a scrollable grid.</source>
          <target state="translated">스크롤 가능한 표에 ADO.NET 데이터를 표시합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGrid">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> control replaces and adds functionality to the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control; however, the <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control is retained for both backward compatibility and future use, if you choose.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridView" /&gt;</ph> 컨트롤은 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤을 대체하고 여기에 다른 기능을 추가하여 새로 도입된 컨트롤이지만 이전 버전과의 호환성 및 이후 사용 가능성을 고려하여 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤을 계속 유지하도록 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> displays Web-like links to child tables.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 자식 테이블에 대 한 웹 형식의 링크를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>You can click on a link to navigate to the child table.</source>
          <target state="translated">자식 테이블을 탐색 하는 링크를 클릭할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>When a child table is displayed, a back button appears in the caption that can be clicked to navigate back to the parent table.</source>
          <target state="translated">자식 테이블 표시 될 때 뒤로 단추 클릭 하 여 부모 테이블 다시 탐색할 수 있도록 캡션을에 나타납니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>The data from the parent rows is displayed below the caption and above the column headers.</source>
          <target state="translated">부모 행의 데이터는 캡션 아래와 열 머리글 위에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>You can hide the parent row information by clicking the button to the right of the back button.</source>
          <target state="translated">단추 오른쪽의 뒤로 단추를 클릭 하 여 부모 행 정보를 숨길 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To display a table in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> at run time, use the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> method to set the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> properties to a valid data source.</source>
          <target state="translated">테이블을 표시 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 실행 시 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> 설정 하는 방법은 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 유효한 데이터 원본에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>The following data sources are valid:</source>
          <target state="translated">다음 데이터 원본의 유효한은 같습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>A single dimension array</source>
          <target state="translated">1 차원 배열</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>Any component that implements the <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface</source>
          <target state="translated">구현 하는 모든 구성 요소는 <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 인터페이스</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>Any component that implements the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface</source>
          <target state="translated">구현 하는 모든 구성 요소는 <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> 인터페이스</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> class, see <bpt id="p1">[</bpt>DataSets, DataTables, and DataViews<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 클래스를 참조 하십시오. <bpt id="p1">[</bpt>데이터 집합, Datatable 및 Dataview<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>You can create a grid that enables users to edit data but prevents them from adding new rows by using a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> as the data source and setting the <ph id="ph2">&lt;xref:System.Data.DataView.AllowNew%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">사용자가 데이터를 편집할 수 있지만에서 사용 하 여 새 행을 추가할 것을 금지 하는 표를 만들 수는 <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 설정을 확인 하 고 데이터 원본으로는 <ph id="ph2">&lt;xref:System.Data.DataView.AllowNew%2A&gt;</ph> 속성을 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>Data sources are further managed by <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> objects.</source>
          <target state="translated">데이터 소스를 관리 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>For each table in a data source, a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> can be returned from the form's <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>.</source>
          <target state="translated">각 테이블에 데이터 원본에 대 한 한 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 폼의에서 반환 될 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>For example, you can determine the number of rows contained by a data source by returning the associated <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> object's <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt;</ph> property.</source>
          <target state="translated">연결 된 반환 하 여 데이터 원본에 의해 포함 된 행의 수를 확인할 수는 예를 들어 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 개체의 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To validate data, use the underlying objects that represent data and their events.</source>
          <target state="translated">데이터 유효성 검사, 데이터 및 해당 이벤트를 나타내는 원본 개체를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>For example, if the data comes from a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> in a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, use the <ph id="ph3">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> and <ph id="ph4">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> events.</source>
          <target state="translated">예를 들어 데이터에서 제공 하는 경우는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>를 사용 하 여는 <ph id="ph3">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>Because the number of columns can be customized (by adding or deleting members of the <ph id="ph1">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>) and the rows can be sorted by column, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridCell.RowNumber%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A&gt;</ph> property values cannot be guaranteed to correspond to <ph id="ph4">&lt;xref:System.Data.DataRow&gt;</ph> and <ph id="ph5">&lt;xref:System.Data.DataColumn&gt;</ph> indexes in a <ph id="ph6">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">이므로 열 수를 사용자 지정할 수 있습니다 (추가 또는 삭제의 멤버는 <ph id="ph1">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>) 열을 행을 정렬할 수 있습니다 및는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridCell.RowNumber%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A&gt;</ph> 속성 값에 해당 하도록 보장할 수 없습니다 <ph id="ph4">&lt;xref:System.Data.DataRow&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Data.DataColumn&gt;</ph>의 인덱스는 <ph id="ph6">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>Therefore you should avoid using those properties in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event to validate data.</source>
          <target state="translated">따라서 하지 말아야 해당 속성을 사용 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> 데이터 유효성을 검사 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To determine which cell is selected, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCell%2A&gt;</ph> property.</source>
          <target state="translated">선택 된 셀을 확인 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCell%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>Change the value of any cell by using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Item%2A&gt;</ph> property, which can take either the row and column indexes of the cell, or a single <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridCell&gt;</ph>.</source>
          <target state="translated">셀의 값을 사용 하 여 변경 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Item%2A&gt;</ph> 속성 중 하나는 셀의 행 및 열 인덱스 또는 단일 걸릴 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridCell&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>Monitor the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCellChanged&gt;</ph> event to detect when the user selects another cell.</source>
          <target state="translated">모니터는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCellChanged&gt;</ph> 다른 셀을 선택 하는 사용자를 검색 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To determine which part of the control the user clicked, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> method in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">컨트롤의 어느 부분이 사용자 클릭을 확인 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> 에서 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo&gt;</ph> object, which contains the row and column of a clicked area.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo&gt;</ph> 클릭 한 영역의 열과 행을 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To manage the appearance of the control at run time, several properties for setting the color and caption attributes are available, including the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CaptionForeColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.CaptionBackColor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.CaptionFont%2A&gt;</ph>, and so on.</source>
          <target state="translated">런타임 시 컨트롤의 모양을 관리 하려면 색 및 캡션 특성을 설정 하기 위한 몇 가지 속성을 포함 하 여 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CaptionForeColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.CaptionBackColor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.CaptionFont%2A&gt;</ph>등입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>The appearance of the displayed grid (or grids) can be further modified by creating <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects and adding them to the <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>, which is accessed through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> property.</source>
          <target state="translated">표시 된 그리드 (또는 표)의 형태를 만들어서 수정할 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체에 추가 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>를 통해 액세스할는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> is set to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> containing three <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects, you can add three <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects to the collection, one for each table.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 로 설정 되는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 3 개를 포함 하 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> 개체 3 개를 추가할 수 있습니다 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체를 컬렉션에, 각 테이블에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To synchronize each <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> object with a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, set the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> to the <ph id="ph5">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> of the <ph id="ph6">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">각 동기화 하려면 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>설정는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 에 <ph id="ph5">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> 의 <ph id="ph6">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>For more information about binding to an array of objects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">개체의 배열에 바인딩하는 방법에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To create a customized view of a table, create an instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTextBoxColumn&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridBoolColumn&gt;</ph> class and add the object to the <ph id="ph3">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph> accessed through the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> property.</source>
          <target state="translated">인스턴스를 만들 테이블의 사용자 지정된 보기를 만들려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTextBoxColumn&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridBoolColumn&gt;</ph> 클래스 및 개체를 추가 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph> 를 통해 액세스는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>Both classes inherit from <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph>.</source>
          <target state="translated">두 클래스 모두 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph>에서 상속합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>For each column style, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> to the <ph id="ph2">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph> of a column that you want to show in the grid.</source>
          <target state="translated">각 열 스타일에 대 한 설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph> 표에 표시 하려는 열입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To hide a column, set its <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> to something other than a valid <ph id="ph2">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph>.</source>
          <target state="translated">설정 된 열을 숨기려면 해당 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> 유효한 클래스로 <ph id="ph2">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To format the text of a column, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTextBoxColumn.Format%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTextBoxColumn&gt;</ph> to one of the values found in <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">서식을 지정 된 열의 텍스트를 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTextBoxColumn.Format%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTextBoxColumn&gt;</ph> 에 있는 값 중 하나에 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To bind the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> to a strongly typed array of objects, the object type must contain public properties.</source>
          <target state="translated">바인딩할는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 개체 유형을 개체의 강력한 형식의 배열에 public 속성을 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To create a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> that displays the array, set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph3">`typename[]`</ph> where <ph id="ph4">`typename`</ph> is replaced by the name of the object type.</source>
          <target state="translated">만들려는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 배열을 표시 하는 설정는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType&gt;</ph> 속성을 <ph id="ph3">`typename[]`</ph> 여기서 <ph id="ph4">`typename`</ph> 개체 유형의 이름으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>Also note that the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> property is case-sensitive; the type name must be matched exactly.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 속성은 대/소문자 구분; 형식 이름은 정확히 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> property for an example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 예에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>You can also bind the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> to an <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">바인딩할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>A feature of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is that it can contain objects of multiple types, but the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> can only bind to such a list when all items in the list are of the same type as the first item.</source>
          <target state="translated">기능은 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 여러 종류의 개체를 포함 될 수 있도록은 있지만 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 목록의 모든 항목이 첫 번째 항목으로 같은 형식의 경우 해당 목록에만 바인딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>This means that all objects must either be of the same type, or they must inherit from the same class as the first item in the list.</source>
          <target state="translated">즉, 동일한 유형의 모든 개체 여야 하거나 목록에서 첫 번째 항목으로 동일한 클래스에서 상속 해야 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>For example, if the first item in a list is a <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, the second item could be a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> (which inherits from <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>).</source>
          <target state="translated">예를 들어 첫 번째 항목 목록에는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, 두 번째 항목 수는 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> (에서 상속 되 <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>If, on the other hand, the first item is a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, the second object cannot be a <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</source>
          <target state="translated">반면에 첫 번째 항목이 인지는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, 두 번째 개체 일 수 없습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>Further, the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> must have items in it when it is bound.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 바인딩될 때 항목이에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> will result in an empty grid.</source>
          <target state="translated">빈 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 빈 그리드가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>In addition, the objects in the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> must contain public properties.</source>
          <target state="translated">또한 개체는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 공용 속성을 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>When binding to an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> to "ArrayList" (the type name).</source>
          <target state="translated">에 바인딩할 때는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> "ArrayList" (형식 이름)를 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>For each <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>, you can set color and caption attributes that override the settings for the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated">각 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>, 색상을 설정할 수 있습니다 및 캡션 특성을 대 한 설정을 재정의 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>However, if those properties are not set, the settings for the control are used by default.</source>
          <target state="translated">그러나 이러한 속성을 설정 하지 않은 경우 컨트롤에 대 한 설정은 기본적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>The following properties can be overridden by <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> properties:</source>
          <target state="translated">다음 속성을 우선할 수 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To customize the appearance of individual columns, add <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>, which is accessed through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A&gt;</ph> property of each <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">개별 열의 모양을 사용자 지정 하려면 추가 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 개체를 <ph id="ph2">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>를 통해 액세스할는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A&gt;</ph> 각 속성 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To synchronize each <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> with a <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> in the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, set the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> to the <ph id="ph5">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph> of a <ph id="ph6">&lt;xref:System.Data.DataColumn&gt;</ph>.</source>
          <target state="translated">각 동기화 하려면 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>설정는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> 에 <ph id="ph5">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph> 의 <ph id="ph6">&lt;xref:System.Data.DataColumn&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>When constructing a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph>, you can also set a formatting string that specifies how the column displays data.</source>
          <target state="translated">생성할 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph>, 열 데이터를 표시 하는 방법을 지정 하는 서식 문자열을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>For example, you can specify that the column use a short-date format to display dates contained in the table.</source>
          <target state="translated">예를 들어 열 짧은 날짜 형식을 사용 하 여 테이블에 포함 된 날짜를 표시 하도록 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>Always create <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects and add them to the <ph id="ph2">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> before adding <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects to the <ph id="ph4">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>.</source>
          <target state="translated">항상 만들기 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 개체에 추가 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> 추가 하기 전에 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체를 <ph id="ph4">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>When you add an empty <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> with a valid <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> value to the collection, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects are automatically generated for you.</source>
          <target state="translated">빈을 추가 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 유효한 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 를 컬렉션에 값 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 개체가 자동으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>Consequently, an exception will be thrown if you try to add new <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects with duplicate <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> values to the <ph id="ph3">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>.</source>
          <target state="translated">새로 추가 하려고 하면 예외가 throw 될 따라서 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 중복을 사용 하 여 개체 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 값에 <ph id="ph3">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control replaces and adds functionality to the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control; however, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control is retained for both backward compatibility and future use, if you choose.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 컨트롤을 대체하고 여기에 다른 기능을 추가하여 새로 도입된 컨트롤이지만 이전 버전과의 호환성 및 이후 사용 가능성을 고려하여 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 컨트롤을 계속 유지하도록 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>For more information, see <bpt id="p1">[</bpt>Differences Between the Windows Forms DataGridView and DataGrid Controls<ept id="p1">](~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Windows Forms DataGridView 및 DataGrid 컨트롤의 차이점<ept id="p1">](~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)</ept>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>The following code example creates a Windows form, a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> containing two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects, and a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> that relates the two tables.</source>
          <target state="translated">다음 코드 예제에서는 Windows form을 만듭니다는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 포함 된 두 개의 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 개체 및 <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> 두 테이블을 연결 하는 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>To display the data, a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control is then bound to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> method.</source>
          <target state="translated">데이터를 표시 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 에 바인딩됩니다 제어는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 통해는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>A button on the form changes the appearance of the grid by creating two <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects and setting the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> of each object to a <ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> of one of the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objects.</source>
          <target state="translated">폼에 단추 두 개를 만들어 눈금의 모양 변경 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체 및 설정의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 각 개체의는 <ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> 중 하나의 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGrid">
          <source>The example also contains code in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event that uses the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> method to print the column, row, and part of the grid that has been clicked.</source>
          <target state="translated">예제 코드에 포함 되어는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> 이벤트를 사용 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> 열, 행 및 클릭 했는지는 눈금의 일부를 인쇄 하려면 메서드.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.#ctor">
          <source>To populate a newly created <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control, set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> property to a valid source, such as a <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>, or <ph id="ph5">&lt;xref:System.Data.DataViewManager&gt;</ph>.</source>
          <target state="translated">새로 만든 채우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어, 설정는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 속성을 유효한 소스와 같은 <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Data.DataViewManager&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.#ctor">
          <source>The following code example creates a new <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> and uses the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> method to set the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 새 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> 설정 하는 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.AllowNavigation">
          <source>Gets or sets a value indicating whether navigation is allowed.</source>
          <target state="translated">탐색이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AllowNavigation">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if navigation is allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">탐색이 허용되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AllowNavigation">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AllowNavigation">
          <source>If this property is set to <ph id="ph1">`false`</ph>, links to child tables are not shown.</source>
          <target state="translated">이 속성은로 설정 하는 경우 <ph id="ph1">`false`</ph>, 자식 테이블에 대 한 링크는 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AllowNavigation">
          <source>The following code example toggles the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AllowNavigation%2A&gt;</ph> property between the <ph id="ph2">`true`</ph> and <ph id="ph3">`false`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 설정/해제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AllowNavigation%2A&gt;</ph> 속성 간에 <ph id="ph2">`true`</ph> 및 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.AllowNavigationChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.AllowNavigation" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.AllowNavigation" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.AllowNavigationChanged">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AllowNavigation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, then no links to child tables are shown.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AllowNavigation%2A&gt;</ph> 속성이 <ph id="ph2">`false`</ph>, 링크가 없는 자식 테이블에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.AllowNavigationChanged">
          <source>The following code example resets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AllowNavigation%2A&gt;</ph> property and raises the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.AllowNavigationChanged&gt;</ph> event.</source>
          <target state="translated">다음 코드 예제에서는 재설정은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AllowNavigation%2A&gt;</ph> 속성과 발생은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.AllowNavigationChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.AllowSorting">
          <source>Gets or sets a value indicating whether the grid can be resorted by clicking on a column header.</source>
          <target state="translated">열 머리글을 클릭하여 표를 다시 정렬할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AllowSorting">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if columns can be sorted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">열을 정렬할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AllowSorting">
          <source>This property is overridden by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.AllowSorting%2A?displayProperty=nameWithType&gt;</ph> property if there is a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> currently in effect for the control.</source>
          <target state="translated">이 속성은 재정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.AllowSorting%2A?displayProperty=nameWithType&gt;</ph> 속성이 없는 경우는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 현재 컨트롤에 대 한 효과에 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AllowSorting">
          <source>If sorting is allowed, clicking on a column header will sort the table data by that column.</source>
          <target state="translated">정렬이 허용 되 면 열 머리글을 클릭 하면 해당 열으로 테이블 데이터를 정렬 됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AllowSorting">
          <source>You can also sort using an expression for a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>.</source>
          <target state="translated">에 대 한 식을 사용 하 여 정렬할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AllowSorting">
          <source>See <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> for details on creating a sort expression.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> 정렬 식을 만들기에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AllowSorting">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> is bound to a <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph>, you can set a custom sort for the table using the <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> class's <ph id="ph4">&lt;xref:System.Data.DataView.Sort%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 바인딩되는 <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph>를 사용 하 여 테이블에 대 한 사용자 지정 정렬을 설정할 수 있습니다는 <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> 클래스의 <ph id="ph4">&lt;xref:System.Data.DataView.Sort%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AllowSorting">
          <source>Similarly, if the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> is bound to a <ph id="ph2">&lt;xref:System.Data.DataViewManager&gt;</ph>, each table in the <ph id="ph3">&lt;xref:System.Data.DataViewManager&gt;</ph> can have a custom sort by setting the <ph id="ph4">&lt;xref:System.Data.DataViewManager.DataViewSettings%2A&gt;</ph> class's <ph id="ph5">&lt;xref:System.Data.DataViewSetting.Sort%2A&gt;</ph> property.</source>
          <target state="translated">마찬가지로, 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 바인딩되는 <ph id="ph2">&lt;xref:System.Data.DataViewManager&gt;</ph>, 각 테이블에는 <ph id="ph3">&lt;xref:System.Data.DataViewManager&gt;</ph> 설정 하 여 사용자 지정 정렬을 가질 수 있습니다는 <ph id="ph4">&lt;xref:System.Data.DataViewManager.DataViewSettings%2A&gt;</ph> 클래스의 <ph id="ph5">&lt;xref:System.Data.DataViewSetting.Sort%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AllowSorting">
          <source>The following code example toggles the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AllowSorting%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 설정/해제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AllowSorting%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.AlternatingBackColor">
          <source>Gets or sets the background color of odd-numbered rows of the grid.</source>
          <target state="translated">표에 있는 홀수 번호 행의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AlternatingBackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the alternating background color.</source>
          <target state="translated">교대로 반복되는 배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AlternatingBackColor">
          <source>The default is the system color for windows (<ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Window" /&gt;</ph>).</source>
          <target state="translated">기본값은 windows의 시스템 색(<ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Window" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AlternatingBackColor">
          <source>By default, both the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A&gt;</ph> properties are set to the same color.</source>
          <target state="translated">기본적으로 모두는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A&gt;</ph> 속성이 동일한 색으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AlternatingBackColor">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph> property affects only even-numbered rows, while setting the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A&gt;</ph> affects only odd-numbered rows.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph> 속성이 있는 짝수 번호 행만을 설정 하는 동안 영향을 주는지는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A&gt;</ph> 홀수 번호 행에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.AlternatingBackColor">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A&gt;</ph> to a <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph> value.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.BackButtonClick">
          <source>Occurs when the <ph id="ph1">&lt;see langword="Back" /&gt;</ph> button on a child table is clicked.</source>
          <target state="translated">자식 테이블의 <ph id="ph1">&lt;see langword="Back" /&gt;</ph> 단추를 클릭하면 발생합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.BackButtonClick">
          <source>The <ph id="ph1">`Back`</ph> button becomes visible when a child table is displayed.</source>
          <target state="translated"><ph id="ph1">`Back`</ph> 자식 테이블이 표시 되어 있는 단추 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.BackButtonClick">
          <source>Clicking the button will cause the grid to display the parent table.</source>
          <target state="translated">단추를 클릭 하면 부모 테이블에 표시할 그리드의 발생 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.BackButtonClick">
          <source>The following code example adds an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackButtonClick&gt;</ph> event.</source>
          <target state="translated">다음 코드 예제에서는 추가 대 한 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackButtonClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.BackColor">
          <source>Gets or sets the background color of even-numbered rows of the grid.</source>
          <target state="translated">표에 있는 짝수 번호 행의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the color of rows in the grid.</source>
          <target state="translated">표의 행 색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BackColor">
          <source>The default is the system color for windows (<ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Window" /&gt;</ph>).</source>
          <target state="translated">기본값은 windows의 시스템 색(<ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Window" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BackColor">
          <source>Whereas the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph> property determines the color of rows in the grid, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.BackgroundColor%2A&gt;</ph> determines the color of the nonrow area, which is only visible when the grid is scrolled to the bottom, or if only a few rows are contained in the grid.</source>
          <target state="translated">반면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph> 속성 그리드에서 행의 색을 결정는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.BackgroundColor%2A&gt;</ph> 모눈을 아래로 스크롤할 하거나 하나만 눈금에 포함 된 몇 가지 행만 볼 수 있는 이외 영역에 색을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BackColor">
          <source>By default, both the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A&gt;</ph> properties are set to the same color.</source>
          <target state="translated">기본적으로 모두는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A&gt;</ph> 속성이 동일한 색으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BackColor">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph> property affects only even-numbered rows, while setting the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A&gt;</ph> affects only odd-numbered rows.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph> 속성이 있는 짝수 번호 행만을 설정 하는 동안 영향을 주는지는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.AlternatingBackColor%2A&gt;</ph> 홀수 번호 행에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BackColor">
          <source>The following code example sets both the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.BackgroundColor%2A&gt;</ph> properties to different values.</source>
          <target state="translated">다음 코드 예제에서는 두 설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.BackgroundColor%2A&gt;</ph> 속성을 다른 값입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.BackgroundColor">
          <source>Gets or sets the color of the non-row area of the grid.</source>
          <target state="translated">표에서 행 이외의 영역 색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BackgroundColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the color of the grid's background.</source>
          <target state="translated">표의 배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BackgroundColor">
          <source>The default is the <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.AppWorkspace" /&gt;</ph> color.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.AppWorkspace" /&gt;</ph> 색입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BackgroundColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackgroundColor%2A&gt;</ph> determines the color of the nonrow area of the grid, which is only visible when no table is displayed by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, or if the grid is scrolled to the bottom, or if only a few rows are contained in the grid.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackgroundColor%2A&gt;</ph> 테이블이 없으면으로 표시 될 때 에서만 볼 수 있는 모눈의 맨 영역 색을 결정는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, 또는 모눈을 아래로 스크롤할 수 있거나 경우 모눈에 몇 개의 행만 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BackgroundColor">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph>, and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.BackgroundColor%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackColor%2A&gt;</ph>, 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.BackgroundColor%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.BackgroundColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.BackgroundColor" /&gt;</ph> has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.BackgroundColor" /&gt;</ph>가 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.BackgroundColorChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackgroundColor%2A&gt;</ph> property value from yellow to red and raises the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.BackgroundColorChanged&gt;</ph> event.</source>
          <target state="translated">다음 코드 예제에서는 변경 내용을 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackgroundColor%2A&gt;</ph> 빨간색과 발생을 노랑에서 속성 값은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.BackgroundColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.BackgroundImage">
          <source>This member is not meaningful for this control.</source>
          <target state="translated">이 멤버는 이 컨트롤에 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BackgroundImage">
          <source>The background image associated with the control.</source>
          <target state="translated">컨트롤과 연결된 배경 이미지입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.BackgroundImageChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.BackgroundImage" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.BackgroundImage" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.BackgroundImageChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackgroundImage%2A&gt;</ph> property is not meaningful for this control, although you can change its value and handle the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.BackgroundImageChanged&gt;</ph> event to detect the change.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackgroundImage%2A&gt;</ph> 값을 변경 하 고 처리할 수 있지만 속성은이 컨트롤에 의미가 없습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.BackgroundImageChanged&gt;</ph> 변경 내용을 검색 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.BackgroundImageLayout">
          <source>This member is not meaningful for this control.</source>
          <target state="translated">이 멤버는 이 컨트롤에 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BackgroundImageLayout">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.BackgroundImageLayoutChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.BackgroundImageLayout" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.BackgroundImageLayout" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.BackgroundImageLayoutChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackgroundImageLayout%2A&gt;</ph> property is not meaningful for this control, although you can change its value and handle the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.BackgroundImageLayoutChanged&gt;</ph> event to detect the change.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackgroundImageLayout%2A&gt;</ph> 값을 변경 하 고 처리할 수 있지만 속성은이 컨트롤에 의미가 없습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.BackgroundImageLayoutChanged&gt;</ph> 변경 내용을 검색 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph> to edit.</source>
          <target state="translated">편집할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source>The number of the row to edit.</source>
          <target state="translated">편집할 행의 번호입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source>Attempts to put the grid into a state where editing is allowed.</source>
          <target state="translated">표를 편집 가능 상태로 전환하려고 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the method is successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 메서드에 성공하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source>The grid will deny edit requests if the user already started typing into a cell.</source>
          <target state="translated">표에 사용자 입력을 셀으로 이미 시작 된 경우 편집 요청을 거부 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BeginEdit%2A&gt;</ph> method will return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BeginEdit%2A&gt;</ph> 메서드는 반환 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BeginEdit%2A&gt;</ph> method to test if editing is possible before changing a specified column and row.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BeginEdit%2A&gt;</ph> 지정 된 열 및 행을 변경 하기 전에 메서드를 편집 하는 경우에 테스트 불가능 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.BeginInit">
          <source>Begins the initialization of a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> that is used on a form or used by another component.</source>
          <target state="translated">폼에 사용되거나 다른 구성 요소에서 사용하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>의 초기화를 시작합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.BeginInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">초기화는 런타임에 발생합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.BeginInit">
          <source>The Visual Studio design environment uses this method to start the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio 디자인 환경이이 메서드를 사용 하 여 폼에 사용 되거나 다른 구성 요소에서 사용 하는 구성 요소 초기화를 시작 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.BeginInit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.EndInit%2A&gt;</ph> method ends the initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.EndInit%2A&gt;</ph> 메서드 초기화를 끝냅니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.BeginInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BeginInit%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.EndInit%2A&gt;</ph> 메서드는 컨트롤이 완전히 초기화 되기 전에 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.BorderStyle">
          <source>Gets or sets the grid's border style.</source>
          <target state="translated">표의 테두리 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BorderStyle">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph> enumeration values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph> 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BorderStyle">
          <source>The default is <ph id="ph1">&lt;see langword="FixedSingle" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="FixedSingle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.BorderStyle">
          <source>The following code example sets the style of the grid's border.</source>
          <target state="translated">다음 코드 예제에서는 표 테두리의 스타일을 설정합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.BorderStyleChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.BorderStyle" /&gt;</ph> has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.BorderStyle" /&gt;</ph>가 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.BorderStyleChanged">
          <source>Possible values include <ph id="ph1">`None`</ph>, <ph id="ph2">`FixedSingle`</ph>, and <ph id="ph3">`Fixed3D`</ph>.</source>
          <target state="translated">가능한 값은 <ph id="ph1">`None`</ph>, <ph id="ph2">`FixedSingle`</ph> 및 <ph id="ph3">`Fixed3D`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.BorderStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.BorderStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BorderStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.BorderStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.BorderStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.BorderStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> named <ph id="ph2">`DataGrid1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 라는 <ph id="ph2">`DataGrid1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.BorderStyleChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BorderStyleChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.CancelEditing">
          <source>Cancels the current edit operation and rolls back all changes.</source>
          <target state="translated">현재 편집 작업을 취소하고 모든 변경 내용을 롤백합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.CaptionBackColor">
          <source>Gets or sets the background color of the caption area.</source>
          <target state="translated">캡션 영역의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionBackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the caption's background color.</source>
          <target state="translated">캡션의 배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionBackColor">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.ActiveCaption" /&gt;</ph> color.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.ActiveCaption" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionBackColor">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CaptionBackColor%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CaptionBackColor%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.CaptionFont">
          <source>Gets or sets the font of the grid's caption.</source>
          <target state="translated">표 캡션의 글꼴을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionFont">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that represents the caption's font.</source>
          <target state="translated">캡션의 글꼴을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionFont">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> encapsulates a Windows font and provides the methods for manipulating that font.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> Windows 글꼴을 캡슐화 하 고 해당 글꼴 조작을 위한 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionFont">
          <source>The following code example sets the caption's font using a <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> object.</source>
          <target state="translated">캡션의 글꼴을 설정 하는 다음 코드 예제를 사용 하는 <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.CaptionForeColor">
          <source>Gets or sets the foreground color of the caption area.</source>
          <target state="translated">캡션 영역의 전경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionForeColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the foreground color of the caption area.</source>
          <target state="translated">캡션 영역의 전경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionForeColor">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.ActiveCaptionText" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.ActiveCaptionText" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionForeColor">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CaptionForeColor%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CaptionForeColor%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.CaptionText">
          <source>Gets or sets the text of the grid's window caption.</source>
          <target state="translated">표 창 캡션의 텍스트를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionText">
          <source>A string to be displayed as the window caption of the grid.</source>
          <target state="translated">표 창 캡션으로 표시될 문자열입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionText">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionText">
          <source>The following code example sets the caption of a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는의 캡션을 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.CaptionVisible">
          <source>Gets or sets a value that indicates whether the grid's caption is visible.</source>
          <target state="translated">표 캡션이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionVisible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the caption is visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">캡션이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionVisible">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionVisible">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CaptionVisible%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the <bpt id="p1">**</bpt>Back<ept id="p1">**</ept> button, <bpt id="p2">**</bpt>ParentRow<ept id="p2">**</ept> button, and caption will not be seen.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CaptionVisible%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>, <bpt id="p1">**</bpt>다시<ept id="p1">**</ept> 단추 <bpt id="p2">**</bpt>ParentRow<ept id="p2">**</ept> 단추와 캡션이 표시 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionVisible">
          <source>Because navigation is limited, links to child tables will also not be visible and <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AllowNavigation%2A&gt;</ph> will be set to <ph id="ph2">`None`</ph>.</source>
          <target state="translated">탐색이 제한 때문에 자식 테이블에 대 한 링크도 표시 되지 것입니다 및 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AllowNavigation%2A&gt;</ph> 로 설정 됩니다 <ph id="ph2">`None`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CaptionVisible">
          <source>The following code example toggles the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CaptionVisible%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 설정/해제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CaptionVisible%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.CaptionVisibleChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.CaptionVisible" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.CaptionVisible" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.CaptionVisibleChanged">
          <source>The following code example demonstrates the use of this event.</source>
          <target state="translated">다음 코드 예제에서는이 이벤트를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.Collapse(System.Int32)">
          <source>The number of the row to collapse.</source>
          <target state="translated">축소할 행의 번호입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.Collapse(System.Int32)">
          <source>If set to -1, all rows are collapsed.</source>
          <target state="translated">-1로 설정하면 모든 행이 축소됩니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.Collapse(System.Int32)">
          <source>Collapses child relations, if any exist for all rows, or for a specified row.</source>
          <target state="translated">모든 행에 대해 또는 지정된 행에 대해 자식 관계(있는 경우)를 축소합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.Collapse(System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.IsExpanded%2A&gt;</ph> method to determine if a row is expanded.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.IsExpanded%2A&gt;</ph> 행 확장 되어 있는지 확인 하는 메서드.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.Collapse(System.Int32)">
          <source>The following code example collapses all rows in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated">모든 행을 축소 하는 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.ColumnHeadersVisible">
          <source>Gets or sets a value indicating whether the column headers of a table are visible.</source>
          <target state="translated">테이블의 열 머리글이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ColumnHeadersVisible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the column headers are visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">열 머리글이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ColumnHeadersVisible">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ColumnHeadersVisible">
          <source>The following code example toggles the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ColumnHeadersVisible%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 설정/해제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ColumnHeadersVisible%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGrid">
          <source>Informs the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control that the user has begun editing a column.</source>
          <target state="translated">사용자가 열 편집을 시작했음을 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤에 알립니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ColumnStartedEditing(System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that defines the location of the edited column.</source>
          <target state="translated">편집된 열의 위치를 정의하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ColumnStartedEditing(System.Drawing.Rectangle)">
          <source>Informs the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control when the user begins to edit the column at the specified location.</source>
          <target state="translated">사용자가 지정된 위치의 열을 편집하기 시작할 때 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤에 알립니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ColumnStartedEditing(System.Drawing.Rectangle)">
          <source>When called, the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing%2A&gt;</ph> method enables the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control to show a pencil in the row header.</source>
          <target state="translated">를 호출할 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing%2A&gt;</ph> 메서드를 사용 하면은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 연필의 행 머리글에 표시를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ColumnStartedEditing(System.Windows.Forms.Control)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> used to edit the column.</source>
          <target state="translated">열을 편집하는 데 사용된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ColumnStartedEditing(System.Windows.Forms.Control)">
          <source>Informs the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control when the user begins to edit a column using the specified control.</source>
          <target state="translated">사용자가 지정된 컨트롤을 사용하여 열을 편집하기 시작할 때 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤에 알립니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ColumnStartedEditing(System.Windows.Forms.Control)">
          <source>When called, the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing%2A&gt;</ph> method enables the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control to show a pencil in the row header.</source>
          <target state="translated">를 호출할 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing%2A&gt;</ph> 메서드를 사용 하면은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 연필의 행 머리글에 표시를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.CreateAccessibilityInstance">
          <source>Constructs a new instance of the accessibility object for this control.</source>
          <target state="translated">이 컨트롤에 대한 액세스 가능 개체의 새 인스턴스를 생성합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.CreateAccessibilityInstance">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" /&gt;</ph> for this control.</source>
          <target state="translated">컨트롤에 대한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.CreateAccessibilityInstance">
          <source>Derived classes should not call the base class's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method.</source>
          <target state="translated">파생된 클래스에서 기본 클래스를 호출 해서는 안 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.CreateAccessibilityInstance">
          <source>Only the following properties of the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> should be set:</source>
          <target state="translated">다음 속성을는 <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.CreateAccessibilityInstance">
          <source>All other properties are handled by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> itself.</source>
          <target state="translated">다른 모든 속성에 의해 처리 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 자체입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGrid">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph> that is added to the control.</source>
          <target state="translated">컨트롤에 추가되는 새로운 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.CreateGridColumn(System.ComponentModel.PropertyDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to use for creating the grid column style.</source>
          <target state="translated">표 열 스타일을 만드는 데 사용할 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.CreateGridColumn(System.ComponentModel.PropertyDescriptor)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph> with the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>로 새 <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.CreateGridColumn(System.ComponentModel.PropertyDescriptor)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to use for creating the grid column style.</source>
          <target state="translated">표 열 스타일을 만드는 데 사용할 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to set the column style as the default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">열 스타일을 기본값으로 설정하려는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.CurrentCell">
          <source>Gets or sets which cell has the focus.</source>
          <target state="translated">포커스가 있는 셀을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.CurrentCell">
          <source>Not available at design time.</source>
          <target state="translated">디자인 타임에는 이 속성을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CurrentCell">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridCell" /&gt;</ph> with the focus.</source>
          <target state="translated">포커스가 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridCell" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CurrentCell">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCell%2A&gt;</ph> property will cause the grid to scroll and show the cell if it is not already visible.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCell%2A&gt;</ph> 속성을 설정 하면 눈금 스크롤하여 경우 것 표시 되어 있지 않은 셀을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CurrentCell">
          <source>The following code example shows how to set and get the current cell.</source>
          <target state="translated">다음 코드 예제에는 설정 하 고 현재 셀을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.CurrentCellChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.CurrentCell" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.CurrentCell" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.CurrentCellChanged">
          <source>To determine the current cell, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCell%2A&gt;</ph> property.</source>
          <target state="translated">현재 셀을 확인 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCell%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.CurrentCellChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.CurrentRowIndex">
          <source>Gets or sets index of the row that currently has focus.</source>
          <target state="translated">현재 포커스가 있는 행의 인덱스를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CurrentRowIndex">
          <source>The zero-based index of the current row.</source>
          <target state="translated">현재 행의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CurrentRowIndex">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A&gt;</ph> property to a value other than its current value scrolls the control so that the specified row is in view.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A&gt;</ph> 속성의 현재 값이 아닌 값을 지정 된 행이 표시 되도록 컨트롤을 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CurrentRowIndex">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A&gt;</ph> property enables you to iterate through a parent table's rows even if you are viewing the child table rows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A&gt;</ph> 속성을 사용 하면 자식 테이블 행을 보는 경우에 부모 테이블의 행을 반복 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CurrentRowIndex">
          <source>For example, if you are viewing a child table, incrementing the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A&gt;</ph> will cause the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> to display the next set of records in the child table that are linked to the parent table.</source>
          <target state="translated">자식 테이블을 보는 경우 증가 하는 예를 들어는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A&gt;</ph> 하면는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 부모 테이블에 연결 된 자식 테이블의 다음 레코드 집합을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CurrentRowIndex">
          <source>If the user is viewing a parent table, or a table with no child relations, then the property returns the zero-based index of the current row.</source>
          <target state="translated">사용자가 부모 테이블 또는 테이블 자식 관계가 없는 보고 하는 경우 속성이 현재 행의 0부터 시작 하는 인덱스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.CurrentRowIndex">
          <source>The following code example returns the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 반환 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentRowIndex%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.CurrentRowIndex">
          <source>There is no <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph>가 없는 경우</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.Cursor">
          <source>This member is not meaningful for this control.</source>
          <target state="translated">이 멤버는 이 컨트롤에 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.Cursor">
          <source>The type of cursor to display as the mouse pointer moves over the object.</source>
          <target state="translated">마우스 포인터를 개체 위로 이동할 때 표시될 커서의 형식입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.CursorChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.Cursor" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.Cursor" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.CursorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Cursor%2A&gt;</ph> property is not meaningful for this control, although you can change its value and handle the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.CursorChanged&gt;</ph> event to detect the change.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Cursor%2A&gt;</ph> 값을 변경 하 고 처리할 수 있지만 속성은이 컨트롤에 의미가 없습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.CursorChanged&gt;</ph> 변경 내용을 검색 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>Gets or sets the specific list in a <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.DataSource" /&gt;</ph> for which the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control displays a grid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.DataSource" /&gt;</ph> 컨트롤이 표를 표시하는 대상 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>에서 특정 목록을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>A list in a <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.DataSource" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.DataSource" /&gt;</ph>의 목록입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> contains multiple sources of data, you should set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> to one of the sources.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 여러 원본이 포함 된 데이터를 설정 해야는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 소스 중 하나를 합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> is a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.DataViewManager&gt;</ph> that contains three tables named <ph id="ph4">`Customers`</ph>, <ph id="ph5">`Orders`</ph>, and <ph id="ph6">`OrderDetails`</ph>, you must specify one of the tables to bind to.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.DataViewManager&gt;</ph> 라는 세 개의 테이블을 포함 하 <ph id="ph4">`Customers`</ph>, <ph id="ph5">`Orders`</ph>, 및 <ph id="ph6">`OrderDetails`</ph>을 바인딩할 테이블 중 하나를 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataViewManager&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, you should set the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> to the <ph id="ph5">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> of that <ph id="ph6">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.DataViewManager&gt;</ph> 하나만 포함 되어 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>를 설정 해야는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 에 <ph id="ph5">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> 해당 <ph id="ph6">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> is set to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that contains <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> objects, parent tables will appear with a plus sign (+) in each row header.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 로 설정 되어는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 포함 된 <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> 개체 부모 테이블 각 행 머리글에 더하기 기호 (+)와 함께 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>Clicking the plus sign causes a node to appear that contains links to child tables.</source>
          <target state="translated">더하기 기호를 클릭 하는 노드가 자식 테이블에 대 한 링크를 포함 하는 표시 하면 됩니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects named <ph id="ph3">`Customers`</ph> and <ph id="ph4">`Orders`</ph>, setting the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> to the <ph id="ph6">`Customers`</ph> table causes the <ph id="ph7">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> to display a parent table with a plus sign visible on each row header.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 에 두 개의 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 개체의 명명 된 <ph id="ph3">`Customers`</ph> 및 <ph id="ph4">`Orders`</ph>설정는 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 에 <ph id="ph6">`Customers`</ph> 원인을 테이블는 <ph id="ph7">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 각 행에 더하기 기호가 있는 부모 테이블을 표시 하려면 헤더입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> is set to <ph id="ph2">`Orders`</ph>, however, the row headers will be blank.</source>
          <target state="translated">그러나 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 로 설정 된 <ph id="ph2">`Orders`</ph>, 행 머리글 비어 있게 됩니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> is a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>, collection, or array, setting the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 은 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>, 컬렉션 또는 배열에 설정 된 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 속성 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>At run time, you must use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> method to reset the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> property.</source>
          <target state="translated">런타임 시 사용 해야 합니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> 다시 설정 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> property alone can be reset at any time to a valid table name.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 속성만 언제 든 지 유효한 테이블 이름으로 다시 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataMember">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> properties of a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 의 속성을 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>Gets or sets the data source that the grid is displaying data for.</source>
          <target state="translated">표에 표시되는 데이터의 대상 데이터 소스를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>An object that functions as a data source.</source>
          <target state="translated">데이터 소스로 작동하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>At run time, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> method to set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> properties.</source>
          <target state="translated">런타임 시 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> 설정 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>The following data sources are valid:</source>
          <target state="translated">다음 데이터 원본의 유효한은 같습니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>Any component that implements the <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface</source>
          <target state="translated">구현 하는 모든 구성 요소는 <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 인터페이스</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>Any component that implements the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface</source>
          <target state="translated">구현 하는 모든 구성 요소는 <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> 인터페이스</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> class overview for more information on data sources.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> 데이터 원본에 대 한 자세한 내용은 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> reference contains more than one table, you must set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> property a string that specifies the table to bind to.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 참조 둘 이상의 테이블을 포함으로 설정 해야 합니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 속성을 바인딩할 테이블을 지정 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> is a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.DataViewManager&gt;</ph> that contains three tables named <ph id="ph4">`Customers`</ph>, <ph id="ph5">`Orders`</ph>, and <ph id="ph6">`OrderDetails`</ph>, you must specify the table to bind to.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.DataViewManager&gt;</ph> 라는 세 개의 테이블을 포함 하 <ph id="ph4">`Customers`</ph>, <ph id="ph5">`Orders`</ph>, 및 <ph id="ph6">`OrderDetails`</ph>을 바인딩할 테이블을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> to an object that does not implement the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface or an <ph id="ph3">&lt;xref:System.ComponentModel.IListSource&gt;</ph> will cause the grid to throw an exception.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 구현 하지 않는 개체에는 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> 인터페이스 또는 <ph id="ph3">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 그리드에서 예외를 throw 하면 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>You can create a grid that enables users to edit data but prevents them from adding new rows by using a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> as the data source and setting the <ph id="ph2">&lt;xref:System.Data.DataView.AddNew%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">사용자가 데이터를 편집할 수 있지만에서 사용 하 여 새 행을 추가할 것을 금지 하는 표를 만들 수는 <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 설정을 확인 하 고 데이터 원본으로는 <ph id="ph2">&lt;xref:System.Data.DataView.AddNew%2A&gt;</ph> 속성을 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>To bind the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> to a strongly typed array of objects, the object type must contain public properties.</source>
          <target state="translated">바인딩할는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 개체 유형을 개체의 강력한 형식의 배열에 public 속성을 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>To create a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> that displays the array, set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph3">`typename`</ph> where <ph id="ph4">`typename`</ph> is replaced by the name of the object type.</source>
          <target state="translated">만들려는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 배열을 표시 하는 설정는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType&gt;</ph> 속성을 <ph id="ph3">`typename`</ph> 여기서 <ph id="ph4">`typename`</ph> 개체 유형의 이름으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>Also note that the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> property is case-sensitive; the type name must be matched exactly.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 속성은 대/소문자 구분; 형식 이름은 정확히 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> property for an example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 예에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>You can also bind the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> to an <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">바인딩할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>A feature of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is that it can contain objects of multiple types, but the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> can only bind to such a list when all items in the list are of the same type as the first item.</source>
          <target state="translated">기능은 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 여러 종류의 개체를 포함 될 수 있도록은 있지만 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 목록의 모든 항목이 첫 번째 항목으로 같은 형식의 경우 해당 목록에만 바인딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>This means that all objects must either be of the same type, or they must inherit from the same class as the first item in the list.</source>
          <target state="translated">즉, 동일한 유형의 모든 개체 여야 하거나 목록에서 첫 번째 항목으로 동일한 클래스에서 상속 해야 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>For example, if the first item in a list is a <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, the second item could be a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> (which inherits from <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>).</source>
          <target state="translated">예를 들어 첫 번째 항목 목록에는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, 두 번째 항목 수는 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> (에서 상속 되 <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>If, on the other hand, the first item is a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, the second object cannot be a <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</source>
          <target state="translated">반면에 첫 번째 항목이 인지는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, 두 번째 개체 일 수 없습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>Further, the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> must have items in it when it is bound.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 바인딩될 때 항목이에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> will result in an empty grid.</source>
          <target state="translated">빈 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 빈 그리드가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>In addition, the objects in the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> must contain public properties.</source>
          <target state="translated">또한 개체는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 공용 속성을 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>When binding to an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> to "ArrayList" (the type name).</source>
          <target state="translated">에 바인딩할 때는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> "ArrayList" (형식 이름)를 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>The following code example shows how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph>, and when needed, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph>, to bind a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> to both a <ph id="ph4">&lt;xref:System.Data.DataView&gt;</ph> and a <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph>, 고 필요한 경우는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph>, 바인딩하는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 둘 다에 <ph id="ph4">&lt;xref:System.Data.DataView&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DataSource">
          <source>The example also shows how to return data sources from the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">또한이 예제에서는 데이터 원본에서 반환 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.DataSourceChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.DataSource" /&gt;</ph> property value has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.DataSource" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.DataSourceChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSourceChanged&gt;</ph> event occurs when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> value changes, or when the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> changes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSourceChanged&gt;</ph> 이벤트가 발생할 때는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 값이 변경 되거나는 <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 변경 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.DataSourceChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.DefaultSize">
          <source>Gets the default size of the control.</source>
          <target state="translated">컨트롤의 기본 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.DefaultSize">
          <source>The default size of the control.</source>
          <target state="translated">컨트롤의 기본 크기입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.Dispose(System.Boolean)">
          <source>Disposes of the resources (other than memory) used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>에서 사용하는 리소스(메모리 제외)를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.Dispose(System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Dispose%2A&gt;</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Dispose%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.Dispose(System.Boolean)">
          <source>After calling <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Dispose%2A&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 차지 했던 메모리를 가비지 수집에 의해 회수 될 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.Dispose(System.Boolean)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Dispose%2A&gt;</ph> method to free resources.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Dispose%2A&gt;</ph> 메서드 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph> to cease editing.</source>
          <target state="translated">편집을 중단할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source>The number of the row to cease editing.</source>
          <target state="translated">편집을 중단할 행의 번호입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source>Set to <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current operation should be stopped.</source>
          <target state="translated">현재 작업을 중단해야 하는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source>Requests an end to an edit operation taking place on the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤에서 수행하고 있는 편집 작업의 종료를 요청합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the editing operation ceases; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">편집 작업이 중단되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.EndEdit%2A&gt;</ph> method returns <ph id="ph2">`false`</ph> if the user is not editing (typing into) a cell.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.EndEdit%2A&gt;</ph> 메서드 반환 <ph id="ph2">`false`</ph> 사용자를 편집 하지는 입력 셀입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BeginEdit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.EndEdit%2A&gt;</ph> methods to edit a value in a grid displayed by the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BeginEdit%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.EndEdit%2A&gt;</ph> 하 여 표시 된 눈금의 값을 편집 하는 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.EndInit">
          <source>Ends the initialization of a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> that is used on a form or used by another component.</source>
          <target state="translated">폼에 사용되거나 다른 구성 요소에서 사용하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>의 초기화를 끝냅니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.EndInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">초기화는 런타임에 발생합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.EndInit">
          <source>The Visual Studio design environment uses this method to end the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio 디자인 환경이이 메서드를 사용 하 여 폼에 사용 되거나 다른 구성 요소에서 사용 하는 구성 요소 초기화를 끝냅니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BeginInit%2A&gt;</ph> method starts the initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BeginInit%2A&gt;</ph> 메서드 초기화를 시작 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.EndInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BeginInit%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.EndInit%2A&gt;</ph> 메서드는 컨트롤이 완전히 초기화 되기 전에 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.Expand(System.Int32)">
          <source>The number of the row to expand.</source>
          <target state="translated">확장할 행의 번호입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.Expand(System.Int32)">
          <source>If set to -1, all rows are expanded.</source>
          <target state="translated">-1로 설정하면 모든 행이 확장됩니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.Expand(System.Int32)">
          <source>Displays child relations, if any exist, for all rows or a specific row.</source>
          <target state="translated">모든 행에 대해 또는 지정된 행에 대해 자식 관계(있는 경우)를 표시합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.Expand(System.Int32)">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.FirstVisibleColumn">
          <source>Gets the index of the first visible column in a grid.</source>
          <target state="translated">표에서 가장 먼저 표시되는 열의 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.FirstVisibleColumn">
          <source>The index of a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.FirstVisibleColumn">
          <source>A column is considered visible even if it is partially concealed.</source>
          <target state="translated">열은 부분적으로 숨겨진 경우에 표시 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.FirstVisibleColumn">
          <source>If a particular column is not visible, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCell%2A&gt;</ph> property to the cell that should be visible.</source>
          <target state="translated">특정 열에 표시 되지 않는 경우에 설정 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCell%2A&gt;</ph> 속성 표시 되는 셀을 합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.FirstVisibleColumn">
          <source>The following code example scrolls the grid if the first visible column is greater than five.</source>
          <target state="translated">다음 코드 예제에서는 표시 되는 첫 번째 열이 5 보다 큰 경우 표를 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.FlatMode">
          <source>Gets or sets a value indicating whether the grid displays in flat mode.</source>
          <target state="translated">표를 평면 모드로 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.FlatMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the grid is displayed flat; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">표가 평면으로 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.FlatMode">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.FlatMode">
          <source>The following code example examines the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.FlatMode%2A&gt;</ph> property and notifies the user of its status.</source>
          <target state="translated">다음 코드 예제에서는 검사 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.FlatMode%2A&gt;</ph> 속성 해당 상태의 사용자에 게 알리는 합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.FlatModeChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.FlatMode" /&gt;</ph> has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.FlatMode" /&gt;</ph>가 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.FlatModeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.ForeColor">
          <source>Gets or sets the foreground color (typically the color of the text) property of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤의 전경색(보통 텍스트 색) 속성을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ForeColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the foreground color.</source>
          <target state="translated">전경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ForeColor">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Drawing.SystemBrushes.WindowText" /&gt;</ph> color.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemBrushes.WindowText" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ForeColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGrid">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the four corners of a cell.</source>
          <target state="translated">셀의 네 모퉁이를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Windows.Forms.DataGridCell)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridCell" /&gt;</ph> to look up.</source>
          <target state="translated">검색할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridCell" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Windows.Forms.DataGridCell)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> of the cell specified by <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridCell" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>에서 지정하는 셀의 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridCell" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Windows.Forms.DataGridCell)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that defines the current cell's corners.</source>
          <target state="translated">현재 셀의 모퉁이를 정의하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Windows.Forms.DataGridCell)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.GetCellBounds%2A&gt;</ph> method to return a <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> of a specified cell.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.GetCellBounds%2A&gt;</ph> 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> 지정된 된 셀의 합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Int32,System.Int32)">
          <source>The number of the cell's row.</source>
          <target state="translated">셀의 행 번호입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Int32,System.Int32)">
          <source>The number of the cell's column.</source>
          <target state="translated">셀의 열 번호입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Int32,System.Int32)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> of the cell specified by row and column number.</source>
          <target state="translated">행 및 열 번호로 지정되는 셀의 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that defines the current cell's corners.</source>
          <target state="translated">현재 셀의 모퉁이를 정의하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Int32,System.Int32)">
          <source>To retrieve the cell bounds for the currently selected cell, use <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.GetCurrentCellBounds%2A&gt;</ph>.</source>
          <target state="translated">현재 선택 된 셀에 대 한 셀 범위를 검색 하려면 사용 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.GetCurrentCellBounds%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Int32,System.Int32)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.GetCellBounds%2A&gt;</ph> method to return a <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> of a specified cell.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.GetCellBounds%2A&gt;</ph> 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> 지정된 된 셀의 합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GetCurrentCellBounds">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the four corners of the selected cell.</source>
          <target state="translated">선택된 셀의 네 모퉁이를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GetCurrentCellBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that defines the current cell's corners.</source>
          <target state="translated">현재 셀의 모퉁이를 정의하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.GetCurrentCellBounds">
          <source>To retrieve the cell bounds for a cell other than the current cell, use <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.GetCellBounds%2A&gt;</ph>.</source>
          <target state="translated">현재 셀이 아닌 셀에 대 한 셀 범위를 검색 하려면 사용 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.GetCellBounds%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.GetCurrentCellBounds">
          <source>The following code example gets the <ph id="ph1">&lt;xref:System.Drawing.Rectangle&gt;</ph> of the selected cell.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Drawing.Rectangle&gt;</ph> 선택된 된 셀의 합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GetOutputTextDelimiter">
          <source>Gets the string that is the delimiter between columns when row contents are copied to the Clipboard.</source>
          <target state="translated">클립보드에 행 내용을 복사할 때 열 사이의 구분 기호로 사용되는 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GetOutputTextDelimiter">
          <source>The string value "\t", which represents a tab used to separate columns in a row.</source>
          <target state="translated">행에서 열을 구분하는 데 사용되는 탭을 나타내는 문자열 값인 "\t"입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GridHScrolled(System.Object,System.Windows.Forms.ScrollEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains data about the control.</source>
          <target state="translated">컨트롤에 대한 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GridHScrolled(System.Object,System.Windows.Forms.ScrollEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GridHScrolled(System.Object,System.Windows.Forms.ScrollEventArgs)">
          <source>Listens for the scroll event of the horizontal scroll bar.</source>
          <target state="translated">가로 스크롤 막대의 스크롤 이벤트를 수신합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.GridLineColor">
          <source>Gets or sets the color of the grid lines.</source>
          <target state="translated">모눈선의 색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.GridLineColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the color of the grid lines.</source>
          <target state="translated">모눈선의 색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.GridLineColor">
          <source>The default is the system color for controls (<ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Control" /&gt;</ph>).</source>
          <target state="translated">기본값은 컨트롤의 시스템 색(<ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Control" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.GridLineColor">
          <source>No grid line is displayed if the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.GridLineStyle%2A&gt;</ph> property is set to <ph id="ph2">`DataGridLineStyle.None`</ph>.</source>
          <target state="translated">경우 없음 모눈선이 표시는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.GridLineStyle%2A&gt;</ph> 속성이 <ph id="ph2">`DataGridLineStyle.None`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.GridLineColor">
          <source>The following code example sets the color of the grid's lines using a value passed to the method.</source>
          <target state="translated">다음 코드 예제에서는 메서드에 전달 되는 값을 사용 하 여 표의 선의 색을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.GridLineColor">
          <source>The value is not set.</source>
          <target state="translated">값이 설정되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.GridLineStyle">
          <source>Gets or sets the line style of the grid.</source>
          <target state="translated">모눈선 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.GridLineStyle">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridLineStyle" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridLineStyle" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.GridLineStyle">
          <source>The default is <ph id="ph1">&lt;see langword="Solid" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="Solid" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.GridLineStyle">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.GridLineStyle%2A&gt;</ph> property to show no lines.</source>
          <target state="translated">다음 코드 예제에서는 변경 내용을 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.GridLineStyle%2A&gt;</ph> 줄이 더 표시 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GridVScrolled(System.Object,System.Windows.Forms.ScrollEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains data about the control.</source>
          <target state="translated">컨트롤에 대한 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GridVScrolled(System.Object,System.Windows.Forms.ScrollEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.GridVScrolled(System.Object,System.Windows.Forms.ScrollEventArgs)">
          <source>Listens for the scroll event of the vertical scroll bar.</source>
          <target state="translated">세로 스크롤 막대의 스크롤 이벤트를 수신합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.HeaderBackColor">
          <source>Gets or sets the background color of all row and column headers.</source>
          <target state="translated">모든 행 및 열 머리글의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.HeaderBackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of row and column headers.</source>
          <target state="translated">행 및 열 머리글의 배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.HeaderBackColor">
          <source>The default is the system color for controls, <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Control" /&gt;</ph>.</source>
          <target state="translated">기본값은 컨트롤의 시스템 색(<ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Control" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.HeaderBackColor">
          <source>The following code example sets the background color of column headers using a value passed to the method.</source>
          <target state="translated">다음 코드 예제에서는 메서드에 전달 된 값을 사용 하는 열 머리글의 배경색을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.HeaderBackColor">
          <source>While trying to set the property, a <ph id="ph1">&lt;see langword="Color.Empty" /&gt;</ph> was passed.</source>
          <target state="translated">속성을 설정하는 동안 <ph id="ph1">&lt;see langword="Color.Empty" /&gt;</ph>가 전달된 경우</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.HeaderFont">
          <source>Gets or sets the font used for column headers.</source>
          <target state="translated">열 머리글에 사용되는 글꼴을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.HeaderFont">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that represents the header text.</source>
          <target state="translated">머리글 텍스트를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.HeaderFont">
          <source>You typically use this method only if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우에이 메서드를 일반적으로 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, 포함 하는 사용자 고유의 컨트롤을 만드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.HeaderForeColor">
          <source>Gets or sets the foreground color of headers.</source>
          <target state="translated">머리글의 전경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.HeaderForeColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the foreground color of the grid's column headers, including the column header text and the plus/minus glyphs.</source>
          <target state="translated">열 머리글 텍스트 및 +/- 문자 모양을 포함하여 표 열 머리글의 전경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.HeaderForeColor">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.ControlText" /&gt;</ph> color.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.ControlText" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.HeaderForeColor">
          <source>The following code example sets the foreground color of the grid's column headers.</source>
          <target state="translated">다음 코드 예제에서는 표의 열 머리글의 전경색을 설정합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGrid">
          <source>Gets information about the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control at a specified point on the screen.</source>
          <target state="translated">화면의 지정된 지점에 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤에 대한 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents single x,y coordinate.</source>
          <target state="translated">단일 x, y 좌표를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Drawing.Point)">
          <source>Gets information, such as row and column number of a clicked point on the grid, about the grid using a specific <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</source>
          <target state="translated">특정 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>를 사용하여 표에서 클릭된 지점의 행 및 열 번호와 같은 표에 대한 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid.HitTestInfo" /&gt;</ph> that contains specific information about the grid.</source>
          <target state="translated">표에 대한 특정 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid.HitTestInfo" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo&gt;</ph>, in conjunction with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control, is used to determine which part of a <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control the user has clicked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo&gt;</ph>, 함께에서 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 하 고의 어느 부분을 결정 하는 데 사용 되는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 사용자가 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo&gt;</ph> contains the row, column, and part of the grid that was clicked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo&gt;</ph> 행, 열 및 표의 클릭 된 부분을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Drawing.Point)">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo.Type%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.HitTestType&gt;</ph> enumeration.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo.Type%2A&gt;</ph> 속성에서 반환 된 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.HitTestType&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> method takes an x and y argument supplied by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> and <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> 메서드는 x와 y는 인수에서 제공 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 컨트롤의 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> 및 <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Drawing.Point)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> method in occurs when a user clicks on a grid.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> 에서 메서드는 표를 두 번 클릭할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Int32,System.Int32)">
          <source>The horizontal position of the coordinate.</source>
          <target state="translated">좌표의 가로 위치입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Int32,System.Int32)">
          <source>The vertical position of the coordinate.</source>
          <target state="translated">좌표의 세로 위치입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Int32,System.Int32)">
          <source>Gets information, such as row and column number of a clicked point on the grid, using the x and y coordinate passed to the method.</source>
          <target state="translated">메서드에 전달된 x, y 좌표를 사용하여 표에서 클릭된 지점의 행 및 열 번호와 같은 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid.HitTestInfo" /&gt;</ph> that contains information about the clicked part of the grid.</source>
          <target state="translated">표의 클릭된 부분에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid.HitTestInfo" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo&gt;</ph>, in conjunction with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control, is used to determine which part of a <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control the user has clicked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo&gt;</ph>, 함께에서 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 하 고의 어느 부분을 결정 하는 데 사용 되는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 사용자가 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo&gt;</ph> contains the row, column, and part of the grid that was clicked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo&gt;</ph> 행, 열 및 표의 클릭 된 부분을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Int32,System.Int32)">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo.Type%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.HitTestType&gt;</ph> enumeration.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTestInfo.Type%2A&gt;</ph> 속성에서 반환 된 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.HitTestType&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> method takes an x and y argument supplied by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> and <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> 메서드는 x와 y는 인수에서 제공 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 컨트롤의 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> 및 <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.HitTest(System.Int32,System.Int32)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> method in an event that occurs when the user clicks in the grid.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.HitTest%2A&gt;</ph> 눈금에서 사용자가 클릭할 때 발생 하는 이벤트에서 메서드.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.HorizScrollBar">
          <source>Gets the horizontal scroll bar for the grid.</source>
          <target state="translated">표의 가로 스크롤 막대를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.HorizScrollBar">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollBar" /&gt;</ph> for the grid.</source>
          <target state="translated">표에 대한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollBar" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.IsExpanded(System.Int32)">
          <source>The number of the row in question.</source>
          <target state="translated">해당 행 번호입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.IsExpanded(System.Int32)">
          <source>Gets a value that indicates whether the node of a specified row is expanded or collapsed.</source>
          <target state="translated">지정된 행의 노드가 확장되는지 아니면 축소되는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.IsExpanded(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the node is expanded; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">노드가 확장되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.IsExpanded(System.Int32)">
          <source>The following code example tests each row in the grid, and prints the row number of expanded rows.</source>
          <target state="translated">다음 코드 예제에서는 표의 각 행을 테스트 하 고 확장 된 행의 행 번호를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.IsSelected(System.Int32)">
          <source>The number of the row you are interested in.</source>
          <target state="translated">원하는 행의 번호입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.IsSelected(System.Int32)">
          <source>Gets a value indicating whether a specified row is selected.</source>
          <target state="translated">지정된 행이 선택되어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.IsSelected(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the row is selected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 행이 선택되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.IsSelected(System.Int32)">
          <source>Use this method with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Select%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.UnSelect%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.ResetSelection%2A&gt;</ph> methods to manipulate the selection state of a particular row.</source>
          <target state="translated">이 메서드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Select%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.UnSelect%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.ResetSelection%2A&gt;</ph> 특정 행의 선택 상태를 조작 하는 메서드.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.IsSelected(System.Int32)">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGrid">
          <source>Gets or sets the value of a specified cell.</source>
          <target state="translated">지정된 셀의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.Item(System.Windows.Forms.DataGridCell)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridCell" /&gt;</ph> that represents a cell in the grid.</source>
          <target state="translated">표의 셀을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridCell" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.Item(System.Windows.Forms.DataGridCell)">
          <source>Gets or sets the value of a specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridCell" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridCell" /&gt;</ph>의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.Item(System.Windows.Forms.DataGridCell)">
          <source>The value, typed as <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, of the cell.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>로 형식이 지정된 셀의 값입니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.Item(System.Windows.Forms.DataGridCell)">
          <source>Setting this property changes the position of the <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> to the specified row.</source>
          <target state="translated">이 속성을 설정 변경의 위치는 <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 지정된 된 행에 있습니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.Item(System.Windows.Forms.DataGridCell)">
          <source>The following code example sets and gets the value of a cell by declaring a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridCell&gt;</ph> variable, setting its <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridCell.RowNumber%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A&gt;</ph> values, then first changing, then returning, the value of the given cell.</source>
          <target state="translated">다음 코드 예제에서는 설정 하 고 선언 하 여 셀의 값을 가져옵니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridCell&gt;</ph> 변수를 해당 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridCell.RowNumber%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridCell.ColumnNumber%2A&gt;</ph> 값을 변경한 후 지정된 된 셀의 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.Item(System.Int32,System.Int32)">
          <source>The zero-based index of the row containing the value.</source>
          <target state="translated">해당 값을 포함하는 행의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.Item(System.Int32,System.Int32)">
          <source>The zero-based index of the column containing the value.</source>
          <target state="translated">해당 값을 포함하는 열의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.Item(System.Int32,System.Int32)">
          <source>Gets or sets the value of the cell at the specified the row and column.</source>
          <target state="translated">지정된 행 및 열에 있는 셀의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.Item(System.Int32,System.Int32)">
          <source>The value, typed as <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, of the cell.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>로 형식이 지정된 셀의 값입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.Item(System.Int32,System.Int32)">
          <source>Setting this property changes the position of the <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> to the specified row.</source>
          <target state="translated">이 속성을 설정 변경의 위치는 <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 지정된 된 행에 있습니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.Item(System.Int32,System.Int32)">
          <source>The following code example prints the value contained by the cell at the specified row and index.</source>
          <target state="translated">다음 코드 예제에서는 지정 된 행과 인덱스에 있는 셀에 포함 된 값을 인쇄 합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.Item(System.Int32,System.Int32)">
          <source>While getting or setting, the <ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph> is out of range.</source>
          <target state="translated">값을 가져오거나 설정하는 동안 <ph id="ph1">&lt;paramref name="rowIndex" /&gt;</ph>가 범위를 벗어난 경우</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.Item(System.Int32,System.Int32)">
          <source>While getting or setting, the <ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph> is out of range.</source>
          <target state="translated">값을 가져오거나 설정하는 동안 <ph id="ph1">&lt;paramref name="columnIndex" /&gt;</ph>가 범위를 벗어난 경우</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.LinkColor">
          <source>Gets or sets the color of the text that you can click to navigate to a child table.</source>
          <target state="translated">자식 테이블을 탐색하기 위해 클릭할 수 있는 텍스트의 색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.LinkColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the color of text that is clicked to navigate to a child table.</source>
          <target state="translated">자식 테이블을 탐색하기 위해 클릭한 텍스트의 색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.LinkColor">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.HotTrack" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.HotTrack" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.LinkColor">
          <source>You typically use this method only if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우에이 메서드를 일반적으로 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, 포함 하는 사용자 고유의 컨트롤을 만드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.LinkHoverColor">
          <source>This member is not meaningful for this control.</source>
          <target state="translated">이 멤버는 이 컨트롤에 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.LinkHoverColor">
          <source>The color displayed when hovering over link text.</source>
          <target state="translated">링크 텍스트를 가리킬 때 표시되는 색입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.ListManager">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph> 컨트롤에 대한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ListManager">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph>컨트롤에 대한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.Navigate">
          <source>Occurs when the user navigates to a new table.</source>
          <target state="translated">사용자가 새 테이블을 탐색할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.Navigate">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Navigate&gt;</ph> event to reset individual column properties, such as width, as appropriate to the table.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Navigate&gt;</ph> 너비는 테이블에 적절 하 게 등의 개별 열 속성을 다시 설정 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.Navigate">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.NavigateBack">
          <source>Navigates back to the table previously displayed in the grid.</source>
          <target state="translated">이전에 표에 표시된 테이블을 다시 탐색합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.NavigateBack">
          <source>If the grid has no parent rows, no change occurs.</source>
          <target state="translated">눈금에 없는 부모 행이 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.NavigateBack">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.NavigateTo(System.Int32,System.String)">
          <source>The number of the row to navigate to.</source>
          <target state="translated">탐색할 행의 번호입니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.NavigateTo(System.Int32,System.String)">
          <source>The name of the child relation to navigate to.</source>
          <target state="translated">탐색할 자식 관계 이름입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.NavigateTo(System.Int32,System.String)">
          <source>Navigates to the table specified by row and relation name.</source>
          <target state="translated">행 및 관계 이름으로 지정된 테이블을 탐색합니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.NavigateTo(System.Int32,System.String)">
          <source>The following code example navigates to the specified row number, in the table specified by child relationship name.</source>
          <target state="translated">다음 코드 예제에서는 자식 관계 이름으로 지정 된 테이블에서 지정 된 행 수를 탐색 합니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnAllowNavigationChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnAllowNavigationChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.AllowNavigationChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.AllowNavigationChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnBackButtonClicked(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains data about the control.</source>
          <target state="translated">컨트롤에 대한 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnBackButtonClicked(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains data about the event.</source>
          <target state="translated">이벤트 데이터가 들어 있는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnBackButtonClicked(System.Object,System.EventArgs)">
          <source>Listens for the caption's back button clicked event.</source>
          <target state="translated">캡션의 back 단추 클릭 이벤트를 수신합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnBackColorChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnBackColorChanged%2A&gt;</ph> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnBackgroundColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnBackgroundColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.BackgroundColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.BackgroundColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnBindingContextChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnBindingContextChanged%2A&gt;</ph> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnBorderStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnBorderStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.BorderStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.BorderStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnCaptionVisibleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnCaptionVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.CaptionVisibleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.CaptionVisibleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnCurrentCellChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnCurrentCellChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.CurrentCellChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.CurrentCellChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.DataSourceChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.DataSourceChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnDataSourceChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnDataSourceChanged%2A&gt;</ph> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnFlatModeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnFlatModeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.FlatModeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.FlatModeChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnFontChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnFontChanged%2A&gt;</ph> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnForeColorChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnForeColorChanged%2A&gt;</ph> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnHandleCreated%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnHandleCreated%2A&gt;</ph> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> containing the event data.</source>
          <target state="translated">이벤트 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnHandleDestroyed%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnHandleDestroyed%2A&gt;</ph> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that provides data about the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> 이벤트에 대한 데이터를 제공하는 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnKeyDown%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnKeyDown%2A&gt;</ph> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyPressEventArgs" /&gt;</ph> that contains data about the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyPressEventArgs" /&gt;</ph> 이벤트에 대한 데이터가 들어 있는 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyPress" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyPress" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnKeyPress%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnKeyPress%2A&gt;</ph> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LayoutEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LayoutEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> event, which repositions controls and updates scroll bars.</source>
          <target state="translated">컨트롤의 위치를 조정하고 스크롤 막대를 업데이트하는 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnLayout%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnLayout%2A&gt;</ph> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Leave" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Leave" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnLeave%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnLeave%2A&gt;</ph> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains data about the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> 이벤트에 대한 데이터가 들어 있는 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDown" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDown" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains data about the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>이벤트 데이터가 들어 있는 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)">
          <source>Creates the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph> 이벤트를 만듭니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains data about the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> 이벤트에 대한 데이터가 들어 있는 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseMove" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseMove" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains data about the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> 이벤트에 대한 데이터가 들어 있는 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains data about the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> 이벤트에 대한 데이터가 들어 있는 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseWheel" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseWheel" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnNavigate(System.Windows.Forms.NavigateEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.NavigateEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.NavigateEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnNavigate(System.Windows.Forms.NavigateEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.Navigate" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.Navigate" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> which contains data about the event.</source>
          <target state="translated">이벤트에 대한 데이터가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains information about the control to paint.</source>
          <target state="translated">그리려는 컨트롤에 대한 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>Overrides <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> to prevent painting the background of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> 컨트롤의 배경색을 칠하지 않도록 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> is a complex control, this override is implemented to have no action.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 복잡 한 제어는이 재정의을 미치지 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>Therefore, calling this method will have no effect.</source>
          <target state="translated">따라서이 메서드를 호출 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.ParentRowsLabelStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.ParentRowsLabelStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged%2A&gt;</ph> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnParentRowsVisibleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnParentRowsVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.ParentRowsVisibleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.ParentRowsVisibleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.ReadOnlyChanged" /&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.ReadOnlyChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnReadOnlyChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.OnReadOnlyChanged%2A&gt;</ph> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnRowHeaderClick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnRowHeaderClick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.RowHeaderClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.RowHeaderClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.OnRowHeaderClick(System.EventArgs)">
          <source>You must have the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.UIPermission" /&gt;</ph> for safe subwindows to set this property.</source>
          <target state="translated">있어야는 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.UIPermission" /&gt;</ph> 안전한 하위 창에서이 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnScroll(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnScroll(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.Scroll" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.Scroll" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnShowParentDetailsButtonClicked(System.Object,System.EventArgs)">
          <source>The source of the event.</source>
          <target state="translated">이벤트 소스입니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnShowParentDetailsButtonClicked(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.OnShowParentDetailsButtonClicked(System.Object,System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.ShowParentDetailsButtonClick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGrid.ShowParentDetailsButtonClick" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.ParentRowsBackColor">
          <source>Gets or sets the background color of parent rows.</source>
          <target state="translated">부모 행의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ParentRowsBackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the color of parent rows.</source>
          <target state="translated">부모 행의 색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ParentRowsBackColor">
          <source>The default is the <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Control" /&gt;</ph> color.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Control" /&gt;</ph> 색입니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ParentRowsBackColor">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ParentRowsBackColor%2A&gt;</ph> property to a new color.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ParentRowsBackColor%2A&gt;</ph> 속성을 새 색입니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.ParentRowsForeColor">
          <source>Gets or sets the foreground color of parent rows.</source>
          <target state="translated">부모 행의 전경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ParentRowsForeColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the foreground color of parent rows.</source>
          <target state="translated">부모 행의 전경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ParentRowsForeColor">
          <source>The default is the <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.WindowText" /&gt;</ph> color.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.WindowText" /&gt;</ph> 색입니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ParentRowsForeColor">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ParentRowsForeColor%2A&gt;</ph> property to a new color.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ParentRowsForeColor%2A&gt;</ph> 속성을 새 색입니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.ParentRowsLabelStyle">
          <source>Gets or sets the way parent row labels are displayed.</source>
          <target state="translated">부모 행 레이블이 표시되는 방법을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ParentRowsLabelStyle">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridParentRowsLabelStyle" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridParentRowsLabelStyle" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ParentRowsLabelStyle">
          <source>The default is <ph id="ph1">&lt;see langword="Both" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="Both" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ParentRowsLabelStyle">
          <source>The following code example cycles through the possible values for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ParentRowsLabelStyle%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 돌아가면서 선택에 대 한 가능한 값은 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ParentRowsLabelStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.ParentRowsLabelStyle">
          <source>The enumerator was not valid.</source>
          <target state="translated">열거자가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.ParentRowsLabelStyleChanged">
          <source>Occurs when the label style of the parent row is changed.</source>
          <target state="translated">부모 행의 레이블 스타일이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.ParentRowsLabelStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.ParentRowsVisible">
          <source>Gets or sets a value indicating whether the parent rows of a table are visible.</source>
          <target state="translated">테이블의 부모 행이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ParentRowsVisible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the parent rows are visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">부모 행이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ParentRowsVisible">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ParentRowsVisible">
          <source>The following code example toggles the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ParentRowsVisible%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 설정/해제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ParentRowsVisible%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.ParentRowsVisibleChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.ParentRowsVisible" /&gt;</ph> property value changes.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.ParentRowsVisible" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.ParentRowsVisibleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.PreferredColumnWidth">
          <source>Gets or sets the default width of the grid columns in pixels.</source>
          <target state="translated">표 열의 기본 너비(픽셀 단위)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.PreferredColumnWidth">
          <source>The default width (in pixels) of columns in the grid.</source>
          <target state="translated">데이터 표에서 열의 기본 너비(픽셀)입니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.PreferredColumnWidth">
          <source>Set this property before resetting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> properties (either separately, or through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> method), or the property will have no effect.</source>
          <target state="translated">다시 설정 하기 전에이 속성을 설정 합니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 속성 (중 하나 별도로 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> 메서드), 또는 속성이 아무런 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.PreferredColumnWidth">
          <source>The property cannot be set to a value less than 0.</source>
          <target state="translated">속성은 0 보다 작은 값으로 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.PreferredColumnWidth">
          <source>The following code example sets the default column widths to a value passed to the method.</source>
          <target state="translated">다음 코드 예제에서는 기본 열 너비는 메서드에 전달 된 값으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.PreferredColumnWidth">
          <source>The property value is less than 0.</source>
          <target state="translated">속성 값이 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.PreferredRowHeight">
          <source>Gets or sets the preferred row height for the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤의 기본 행 높이를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.PreferredRowHeight">
          <source>The height of a row.</source>
          <target state="translated">행의 높이입니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.PreferredRowHeight">
          <source>Set this property before resetting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> properties (either separately, or through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> method), or the property will have no effect.</source>
          <target state="translated">다시 설정 하기 전에이 속성을 설정 합니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 속성 (중 하나 별도로 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> 메서드), 또는 속성이 아무런 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.PreferredRowHeight">
          <source>The following code example first sets a new font, and sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.PreferredRowHeight%2A&gt;</ph> to the same height as the new font.</source>
          <target state="translated">다음 코드 예제에서는 먼저 새 글꼴을 설정 하 고 설정 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.PreferredRowHeight%2A&gt;</ph> 새 글꼴의 높이를 합니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> that contains data about the pressed key.</source>
          <target state="translated">누른 키에 대한 데이터가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Gets or sets a value that indicates whether a key should be processed further.</source>
          <target state="translated">키를 추가로 처리해야 할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, the key should be processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">키를 처리해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The method overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> method to implement keyboard navigation of the grid.</source>
          <target state="translated">메서드 재정의 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> 눈금의 키보드 탐색을 구현 하는 메서드.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ProcessGridKey(System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains data about the key up or key down event.</source>
          <target state="translated">이전 키 또는 다음 키 이벤트에 대한 데이터가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ProcessGridKey(System.Windows.Forms.KeyEventArgs)">
          <source>Processes keys for grid navigation.</source>
          <target state="translated">표 탐색용 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ProcessGridKey(System.Windows.Forms.KeyEventArgs)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the key was processed; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 처리되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> that contains data about the event.</source>
          <target state="translated">이벤트 데이터가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The parameter is passed by reference.</source>
          <target state="translated">해당 매개 변수는 참조로 전달됩니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Previews a keyboard message and returns a value indicating if the key was consumed.</source>
          <target state="translated">키보드 메시지를 미리 보고 해당 키가 사용되었는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the key was consumed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 키가 사용되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>This method is called by a child control when the child control receives a keyboard message.</source>
          <target state="translated">이 메서드는 자식 컨트롤이 키보드 메시지를 수신할 때 자식 컨트롤에 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The child control calls this method before generating any keyboard events for the message.</source>
          <target state="translated">자식 컨트롤의 메시지에 대 한 키보드 이벤트를 생성 하기 전에이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the child control considers the message consumed and does not generate any keyboard events.</source>
          <target state="translated">이 메서드가 반환 하는 경우 <ph id="ph1">`true`</ph>, 자식 컨트롤에서 메시지가 사용 되 고 키보드 이벤트를 생성 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ProcessTabKey(System.Windows.Forms.Keys)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> that contains data about which the pressed key.</source>
          <target state="translated">누른 키에 대한 데이터가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ProcessTabKey(System.Windows.Forms.Keys)">
          <source>Gets a value indicating whether the Tab key should be processed.</source>
          <target state="translated">Tab 키가 처리되어야 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ProcessTabKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the TAB key should be processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Tab 키를 처리해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ProcessTabKey(System.Windows.Forms.Keys)">
          <source>for drawing UI.</source>
          <target state="translated">UI를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ProcessTabKey(System.Windows.Forms.Keys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.ReadOnly">
          <source>Gets or sets a value indicating whether the grid is in read-only mode.</source>
          <target state="translated">표가 읽기 전용 모드인지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the grid is in read-only mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">표가 읽기 전용 모드이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ReadOnly">
          <source>In read-only mode, the grid can be scrolled, nodes can be expanded or collapsed, and so on.</source>
          <target state="translated">읽기 전용 모드에서 표를 스크롤할 수 있는, 노드를 확장 하거나 축소 수 등에입니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ReadOnly">
          <source>However, no additions, edits, or deletes can take place.</source>
          <target state="translated">그러나 없는 추가, 편집 또는 삭제 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ReadOnly">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> also has a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A&gt;</ph> property that can be set to true to prevent data from being edited, on a column-by-column basis.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 역시는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A&gt;</ph> 데이터가 열 단위로 별로 편집 되는 것을 방지 하려면 true로 설정할 수 있는 속성입니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ReadOnly">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ReadOnly%2A&gt;</ph> can be set to true if you want to prohibit the user from editing the data directly in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ReadOnly%2A&gt;</ph> 에서 직접 데이터를 편집 하 여 사용자를 금지 하려면 true로 설정할 수는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ReadOnly">
          <source>For example, you might want to let users to see all columns in a table, but allow them to edit specific fields only through <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls on a different form.</source>
          <target state="translated">예를 들어 사용자가 테이블의 모든 열이 표시 되지만 특정 필드를 편집 하도록 허용할 수 있도록 하려면 수 통해서만 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 다른 폼의 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.ReadOnly">
          <source>The following code example toggles the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ReadOnly%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 설정/해제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ReadOnly%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.ReadOnlyChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.ReadOnly" /&gt;</ph> property value changes.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.ReadOnly" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.ReadOnlyChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ResetAlternatingBackColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.AlternatingBackColor" /&gt;</ph> property to its default color.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.AlternatingBackColor" /&gt;</ph> 속성을 기본 색으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetAlternatingBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetAlternatingBackColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeAlternatingBackColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeAlternatingBackColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetAlternatingBackColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ResetBackColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.BackColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.BackColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetBackColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ResetForeColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.ForeColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.ForeColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetForeColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetForeColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ResetGridLineColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.GridLineColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.GridLineColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetGridLineColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetGridLineColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeGridLineColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeGridLineColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetGridLineColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ResetHeaderBackColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.HeaderBackColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.HeaderBackColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetHeaderBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetHeaderBackColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeHeaderBackColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeHeaderBackColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetHeaderBackColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ResetHeaderFont">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.HeaderFont" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.HeaderFont" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetHeaderFont">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetHeaderFont">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeHeaderFont%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeHeaderFont%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetHeaderFont">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ResetHeaderForeColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.HeaderForeColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.HeaderForeColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetHeaderForeColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetHeaderForeColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeHeaderForeColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeHeaderForeColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetHeaderForeColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ResetLinkColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.LinkColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.LinkColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetLinkColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetLinkColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ResetLinkHoverColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.LinkHoverColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.LinkHoverColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetLinkHoverColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetLinkHoverColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeLinkHoverColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeLinkHoverColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ResetSelection">
          <source>Turns off selection for all rows that are selected.</source>
          <target state="translated">선택된 모든 행에 대해 선택을 취소합니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetSelection">
          <source>Use this method with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.IsSelected%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.Select%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.UnSelect%2A&gt;</ph> methods to manipulate the selection state of a particular row.</source>
          <target state="translated">이 메서드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.IsSelected%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.Select%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.UnSelect%2A&gt;</ph> 특정 행의 선택 상태를 조작 하는 메서드.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ResetSelectionBackColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.SelectionBackColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.SelectionBackColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetSelectionBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetSelectionBackColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeSelectionBackColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeSelectionBackColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetSelectionBackColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ResetSelectionForeColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.SelectionForeColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.SelectionForeColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetSelectionForeColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetSelectionForeColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeSelectionForeColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.ShouldSerializeSelectionForeColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ResetSelectionForeColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.RowHeaderClick">
          <source>Occurs when a row header is clicked.</source>
          <target state="translated">행 머리글을 클릭할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.RowHeadersVisible">
          <source>Gets or sets a value that specifies whether row headers are visible.</source>
          <target state="translated">행 머리글이 표시되는지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.RowHeadersVisible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if row headers are visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">행 머리글이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.RowHeaderWidth">
          <source>Gets or sets the width of row headers.</source>
          <target state="translated">행 머리글의 너비를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.RowHeaderWidth">
          <source>The width of row headers in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>의 행 머리글 너비입니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.RowHeaderWidth">
          <source>The default is 35.</source>
          <target state="translated">기본값은 35입니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.RowHeaderWidth">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.Scroll">
          <source>Occurs when the user scrolls the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤을 스크롤하면 발생합니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.Scroll">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.Select(System.Int32)">
          <source>The index of the row to select.</source>
          <target state="translated">선택할 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.Select(System.Int32)">
          <source>Selects a specified row.</source>
          <target state="translated">지정된 행을 선택합니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.Select(System.Int32)">
          <source>Use this method with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.IsSelected%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.UnSelect%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.ResetSelection%2A&gt;</ph> methods to manipulate the selection state of a particular row.</source>
          <target state="translated">이 메서드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.IsSelected%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.UnSelect%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.ResetSelection%2A&gt;</ph> 특정 행의 선택 상태를 조작 하는 메서드.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.Select(System.Int32)">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.SelectionBackColor">
          <source>Gets or sets the background color of selected rows.</source>
          <target state="translated">선택된 행의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.SelectionBackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of selected rows.</source>
          <target state="translated">선택된 행의 배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.SelectionBackColor">
          <source>The default is the <ph id="ph1">&lt;see cref="P:System.Drawing.SystemBrushes.ActiveCaption" /&gt;</ph> color.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemBrushes.ActiveCaption" /&gt;</ph> 색입니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.SelectionBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.SelectionBackColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.SelectionForeColor">
          <source>Gets or set the foreground color of selected rows.</source>
          <target state="translated">선택된 행의 전경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.SelectionForeColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> representing the foreground color of selected rows.</source>
          <target state="translated">선택된 행의 전경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.SelectionForeColor">
          <source>The default is the <ph id="ph1">&lt;see cref="P:System.Drawing.SystemBrushes.ActiveCaptionText" /&gt;</ph> color.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemBrushes.ActiveCaptionText" /&gt;</ph> 색입니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.SelectionForeColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)">
          <source>The data source for the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤에 대한 데이터 소스입니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.DataMember" /&gt;</ph> string that specifies the table to bind to within the object returned by the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGrid.DataSource" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.DataMember" /&gt;</ph> 속성에서 반환하는 개체 내에서 바인딩할 테이블을 지정하는 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGrid.DataSource" /&gt;</ph> 문자열입니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.DataSource" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGrid.DataMember" /&gt;</ph> properties at run time.</source>
          <target state="translated">런타임에  <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.DataSource" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.DataGrid.DataMember" /&gt;</ph> 속성을 설정합니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)">
          <source>You must use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> method at run time to reset the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> property.</source>
          <target state="translated">사용 해야 합니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> 런타임에 다시 설정 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> property for more details about setting a valid data source.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 올바른 데이터 소스를 설정 하는 방법에 대 한 자세한 내용은 속성입니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)">
          <source>You can create a grid that enables users to edit data but prevents them from adding new rows by using a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> as the data source and setting the <ph id="ph2">&lt;xref:System.Data.DataView.AllowNew%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">사용자가 데이터를 편집할 수 있지만에서 사용 하 여 새 행을 추가할 것을 금지 하는 표를 만들 수는 <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 설정을 확인 하 고 데이터 원본으로는 <ph id="ph2">&lt;xref:System.Data.DataView.AllowNew%2A&gt;</ph> 속성을 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> is a <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, set the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> to an empty string ("").</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 는 <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>설정는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 빈 문자열 ("").</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> to a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, and a <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> in the <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>, respectively.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 에 <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>각각.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)">
          <source>One or more of the arguments are invalid.</source>
          <target state="translated">하나 이상의 인수가 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="dataSource" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataSource" /&gt;</ph> 인수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeAlternatingBackColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.AlternatingBackColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.AlternatingBackColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeAlternatingBackColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeAlternatingBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeBackgroundColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.BackgroundColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.BackgroundColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeBackgroundColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeBackgroundColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeCaptionBackColor">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.CaptionBackColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.CaptionBackColor" /&gt;</ph> 속성을 유지해야 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeCaptionBackColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has been changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeCaptionBackColor">
          <source>You typically use this method only if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우에이 메서드를 일반적으로 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, 포함 하는 사용자 고유의 컨트롤을 만드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeCaptionForeColor">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.CaptionForeColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.CaptionForeColor" /&gt;</ph> 속성을 유지해야 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeCaptionForeColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has been changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeCaptionForeColor">
          <source>You typically use this method only if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우에이 메서드를 일반적으로 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, 포함 하는 사용자 고유의 컨트롤을 만드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeGridLineColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.GridLineColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.GridLineColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeGridLineColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeGridLineColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderBackColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.HeaderBackColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.HeaderBackColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderBackColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderFont">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.HeaderFont" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.HeaderFont" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderFont">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderFont">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderForeColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.HeaderForeColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.HeaderForeColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderForeColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderForeColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeLinkHoverColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.LinkHoverColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.LinkHoverColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeLinkHoverColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeLinkHoverColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeParentRowsBackColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.ParentRowsBackColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.ParentRowsBackColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeParentRowsBackColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has been changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeParentRowsBackColor">
          <source>You typically use this method only if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우에이 메서드를 일반적으로 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, 포함 하는 사용자 고유의 컨트롤을 만드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeParentRowsForeColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.ParentRowsForeColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.ParentRowsForeColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeParentRowsForeColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has been changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeParentRowsForeColor">
          <source>You typically use this method only if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우에이 메서드를 일반적으로 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>, 포함 하는 사용자 고유의 컨트롤을 만드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializePreferredRowHeight">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.PreferredRowHeight" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.PreferredRowHeight" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializePreferredRowHeight">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializePreferredRowHeight">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeSelectionBackColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.SelectionBackColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.SelectionBackColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeSelectionBackColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeSelectionBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeSelectionForeColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.SelectionForeColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.SelectionForeColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeSelectionForeColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.ShouldSerializeSelectionForeColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.ShowParentDetailsButtonClick">
          <source>Occurs when the <ph id="ph1">&lt;see langword="ShowParentDetails" /&gt;</ph> button is clicked.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ShowParentDetails" /&gt;</ph> 단추를 클릭하면 발생합니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.ShowParentDetailsButtonClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.Site">
          <source>Gets or sets the site of the control.</source>
          <target state="translated">컨트롤의 사이트를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.Site">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with the Control, if any.</source>
          <target state="translated">컨트롤과 연결된 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph>입니다(있는 경우).</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.SubObjectsSiteChange(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to add the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph> objects to a container; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to remove them.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 개체를 추가하려면 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph>이고, 제거하려면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.SubObjectsSiteChange(System.Boolean)">
          <source>Adds or removes the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph> objects from the container that is associated with the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph>와 연결된 컨테이너에서 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 개체를 추가하거나 제거합니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>Gets the collection of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph> objects for the grid.</source>
          <target state="translated">표의 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph> 개체 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GridTableStylesCollection" /&gt;</ph> that represents the collection of <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GridTableStylesCollection" /&gt;</ph> 개체의 컬렉션을 나타내는 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph> retrieved through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> property to create customized views of each table displayed by the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph> 통해 검색는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> 속성으로 표시 되는 각 테이블의 사용자 지정 된 뷰를 만들 수는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>By default, the collection returned by <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> property does not contain any <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects.</source>
          <target state="translated">기본적으로 컬렉션에서 반환 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> 속성 포함 하지 않는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>To create a set of customized views:</source>
          <target state="translated">사용자 지정 된 뷰 집합을 만들려면:</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> of the grid table object to the <ph id="ph2">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 그리드 테이블 개체의는 <ph id="ph2">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>Add <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects, one for each grid column you want to show, to the <ph id="ph2">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A&gt;</ph> property.</source>
          <target state="translated">추가 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 개체, 표시, 하려는 각 표의 열에 대해 각각 하나씩의 <ph id="ph2">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> 에서 반환 되는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> of each <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> to the <ph id="ph3">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph> of a <ph id="ph4">&lt;xref:System.Data.DataColumn&gt;</ph>.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> 각 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Data.DataColumn&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>Add the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> object to the collection returned by <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> property.</source>
          <target state="translated">추가 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체에서 반환 된 컬렉션에 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>Always create <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects and add them to the <ph id="ph2">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> before adding <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects to the <ph id="ph4">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>.</source>
          <target state="translated">항상 만들기 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 개체에 추가 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> 추가 하기 전에 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체를 <ph id="ph4">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>When you add an empty <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> with a valid <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> value to the collection, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects are automatically generated for you.</source>
          <target state="translated">빈을 추가 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 유효한 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 를 컬렉션에 값 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 개체가 자동으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>Consequently, an exception will be thrown if you try to add new <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects with duplicate <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> values to the <ph id="ph3">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>.</source>
          <target state="translated">새로 추가 하려고 하면 예외가 throw 될 따라서 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 중복을 사용 하 여 개체 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 값에 <ph id="ph3">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>The following code example creates one <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> for each <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> found in a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, and sets the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> of the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> to the <ph id="ph6">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> of the <ph id="ph7">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 하나 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 각각에 대해 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, 설정 및는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 의 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 에 <ph id="ph6">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> 의 <ph id="ph7">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> is then added to the <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 에 추가 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph> 에서 반환 되는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.TableStyles">
          <source>The example also prints the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> of each <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A&gt;</ph> property of each <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> in the <ph id="ph6">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>.</source>
          <target state="translated">또한 출력 합니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> 각 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> 에서 반환 되는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A&gt;</ph> 각 속성 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 에 <ph id="ph6">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.Text">
          <source>This member is not meaningful for this control.</source>
          <target state="translated">이 멤버는 이 컨트롤에 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.Text">
          <source>The text associated with this control.</source>
          <target state="translated">이 컨트롤과 관련된 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGrid.TextChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.Text" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGrid.Text" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGrid.TextChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Text%2A&gt;</ph> property is not meaningful for this control, although you can change its value and handle the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.TextChanged&gt;</ph> event to detect the change.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Text%2A&gt;</ph> 값을 변경 하 고 처리할 수 있지만 속성은이 컨트롤에 의미가 없습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.TextChanged&gt;</ph> 변경 내용을 검색 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.UnSelect(System.Int32)">
          <source>The index of the row to deselect.</source>
          <target state="translated">선택 취소할 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGrid.UnSelect(System.Int32)">
          <source>Unselects a specified row.</source>
          <target state="translated">지정된 행을 선택 취소합니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.UnSelect(System.Int32)">
          <source>Use this method with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.IsSelected%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.Select%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.ResetSelection%2A&gt;</ph> methods to manipulate the selection state of a particular row.</source>
          <target state="translated">이 메서드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.IsSelected%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.Select%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.ResetSelection%2A&gt;</ph> 특정 행의 선택 상태를 조작 하는 메서드.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGrid.UnSelect(System.Int32)">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.VertScrollBar">
          <source>Gets the vertical scroll bar of the control.</source>
          <target state="translated">컨트롤의 세로 스크롤 막대를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.VertScrollBar">
          <source>The vertical <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollBar" /&gt;</ph> of the grid.</source>
          <target state="translated">표의 세로 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ScrollBar" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.VisibleColumnCount">
          <source>Gets the number of visible columns.</source>
          <target state="translated">표시되는 열의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.VisibleColumnCount">
          <source>The number of columns visible in the viewport.</source>
          <target state="translated">뷰포트에 표시되는 열의 수입니다.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.VisibleColumnCount">
          <source>The viewport is the rectangular area through which the grid is visible.</source>
          <target state="translated">뷰포트란 표가 표시되는 사각형 영역을 말합니다.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.VisibleColumnCount">
          <source>The size of the viewport depends on the size of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control; if you allow users to resize the control, the viewport will also be affected.</source>
          <target state="translated">The size of the viewport depends on the size of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control; if you allow users to resize the control, the viewport will also be affected.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.VisibleColumnCount">
          <source>The number of visible columns can change depending on their width.</source>
          <target state="translated">표시 되는 열의 수는 너비에 따라 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.VisibleColumnCount">
          <source>For example, if a default width for all columns is set, but the width of a new column is set twice as large, the number of visible columns can be reduced by at least one.</source>
          <target state="translated">예를 들어 모든 열의 기본 너비를 설정 되었지만 배의 크기로 설정 되어 새 열 너비를 하나 이상에서 표시 되는 열 수를 줄일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.VisibleColumnCount">
          <source>The following code example returns the number of visible columns.</source>
          <target state="translated">다음 코드 예제에서는 표시 되는 열 수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGrid.VisibleRowCount">
          <source>Gets the number of rows visible.</source>
          <target state="translated">표시되는 행의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.VisibleRowCount">
          <source>The number of rows visible in the viewport.</source>
          <target state="translated">뷰포트에 표시되는 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.VisibleRowCount">
          <source>The viewport is the rectangular area through which the grid is visible.</source>
          <target state="translated">뷰포트란 표가 표시되는 사각형 영역을 말합니다.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.VisibleRowCount">
          <source>The size of the viewport depends on the size of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control; if you allow users to resize the control, the viewport will also be affected.</source>
          <target state="translated">The size of the viewport depends on the size of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control; if you allow users to resize the control, the viewport will also be affected.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.VisibleRowCount">
          <source>The number of visible rows can be changed at run time if the user is allowed to resize the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated">사용자가 크기를 조정할 수 있으면 런타임 시 표시 되는 행의 수를 변경할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGrid.VisibleRowCount">
          <source>The following code example returns the number of rows visible in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 반환 행 수에 표시 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>