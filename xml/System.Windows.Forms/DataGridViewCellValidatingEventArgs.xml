<Type Name="DataGridViewCellValidatingEventArgs" FullName="System.Windows.Forms.DataGridViewCellValidatingEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ee89d19ce476aac45aa4df435c5734d9d044e230" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37513395" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewCellValidatingEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCellValidatingEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewCellValidatingEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCellValidatingEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type DataGridViewCellValidatingEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0b67a-101">
        <see cref="E:System.Windows.Forms.DataGridView.CellValidating" /> 컨트롤의 <see cref="T:System.Windows.Forms.DataGridView" /> 이벤트에 대한 데이터를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b67a-101">Provides data for the <see cref="E:System.Windows.Forms.DataGridView.CellValidating" /> event of a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b67a-102"><xref:System.Windows.Forms.DataGridView.CellValidating?displayProperty=nameWithType> 이벤트를 사용 하면 새 값을 유효 하지 않을 때 현재 셀의 변경 내용을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-102">The <xref:System.Windows.Forms.DataGridView.CellValidating?displayProperty=nameWithType> event lets you cancel changes to the current cell when the new value is not valid.</span></span> <span data-ttu-id="0b67a-103">사용 된 <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> 현재 값을 확인 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-103">Use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property to determine the current value.</span></span> <span data-ttu-id="0b67a-104">현재 셀의 상태를 확인 하려면 사용 합니다 <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex%2A> 및 <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex%2A> 속성을 통해 셀에 액세스를 <xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=nameWithType> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-104">To determine the state of the current cell, use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex%2A> and <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex%2A> properties to access the cell through the <xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="0b67a-105">변경 내용을 취소를 설정 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-105">To cancel the change, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="0b67a-106">이 이벤트는 데이터 바인딩 모드에서 취소 된 경우 새 값이 기본 데이터 원본에 푸시되 지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-106">When this event is canceled in data-bound mode, the new value is not pushed to the underlying data source.</span></span> <span data-ttu-id="0b67a-107">이 이벤트는 가상 모드에 취소 될 때를 <xref:System.Windows.Forms.DataGridView.CellValuePushed?displayProperty=nameWithType> 이벤트 발생 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-107">When this event is canceled in virtual mode, the <xref:System.Windows.Forms.DataGridView.CellValuePushed?displayProperty=nameWithType> event will not be raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b67a-108">다음 코드 예제에서는 처리 된 <xref:System.Windows.Forms.DataGridView.CellValidating> 이벤트를 사용자가 양의 정수만 입력 되어 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-108">The following code example handles the <xref:System.Windows.Forms.DataGridView.CellValidating> event to ensure that only positive integers are entered by the user.</span></span> <span data-ttu-id="0b67a-109">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 참조 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-109">This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> reference topic.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#40)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellValidated" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
    <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellValidatingEventHandler" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" />
    <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
  </Docs>
  <Members>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnIndex : int" Usage="System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b67a-110">유효성을 검사해야 하는 셀의 열 인덱스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b67a-110">Gets the column index of the cell that needs to be validated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b67a-111">유효성을 검사해야 하는 셀의 열 인덱스를 지정하는 0부터 시작하는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b67a-111">A zero-based integer that specifies the column index of the cell that needs to be validated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0b67a-112">다음 코드 예제에서는이 속성의 사용을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-112">The following code example illustrates the use of this property.</span></span> <span data-ttu-id="0b67a-113">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 데이터의 유효성 검사](~/docs/framework/winforms/controls/how-to-validate-data-in-the-windows-forms-datagridview-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-113">This example is part of a larger example available in [How to: Validate Data in the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/how-to-validate-data-in-the-windows-forms-datagridview-control.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/CS/datavalidation.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/VB/datavalidation.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="FormattedValue">
      <MemberSignature Language="C#" Value="public object FormattedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormattedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormattedValue : obj" Usage="System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b67a-114">유효성을 검사해야 하는 셀의 서식이 지정된 내용을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b67a-114">Gets the formatted contents of the cell that needs to be validated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b67a-115">서식이 지정된 값에 대한 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b67a-115">A reference to the formatted value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b67a-116">사용자 인터페이스 (UI)를 통해 사용자가 입력 한 텍스트가 <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-116">The text entered by the user through the user interface (UI) becomes the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property value.</span></span> <span data-ttu-id="0b67a-117">이 유효성을 검사할 수 있는 값은 셀으로 구문 분석 전에 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-117">This is the value that you can validate before it is parsed into the cell <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b67a-118">다음 코드 예제에서는 처리 된 <xref:System.Windows.Forms.DataGridView.CellValidating> 이벤트를 사용자가 양의 정수만 입력 되어 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-118">The following code example handles the <xref:System.Windows.Forms.DataGridView.CellValidating> event to ensure that only positive integers are entered by the user.</span></span> <span data-ttu-id="0b67a-119">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 참조 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-119">This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> reference topic.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#40)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RowIndex : int" Usage="System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b67a-120">유효성을 검사해야 하는 셀의 행 인덱스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b67a-120">Gets the row index of the cell that needs to be validated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b67a-121">유효성을 검사해야 하는 셀의 행 인덱스를 지정하는 0부터 시작하는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b67a-121">A zero-based integer that specifies the row index of the cell that needs to be validated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0b67a-122">다음 코드 예제에서는이 속성의 사용을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-122">The following code example illustrates the use of this property.</span></span> <span data-ttu-id="0b67a-123">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 데이터의 유효성 검사](~/docs/framework/winforms/controls/how-to-validate-data-in-the-windows-forms-datagridview-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0b67a-123">This example is part of a larger example available in [How to: Validate Data in the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/how-to-validate-data-in-the-windows-forms-datagridview-control.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/CS/datavalidation.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/VB/datavalidation.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" />
      </Docs>
    </Member>
  </Members>
</Type>