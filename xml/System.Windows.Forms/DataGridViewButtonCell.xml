<Type Name="DataGridViewButtonCell" FullName="System.Windows.Forms.DataGridViewButtonCell">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc85fbb03e7fe433287f0fcc18d01804f68bfccb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewButtonCell : System.Windows.Forms.DataGridViewCell" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewButtonCell extends System.Windows.Forms.DataGridViewCell" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewButtonCell" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewButtonCell&#xA;Inherits DataGridViewCell" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewButtonCell : System::Windows::Forms::DataGridViewCell" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewCell</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ad101-101">Displays a button-like user interface (UI) for use in a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ad101-101">Displays a button-like user interface (UI) for use in a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-102"><xref:System.Windows.Forms.DataGridViewButtonCell> 클래스는 특수 한 유형의 <xref:System.Windows.Forms.DataGridViewCell> 단추와 유사한 UI를 표시 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-102">The <xref:System.Windows.Forms.DataGridViewButtonCell> class is a specialized type of <xref:System.Windows.Forms.DataGridViewCell> used to display a button-like UI.</span></span>  
  
 <span data-ttu-id="ad101-103"><xref:System.Windows.Forms.DataGridViewButtonColumn> 이 유형의 셀을 보유할 특수화 된 열 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-103"><xref:System.Windows.Forms.DataGridViewButtonColumn> is the column type specialized to hold cells of this type.</span></span> <span data-ttu-id="ad101-104">기본적으로는 <xref:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate%2A?displayProperty=nameWithType> 을 새로운 초기화 <xref:System.Windows.Forms.DataGridViewButtonCell>합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-104">By default, the <xref:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate%2A?displayProperty=nameWithType> is initialized to a new <xref:System.Windows.Forms.DataGridViewButtonCell>.</span></span> <span data-ttu-id="ad101-105">기존 열 내에 있는 셀에서 패턴을 사용 하려면 <xref:System.Windows.Forms.DataGridViewButtonCell>, 열의 설정 <xref:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate%2A> 속성 패턴으로 사용 하는 셀을 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-105">To pattern the cells within a column after an existing <xref:System.Windows.Forms.DataGridViewButtonCell>, set the column's <xref:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate%2A> property to the cell to use as a pattern.</span></span>  
  
 <span data-ttu-id="ad101-106">사용자 단추 클릭에 응답 하려면 처리는 <xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=nameWithType> 또는 <xref:System.Windows.Forms.DataGridView.CellContentClick?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-106">To respond to user button clicks, handle the <xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=nameWithType> or <xref:System.Windows.Forms.DataGridView.CellContentClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="ad101-107">이벤트 처리기를 사용할 수 있습니다는 <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType> 속성 클릭이 발생 하는지 여부를 확인 하는 단추 열입니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-107">In the event handler, you can use the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType> property to determine whether the click occurred a the button column.</span></span> <span data-ttu-id="ad101-108">사용할 수는 <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType> 속성을 특정 단추 셀에서 클릭이 발생 하는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-108">You can use the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType> property to determine whether the click occurred in a particular button cell.</span></span>  
  
 <span data-ttu-id="ad101-109">열의 셀 관련 속성은 템플릿 셀의 비슷하게 명명 된 속성에 대 한 래퍼 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-109">The cell-related properties of the column are wrappers for the similarly-named properties of the template cell.</span></span> <span data-ttu-id="ad101-110">템플릿 셀의 속성 값을 변경 된 셀만 템플릿을 기반으로 변경 된 후 추가 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-110">Changing the property values of the template cell will affect only cells based on the template that are added after the change.</span></span> <span data-ttu-id="ad101-111">하지만 열의 셀 관련 속성 값을 변경 템플릿 셀과 열에 다른 모든 셀을 업데이트할 되며 필요한 경우 열 표시를 새로 고칩니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-111">Changing the cell-related property values of the column, however, will update the template cell and all other cells in the column, and refresh the column display if necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ad101-112">단추 열의 단추를 사용 하 여 칠해집니다 비주얼 스타일을 사용 하는 경우는 <xref:System.Windows.Forms.ButtonRenderer>와 같은 속성을 통해 지정 된 셀 스타일 및 <xref:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle%2A> 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-112">When visual styles are enabled, the buttons in a button column are painted using a <xref:System.Windows.Forms.ButtonRenderer>, and cell styles specified through properties such as <xref:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle%2A> have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad101-113">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.DataGridViewButtonColumn> 특정 행에 대해 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-113">The following code example demonstrates how to use a <xref:System.Windows.Forms.DataGridViewButtonColumn> to perform actions on particular rows.</span></span> <span data-ttu-id="ad101-114">개별 작업할 때 유사한 코드를 사용할 수 <xref:System.Windows.Forms.DataGridViewButtonCell> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-114">You can use similar code when working with individual <xref:System.Windows.Forms.DataGridViewButtonCell> objects.</span></span> <span data-ttu-id="ad101-115">이 예제는 <xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=nameWithType> 이벤트 처리기 먼저 있는지 확인 한 번의 클릭 단추 셀에 한 후 해당 행과 관련 된 비즈니스 개체를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-115">In this example, a <xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=nameWithType> event handler first determines whether a click is on a button cell, then retrieves a business object associated with the row.</span></span> <span data-ttu-id="ad101-116">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [하는 방법: Windows Forms DataGridViewComboBoxCell 드롭다운 목록에서 개체 액세스](~/docs/framework/winforms/controls/access-objects-in-a-wf-datagridviewcomboboxcell-drop-down-list.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-116">This example is part of a larger example available in [How to: Access Objects in a Windows Forms DataGridViewComboBoxCell Drop-Down List](~/docs/framework/winforms/controls/access-objects-in-a-wf-datagridviewcomboboxcell-drop-down-list.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/vb/form1.vb#100)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="ad101-117">파생 시키는 경우 <see cref="T:System.Windows.Forms.DataGridViewButtonCell" /> 파생 된 클래스에 새 속성을 추가 하 고, 재정의 해야는 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.Clone" /> 복제 작업 중 새 속성을 복사 하려면.</span>
        <span class="sxs-lookup">
          <span data-stu-id="ad101-117">When you derive from <see cref="T:System.Windows.Forms.DataGridViewButtonCell" /> and add new properties to the derived class, be sure to override the <see cref="M:System.Windows.Forms.DataGridViewButtonCell.Clone" /> method to copy the new properties during cloning operations.</span>
        </span>
        <span data-ttu-id="ad101-118">또한 기본 클래스를 호출 해야 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.Clone" /> 메서드는 기본 클래스의 속성이 새로운 셀에 복사 되도록 합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="ad101-118">You should also call the base class's <see cref="M:System.Windows.Forms.DataGridViewButtonCell.Clone" /> method so that the properties of the base class are copied to the new cell.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewButtonColumn" />
    <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
    <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.Clone" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewButtonCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewButtonCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ad101-119">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewButtonCell" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-119">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewButtonCell" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ad101-120">Creates an exact copy of this cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-120">Creates an exact copy of this cell.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad101-121">An <see cref="T:System.Object" /> that represents the cloned <see cref="T:System.Windows.Forms.DataGridViewButtonCell" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-121">An <see cref="T:System.Object" /> that represents the cloned <see cref="T:System.Windows.Forms.DataGridViewButtonCell" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-122">재정의 <xref:System.Windows.Forms.DataGridViewButtonCell.Clone%2A> 메서드에서 파생 될 때마다 <xref:System.Windows.Forms.DataGridViewButtonCell> 파생된 클래스에 새 속성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-122">Override the <xref:System.Windows.Forms.DataGridViewButtonCell.Clone%2A> method whenever you derive from <xref:System.Windows.Forms.DataGridViewButtonCell> and add new properties to the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ad101-123">재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.Clone" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.Clone" /> 메서드는 기본 클래스 속성이 새로운 셀을에 복사 되 고 파생된 클래스에 추가 된 속성의 값도 복사 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ad101-123">When overriding <see cref="M:System.Windows.Forms.DataGridViewButtonCell.Clone" /> in a derived class, call the base class's <see cref="M:System.Windows.Forms.DataGridViewButtonCell.Clone" /> method so that the properties of the base class are copied to the new cell, and be sure to also copy the values of any properties that were added to the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ad101-124">Creates a new accessible object for the <see cref="T:System.Windows.Forms.DataGridViewButtonCell" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-124">Creates a new accessible object for the <see cref="T:System.Windows.Forms.DataGridViewButtonCell" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad101-125">A new <see cref="T:System.Windows.Forms.DataGridViewButtonCell.DataGridViewButtonCellAccessibleObject" /> for the <see cref="T:System.Windows.Forms.DataGridViewButtonCell" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-125">A new <see cref="T:System.Windows.Forms.DataGridViewButtonCell.DataGridViewButtonCellAccessibleObject" /> for the <see cref="T:System.Windows.Forms.DataGridViewButtonCell" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-126"><xref:System.Windows.Forms.DataGridViewButtonCell.CreateAccessibilityInstance%2A> 메서드를 명시적으로 호출하지 않으면 <xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A> 속성을 참조할 때 이 메서드가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-126">If you do not explicitly call the <xref:System.Windows.Forms.DataGridViewButtonCell.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A> property is referenced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ad101-127"><xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A> 속성을 가져오거나 설정하려면 .NET Framework와 함께 설치된 액세스 가능성 어셈블리에 대한 참조를 추가해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-127">To get or set the <xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A> property, you must add a reference to the Accessibility assembly installed with the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell.DataGridViewButtonCellAccessibleObject" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.AccessibilityObject" />
      </Docs>
    </Member>
    <Member MemberName="EditType">
      <MemberSignature Language="C#" Value="public override Type EditType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EditType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonCell.EditType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EditType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ EditType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ad101-128">Gets the type of the cell's hosted editing control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-128">Gets the type of the cell's hosted editing control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ad101-129">
            <see cref="T:System.Type" /> 내부 편집 컨트롤의 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-129">The <see cref="T:System.Type" /> of the underlying editing control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-130">이 재정의 된 속성은 항상 반환 `null` 더 관련 있기 때문에 Windows 호스트 된; 단추와 비슷한 사용자 인터페이스를 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-130">This overridden property always returns `null` because there is no associated Windows hosted control; the button-like user interface is rendered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonCell.FlatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatStyle As FlatStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatStyle FlatStyle { System::Windows::Forms::FlatStyle get(); void set(System::Windows::Forms::FlatStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ad101-131">Gets or sets the style determining the button's appearance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-131">Gets or sets the style determining the button's appearance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ad101-132">
            <see cref="T:System.Windows.Forms.FlatStyle" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-132">One of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-133">설정의 <xref:System.Windows.Forms.DataGridViewButtonColumn.FlatStyle%2A> 소유 열의 속성을 설정는 <xref:System.Windows.Forms.DataGridViewButtonCell.FlatStyle%2A> 속성 새로 고침 및 열에 있는 모든 셀의 열을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-133">Setting the <xref:System.Windows.Forms.DataGridViewButtonColumn.FlatStyle%2A> property of the owning column also sets the <xref:System.Windows.Forms.DataGridViewButtonCell.FlatStyle%2A> property of every cell in the column and refreshes the column display.</span></span> <span data-ttu-id="ad101-134">개별 셀에 대해 지정된 된 값을 재정의 하려면 열 값을 설정 하면 셀 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-134">To override the specified value for individual cells, set the cell values after you set the column value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad101-135">다음 코드 예제에서는의 사용을 보여 줍니다.는 <xref:System.Windows.Forms.DataGridViewButtonColumn.FlatStyle%2A?displayProperty=nameWithType> 속성을이 속성에는 것과 비슷합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-135">The following code example demonstrates the use of the <xref:System.Windows.Forms.DataGridViewButtonColumn.FlatStyle%2A?displayProperty=nameWithType> property, which is similar to this property.</span></span> <span data-ttu-id="ad101-136">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-136">This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewComboBoxColumn> class overview topic.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ad101-137">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.FlatStyle" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-137">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.FlatStyle" /> value.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.FlatStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.FlatStyle" />
      </Docs>
    </Member>
    <Member MemberName="FormattedValueType">
      <MemberSignature Language="C#" Value="public override Type FormattedValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FormattedValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonCell.FormattedValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FormattedValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ FormattedValueType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ad101-138">Gets the type of the formatted value associated with the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-138">Gets the type of the formatted value associated with the cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ad101-139">A <see cref="T:System.Type" /> 셀의 형식을 나타내는 형식이 지정 된 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-139">A <see cref="T:System.Type" /> representing the type of the cell's formatted value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
      </Docs>
    </Member>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetContentBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetContentBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetContentBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <span data-ttu-id="ad101-140">The graphics context for the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-140">The graphics context for the cell.</span>
          </span>
        </param>
        <param name="cellStyle">
          <span data-ttu-id="ad101-141">The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> to be applied to the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-141">The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> to be applied to the cell.</span>
          </span>
        </param>
        <param name="rowIndex">
          <span data-ttu-id="ad101-142">The index of the cell's parent row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-142">The index of the cell's parent row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-143">Returns the bounding rectangle that encloses the cell's content area, which is calculated using the specified <see cref="T:System.Drawing.Graphics" /> and cell style.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-143">Returns the bounding rectangle that encloses the cell's content area, which is calculated using the specified <see cref="T:System.Drawing.Graphics" /> and cell style.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad101-144">The <see cref="T:System.Drawing.Rectangle" /> that bounds the cell's contents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-144">The <see cref="T:System.Drawing.Rectangle" /> that bounds the cell's contents.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorIconBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetErrorIconBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetErrorIconBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetErrorIconBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <span data-ttu-id="ad101-145">The graphics context for the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-145">The graphics context for the cell.</span>
          </span>
        </param>
        <param name="cellStyle">
          <span data-ttu-id="ad101-146">The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> to be applied to the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-146">The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> to be applied to the cell.</span>
          </span>
        </param>
        <param name="rowIndex">
          <span data-ttu-id="ad101-147">The index of the cell's parent row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-147">The index of the cell's parent row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-148">Returns the bounding rectangle that encloses the cell's error icon, if one is displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-148">Returns the bounding rectangle that encloses the cell's error icon, if one is displayed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad101-149">The <see cref="T:System.Drawing.Rectangle" /> that bounds the cell's error icon, if one is displayed; otherwise, <see cref="F:System.Drawing.Rectangle.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-149">The <see cref="T:System.Drawing.Rectangle" /> that bounds the cell's error icon, if one is displayed; otherwise, <see cref="F:System.Drawing.Rectangle.Empty" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size GetPreferredSize (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex, System.Drawing.Size constraintSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size GetPreferredSize(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex, valuetype System.Drawing.Size constraintSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Size GetPreferredSize(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex, System::Drawing::Size constraintSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="constraintSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <span data-ttu-id="ad101-150">The <see cref="T:System.Drawing.Graphics" /> used to draw the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-150">The <see cref="T:System.Drawing.Graphics" /> used to draw the cell.</span>
          </span>
        </param>
        <param name="cellStyle">
          <span data-ttu-id="ad101-151">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> that represents the style of the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-151">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> that represents the style of the cell.</span>
          </span>
        </param>
        <param name="rowIndex">
          <span data-ttu-id="ad101-152">The zero-based row index of the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-152">The zero-based row index of the cell.</span>
          </span>
        </param>
        <param name="constraintSize">
          <span data-ttu-id="ad101-153">The cell's maximum allowable size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-153">The cell's maximum allowable size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-154">Calculates the preferred size, in pixels, of the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-154">Calculates the preferred size, in pixels, of the cell.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad101-155">A <see cref="T:System.Drawing.Size" /> that represents the preferred size, in pixels, of the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-155">A <see cref="T:System.Drawing.Size" /> that represents the preferred size, in pixels, of the cell.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected override object GetValue (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetValue(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetValue (rowIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetValue(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="ad101-156">The index of the cell's parent row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-156">The index of the cell's parent row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-157">Retrieves the text associated with the button.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-157">Retrieves the text associated with the button.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad101-158">The value of the <see cref="T:System.Windows.Forms.DataGridViewButtonCell" /> or the <see cref="P:System.Windows.Forms.DataGridViewButtonColumn.Text" /> value of the owning column if <see cref="P:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue" /> is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-158">The value of the <see cref="T:System.Windows.Forms.DataGridViewButtonCell" /> or the <see cref="P:System.Windows.Forms.DataGridViewButtonColumn.Text" /> value of the owning column if <see cref="P:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue" /> is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-159">이 메서드는 셀 값을 로컬로 저장할 수 없으며 공유 상태를 유지 하는 공유 행의 셀의 텍스트를 검색 하는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-159">This method is useful to retrieve the text of a cell in a shared row, which cannot store cell values locally and remain shared.</span></span> <span data-ttu-id="ad101-160">공유 행에는 인덱스가 있으므로-1의 실제 행 인덱스를 전달 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-160">You must pass in the actual row index because shared rows have indexes of -1.</span></span> <span data-ttu-id="ad101-161">행 공유에 대 한 자세한 내용은 참조 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-161">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool KeyDownUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool KeyDownUnsharesRow(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.KeyDownUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function KeyDownUnsharesRow (e As KeyEventArgs, rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool KeyDownUnsharesRow(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ad101-162">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-162">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <param name="rowIndex">
          <span data-ttu-id="ad101-163">The index of the cell's parent row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-163">The index of the cell's parent row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-164">Indicates whether a row is unshared if a key is pressed while the focus is on a cell in the row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-164">Indicates whether a row is unshared if a key is pressed while the focus is on a cell in the row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad101-165">
            <see langword="true" /> if the user pressed the SPACE key without modifier keys; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-165">
              <see langword="true" /> if the user pressed the SPACE key without modifier keys; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-166"><xref:System.Windows.Forms.DataGridViewButtonCell.KeyDownUnsharesRow%2A> 메서드 바로 전에 호출 됩니다는 <xref:System.Windows.Forms.DataGridViewButtonCell.OnKeyDown%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ad101-166">The <xref:System.Windows.Forms.DataGridViewButtonCell.KeyDownUnsharesRow%2A> method is called just before the <xref:System.Windows.Forms.DataGridViewButtonCell.OnKeyDown%2A> method.</span></span> <span data-ttu-id="ad101-167">반환 해야 `true` 하는 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewButtonCell.OnKeyDown%2A> 동일한 <xref:System.Windows.Forms.KeyEventArgs> 인수에는 행을 공유 하지 않도록 `rowIndex`합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-167">It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewButtonCell.OnKeyDown%2A> with the same <xref:System.Windows.Forms.KeyEventArgs> argument has the effect of unsharing the row `rowIndex`.</span></span> <span data-ttu-id="ad101-168">반환 해야 `false` 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="ad101-168">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="ad101-169">행 공유에 대 한 자세한 내용은 참조 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-169">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool KeyUpUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool KeyUpUnsharesRow(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.KeyUpUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function KeyUpUnsharesRow (e As KeyEventArgs, rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool KeyUpUnsharesRow(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ad101-170">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-170">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <param name="rowIndex">
          <span data-ttu-id="ad101-171">The index of the cell's parent row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-171">The index of the cell's parent row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-172">Indicates whether a row is unshared when a key is released while the focus is on a cell in the row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-172">Indicates whether a row is unshared when a key is released while the focus is on a cell in the row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad101-173">
            <see langword="true" /> if the user released the SPACE key; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-173">
              <see langword="true" /> if the user released the SPACE key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-174"><xref:System.Windows.Forms.DataGridViewButtonCell.KeyUpUnsharesRow%2A> 메서드 바로 전에 호출 됩니다는 <xref:System.Windows.Forms.DataGridViewButtonCell.OnKeyUp%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ad101-174">The <xref:System.Windows.Forms.DataGridViewButtonCell.KeyUpUnsharesRow%2A> method is called just before the <xref:System.Windows.Forms.DataGridViewButtonCell.OnKeyUp%2A> method.</span></span> <span data-ttu-id="ad101-175">반환 해야 `true` 하는 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewButtonCell.OnKeyUp%2A> 동일한 <xref:System.Windows.Forms.KeyEventArgs> 인수에는 행을 공유 하지 않도록 `rowIndex`합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-175">It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewButtonCell.OnKeyUp%2A> with the same <xref:System.Windows.Forms.KeyEventArgs> argument has the effect of unsharing the row `rowIndex`.</span></span> <span data-ttu-id="ad101-176">반환 해야 `false` 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="ad101-176">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="ad101-177">행 공유에 대 한 자세한 내용은 참조 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-177">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MouseDownUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseDownUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseDownUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseDownUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseDownUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ad101-178">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-178">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-179">Indicates whether a row will be unshared when the mouse button is held down while the pointer is on a cell in the row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-179">Indicates whether a row will be unshared when the mouse button is held down while the pointer is on a cell in the row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad101-180">
            <see langword="true" /> if the user pressed the left mouse button; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-180">
              <see langword="true" /> if the user pressed the left mouse button; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-181"><xref:System.Windows.Forms.DataGridViewButtonCell.MouseDownUnsharesRow%2A> 메서드 바로 전에 호출 됩니다는 <xref:System.Windows.Forms.DataGridViewButtonCell.OnMouseDown%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ad101-181">The <xref:System.Windows.Forms.DataGridViewButtonCell.MouseDownUnsharesRow%2A> method is called just before the <xref:System.Windows.Forms.DataGridViewButtonCell.OnMouseDown%2A> method.</span></span> <span data-ttu-id="ad101-182">반환 해야 `true` 하는 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewButtonCell.OnMouseDown%2A> 행을 공유 해제는 효과가 `rowIndex`합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-182">It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewButtonCell.OnMouseDown%2A> has the effect of unsharing the row `rowIndex`.</span></span> <span data-ttu-id="ad101-183">반환 해야 `false` 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="ad101-183">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="ad101-184">행 공유에 대 한 자세한 내용은 참조 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-184">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MouseEnterUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseEnterUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseEnterUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.MouseEnterUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseEnterUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseEnterUnsharesRow(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="ad101-185">The row index of the current cell, or -1 if the cell is not owned by a row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-185">The row index of the current cell, or -1 if the cell is not owned by a row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-186">Indicates whether a row will be unshared when the mouse pointer moves over a cell in the row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-186">Indicates whether a row will be unshared when the mouse pointer moves over a cell in the row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad101-187">
            <see langword="true" /> if the cell was the last cell receiving a mouse click; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-187">
              <see langword="true" /> if the cell was the last cell receiving a mouse click; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-188"><xref:System.Windows.Forms.DataGridViewButtonCell.MouseEnterUnsharesRow%2A> 메서드 바로 전에 호출 됩니다는 <xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ad101-188">The <xref:System.Windows.Forms.DataGridViewButtonCell.MouseEnterUnsharesRow%2A> method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A> method.</span></span> <span data-ttu-id="ad101-189">반환 해야 `true` 하는 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A> 행을 공유 해제는 효과가 `rowIndex`합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-189">It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A> has the effect of unsharing the row `rowIndex`.</span></span> <span data-ttu-id="ad101-190">반환 해야 `false` 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="ad101-190">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="ad101-191">행 공유에 대 한 자세한 내용은 참조 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-191">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseLeaveUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseLeaveUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.MouseLeaveUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseLeaveUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseLeaveUnsharesRow(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="ad101-192">The row index of the current cell, or -1 if the cell is not owned by a row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-192">The row index of the current cell, or -1 if the cell is not owned by a row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-193">Indicates whether a row will be unshared when the mouse pointer leaves the row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-193">Indicates whether a row will be unshared when the mouse pointer leaves the row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad101-194">
            <see langword="true" /> if the button displayed by the cell is in the pressed state; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-194">
              <see langword="true" /> if the button displayed by the cell is in the pressed state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-195"><xref:System.Windows.Forms.DataGridViewButtonCell.MouseLeaveUnsharesRow%2A> 메서드 바로 전에 호출 됩니다는 <xref:System.Windows.Forms.DataGridViewButtonCell.OnMouseLeave%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ad101-195">The <xref:System.Windows.Forms.DataGridViewButtonCell.MouseLeaveUnsharesRow%2A> method is called just before the <xref:System.Windows.Forms.DataGridViewButtonCell.OnMouseLeave%2A> method.</span></span> <span data-ttu-id="ad101-196"><xref:System.Windows.Forms.DataGridViewButtonCell.MouseLeaveUnsharesRow%2A> 반환 해야 합니다 `true` 하는 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewButtonCell.OnMouseLeave%2A> 로 지정 된 행을 공유 해제는 효과가 `rowIndex`합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-196"><xref:System.Windows.Forms.DataGridViewButtonCell.MouseLeaveUnsharesRow%2A> must return `true` if the call to <xref:System.Windows.Forms.DataGridViewButtonCell.OnMouseLeave%2A> has the effect of unsharing the row specified by `rowIndex`.</span></span> <span data-ttu-id="ad101-197">반환 해야 `false` 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="ad101-197">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="ad101-198">행 공유에 대 한 자세한 내용은 참조 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-198">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ButtonState" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseLeave(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MouseUpUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseUpUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseUpUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseUpUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseUpUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ad101-199">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-199">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-200">Indicates whether a row will be unshared when the mouse button is released while the pointer is on a cell in the row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-200">Indicates whether a row will be unshared when the mouse button is released while the pointer is on a cell in the row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad101-201">
            <see langword="true" /> if the left mouse button was released; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-201">
              <see langword="true" /> if the left mouse button was released; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-202"><xref:System.Windows.Forms.DataGridViewButtonCell.MouseUpUnsharesRow%2A> 메서드 바로 전에 호출 됩니다는 <xref:System.Windows.Forms.DataGridViewButtonCell.OnMouseUp%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ad101-202">The <xref:System.Windows.Forms.DataGridViewButtonCell.MouseUpUnsharesRow%2A> method is called just before the <xref:System.Windows.Forms.DataGridViewButtonCell.OnMouseUp%2A> method.</span></span> <span data-ttu-id="ad101-203">반환 해야 `true` 하는 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewButtonCell.OnMouseUp%2A> 행을 공유 해제는 효과가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-203">It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewButtonCell.OnMouseUp%2A> has the effect of unsharing the row.</span></span> <span data-ttu-id="ad101-204">반환 해야 `false` 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="ad101-204">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="ad101-205">행 공유에 대 한 자세한 내용은 참조 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 유용한](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-205">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ad101-206">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-206">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <param name="rowIndex">
          <span data-ttu-id="ad101-207">The row index of the current cell, or -1 if the cell is not owned by a row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-207">The row index of the current cell, or -1 if the cell is not owned by a row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-208">Called when a character key is pressed while the focus is on the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-208">Called when a character key is pressed while the focus is on the cell.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-209">SPACE 키로 활성화 되 면이 메서드는 셀의 UI (사용자 인터페이스)를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-209">When activated by the SPACE key, this method updates the cell's user interface (UI).</span></span>  
  
 <span data-ttu-id="ad101-210">이 메서드는 비슷합니다는 <xref:System.Windows.Forms.Control.OnKeyDown%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ad101-210">This method is similar to the <xref:System.Windows.Forms.Control.OnKeyDown%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ad101-211">동일한 상황에서 호출 됩니다는 <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-211">It is called in the same circumstances in which a <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ad101-212">파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ad101-212">When overriding <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.KeyDownUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="F:System.Windows.Forms.Keys.Space" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ad101-213">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-213">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data</span>
          </span>
        </param>
        <param name="rowIndex">
          <span data-ttu-id="ad101-214">The row index of the current cell, or -1 if the cell is not owned by a row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-214">The row index of the current cell, or -1 if the cell is not owned by a row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-215">Called when a character key is released while the focus is on the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-215">Called when a character key is released while the focus is on the cell.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-216">이 메서드는 셀 업데이트 SPACE 키로 활성화 되 면 높아지고의 사용자 인터페이스 (UI)는 <xref:System.Windows.Forms.DataGridView.OnCellClick%2A> 및 <xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A> 에서 소유 하 고 있는 이벤트 <xref:System.Windows.Forms.DataGridView>합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-216">When activated by the SPACE key, this method updates the cell's user interface (UI) and raises the <xref:System.Windows.Forms.DataGridView.OnCellClick%2A> and <xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A> events on the owning <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
 <span data-ttu-id="ad101-217">이 메서드는 비슷합니다는 <xref:System.Windows.Forms.Control.OnKeyUp%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ad101-217">This method is similar to the <xref:System.Windows.Forms.Control.OnKeyUp%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ad101-218">동일한 상황에서 호출 됩니다는 <xref:System.Windows.Forms.Control.KeyUp?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-218">It is called in the same circumstances in which a <xref:System.Windows.Forms.Control.KeyUp?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ad101-219">파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ad101-219">When overriding <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.KeyUpUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="F:System.Windows.Forms.Keys.Space" />
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected override void OnLeave (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLeave(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.OnLeave(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLeave (rowIndex As Integer, throughMouseClick As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLeave(int rowIndex, bool throughMouseClick);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="ad101-220">The row index of the current cell, or -1 if the cell is not owned by a row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-220">The row index of the current cell, or -1 if the cell is not owned by a row.</span>
          </span>
        </param>
        <param name="throughMouseClick">
          <span data-ttu-id="ad101-221">
            <see langword="true" /> if focus left the cell as a result of user mouse click; <see langword="false" /> if focus left due to a programmatic cell change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-221">
              <see langword="true" /> if focus left the cell as a result of user mouse click; <see langword="false" /> if focus left due to a programmatic cell change.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-222">Called when the focus moves from the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-222">Called when the focus moves from the cell.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-223">이 메서드는 비슷합니다는 <xref:System.Windows.Forms.Control.OnLeave%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ad101-223">This method is similar to the <xref:System.Windows.Forms.Control.OnLeave%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ad101-224">동일한 상황에서 호출 됩니다는 <xref:System.Windows.Forms.Control.Leave?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-224">It is called in the same circumstances in which a <xref:System.Windows.Forms.Control.Leave?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ad101-225">파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnLeave(System.Int32,System.Boolean)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnLeave(System.Int32,System.Boolean)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ad101-225">When overriding <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnLeave(System.Int32,System.Boolean)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnLeave(System.Int32,System.Boolean)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ad101-226">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-226">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-227">Called when the mouse button is held down while the pointer is on the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-227">Called when the mouse button is held down while the pointer is on the cell.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-228">마우스 왼쪽된 단추를 눌러 활성화 될,이 메서드는 셀의 UI (사용자 인터페이스)를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-228">If activated by depressing the left mouse button, this method updates the cell's user interface (UI).</span></span>  
  
 <span data-ttu-id="ad101-229">이 메서드는 비슷합니다는 <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ad101-229">This method is similar to the <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ad101-230">동일한 상황에서 호출 됩니다는 <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-230">It is called in the same circumstances in which a <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ad101-231">파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ad101-231">When overriding <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseLeave(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="ad101-232">The row index of the current cell, or -1 if the cell is not owned by a row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-232">The row index of the current cell, or -1 if the cell is not owned by a row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-233">Called when the mouse pointer moves out of the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-233">Called when the mouse pointer moves out of the cell.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-234">셀의 단추 정상 상태로에 없는 경우이 메서드를 사용 하면 셀의 사용자 인터페이스 (UI) 업데이트 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-234">If the cell's button is not in its normal state, this method causes the cell's user interface (UI) to be updated.</span></span>  
  
 <span data-ttu-id="ad101-235">이 메서드는 비슷합니다는 <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ad101-235">This method is similar to the <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ad101-236">동일한 상황에서 호출 됩니다는 <xref:System.Windows.Forms.Control.MouseLeave> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-236">It is called in the same circumstances in which a <xref:System.Windows.Forms.Control.MouseLeave> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ad101-237">파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseLeave(System.Int32)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseLeave(System.Int32)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ad101-237">When overriding <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseLeave(System.Int32)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseLeave(System.Int32)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ad101-238">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-238">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-239">Called when the mouse pointer moves while it is over the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-239">Called when the mouse pointer moves while it is over the cell.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-240">이 메서드는 비슷합니다는 <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ad101-240">This method is similar to the <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ad101-241">동일한 상황에서 호출 됩니다는 <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-241">It is called in the same circumstances in which a <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ad101-242">파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ad101-242">When overriding <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ad101-243">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-243">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-244">Called when the mouse button is released while the pointer is on the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-244">Called when the mouse button is released while the pointer is on the cell.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-245">마우스 왼쪽된 단추를 활성화 하는 경우이 메서드는 셀의 UI (사용자 인터페이스)를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-245">If activated by the left mouse button, this method updates the cell's user interface (UI).</span></span>  
  
 <span data-ttu-id="ad101-246">이 메서드는 비슷합니다는 <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ad101-246">This method is similar to the <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ad101-247">동일한 상황에서 호출 됩니다는 <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-247">It is called in the same circumstances in which a <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ad101-248">파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ad101-248">When overriding <see cref="M:System.Windows.Forms.DataGridViewButtonCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected override void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates elementState, object value, object formattedValue, string errorText, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle cellBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates elementState, object value, object formattedValue, string errorText, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle cellBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates elementState, System::Object ^ value, System::Object ^ formattedValue, System::String ^ errorText, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="elementState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <span data-ttu-id="ad101-249">The <see cref="T:System.Drawing.Graphics" /> used to paint the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-249">The <see cref="T:System.Drawing.Graphics" /> used to paint the cell.</span>
          </span>
        </param>
        <param name="clipBounds">
          <span data-ttu-id="ad101-250">A <see cref="T:System.Drawing.Rectangle" /> that represents the area of the <see cref="T:System.Windows.Forms.DataGridView" /> that needs to be repainted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-250">A <see cref="T:System.Drawing.Rectangle" /> that represents the area of the <see cref="T:System.Windows.Forms.DataGridView" /> that needs to be repainted.</span>
          </span>
        </param>
        <param name="cellBounds">
          <span data-ttu-id="ad101-251">A <see cref="T:System.Drawing.Rectangle" /> that contains the bounds of the cell that is being painted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-251">A <see cref="T:System.Drawing.Rectangle" /> that contains the bounds of the cell that is being painted.</span>
          </span>
        </param>
        <param name="rowIndex">
          <span data-ttu-id="ad101-252">The row index of the cell that is being painted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-252">The row index of the cell that is being painted.</span>
          </span>
        </param>
        <param name="elementState">
          <span data-ttu-id="ad101-253">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that specifies the state of the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-253">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that specifies the state of the cell.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ad101-254">The data of the cell that is being painted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-254">The data of the cell that is being painted.</span>
          </span>
        </param>
        <param name="formattedValue">
          <span data-ttu-id="ad101-255">The formatted data of the cell that is being painted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-255">The formatted data of the cell that is being painted.</span>
          </span>
        </param>
        <param name="errorText">
          <span data-ttu-id="ad101-256">An error message that is associated with the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-256">An error message that is associated with the cell.</span>
          </span>
        </param>
        <param name="cellStyle">
          <span data-ttu-id="ad101-257">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> that contains formatting and style information about the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-257">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> that contains formatting and style information about the cell.</span>
          </span>
        </param>
        <param name="advancedBorderStyle">
          <span data-ttu-id="ad101-258">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that contains border styles for the cell that is being painted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-258">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that contains border styles for the cell that is being painted.</span>
          </span>
        </param>
        <param name="paintParts">
          <span data-ttu-id="ad101-259">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> values that specifies which parts of the cell need to be painted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-259">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> values that specifies which parts of the cell need to be painted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad101-260">Paints the current <see cref="T:System.Windows.Forms.DataGridViewButtonCell" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-260">Paints the current <see cref="T:System.Windows.Forms.DataGridViewButtonCell" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonCell.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ad101-261">Returns the string representation of the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-261">Returns the string representation of the cell.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad101-262">A <see cref="T:System.String" /> that represents the current cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-262">A <see cref="T:System.String" /> that represents the current cell.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-263">반환 되는 문자열 표현에 인덱스 행 및 셀의 열 인덱스에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-263">The string representation that is returned includes the row index and column index of the cell.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />
      </Docs>
    </Member>
    <Member MemberName="UseColumnTextForButtonValue">
      <MemberSignature Language="C#" Value="public bool UseColumnTextForButtonValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseColumnTextForButtonValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseColumnTextForButtonValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseColumnTextForButtonValue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ad101-264">Gets or sets a value indicating whether the owning column's text will appear on the button displayed by the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-264">Gets or sets a value indicating whether the owning column's text will appear on the button displayed by the cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ad101-265">
            <see langword="true" /> 경우의 값은 <see cref="P:System.Windows.Forms.DataGridViewCell.Value" /> 속성의 값을 자동으로 일치 됩니다는 <see cref="P:System.Windows.Forms.DataGridViewButtonColumn.Text" /> 소유 열의 속성을, 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-265">
              <see langword="true" /> if the value of the <see cref="P:System.Windows.Forms.DataGridViewCell.Value" /> property will automatically match the value of the <see cref="P:System.Windows.Forms.DataGridViewButtonColumn.Text" /> property of the owning column; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ad101-266">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-266">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad101-267"><xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> 단추 셀 단추 텍스트로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-267">The <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> of a button cell is displayed as text on the button.</span></span> <span data-ttu-id="ad101-268"><xref:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue%2A> 속성을 사용 하면 각 셀에 대 한 단추 텍스트를 설정 하거나 사용할 수 있습니다는 <xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A> 단추 셀을 모두에 대 한 부모 열의 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-268">The <xref:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue%2A> property allows you to either set the button text for each cell, or to use the <xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A> property value of the parent column for all of the button cells.</span></span>  
  
 <span data-ttu-id="ad101-269">설정의 <xref:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue%2A> 소유 열의 속성을 설정는 <xref:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue%2A> 속성 새로 고침 및 열에 있는 모든 셀의 열을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-269">Setting the <xref:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue%2A> property of the owning column also sets the <xref:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue%2A> property of every cell in the column and refreshes the column display.</span></span> <span data-ttu-id="ad101-270">개별 셀에 대해 지정된 된 값을 재정의 하려면 열 값을 설정 하면 셀 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-270">To override the specified value for individual cells, set the cell values after you set the column value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad101-271">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ad101-271">The following code example demonstrates the use of this member.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#010](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#010)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#010](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#010)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.Text" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public override Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonCell.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ad101-272">Gets or sets the data type of the values in the cell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-272">Gets or sets the data type of the values in the cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ad101-273">A <see cref="T:System.Type" /> 셀에 있는 값의 데이터 형식을 나타내는입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad101-273">A <see cref="T:System.Type" /> representing the data type of the value in the cell.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
      </Docs>
    </Member>
  </Members>
</Type>