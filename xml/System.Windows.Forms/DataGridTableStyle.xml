<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataGridTableStyle.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bf6f0c048c4acdccd43d8ecab4887fee7a5a62ea.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf6f0c048c4acdccd43d8ecab4887fee7a5a62ea</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>Represents the table drawn by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control at run time.</source>
          <target state="translated">런타임에 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤로 그린 테이블을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control displays data in the form of a grid.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 컨트롤을 표 형태로 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> is a class that represents the drawn grid only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 그려지는 표를 나타내는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>This grid should not be confused with the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> class, which is a possible source of data for the grid.</source>
          <target state="translated">이 표와 일치 하지 않습니다는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 표에 대 한 데이터의 가능한 원본인 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> strictly represents the grid as it is painted in the control.</source>
          <target state="translated">대신,는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 컨트롤에서 그려질 때 모눈을 정확 하 게 나타냅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>Therefore, through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> you can control the appearance of the grid for each <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">따라서 통해는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 각 눈금의 모양을 제어할 수 있습니다 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>To specify which <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> is used when displaying data from a particular <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, set the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> to the <ph id="ph4">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> of a <ph id="ph5">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">지정할 수 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 특정에서 데이터를 표시할 때 사용 되 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>설정는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> 의 <ph id="ph5">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph> retrieved through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> property contains all the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects used by a <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph> 통해 검색는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> 속성 모두 포함 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 사용 되는 개체는 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 컨트롤.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>The collection can contain as many <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects as you need, however the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> of each must be unique.</source>
          <target state="translated">컬렉션은 만큼 포함할 수 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체 필요한 만큼 있지만 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 각각의 고유 해야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>At run time, this allows you to substitute a different <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> for the same data, depending on the user's preference.</source>
          <target state="translated">런타임 시이 사용할 수 있도록 다른 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 사용자의 기본 설정에 따라 동일한 데이터에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>To do this:</source>
          <target state="translated">가상 하드 디스크 파일에 대한 중요 정보를 제공하려면</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>Populate the <ph id="ph1">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph> with <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects.</source>
          <target state="translated">채우기의 <ph id="ph1">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> exists in the <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph> whose <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> property value equals the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object's <ph id="ph5">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> property, the <ph id="ph6">&lt;xref:System.Data.DataTable&gt;</ph> is displayed with this <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 에 존재는 <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph> 인 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 속성 값이는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 개체의 <ph id="ph5">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> 속성에는 <ph id="ph6">&lt;xref:System.Data.DataTable&gt;</ph> 이 표시 됩니다 <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>If no <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> exists with a matching <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> is displayed with the default style for data grid tables.</source>
          <target state="translated">없는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 일치 하는 존재 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> 데이터 표 테이블에 대 한 기본 스타일으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>When a different grid style is needed, use the <ph id="ph1">`Item`</ph> property to select the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> (pass the <ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> to the <ph id="ph4">&lt;xref:System.Windows.Forms.GridTableStylesCollection.Item%2A&gt;</ph> property) and set the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> of the returned object to a new value.</source>
          <target state="translated">다른 그리드 스타일 필요할 때 사용 하 여는 <ph id="ph1">`Item`</ph> 속성을 적절 한 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> (전달는 <ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Windows.Forms.GridTableStylesCollection.Item%2A&gt;</ph> 속성) 설정 하 고는 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 을 새 값으로 반환된 된 개체의 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.GridTableStylesCollection.Item%2A&gt;</ph> property to select the desired <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>, and set its <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> to the <ph id="ph4">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> of the <ph id="ph5">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.GridTableStylesCollection.Item%2A&gt;</ph> 속성을 원하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>, 설정 및 해당 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> 의 <ph id="ph5">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>Always create <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects and add them to the <ph id="ph2">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> before adding <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects to the <ph id="ph4">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>.</source>
          <target state="translated">항상 만들기 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 개체에 추가 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> 추가 하기 전에 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체를 <ph id="ph4">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>When you add an empty <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> with a valid <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> value to the collection, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects are automatically generated for you.</source>
          <target state="translated">빈을 추가 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 유효한 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 를 컬렉션에 값 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 개체가 자동으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>Consequently, an exception will be thrown if you try to add new <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects with duplicate <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> values to the <ph id="ph3">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>.</source>
          <target state="translated">새로 추가 하려고 하면 예외가 throw 될 따라서 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 중복을 사용 하 여 개체 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 값에 <ph id="ph3">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>To determine which <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> is currently displayed, use the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> properties of the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> to return a <ph id="ph5">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>.</source>
          <target state="translated">결정할 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 가 사용 하 여 현재 표시 된는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 반환 하는 <ph id="ph5">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>If the data source implements the <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph> interface, you can use the <ph id="ph2">&lt;xref:System.ComponentModel.ITypedList.GetListName%2A&gt;</ph> method to return the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> of the current table.</source>
          <target state="translated">데이터 원본 구현 하는 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph> 사용할 수 있습니다 인터페이스는 <ph id="ph2">&lt;xref:System.ComponentModel.ITypedList.GetListName%2A&gt;</ph> 반환 하는 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 현재 테이블의 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>This is shown in the C# code below:</source>
          <target state="translated">이 C# 코드 아래에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects related through <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> objects, and the currently displayed <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is a child table, the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> will return a string in the form of TableName.RelationName (in the simplest case).</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 포함 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 개체를 통해 관련 <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> 개체 및 현재 표시 된 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 은 자식 테이블의 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> (가장 간단한 경우)에서 TableName.RelationName 형식의 문자열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is further down in the hierarchy, the string will consist of the parent table's name followed by the necessary <ph id="ph2">&lt;xref:System.Data.DataRelation.RelationName%2A&gt;</ph> values required to reach the table's level.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 하위 문자열의 계층 구조에서 부모 테이블의 이름 뒤에 필요한 구성 됩니다 <ph id="ph2">&lt;xref:System.Data.DataRelation.RelationName%2A&gt;</ph> 테이블의 수준에 도달 하는 데 필요한 값입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>For example, imagine three <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects in a hierarchical relationship named (top to bottom) <ph id="ph2">`Regions`</ph>, <ph id="ph3">`Customers`</ph>, and <ph id="ph4">`Orders`</ph>, and two <ph id="ph5">&lt;xref:System.Data.DataRelation&gt;</ph> objects named <ph id="ph6">`RegionsToCustomers`</ph> and <ph id="ph7">`CustomersToOrders`</ph>, the <ph id="ph8">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> property will return "Regions.RegionsToCustomers.CustomersToOrders".</source>
          <target state="translated">예를 들어 3 개의 한다고 가정 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 계층 이라는 관계 (위에서 아래로)에 개체 <ph id="ph2">`Regions`</ph>, <ph id="ph3">`Customers`</ph>, 및 <ph id="ph4">`Orders`</ph>와 두 개의 <ph id="ph5">&lt;xref:System.Data.DataRelation&gt;</ph> 개체의 명명 된 <ph id="ph6">`RegionsToCustomers`</ph> 및 <ph id="ph7">`CustomersToOrders`</ph>는 <ph id="ph8">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph>속성은 "Regions.RegionsToCustomers.CustomersToOrders"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> will then be "Orders".</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> "Orders" 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>The collection of <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects is returned through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">컬렉션 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체를 통해 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> is displayed, the settings for the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> will override the settings for the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 표시 되 면에 대 한 설정을 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 에 대 한 설정을 재정의 합니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>If a value is not set for a particular <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control's value will be used instead.</source>
          <target state="translated">특정 작업에 대해 값을 설정 하지 않으면 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 컨트롤의 값이 대신 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>The following list shows the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> properties that can be set to override <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control properties:</source>
          <target state="translated">다음 목록에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 재정의를 설정할 수 있는 속성 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 속성을 제어 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>To bind the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> to a strongly typed array of objects, the object type must contain public properties.</source>
          <target state="translated">바인딩할는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 개체 유형을 개체의 강력한 형식의 배열에 public 속성을 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>To create a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> that displays the array, set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph3">`typename`</ph> where <ph id="ph4">`typename`</ph> is replaced by the name of the object type.</source>
          <target state="translated">만들려는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 배열을 표시 하는 설정는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType&gt;</ph> 속성을 <ph id="ph3">`typename`</ph> 여기서 <ph id="ph4">`typename`</ph> 개체 유형의 이름으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>Also note that the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> property is case-sensitive; the type name must be matched exactly.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 속성은 대/소문자 구분; 형식 이름은 정확히 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> property for an example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 예에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>You can also bind the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> to an <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">바인딩할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>A feature of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is that it can contain objects of multiple types, but the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> can only bind to such a list when all items in the list are of the same type as the first item.</source>
          <target state="translated">기능은 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 여러 종류의 개체를 포함 될 수 있도록은 있지만 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 목록의 모든 항목이 첫 번째 항목으로 같은 형식의 경우 해당 목록에만 바인딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>This means that all objects must either be of the same type, or they must inherit from the same class as the first item in the list.</source>
          <target state="translated">즉, 동일한 유형의 모든 개체 여야 하거나 목록에서 첫 번째 항목으로 동일한 클래스에서 상속 해야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>For example, if the first item in a list is a <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, the second item could be a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> (which inherits from <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>).</source>
          <target state="translated">예를 들어 첫 번째 항목 목록에는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, 두 번째 항목 수는 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> (에서 상속 되 <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>If, on the other hand, the first item is a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, the second object cannot be a <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</source>
          <target state="translated">반면에 첫 번째 항목이 인지는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, 두 번째 개체 일 수 없습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>Further, the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> must have items in it when it is bound and the objects in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> must contain public properties.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 있어야 항목에 바인딩 및 개체에 되었을 때의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 공용 속성을 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> will result in an empty grid.</source>
          <target state="translated">빈 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 빈 그리드가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>When binding to an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> to "ArrayList" (the type name).</source>
          <target state="translated">에 바인딩할 때는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> "ArrayList" (형식 이름)를 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>The following code example creates two <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> instances and sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> of each object to the <ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> of a <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> in a <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 두 개의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 인스턴스를 설정 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 각 개체의는 <ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 에 <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>The example then adds <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> of each <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">이 예에서는 다음 추가 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> 각 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>For an example that runs, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> example.</source>
          <target state="translated">실행 되는 예제에 대 한 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 예제입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.#ctor">
          <source>The following code example creates a new <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> and adds it to the <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 새 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 에 추가 된 <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify the table as the default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">테이블을 기본값으로 지정하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph> class using the specified value to determine whether the grid table is the default style.</source>
          <target state="translated">지정된 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph> 클래스의 새 인스턴스를 초기화함으로써 표 테이블이 기본 스타일인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.#ctor(System.Boolean)">
          <source>The following code example creates a new <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> and adds it to the <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 새 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 에 추가 된 <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.#ctor(System.Windows.Forms.CurrencyManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph> to use.</source>
          <target state="translated">사용할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.#ctor(System.Windows.Forms.CurrencyManager)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.#ctor(System.Windows.Forms.CurrencyManager)">
          <source>The following code example creates a new <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> using a <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> for a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 새 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 를 사용 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 에 대 한는 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.AllowSorting">
          <source>Indicates whether sorting is allowed on the grid table when this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph> is used.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph>을 사용할 때 모눈 테이블 정렬이 허용되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.AllowSorting">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if sorting is allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">정렬이 허용되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.AllowSorting">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.AllowSorting">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.AllowSorting%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, a triangle appears in each column header indicating the direction of the sort.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.AllowSorting%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>, 삼각형이 정렬 방향을 나타내는 각 열 머리글에 나타납니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.AllowSorting">
          <source>The user can click on any column header to sort the grid by that column.</source>
          <target state="translated">사용자는 표의 해당 열으로 정렬 하려면 열 머리글을 클릭할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.AllowSorting">
          <source>Clicking the column a second time changes the direction of the sort.</source>
          <target state="translated">열을 두 번 클릭 하면 정렬 방향을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.AllowSorting">
          <source>This property overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AllowSorting%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">이 속성을 재정의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.AllowSorting%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.AllowSorting">
          <source>The following code example allows you to toggle sorting availability on a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> by clicking a button and the current sorting status is displayed in a label.</source>
          <target state="translated">다음 코드 예제를 사용 하면에 정렬 기능을 설정/해제할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 단추 및 현재 정렬 상태를 클릭 하 여 레이블에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.AllowSorting">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> with a <ph id="ph2">&lt;xref:System.Data.DataSet?displayProperty=nameWithType&gt;</ph> that contains some data, a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> and a <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> on a <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">이 예제를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Data.DataSet?displayProperty=nameWithType&gt;</ph> 일부 데이터를 포함 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> 에 <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.AllowSortingChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.AllowSorting" /&gt;</ph> property value changes.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.AllowSorting" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.AllowSortingChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.AllowSortingChanged">
          <source>The following code example allows you to toggle sorting availability on a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> by clicking a button and the current sorting status is displayed in a label.</source>
          <target state="translated">다음 코드 예제를 사용 하면에 정렬 기능을 설정/해제할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 단추 및 현재 정렬 상태를 클릭 하 여 레이블에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.AllowSortingChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> with a <ph id="ph2">&lt;xref:System.Data.DataSet?displayProperty=nameWithType&gt;</ph> that contains some data, a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> and a <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> on a <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">이 예제를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Data.DataSet?displayProperty=nameWithType&gt;</ph> 일부 데이터를 포함 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> 에 <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor">
          <source>Gets or sets the background color of odd-numbered rows of the grid.</source>
          <target state="translated">표에 있는 홀수 번호 행의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of odd-numbered rows.</source>
          <target state="translated">홀수 번호 행의 배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Drawing.SystemBrushes.Window" /&gt;</ph></source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemBrushes.Window" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor">
          <source>The following code example creates an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.BackColor%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor%2A&gt;</ph> properties to new values.</source>
          <target state="translated">다음 코드 예제에서는의 인스턴스를 만듭니다. <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 설정 하 고는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.BackColor%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor%2A&gt;</ph> 속성을 새 값입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor">
          <source>The example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> with a <ph id="ph2">&lt;xref:System.Data.DataSet?displayProperty=nameWithType&gt;</ph> that contains some data, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> on a <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">예제를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Data.DataSet?displayProperty=nameWithType&gt;</ph> 일부 데이터를 포함 하 고 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> named <ph id="ph2">`DataGridTableStyle1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 라는 <ph id="ph2">`DataGridTableStyle1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.BackColor">
          <source>Gets or sets the background color of even-numbered rows of the grid.</source>
          <target state="translated">표에 있는 짝수 번호 행의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.BackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of odd-numbered rows.</source>
          <target state="translated">홀수 번호 행의 배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.BackColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor%2A&gt;</ph> property can also be set to create a ledger-like appearance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor%2A&gt;</ph> 장부 모양을 만드는 속성을 설정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.BackColor">
          <source>The following code example creates an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.BackColor%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor%2A&gt;</ph> properties to new values.</source>
          <target state="translated">다음 코드 예제에서는의 인스턴스를 만듭니다. <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 설정 하 고는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.BackColor%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor%2A&gt;</ph> 속성을 새 값입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.BackColor">
          <source>The example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> with a <ph id="ph2">&lt;xref:System.Data.DataSet?displayProperty=nameWithType&gt;</ph> that contains some data, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> on a <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">예제를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Data.DataSet?displayProperty=nameWithType&gt;</ph> 일부 데이터를 포함 하 고 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.BackColor" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.BackColor" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.BackColorChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.BackColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> named <ph id="ph2">`DataGridTableStyle1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 라는 <ph id="ph2">`DataGridTableStyle1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.BackColorChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.BackColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph> to edit.</source>
          <target state="translated">편집할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source>The number of the edited row.</source>
          <target state="translated">편집된 행의 번호입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source>Requests an edit operation.</source>
          <target state="translated">편집 작업을 요청합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the operation succeeds; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">작업에 성공하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.BeginEdit%2A&gt;</ph> method is intended to notify the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control when the user has begun an editing operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.BeginEdit%2A&gt;</ph> 알리기 위해 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 사용자가 편집 작업을 시작 하는 시기를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source>When the control is in edit mode, multiple edits can be made and the constraints will be temporarily unenforced.</source>
          <target state="translated">컨트롤이 편집 모드일 때 다중 편집을 구성할 수 있으며 제약 조건을 일시적으로 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.EndEdit%2A&gt;</ph> method to quit the edit mode.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.EndEdit%2A&gt;</ph> 메서드 편집 모드를 종료 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
          <source>The following code example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.BeginEdit%2A&gt;</ph> method on the current <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> in a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.BeginEdit%2A&gt;</ph> 메서드는 현재 상태에서 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible">
          <source>Gets or sets a value indicating whether column headers are visible.</source>
          <target state="translated">열 머리글이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if column headers are visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">열 머리글이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible">
          <source>To set header caption text, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> class.</source>
          <target state="translated">캡션 텍스트 헤더를 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged">
          <source>To set the caption text for each column in a grid, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> class.</source>
          <target state="translated">눈금에서 각 열에 대 한 캡션 텍스트를 설정 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DataGridTableStyle">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.CreateGridColumn(System.ComponentModel.PropertyDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> used to create the column style object.</source>
          <target state="translated">열 스타일 개체를 만드는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.CreateGridColumn(System.ComponentModel.PropertyDescriptor)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>, using the specified property descriptor.</source>
          <target state="translated">지정된 속성 설명자를 사용하여 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.CreateGridColumn(System.ComponentModel.PropertyDescriptor)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>.</source>
          <target state="translated">새로 만든 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> used to create the column style object.</source>
          <target state="translated">열 스타일 개체를 만드는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)">
          <source>Specifies whether the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph> is a default column style.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>이 기본 열 스타일인지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)">
          <source>This parameter is read-only.</source>
          <target state="translated">이 매개 변수는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph> using the specified property descriptor.</source>
          <target state="translated">지정된 속성 설명자를 사용하여 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)">
          <source>Specifies whether the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph> is a default column style.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>이 기본 열 스타일인지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>.</source>
          <target state="translated">새로 만든 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.DataGrid">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control for the drawn table.</source>
          <target state="translated">그려진 테이블의 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.DataGrid">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> control that displays the table.</source>
          <target state="translated">테이블을 표시하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.DataGrid">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control displays data in the form of a grid.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 컨트롤을 표 형태로 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.DataGrid">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> is an object that represents the drawn grid.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 은 그려진된 모눈을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.DataGrid">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> property returns a reference to the control that is displaying the grid.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 속성 표를 표시 하는 컨트롤에 대 한 참조를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.DataGrid">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.DataGrid%2A&gt;</ph> property is set when a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> is added to a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control's <ph id="ph4">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.DataGrid%2A&gt;</ph> 속성을 설정 하는 경우는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 에 추가 되는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 컨트롤의 <ph id="ph4">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.DataGrid">
          <source>You should not try to set this property unless you are overriding it and creating a designer for a user control that incorporates the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control.</source>
          <target state="translated">재정의 하 고 통합 하는 사용자 정의 컨트롤에 대 한 디자이너를 만드는 경우가 아니면이 속성을 설정 하려고 안는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.DataGrid">
          <source>The following code example prints the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCell%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> displaying a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 인쇄는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCell%2A&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 표시는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.DataGridTableStyle.DefaultTableStyle">
          <source>Gets the default table style.</source>
          <target state="translated">기본 테이블 스타일을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.Dispose(System.Boolean)">
          <source>Disposes of the resources (other than memory) used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridTableStyle" /&gt;</ph>에서 사용하는 리소스(메모리 제외)를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.Dispose(System.Boolean)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.Dispose%2A?displayProperty=nameWithType&gt;</ph> method on each <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> contained by the collection before calling <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.Dispose%2A?displayProperty=nameWithType&gt;</ph> on the grid itself.</source>
          <target state="translated">메서드 호출의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.Dispose%2A?displayProperty=nameWithType&gt;</ph> 각 메서드 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 호출 하기 전에 컬렉션에 포함 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.Dispose%2A?displayProperty=nameWithType&gt;</ph> 그리드 자체에 있습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph> to edit.</source>
          <target state="translated">편집할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source>The number of the edited row.</source>
          <target state="translated">편집된 행의 번호입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source>A value indicating whether the operation should be stopped; <ph id="ph1">&lt;see langword="true" /&gt;</ph> if it should stop; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">작업이 중지되어야 하는지 여부를 나타내는 값으로, 중지되어야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source>Requests an end to an edit operation.</source>
          <target state="translated">편집 작업의 종료를 요청합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the edit operation ends successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">편집 작업이 종료되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source>Similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.BeginEdit%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.EndEdit%2A&gt;</ph> method is intended to notify the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> when an edit operation is ending.</source>
          <target state="translated">비슷합니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.BeginEdit%2A&gt;</ph> 메서드를는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.EndEdit%2A&gt;</ph> 알리기 위해 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 편집 작업이 종료 되는 경우.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
          <source>The following code example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.BeginEdit%2A&gt;</ph> method on the current <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> in a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.BeginEdit%2A&gt;</ph> 메서드는 현재 상태에서 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.ForeColor">
          <source>Gets or sets the foreground color of the grid table.</source>
          <target state="translated">모눈 테이블의 전경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.ForeColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the foreground color of the grid table.</source>
          <target state="translated">모눈 테이블의 전경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.ForeColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.ForeColor" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.ForeColor" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ForeColorChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ForeColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> named <ph id="ph2">`DataGridTableStyle1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 라는 <ph id="ph2">`DataGridTableStyle1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ForeColorChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ForeColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.GridColumnStyles">
          <source>Gets the collection of columns drawn for this table.</source>
          <target state="translated">이 테이블에 그려진 열의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.GridColumnStyles">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GridColumnStylesCollection" /&gt;</ph> that contains all <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph> objects for the table.</source>
          <target state="translated">테이블의 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GridColumnStylesCollection" /&gt;</ph> 개체를 모두 포함하는 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.DataGridColumnStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.GridColumnStyles">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A&gt;</ph> property allows you to create a customized set of column styles.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A&gt;</ph> 속성 열 스타일의 사용자 지정 된 집합을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.GridColumnStyles">
          <source>For each <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> in a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, set the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> of a <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> to the <ph id="ph5">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph>.</source>
          <target state="translated">각 <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>설정는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 에 <ph id="ph5">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.GridColumnStyles">
          <source>That column style will automatically be used when this <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> is displayed.</source>
          <target state="translated">해당 열 스타일이 자동으로 됩니다 때이 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.GridColumnStyles">
          <source>If you create a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> without adding any <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>, a collection of <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects will be created automatically when a <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> with a valid <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> is added to the <ph id="ph7">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>.</source>
          <target state="translated">만드는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 추가 하지 않고 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 개체를 <ph id="ph3">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>, 컬렉션을 <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 개체가 생성 됩니다. 자동으로 때는 <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 을 올바른 <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 에 추가 되는 <ph id="ph7">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.GridColumnStyles">
          <source>An exception will be thrown if you attempt to add <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects with duplicate <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> values to the collection.</source>
          <target state="translated">추가 하려고 하면 예외가 throw 됩니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 중복을 사용 하 여 개체 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> 컬렉션에는 값입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.GridColumnStyles">
          <source>The following code example gets the <ph id="ph1">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> and prints each object's header.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 하 고 각 개체의 헤더를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.GridLineColor">
          <source>Gets or sets the color of grid lines.</source>
          <target state="translated">모눈선의 색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.GridLineColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the grid line color.</source>
          <target state="translated">모눈선의 색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.GridLineColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.GridLineColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineColor" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineColor" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.GridLineColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.GridLineColorChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.GridLineStyle">
          <source>Gets or sets the style of grid lines.</source>
          <target state="translated">모눈선의 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.GridLineStyle">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridLineStyle" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGridLineStyle" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.GridLineStyle">
          <source>The default is <ph id="ph1">&lt;see langword="DataGridLineStyle.Solid" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="DataGridLineStyle.Solid" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.GridLineStyleChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineStyle" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineStyle" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.GridLineStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.GridLineStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor">
          <source>Gets or sets the background color of headers.</source>
          <target state="translated">머리글의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of headers.</source>
          <target state="translated">머리글의 배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.HeaderBackColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.HeaderBackColorChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.HeaderFont">
          <source>Gets or sets the font used for header captions.</source>
          <target state="translated">머리글 캡션에 사용되는 글꼴을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.HeaderFont">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> used for captions.</source>
          <target state="translated">캡션에 사용되는 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.HeaderFont">
          <source>To set header caption text, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> class.</source>
          <target state="translated">캡션 텍스트 헤더를 설정 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.HeaderFont">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.HeaderFontChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.HeaderFontChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.HeaderFontChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor">
          <source>Gets or sets the foreground color of headers.</source>
          <target state="translated">머리글의 전경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the foreground color of headers.</source>
          <target state="translated">머리글의 전경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.LinkColor">
          <source>Gets or sets the color of link text.</source>
          <target state="translated">링크 텍스트의 색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.LinkColor">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> of link text.</source>
          <target state="translated">링크 텍스트의 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.LinkColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.LinkColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.LinkColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.LinkColorChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor">
          <source>Gets or sets the color displayed when hovering over link text.</source>
          <target state="translated">마우스로 링크 텍스트를 가리킬 때 표시되는 색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the hover color.</source>
          <target state="translated">전경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.LinkHoverColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.LinkHoverColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>Gets or sets the name used to map this table to a specific data source.</source>
          <target state="translated">이 테이블을 특정 데이터 소스에 매핑하는 데 사용되는 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>The name used to map this grid to a specific data source.</source>
          <target state="translated">이 모눈을 특정 데이터 소스에 매핑하는 데 사용되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>To bind the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> to a strongly typed array of objects, the object type must contain public properties.</source>
          <target state="translated">바인딩할는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 개체 유형을 개체의 강력한 형식의 배열에 public 속성을 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>To create a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> that displays the array, set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph3">`typename`</ph> where <ph id="ph4">`typename`</ph> is replaced by the name of the object type.</source>
          <target state="translated">만들려는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 배열을 표시 하는 설정는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType&gt;</ph> 속성을 <ph id="ph3">`typename`</ph> 여기서 <ph id="ph4">`typename`</ph> 개체 유형의 이름으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>Also note that the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> property is case-sensitive; the type name must be matched exactly.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 속성은 대/소문자 구분; 형식 이름은 정확히 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> property for an example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 예에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>You can also bind the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> to an <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">바인딩할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>A feature of the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> is that it can contain objects of multiple types, but the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> can only bind to such a list when all items in the list are of the same type as the first item.</source>
          <target state="translated">기능은 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 여러 종류의 개체를 포함 될 수 있도록은 있지만 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 목록의 모든 항목이 첫 번째 항목으로 같은 형식의 경우 해당 목록에만 바인딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>This means that all objects must either be of the same type, or they must inherit from the same class as the first item in the list.</source>
          <target state="translated">즉, 동일한 유형의 모든 개체 여야 하거나 목록에서 첫 번째 항목으로 동일한 클래스에서 상속 해야 합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>For example, if the first item in a list is a <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, the second item could be a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> (which inherits from <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>).</source>
          <target state="translated">예를 들어 첫 번째 항목 목록에는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, 두 번째 항목 수는 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> (에서 상속 되 <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>If, on the other hand, the first item is a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, the second object cannot be a <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</source>
          <target state="translated">반면에 첫 번째 항목이 인지는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, 두 번째 개체 일 수 없습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>Further, the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> must have items in it when it is bound.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 바인딩될 때 항목이에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> will result in an empty grid.</source>
          <target state="translated">빈 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 빈 그리드가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>When binding to an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> to "ArrayList" (the type name).</source>
          <target state="translated">에 바인딩할 때는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> "ArrayList" (형식 이름)를 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>The default is the name of the list managed by the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> for this grid.</source>
          <target state="translated">기본값은 관리 하는 목록 이름을 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 이 표에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> for the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> is set using the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 사용 하 여 설정 되는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingNameChanged&gt;</ph> event occurs when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingNameChanged&gt;</ph> 이벤트가 발생할 때의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 값이 변경 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>The following code example creates an array of <ph id="ph1">`Widget`</ph> objects and binds a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> control to the array.</source>
          <target state="translated">다음 코드 예제에서는 배열을 만듭니다 <ph id="ph1">`Widget`</ph> 개체를 바인딩하는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType&gt;</ph> 배열에는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.MappingName">
          <source>The code then creates a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> to the name of the class plus brackets.</source>
          <target state="translated">코드는 다음 만듭니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 설정는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> 대괄호 및 클래스의 이름으로 합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.MappingNameChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.MappingName" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.MappingName" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.MappingNameChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.MappingNameChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.AllowSortingChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.AllowSortingChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.GridLineColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.GridLineColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.GridLineStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.GridLineStyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.HeaderBackColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.HeaderBackColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.HeaderFontChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.HeaderFontChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.LinkColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.LinkColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see langword="LinkHoverColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="LinkHoverColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.MappingNameChanged" /&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.MappingNameChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.PreferredRowHeightChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.PreferredRowHeightChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.ReadOnlyChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.ReadOnlyChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth">
          <source>Gets or sets the width used to create columns when a new grid is displayed.</source>
          <target state="translated">새 모눈이 표시될 때 열을 만드는 데 사용되는 너비를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth">
          <source>The width used to create columns when a new grid is displayed.</source>
          <target state="translated">새 모눈이 표시될 때 열을 만드는 데 사용되는 너비입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth" /&gt;</ph> property value changes.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth" /&gt;</ph> 속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> named <ph id="ph2">`DataGridTableStyle1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 라는 <ph id="ph2">`DataGridTableStyle1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight">
          <source>Gets or sets the height used to create a row when a new grid is displayed.</source>
          <target state="translated">새 모눈이 표시될 때 행을 만드는 데 사용되는 높이를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight">
          <source>The height of a row, in pixels.</source>
          <target state="translated">행의 높이(픽셀)입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight">
          <source>The preferred height is the minimum height needed to accommodate the displayed text with the assigned <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.HeaderFont%2A&gt;</ph>.</source>
          <target state="translated">기본 설정된 높이 할당 된로 표시 된 텍스트를 수용 하기 위해 필요한 최소 높이 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.HeaderFont%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight">
          <source>A row will not be created with a height less than the specified value.</source>
          <target state="translated">행을 지정된 된 값 보다 작은 높이로 만들어지지 않습니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight">
          <source>If the font size requires it, however, the row height may be greater than the specified value.</source>
          <target state="translated">그러나 글꼴 크기에 필요한 경우 행 높이 지정된 된 값 보다 큰 수 합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.PreferredRowHeightChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.PreferredRowHeightChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.PreferredRowHeightChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.ReadOnly">
          <source>Gets or sets a value indicating whether columns can be edited.</source>
          <target state="translated">열을 편집할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.ReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if columns cannot be edited; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">열을 편집할 수 없으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.ReadOnly">
          <source>You can also specify whether individual columns within the table are editable by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> class's <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A?displayProperty=nameWithType&gt;</ph> property to an appropriate value, <ph id="ph3">`true`</ph> or <ph id="ph4">`false`</ph>.</source>
          <target state="translated">설정 하 여 테이블 내에서 개별 열 편집 가능한 지 여부를 지정할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> 클래스의 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A?displayProperty=nameWithType&gt;</ph> 속성을 적절 한 값을 <ph id="ph3">`true`</ph> 또는 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.ReadOnly">
          <source>Alternatively, to ensure that the data is not edited, you can set the <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> class's <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">또는 데이터를 편집 하지 되도록 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> 클래스의 <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> 속성을 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.ReadOnly">
          <source>The following code example returns the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ReadOnly%2A&gt;</ph> property for each <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> in a <ph id="ph3">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 반환 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ReadOnly%2A&gt;</ph> 각 속성이 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.ReadOnlyChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.ReadOnly" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.ReadOnly" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.ReadOnlyChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.ReadOnlyChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ResetAlternatingBackColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetAlternatingBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetAlternatingBackColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeAlternatingBackColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeAlternatingBackColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetAlternatingBackColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ResetBackColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.BackColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.BackColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetBackColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ResetForeColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.ForeColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.ForeColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetForeColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetForeColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeForeColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeForeColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetForeColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ResetGridLineColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetGridLineColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetGridLineColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeGridLineColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeGridLineColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetGridLineColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderBackColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderBackColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderBackColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderFont">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderFont">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderFont">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ResetLinkColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetLinkColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetLinkColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetLinkColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor%2A&gt;</ph> method to determine whether the property value has changed from its default.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor%2A&gt;</ph> 속성 값이 기본값에서 변경 되었는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible">
          <source>Gets or sets a value indicating whether row headers are visible.</source>
          <target state="translated">행 머리글이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if row headers are visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">행 머리글이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible">
          <source>When row headers are visible, a plus sign is displayed in each row header if the underlying <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has a related child table.</source>
          <target state="translated">행 머리글이 표시 되 면 더하기 기호를 경우 각 행 머리글에 표시 되는 기본 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 관련된 자식 테이블에 있습니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible">
          <source>This property will not function until you add <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>.</source>
          <target state="translated">이 속성을 추가할 때까지 작동 하지 것입니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible">
          <source>Until then, setting this property will have no effect.</source>
          <target state="translated">그때까지이 속성을 설정할 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth">
          <source>Gets or sets the width of row headers.</source>
          <target state="translated">행 머리글의 너비를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth">
          <source>The width of row headers, in pixels.</source>
          <target state="translated">행 머리글의 너비(픽셀)입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth">
          <source>When row headers are visible a plus sign is displayed in each row header if the underlying data has a related child table.</source>
          <target state="translated">행 머리글이 표시 되 면 더하기 기호를 기본 데이터 관련된 자식 테이블의 경우 각 행 머리글에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth">
          <source>This property will not function until you add <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>.</source>
          <target state="translated">이 속성을 추가할 때까지 작동 하지 것입니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth">
          <source>Until then, setting this property will have no effect.</source>
          <target state="translated">그때까지이 속성을 설정할 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor">
          <source>Gets or sets the background color of selected cells.</source>
          <target state="translated">선택된 셀의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of selected cells.</source>
          <target state="translated">선택된 셀의 배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor">
          <source>Gets or sets the foreground color of selected cells.</source>
          <target state="translated">선택된 셀의 전경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the foreground color of selected cells.</source>
          <target state="translated">선택된 셀의 전경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" /&gt;</ph> value changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" /&gt;</ph> 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> named <ph id="ph2">`DataGridTableStyle1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 라는 <ph id="ph2">`DataGridTableStyle1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeAlternatingBackColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeAlternatingBackColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeAlternatingBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeBackColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.BackColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.BackColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeBackColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeForeColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.ForeColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.ForeColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeForeColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeForeColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeGridLineColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeGridLineColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeGridLineColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializePreferredRowHeight">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializePreferredRowHeight">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializePreferredRowHeight">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 만드는 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>