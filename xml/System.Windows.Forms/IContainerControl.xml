<Type Name="IContainerControl" FullName="System.Windows.Forms.IContainerControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="09aedb94b0eeb3a5525d04ab7f76aa531bd38fa6" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37510932" /></Metadata><TypeSignature Language="C#" Value="public interface IContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IContainerControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContainerControl" />
  <TypeSignature Language="F#" Value="type IContainerControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="875ff-101">다른 컨트롤에 대한 부모로 동작할 컨트롤에 대한 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="875ff-101">Provides the functionality for a control to act as a parent for other controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="875ff-102">다음 예제에서 상속 되는 <xref:System.Windows.Forms.ScrollableControl> 클래스 및 구현을 <xref:System.Windows.Forms.IContainerControl> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="875ff-102">The following example inherits from the <xref:System.Windows.Forms.ScrollableControl> class and implements the <xref:System.Windows.Forms.IContainerControl> interface.</span></span> <span data-ttu-id="875ff-103">구현에 추가 되는 <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> 속성 및 <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="875ff-103">Implementation is added to the <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> property and the <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> method.</span></span>  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><span data-ttu-id="875ff-104"><para>부모 컨트롤의 컬렉션을 하는 클래스에서이 인터페이스를 구현 합니다. 이 인터페이스의 멤버를 사용 하면 자식 컨트롤을 활성화 또는 현재 활성 상태인 컨트롤을 확인할 수 있습니다. 클래스에서 구현 되는 경우 <see cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" /> 사용을 <see cref="T:System.Windows.Forms.Control" /> 매개 변수로 지정된 된 컨트롤을 활성화 합니다. <see cref="P:System.Windows.Forms.IContainerControl.ActiveControl" /> 속성 활성화 또는 활성화 된 컨트롤을 검색 합니다.  가장 일반적인 시나리오를 직접이 인터페이스를 구현할 필요가 없습니다. 예를 들어, Windows 컨트롤 라이브러리 프로젝트를 만드는 경우 Visual Studio는 초기 클래스를 생성 합니다. 클래스에서 상속 하는 <see cref="T:System.Windows.Forms.UserControl" /> 클래스 및 <see cref="T:System.Windows.Forms.UserControl" /> 구현 <see cref="T:System.Windows.Forms.IContainerControl" /> 있습니다.</para></span><span class="sxs-lookup"><span data-stu-id="875ff-104"><para>Implement this interface in classes that you want to parent a collection of controls. The members of this interface allow you to activate a child control, or determine which control is currently active. When implemented in a class, <see cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" /> takes a <see cref="T:System.Windows.Forms.Control" /> as a parameter and activates the specified control. The <see cref="P:System.Windows.Forms.IContainerControl.ActiveControl" /> property activates or retrieves the control that is active.  In most common scenarios, you do not need to directly implement this interface. For example, if you create a Windows Control Library project, Visual Studio generates an initial class for you. That class inherits from the <see cref="T:System.Windows.Forms.UserControl" /> class, and <see cref="T:System.Windows.Forms.UserControl" /> implements <see cref="T:System.Windows.Forms.IContainerControl" /> for you.</para></span></span></block>
    <altmember cref="T:System.Windows.Forms.ContainerControl" />
    <altmember cref="T:System.Windows.Forms.Control" />
  </Docs>
  <Members>
    <Member MemberName="ActivateControl">
      <MemberSignature Language="C#" Value="public bool ActivateControl (System.Windows.Forms.Control active);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ActivateControl(class System.Windows.Forms.Control active) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivateControl (active As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ActivateControl(System::Windows::Forms::Control ^ active);" />
      <MemberSignature Language="F#" Value="abstract member ActivateControl : System.Windows.Forms.Control -&gt; bool" Usage="iContainerControl.ActivateControl active" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="active" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="active"><span data-ttu-id="875ff-105">활성화된 <see cref="T:System.Windows.Forms.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="875ff-105">The <see cref="T:System.Windows.Forms.Control" /> being activated.</span></span></param>
        <summary><span data-ttu-id="875ff-106">지정된 컨트롤을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="875ff-106">Activates a specified control.</span></span></summary>
        <returns><span data-ttu-id="875ff-107">컨트롤이 제대로 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="875ff-107"><see langword="true" /> if the control is successfully activated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="875ff-108">다음 예제에서 상속 되는 <xref:System.Windows.Forms.ScrollableControl> 클래스 및 구현을 <xref:System.Windows.Forms.IContainerControl> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="875ff-108">The following example inherits from the <xref:System.Windows.Forms.ScrollableControl> class and implements the <xref:System.Windows.Forms.IContainerControl> interface.</span></span> <span data-ttu-id="875ff-109">구현에 추가 되는 <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> 속성 및 <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="875ff-109">Implementation is added to the <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> property and the <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> method.</span></span>  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="875ff-110"><para>클래스에서 구현 하는 경우이 메서드는 지정 된 활성화 <see cref="T:System.Windows.Forms.Control" />합니다. 컨트롤은 컨테이너 컨트롤의 자식 이어야 합니다.</para></span><span class="sxs-lookup"><span data-stu-id="875ff-110"><para>When implemented in a class, this method activates the specified <see cref="T:System.Windows.Forms.Control" />. The control must be a child of the container control.</para></span></span></block>
        <altmember cref="P:System.Windows.Forms.IContainerControl.ActiveControl" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="ActiveControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control ActiveControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control ActiveControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IContainerControl.ActiveControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ ActiveControl { System::Windows::Forms::Control ^ get(); void set(System::Windows::Forms::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveControl : System.Windows.Forms.Control with get, set" Usage="System.Windows.Forms.IContainerControl.ActiveControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="875ff-111">Container 컨트롤에 있는 활성 컨트롤을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="875ff-111">Gets or sets the control that is active on the container control.</span></span></summary>
        <value><span data-ttu-id="875ff-112">Container 컨트롤에서 현재 활성 중인 <see cref="T:System.Windows.Forms.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="875ff-112">The <see cref="T:System.Windows.Forms.Control" /> that is currently active on the container control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="875ff-113">다음 예제에서 상속 되는 <xref:System.Windows.Forms.ScrollableControl> 클래스 및 구현을 <xref:System.Windows.Forms.IContainerControl> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="875ff-113">The following example inherits from the <xref:System.Windows.Forms.ScrollableControl> class and implements the <xref:System.Windows.Forms.IContainerControl> interface.</span></span> <span data-ttu-id="875ff-114">구현에 추가 되는 <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> 속성 및 <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="875ff-114">Implementation is added to the <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> property and the <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> method.</span></span>  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="875ff-115"><para>클래스에서 구현 하는 경우이 속성을 활성화 하거나 컨테이너 컨트롤에 있는 활성 컨트롤을 검색 합니다.</para></span><span class="sxs-lookup"><span data-stu-id="875ff-115"><para>When implemented in a class, this property activates or retrieves the active control on the container control.</para></span></span></block>
        <altmember cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
  </Members>
</Type>