<Type Name="NumericUpDown" FullName="System.Windows.Forms.NumericUpDown">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65315312ef940ead113d34456222868f98395a2d" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32694791" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NumericUpDown : System.Windows.Forms.UpDownBase, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NumericUpDown extends System.Windows.Forms.UpDownBase implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NumericUpDown" />
  <TypeSignature Language="VB.NET" Value="Public Class NumericUpDown&#xA;Inherits UpDownBase&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumericUpDown : System::Windows::Forms::UpDownBase, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.UpDownBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ValueChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>숫자 값을 표시하는 Windows 스핀 상자(up-down 컨트롤이라고도 함)를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Forms.NumericUpDown> 컨트롤 위쪽을 클릭 하 여 또는 아래로 단추 컨트롤의 만큼 증가 하거나 감소 될 수 있는 단일 숫자 값을 포함 합니다. 사용자 하지 않는 한도 값을 입력할 수는 <xref:System.Windows.Forms.UpDownBase.ReadOnly%2A> 속성이 `true`합니다.  
  
 설정 하 여 숫자 표시 형식을 지정할 수는 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>, 또는 <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A> 속성입니다. 컨트롤의 16 진수 값을 표시 하려면 설정는 <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> 속성을 `true`합니다. 1000 단위를 표시 하려면 적절 한 경우, 10 진수에서 구분 설정는 <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A> 속성을 `true`합니다. 소수점 기호 뒤에 표시 되는 자릿수 수를 지정 하려면 설정는 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A> 속성을 표시 하려면 소수 자릿수입니다.  
  
 컨트롤에 대 한 값의 허용 범위를 지정 하려면 설정는 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 및 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 속성입니다. 설정의 <xref:System.Windows.Forms.NumericUpDown.Increment%2A> 증가 또는 감소 하도록 되도록 값을 지정 하는 값의 <xref:System.Windows.Forms.NumericUpDown.Value%2A> 속성 위쪽을 마우스 오른쪽 단추로 클릭할 때 또는 아래로 화살표 단추입니다. 컨트롤을 설정 하 여 통해 숫자 지속적으로 누를 때 위쪽 또는 아래쪽 화살표를 이동 하는 속도 높일 수는 <xref:System.Windows.Forms.NumericUpDown.Accelerations%2A> 속성입니다.  
  
 경우는 <xref:System.Windows.Forms.NumericUpDown.UpButton%2A> 또는 <xref:System.Windows.Forms.NumericUpDown.DownButton%2A> 메서드가 호출 되어, 코드 또는 위쪽 또는 아래쪽 단추 클릭 하 여, 새 값의 유효성을 검사 하 고 컨트롤 적절 한 형식의 새 값으로 업데이트 됩니다. 특히, 하는 경우는 <xref:System.Windows.Forms.UpDownBase.UserEdit%2A> 속성이로 설정 되어 `true`, <xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A> 메서드 값을 업데이트 하거나 유효성을 검사할 하기 전에 호출 됩니다. 값은 다음 사이의 값인지 확인는 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 및 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 값, 및 <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> 메서드를 호출 합니다.  
  
 .NET Framework 4.6부터는 <xref:System.Windows.Forms.NumericUpDown> 컨트롤 app.config 파일에 다음 항목이 포함 되어 있으면 시스템 DPI 설정에 따라 조정 됩니다.  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
   
  
## Examples  
 다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.NumericUpDown> 컨트롤의 공용 속성 중 일부를 설정 하 고 런타임 시 이러한 속성 중 일부를 변경할 수 있습니다. 이 코드에서는 세 개의 <xref:System.Windows.Forms.CheckBox> 컨트롤은 폼과에 대 한 처리기에 배치 된 해당 <xref:System.Windows.Forms.Control.Click> 인스턴스화된 이벤트입니다. <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, 및 <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> 에 속성이 설정 된는 <xref:System.Windows.Forms.Control.Click> 각 확인란의 이벤트입니다.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.UpDownBase" />
    <altmember cref="T:System.ComponentModel.ISupportInitialize" />
    <altmember cref="T:System.Windows.Forms.DomainUpDown" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumericUpDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NumericUpDown();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.NumericUpDown" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.NumericUpDown> 컨트롤의 공용 속성 중 일부를 설정 하 고 런타임 시 이러한 속성 중 일부를 변경할 수 있습니다. 이 코드에서는 세 개의 <xref:System.Windows.Forms.CheckBox> 컨트롤은 폼과에 대 한 처리기에 배치 된 해당 <xref:System.Windows.Forms.Control.Click> 인스턴스화된 이벤트입니다. <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, 및 <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> 에 속성이 설정 된는 <xref:System.Windows.Forms.Control.Click> 각 확인란의 이벤트입니다.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UpDownBase" />
      </Docs>
    </Member>
    <Member MemberName="Accelerations">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.NumericUpDownAccelerationCollection Accelerations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.NumericUpDownAccelerationCollection Accelerations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Accelerations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Accelerations As NumericUpDownAccelerationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::NumericUpDownAccelerationCollection ^ Accelerations { System::Windows::Forms::NumericUpDownAccelerationCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NumericUpDownAccelerationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.NumericUpDown" /> 컨트롤의 정렬된 가속 개체 컬렉션을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.NumericUpDownAccelerationCollection" /> 컨트롤의 정렬된 가속 개체가 포함된 <see cref="T:System.Windows.Forms.NumericUpDown" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NumericUpDown.Accelerations%2A> 는 속도를 높이기 위해 속성을 사용할 수는 <xref:System.Windows.Forms.NumericUpDown> 숫자 놓으면 위쪽 또는 아래쪽 화살표를 키보드 또는 마우스 큰 집합으로 전환 합니다. 이 속성을 설정할 수 정도 떨어집니다 <xref:System.Windows.Forms.NumericUpDown.ValueChanged> 에 따라 발생 하는 이벤트는 <xref:System.Windows.Forms.NumericUpDownAcceleration.Increment%2A> 및 <xref:System.Windows.Forms.NumericUpDownAcceleration.Seconds%2A> 각각에 대해 지정 된 속성 값 <xref:System.Windows.Forms.NumericUpDownAcceleration> 컬렉션의 개체입니다. <xref:System.Windows.Forms.NumericUpDownAcceleration> 컬렉션에 포함 된 개체에 따라 정렬 자신의 <xref:System.Windows.Forms.NumericUpDownAcceleration.Seconds%2A?displayProperty=nameWithType> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.NumericUpDown.Accelerations%2A> 속성입니다. 이 예제를 실행 하려면 호출 폼에 다음 코드를 붙여넣습니다는 `InitializeAcceleratedUpDown` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드. 코드가 실행 되는 동안 키를 눌러 위쪽 채로 있거나 아래쪽 화살표를 가속이 발생 합니다.  
  
 [!code-csharp[System.Windows.Forms.MiscBugDriven#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.MiscBugDriven#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.NumericUpDownAcceleration" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>폼에 사용되거나 다른 구성 요소에서 사용하는 <see cref="T:System.Windows.Forms.NumericUpDown" /> 컨트롤의 초기화를 시작합니다. 초기화는 런타임에 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤의 액세스 가능성 개체를 새로 만듭니다.</summary>
        <returns>컨트롤의 새로운 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
      </Docs>
    </Member>
    <Member MemberName="DecimalPlaces">
      <MemberSignature Language="C#" Value="public int DecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DecimalPlaces { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스핀 상자(up-down 컨트롤이라고도 함)에 표시할 소수 자릿수를 가져오거나 설정합니다.</summary>
        <value>스핀 상자에 표시할 소수 자릿수입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A> 속성이 설정 되어는 <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> 메서드를 호출 하는 새 형식으로 스핀 상자 표시를 업데이트 합니다.  
  
 적절 한 소수점 기호는 사용자의 운영 체제의 국가별 설정에 따라 결정 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.NumericUpDown> 컨트롤의 공용 속성 중 일부를 설정 하 고 런타임 시 이러한 속성 중 일부를 변경할 수 있습니다. 이 코드에서는 세 개의 <xref:System.Windows.Forms.CheckBox> 컨트롤은 폼과에 대 한 처리기에 배치 된 해당 <xref:System.Windows.Forms.Control.Click> 인스턴스화된 이벤트입니다. <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, 및 <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> 에 속성이 설정 된는 <xref:System.Windows.Forms.Control.Click> 각 확인란의 이벤트입니다.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">할당된 값이 0보다 작은 경우  
  
 또는  
  
 할당된 값이 99보다 큰 경우 </exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="DownButton">
      <MemberSignature Language="C#" Value="public override void DownButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DownButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.DownButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DownButton ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DownButton();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>스핀 상자(up-down 컨트롤이라고도 함)의 값을 감소시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.NumericUpDown.DownButton%2A> 메서드는, 코드 또는 아래로 단추를 클릭 하 여, 새 값의 유효성을 검사 하 고 컨트롤 적절 한 형식의 새 값으로 업데이트 됩니다. 특히, 하는 경우는 <xref:System.Windows.Forms.UpDownBase.UserEdit%2A> 속성이로 설정 되어 `true`, <xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A> 메서드 값을 업데이트 하거나 유효성을 검사할 하기 전에 호출 됩니다. 값은 사이의 다음 유효성 검사는 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 및 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 값, 및 <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> 메서드를 호출 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpButton" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>폼에 사용되거나 다른 구성 요소에서 사용하는 <see cref="T:System.Windows.Forms.NumericUpDown" /> 컨트롤의 초기화를 끝냅니다. 초기화는 런타임에 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hexadecimal">
      <MemberSignature Language="C#" Value="public bool Hexadecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hexadecimal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property Hexadecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Hexadecimal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스핀 상자(up-down 컨트롤이라고도 함)에 포함된 값을 16진수 형식으로 표시할지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          스핀 상자에 포함된 값을 16진수 형식으로 표시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> 속성이 설정 되어는 <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> 메서드를 호출 하는 새 형식으로 스핀 상자 표시를 업데이트 합니다.  
  
 경우는 <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> 속성이 `true`, <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 속성 설정 해야 <xref:System.Int32.MaxValue?displayProperty=nameWithType> 및 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 로 속성을 설정 해야 <xref:System.Int32.MinValue?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.NumericUpDown> 컨트롤의 공용 속성 중 일부를 설정 하 고 런타임 시 이러한 속성 중 일부를 변경할 수 있습니다. 이 코드에서는 세 개의 <xref:System.Windows.Forms.CheckBox> 컨트롤은 폼과에 대 한 처리기에 배치 된 해당 <xref:System.Windows.Forms.Control.Click> 인스턴스화된 이벤트입니다. <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, 및 <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> 에 속성이 설정 된는 <xref:System.Windows.Forms.Control.Click> 각 확인란의 이벤트입니다.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public decimal Increment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Increment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Increment" />
      <MemberSignature Language="VB.NET" Value="Public Property Increment As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Increment { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>위로 또는 아래로 단추를 클릭할 때 스핀 상자(up-down 컨트롤이라고도 함)를 증가시키거나 감소시킬 값을 가져오거나 설정합니다.</summary>
        <value>스핀 상자에서 위로 또는 아래로 단추를 클릭할 때 <see cref="P:System.Windows.Forms.NumericUpDown.Value" /> 속성을 증가시키거나 감소시킬 값입니다. 기본값은 1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 위로 단추를 클릭 하면는 <xref:System.Windows.Forms.NumericUpDown.Value%2A> 속성으로 지정 된 크기 증가 <xref:System.Windows.Forms.NumericUpDown.Increment%2A> 접근 방식 및 속성의 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 속성입니다. 아래쪽 단추를 클릭 하면는 <xref:System.Windows.Forms.NumericUpDown.Value%2A> 감소 하 여 지정 된 크기 여 속성의 <xref:System.Windows.Forms.NumericUpDown.Increment%2A> 접근 방식 및 속성의 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.NumericUpDown> 컨트롤의 공용 속성 중 일부를 설정 하 고 런타임 시 이러한 속성 중 일부를 변경할 수 있습니다. 이 코드에서는 세 개의 <xref:System.Windows.Forms.CheckBox> 컨트롤은 폼과에 대 한 처리기에 배치 된 해당 <xref:System.Windows.Forms.Control.Click> 인스턴스화된 이벤트입니다. <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, 및 <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> 에 속성이 설정 된는 <xref:System.Windows.Forms.Control.Click> 각 확인란의 이벤트입니다.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">할당된 값이 0보다 작거나 같은 경우</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public decimal Maximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Maximum" />
      <MemberSignature Language="VB.NET" Value="Public Property Maximum As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Maximum { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스핀 상자(up-down 컨트롤이라고도 함)의 최대값을 가져오거나 설정합니다.</summary>
        <value>스핀 상자의 최대값입니다. 기본값은 100입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때는 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 속성이 설정 되어는 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 속성이 계산 되 고 <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> 메서드를 호출 합니다. 경우는 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 속성이 새 보다 크면 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 속성에는 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 속성 값으로 설정 됩니다는 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 값입니다. 하는 경우 현재 <xref:System.Windows.Forms.NumericUpDown.Value%2A> 새 보다 크면 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 값입니다. <xref:System.Windows.Forms.NumericUpDown.Value%2A> 속성 값으로 설정 됩니다는 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 값입니다.  
  
   
  
## Examples  
 다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.NumericUpDown> 컨트롤의 공용 속성 중 일부를 설정 하 고 런타임 시 이러한 속성 중 일부를 변경할 수 있습니다. 이 코드에서는 세 개의 <xref:System.Windows.Forms.CheckBox> 컨트롤은 폼과에 대 한 처리기에 배치 된 해당 <xref:System.Windows.Forms.Control.Click> 인스턴스화된 이벤트입니다. <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, 및 <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> 에 속성이 설정 된는 <xref:System.Windows.Forms.Control.Click> 각 확인란의 이벤트입니다.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Increment" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public decimal Minimum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Minimum" />
      <MemberSignature Language="VB.NET" Value="Public Property Minimum As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Minimum { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스핀 상자(up-down 컨트롤이라고도 함)에 사용할 수 있는 최소값을 가져오거나 설정합니다.</summary>
        <value>스핀 상자에 사용할 수 있는 최소값입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때는 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 속성이 설정 되어는 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 속성이 계산 되 고 <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> 메서드를 호출 합니다. 경우 새 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 속성 값 보다 크면는 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 속성 값의 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 값으로 설정 됩니다는 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 값입니다. 경우는 <xref:System.Windows.Forms.NumericUpDown.Value%2A> 새 보다 작으면 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 값은 <xref:System.Windows.Forms.NumericUpDown.Value%2A> 속성은으로 설정도 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 값입니다.  
  
   
  
## Examples  
 다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.NumericUpDown> 컨트롤의 공용 속성 중 일부를 설정 하 고 런타임 시 이러한 속성 중 일부를 변경할 수 있습니다. 이 코드에서는 세 개의 <xref:System.Windows.Forms.CheckBox> 컨트롤은 폼과에 대 한 처리기에 배치 된 해당 <xref:System.Windows.Forms.Control.Click> 인스턴스화된 이벤트입니다. <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, 및 <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> 에 속성이 설정 된는 <xref:System.Windows.Forms.Control.Click> 각 확인란의 이벤트입니다.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Increment" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.KeyDown" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.NumericUpDown.OnKeyDown%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.KeyUp" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.NumericUpDown.OnKeyUp%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.LostFocus" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.NumericUpDown.OnLostFocus%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTextBoxKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnTextBoxKeyPress (object source, System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextBoxKeyPress(object source, class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextBoxKeyPress (source As Object, e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextBoxKeyPress(System::Object ^ source, System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="source">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyPressEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.KeyPress" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NumericUpDown> 컨트롤에서 유일한 숫자, 음수 기호, 소수점 및 편집 등 백스페이스 키 입력을 허용 합니다. 경우는 <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> 속성이 `true`, <xref:System.Windows.Forms.NumericUpDown> 자리 16 진수를 허용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Windows.Forms.NumericUpDown.ValueChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.NumericUpDown.OnValueChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Value" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.NumericUpDown" /> 컨트롤의 가장자리와 내용 사이의 간격을 가져오거나 설정합니다.</summary>
        <value>
          모든 경우에 <see cref="F:System.Windows.Forms.Padding.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정의 <xref:System.Windows.Forms.NumericUpDown.Padding%2A> 속성으로의 모양에 영향을 주지는 <xref:System.Windows.Forms.NumericUpDown> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.NumericUpDown.Padding" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseEditText">
      <MemberSignature Language="C#" Value="protected void ParseEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ParseEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ParseEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ParseEditText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>스핀 상자(up-down 컨트롤이라고도 함)에 표시된 텍스트를 숫자 값으로 변환한 다음 이를 계산합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.UpDownBase.UserEdit%2A> 속성이 `true`, 사이의 검사할 수 있도록 표시 되는 텍스트는 숫자 값으로 변환 됩니다는 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 및 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 속성 값입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.UpDownBase.UserEdit" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.NumericUpDown" /> 컨트롤에 표시되는 텍스트를 가져오거나 설정합니다.</summary>
        <value>
          <see langword="Null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NumericUpDown.Text%2A> 의 모양에는 아무 영향이 <xref:System.Windows.Forms.NumericUpDown> 제어; IntelliSense와 디자이너에서 숨겨진 따라서 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.NumericUpDown.Text" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public bool ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThousandsSeparator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>적절한 경우 스핀 상자(up-down 컨트롤이라고도 함)에 1000 단위 구분 기호를 표시할지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          적절한 경우 스핀 상자에 1000 단위 구분 기호가 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A> 속성이 설정 되어는 <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> 메서드를 호출 하는 새 형식으로 스핀 상자 표시를 업데이트 합니다.  
  
 적절 한 천 단위 구분 기호는 사용자의 운영 체제의 국가별 설정에 따라 결정 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.NumericUpDown> 컨트롤의 공용 속성 중 일부를 설정 하 고 런타임 시 이러한 속성 중 일부를 변경할 수 있습니다. 이 코드에서는 세 개의 <xref:System.Windows.Forms.CheckBox> 컨트롤은 폼과에 대 한 처리기에 배치 된 해당 <xref:System.Windows.Forms.Control.Click> 인스턴스화된 이벤트입니다. <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, 및 <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> 에 속성이 설정 된는 <xref:System.Windows.Forms.Control.Click> 각 확인란의 이벤트입니다.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.NumericUpDown" /> 컨트롤을 나타내는 문자열을 반환합니다.</summary>
        <returns>현재 <see cref="T:System.Windows.Forms.NumericUpDown" />을(를) 나타내는 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 문자열 형식과 대 한 값이 포함 된 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 및 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpButton">
      <MemberSignature Language="C#" Value="public override void UpButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.UpButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpButton ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpButton();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>스핀 상자(up-down 컨트롤이라고도 함)의 값을 증가시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.NumericUpDown.UpButton%2A> 메서드는, 코드 또는 위로 단추를 클릭 하 여, 새 값의 유효성을 검사 하 고 컨트롤 적절 한 형식의 새 값으로 업데이트 됩니다. 특히 경우 <xref:System.Windows.Forms.UpDownBase.UserEdit%2A> 로 설정 된 `true`, <xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A> 하거나 유효성을 검사할 값을 업데이트 하기 전에 호출 됩니다. 값은 사이의 다음 유효성 검사는 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 및 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 값 및 <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> 메서드를 호출 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.DownButton" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="UpdateEditText">
      <MemberSignature Language="C#" Value="protected override void UpdateEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateEditText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>스핀 상자(up-down 컨트롤이라고도 함)의 현재 값을 적절한 형식으로 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스핀 상자 초기화 되지 않은 경우 현재 값은 사이의 값인지 확인는 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 및 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 값을 컨트롤에 표시 하기 위한 올바른 형식으로 변환 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEditText">
      <MemberSignature Language="C#" Value="protected override void ValidateEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ValidateEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateEditText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>스핀 상자(up-down 컨트롤이라고도 함)에 표시된 텍스트의 유효성을 검사하고 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NumericUpDown.ValidateEditText%2A> 메서드 호출의 <xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A> 및 <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> 유효성을 검사 하 고 스핀 상자의 표시를 업데이트 하는 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public decimal Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Value { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스핀 상자(up-down 컨트롤이라고도 함)에 할당된 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.NumericUpDown" /> 컨트롤의 숫자 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.NumericUpDown.Value%2A> 속성이 설정 되어 있으면 새 값은 사이의 값인지 확인는 <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> 및 <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> 값입니다. 다음에 <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> 메서드는 적절 한 형식의 새 값으로 스핀 상자 표시를 업데이트 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.NumericUpDown> 컨트롤의 공용 속성 중 일부를 설정 하 고 런타임 시 이러한 속성 중 일부를 변경할 수 있습니다. 이 코드에서는 세 개의 <xref:System.Windows.Forms.CheckBox> 컨트롤은 폼과에 대 한 처리기에 배치 된 해당 <xref:System.Windows.Forms.Control.Click> 인스턴스화된 이벤트입니다. <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, 및 <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> 에 속성이 설정 된는 <xref:System.Windows.Forms.Control.Click> 각 확인란의 이벤트입니다.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">할당된 값이 <see cref="P:System.Windows.Forms.NumericUpDown.Minimum" /> 속성 값보다 작은 경우  
  
 또는  
  
 할당된 값이 <see cref="P:System.Windows.Forms.NumericUpDown.Maximum" /> 속성 값보다 큰 경우</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="ValueChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.ValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValueChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ValueChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.NumericUpDown.Value" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한는 <xref:System.Windows.Forms.NumericUpDown.ValueChanged> 가 발생 하는 이벤트는 <xref:System.Windows.Forms.NumericUpDown.Value%2A> 위쪽을 클릭 하 여 또는 아래로 단추, 또는 컨트롤 읽을 수 있는 새로운 값을 입력 하는 사용자가 코드에서 속성을 변경할 수 있습니다. 새 값은 사용자가 ENTER 키를 만들거나 컨트롤 밖으로 이동할 때 읽기입니다. 사용자가 새 값을 입력 한 다음 위쪽을 클릭 한 경우 또는 아래로 단추는 <xref:System.Windows.Forms.NumericUpDown.ValueChanged> 이벤트가 두 번 발생 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.NumericUpDown.ValueChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.NumericUpDown> 라는 `NumericUpDown1`합니다. 그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.NumericUpDown.ValueChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#515](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#515)]
 [!code-vb[System.Windows.Forms.EventExamples#515](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#515)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Value" />
      </Docs>
    </Member>
  </Members>
</Type>