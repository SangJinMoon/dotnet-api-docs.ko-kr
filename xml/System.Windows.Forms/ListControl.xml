<Type Name="ListControl" FullName="System.Windows.Forms.ListControl">
  <TypeSignature Language="C#" Value="public abstract class ListControl : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ListControl extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ListControl&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListControl abstract : System::Windows::Forms::Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.LookupBindingProperties("DataSource", "DisplayMember", "ValueMember", "SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c0aba-101"><see cref="T:System.Windows.Forms.ListBox" /> 및 <see cref="T:System.Windows.Forms.ComboBox" /> 클래스에 대해 공통적인 멤버를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-101">Provides a common implementation of members for the <see cref="T:System.Windows.Forms.ListBox" /> and <see cref="T:System.Windows.Forms.ComboBox" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-102"><xref:System.Windows.Forms.ListControl> 클래스에 대 한 공통 요소의 구현을 제공는 <xref:System.Windows.Forms.ListBox> 및 <xref:System.Windows.Forms.ComboBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-102">The <xref:System.Windows.Forms.ListControl> class provides implementations of common elements for the <xref:System.Windows.Forms.ListBox> and <xref:System.Windows.Forms.ComboBox> controls.</span></span>  
  
 <span data-ttu-id="c0aba-103">다음 속성을 데이터 바인딩된의 사용자에 게 주요 관심사 <xref:System.Windows.Forms.ListBox> 또는 <xref:System.Windows.Forms.ComboBox>: <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.SelectedValue%2A>, 및 <xref:System.Windows.Forms.ListControl.ValueMember%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-103">The following properties are of primary concern to users of a data-bound <xref:System.Windows.Forms.ListBox> or <xref:System.Windows.Forms.ComboBox>: <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.SelectedValue%2A>, and <xref:System.Windows.Forms.ListControl.ValueMember%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-104">다음 코드 예제는 사용 하는 방법을 보여 주는 완전 한 응용 프로그램 <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.ValueMember%2A>, 및 <xref:System.Windows.Forms.ListControl.SelectedValue%2A> 의 멤버는 <xref:System.Windows.Forms.ListControl> 에 의해 구현 된 클래스는 <xref:System.Windows.Forms.ListBox> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-104">The following code example is a complete application that shows how you can use <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.ValueMember%2A>, and <xref:System.Windows.Forms.ListControl.SelectedValue%2A> members of the <xref:System.Windows.Forms.ListControl> class as implemented by the <xref:System.Windows.Forms.ListBox> class.</span></span> <span data-ttu-id="c0aba-105">이 예제에서는 로드 된 <xref:System.Collections.ArrayList> 와 목록 상자입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-105">The example loads an <xref:System.Collections.ArrayList> and the list box.</span></span> <span data-ttu-id="c0aba-106">목록 상자에서 항목을 선택 하는 경우 선택한 값 선택된 항목과 관련 된 데이터를 반환 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-106">When the user selects an item in the list box, the selected value is used to return the data associated with the selected item.</span></span>  
  
 [!code-cpp[ListControl#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListControl/CPP/form1.cpp#1)]
 [!code-csharp[ListControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListControl/CS/form1.cs#1)]
 [!code-vb[ListControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListControl/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ListControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ListControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0aba-107"><see cref="T:System.Windows.Forms.ListControl" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-107">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListControl" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSelection">
      <MemberSignature Language="C#" Value="protected virtual bool AllowSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.AllowSelection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property AllowSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool AllowSelection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-108">목록에서 목록 항목을 선택할 수 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-108">Gets a value indicating whether the list enables selection of list items.</span></span></summary>
        <value>
          <span data-ttu-id="c0aba-109">목록에서 목록 항목을 선택할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-109"><see langword="true" /> if the list enables list item selection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c0aba-110">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-110">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataManager">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.CurrencyManager DataManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CurrencyManager DataManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.DataManager" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DataManager As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::CurrencyManager ^ DataManager { System::Windows::Forms::CurrencyManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-111">이 컨트롤과 관련된 <see cref="T:System.Windows.Forms.CurrencyManager" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-111">Gets the <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with this control.</span></span></summary>
        <value><span data-ttu-id="c0aba-112">이 컨트롤과 관련된 <see cref="T:System.Windows.Forms.CurrencyManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-112">The <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with this control.</span></span> <span data-ttu-id="c0aba-113">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-113">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-114"><xref:System.Windows.Forms.ListControl.DataManager%2A> 속성은 유효 하는 경우는 <xref:System.Windows.Forms.ListControl.DataSource%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-114">The <xref:System.Windows.Forms.ListControl.DataManager%2A> property is valid if the <xref:System.Windows.Forms.ListControl.DataSource%2A> property is set.</span></span> <span data-ttu-id="c0aba-115">기본값은이 데이터 바인딩된 컨트롤을 없으면 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-115">If this is not a data-bound control, the default is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-116">이 <see cref="T:System.Windows.Forms.ListControl" />의 데이터 소스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-116">Gets or sets the data source for this <see cref="T:System.Windows.Forms.ListControl" />.</span></span></summary>
        <value><span data-ttu-id="c0aba-117"><see cref="T:System.Collections.IList" />, <see cref="T:System.ComponentModel.IListSource" /> 등과 같은 <see cref="T:System.Data.DataSet" /> 또는 <see cref="T:System.Array" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-117">An object that implements the <see cref="T:System.Collections.IList" /> or <see cref="T:System.ComponentModel.IListSource" /> interfaces, such as a <see cref="T:System.Data.DataSet" /> or an <see cref="T:System.Array" />.</span></span> <span data-ttu-id="c0aba-118">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-118">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-119">두 가지 방법으로 채울 수는 <xref:System.Windows.Forms.ComboBox> 및 <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-119">There are two ways to fill the <xref:System.Windows.Forms.ComboBox> and <xref:System.Windows.Forms.ListBox> controls.</span></span>  
  
 <span data-ttu-id="c0aba-120">예를 들어 개체를 추가할 수 있습니다는 <xref:System.Windows.Forms.ComboBox> 를 사용 하 여는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c0aba-120">For example, you can add objects to the <xref:System.Windows.Forms.ComboBox> by using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method.</span></span> <span data-ttu-id="c0aba-121">개체를 추가할 수도 있습니다는 <xref:System.Windows.Forms.ComboBox> 를 사용 하 여는 <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, 및 <xref:System.Windows.Forms.ListControl.ValueMember%2A> 속성을 채울는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-121">You can also add objects to a <xref:System.Windows.Forms.ComboBox> by using the <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, and <xref:System.Windows.Forms.ListControl.ValueMember%2A> properties to fill the <xref:System.Windows.Forms.ComboBox>.</span></span>  
  
 <span data-ttu-id="c0aba-122">경우는 <xref:System.Windows.Forms.ListControl.DataSource%2A> 속성이 설정 되어 있으면 사용자는 items 컬렉션을 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-122">When the <xref:System.Windows.Forms.ListControl.DataSource%2A> property is set, a user cannot modify the items collection.</span></span>  
  
 <span data-ttu-id="c0aba-123">설정 하는 경우는 <xref:System.Windows.Forms.ListControl.DataSource%2A> 속성을 변경 하려면 데이터 원본으로 인해는 <xref:System.Windows.Forms.ListControl.DataSourceChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-123">If setting the <xref:System.Windows.Forms.ListControl.DataSource%2A> property causes the data source to change, the <xref:System.Windows.Forms.ListControl.DataSourceChanged> event is raised.</span></span> <span data-ttu-id="c0aba-124">이 속성을 설정 하면 데이터 멤버를 변경 하는 경우는 <xref:System.Windows.Forms.ListControl.DisplayMemberChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-124">If setting this property causes the data member to change, the <xref:System.Windows.Forms.ListControl.DisplayMemberChanged> event is raised.</span></span>  
  
 <span data-ttu-id="c0aba-125">설정 하는 경우 <xref:System.Windows.Forms.ListControl.DataSource%2A> 를 `null`, <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 빈 문자열로 설정 됩니다 ("").</span><span class="sxs-lookup"><span data-stu-id="c0aba-125">When you set <xref:System.Windows.Forms.ListControl.DataSource%2A> to `null`, <xref:System.Windows.Forms.ListControl.DisplayMember%2A> is set to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-126">다음 코드 예제는 사용 하는 방법을 보여 주는 완전 한 응용 프로그램 <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.ValueMember%2A>, 및 <xref:System.Windows.Forms.ListControl.SelectedValue%2A> 의 멤버는 <xref:System.Windows.Forms.ListControl> 에 의해 구현 된 클래스는 <xref:System.Windows.Forms.ListBox> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-126">The following code example is a complete application that shows how you can use <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.ValueMember%2A>, and <xref:System.Windows.Forms.ListControl.SelectedValue%2A> members of the <xref:System.Windows.Forms.ListControl> class as implemented by the <xref:System.Windows.Forms.ListBox> class.</span></span> <span data-ttu-id="c0aba-127">이 예제에서는 로드 된 <xref:System.Collections.ArrayList> 와 목록 상자입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-127">The example loads an <xref:System.Collections.ArrayList> and the list box.</span></span> <span data-ttu-id="c0aba-128">목록 상자에서 항목을 선택 하는 경우 선택한 값 선택된 항목과 관련 된 데이터를 반환 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-128">When the user selects an item in the list box, the selected value is used to return the data associated with the selected item.</span></span>  
  
 [!code-cpp[ListControl#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListControl/CPP/form1.cpp#1)]
 [!code-csharp[ListControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListControl/CS/form1.cs#1)]
 [!code-vb[ListControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListControl/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0aba-129">할당된 값이 <see cref="T:System.Collections.IList" /> 또는 <see cref="T:System.ComponentModel.IListSource" /> 인터페이스를 구현하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="c0aba-129">The assigned value does not implement the <see cref="T:System.Collections.IList" /> or <see cref="T:System.ComponentModel.IListSource" /> interfaces.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-130"><see cref="P:System.Windows.Forms.ListControl.DataSource" />가 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-130">Occurs when the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-131">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-131">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-132">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-132">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c0aba-133">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ListControl.DataSourceChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-133">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.DataSourceChanged> event.</span></span> <span data-ttu-id="c0aba-134">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-134">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c0aba-135">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-135">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c0aba-136">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ListControl>와 같은 한 <xref:System.Windows.Forms.ComboBox> 또는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-136">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="c0aba-137">다음 인스턴스 이름을 `ListControl1` 이벤트 처리기가 연결 확인 하 고는 <xref:System.Windows.Forms.ListControl.DataSourceChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-137">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.DataSourceChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#142](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#142)]
 [!code-vb[System.Windows.Forms.EventExamples#142](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#142)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMember">
      <MemberSignature Language="C#" Value="public string DisplayMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.DisplayMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Forms.Design.DataMemberFieldConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-138">이 <see cref="T:System.Windows.Forms.ListControl" />에 대해 표시할 속성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-138">Gets or sets the property to display for this <see cref="T:System.Windows.Forms.ListControl" />.</span></span></summary>
        <value><span data-ttu-id="c0aba-139"><see cref="T:System.String" /> 속성에서 지정한 컬렉션에 포함된 개체 속성의 이름을 지정하는 <see cref="P:System.Windows.Forms.ListControl.DataSource" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-139">A <see cref="T:System.String" /> specifying the name of an object property that is contained in the collection specified by the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property.</span></span> <span data-ttu-id="c0aba-140">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-140">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-141">상속 하는 컨트롤 <xref:System.Windows.Forms.ListControl> 다양 한 유형의 개체를 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-141">The controls that inherit from <xref:System.Windows.Forms.ListControl> can display diverse types of objects.</span></span> <span data-ttu-id="c0aba-142">지정된 된 속성 개체 또는 값에 존재 하지 않는 경우 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 은 빈 문자열 (""), 개체의 결과 `ToString` 메서드 대신 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-142">If the specified property does not exist on the object or the value of <xref:System.Windows.Forms.ListControl.DisplayMember%2A> is an empty string (""), the results of the object's `ToString` method are displayed instead.</span></span>  
  
 <span data-ttu-id="c0aba-143">새 표시 멤버를 설정할 수 없는 경우에 이전 표시 멤버 설정이 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-143">If the new display member cannot be set, the previous display member setting is maintained.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-144">다음 코드 예제는 사용 하는 방법을 보여 주는 완전 한 응용 프로그램 <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.ValueMember%2A>, 및 <xref:System.Windows.Forms.ListControl.SelectedValue%2A> 의 멤버는 <xref:System.Windows.Forms.ListControl> 에 의해 구현 된 클래스는 <xref:System.Windows.Forms.ListBox> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-144">The following code example is a complete application that shows how you can use <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.ValueMember%2A>, and <xref:System.Windows.Forms.ListControl.SelectedValue%2A> members of the <xref:System.Windows.Forms.ListControl> class as implemented by the <xref:System.Windows.Forms.ListBox> class.</span></span> <span data-ttu-id="c0aba-145">이 예제에서는 로드 된 <xref:System.Collections.ArrayList> 와 목록 상자입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-145">The example loads an <xref:System.Collections.ArrayList> and the list box.</span></span> <span data-ttu-id="c0aba-146">목록 상자에서 항목을 선택 하는 경우 선택한 값 선택된 항목과 관련 된 데이터를 반환 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-146">When the user selects an item in the list box, the selected value is used to return the data associated with the selected item.</span></span>  
  
 [!code-cpp[ListControl#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListControl/CPP/form1.cpp#1)]
 [!code-csharp[ListControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListControl/CS/form1.cs#1)]
 [!code-vb[ListControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListControl/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DisplayMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplayMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.DisplayMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DisplayMemberChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-147"><see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> 속성이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-147">Occurs when the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-148">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-148">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-149">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-149">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c0aba-150">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ListControl.DisplayMemberChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-150">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.DisplayMemberChanged> event.</span></span> <span data-ttu-id="c0aba-151">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-151">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c0aba-152">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-152">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c0aba-153">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ListControl>와 같은 한 <xref:System.Windows.Forms.ComboBox> 또는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-153">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="c0aba-154">다음 인스턴스 이름을 `ListControl1` 이벤트 처리기가 연결 확인 하 고는 <xref:System.Windows.Forms.ListControl.DisplayMemberChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-154">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.DisplayMemberChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#143](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#143)]
 [!code-vb[System.Windows.Forms.EventExamples#143](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#143)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FilterItemOnProperty">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0aba-155"><see cref="T:System.Windows.Forms.ListControl" /> 항목이 <see cref="T:System.Windows.Forms.ListControl" /> 클래스의 인스턴스 속성인 경우 이 항목의 현재 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-155">Returns the current value of the <see cref="T:System.Windows.Forms.ListControl" /> item, if the item is a property of an instance of the <see cref="T:System.Windows.Forms.ListControl" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilterItemOnProperty">
      <MemberSignature Language="C#" Value="protected object FilterItemOnProperty (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object FilterItemOnProperty(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.FilterItemOnProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function FilterItemOnProperty (item As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ FilterItemOnProperty(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c0aba-156"><see cref="T:System.Windows.Forms.ListControl" /> 항목이 바인딩될 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-156">The object the <see cref="T:System.Windows.Forms.ListControl" /> item is bound to.</span></span></param>
        <summary><span data-ttu-id="c0aba-157"><see cref="T:System.Windows.Forms.ListControl" /> 항목이 지정된 항목의 개체 속성인 경우 이 항목의 현재 값을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-157">Retrieves the current value of the <see cref="T:System.Windows.Forms.ListControl" /> item, if it is a property of an object, given the item.</span></span></summary>
        <returns><span data-ttu-id="c0aba-158">필터링된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-158">The filtered object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterItemOnProperty">
      <MemberSignature Language="C#" Value="protected object FilterItemOnProperty (object item, string field);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object FilterItemOnProperty(object item, string field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.FilterItemOnProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function FilterItemOnProperty (item As Object, field As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ FilterItemOnProperty(System::Object ^ item, System::String ^ field);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="field" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c0aba-159"><see cref="T:System.Windows.Forms.ListControl" /> 항목이 바인딩될 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-159">The object the <see cref="T:System.Windows.Forms.ListControl" /> item is bound to.</span></span></param>
        <param name="field"><span data-ttu-id="c0aba-160"><see cref="T:System.Windows.Forms.ListControl" />이 바인딩될 항목의 속성 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-160">The property name of the item the <see cref="T:System.Windows.Forms.ListControl" /> is bound to.</span></span></param>
        <summary><span data-ttu-id="c0aba-161"><see cref="T:System.Windows.Forms.ListControl" /> 항목이 지정된 항목과 속성 이름의 개체 속성인 경우 이 항목의 현재 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-161">Returns the current value of the <see cref="T:System.Windows.Forms.ListControl" /> item, if it is a property of an object given the item and the property name.</span></span></summary>
        <returns><span data-ttu-id="c0aba-162">필터링된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-162">The filtered object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListControlConvertEventHandler Format;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListControlConvertEventHandler Format" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.Format" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Format As ListControlConvertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListControlConvertEventHandler ^ Format;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListControlConvertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-163">컨트롤이 데이터 값에 바인딩되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-163">Occurs when the control is bound to a data value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-164"><xref:System.Windows.Forms.ListControl.Format> 이벤트는 앞에서 표시 되는 각 항목은 <xref:System.Windows.Forms.ListControl> 형식이 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-164">The <xref:System.Windows.Forms.ListControl.Format> event is raised before each visible item in the <xref:System.Windows.Forms.ListControl> is formatted.</span></span> <span data-ttu-id="c0aba-165">이 이벤트를 처리 사용을 통해이 목록 항목에 대해 표시할 문자열에 액세스할 수는 <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> 의 속성은 <xref:System.Windows.Forms.ListControlConvertEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-165">Handling this event gives you access to the string to be displayed for this list item, through the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> property of the <xref:System.Windows.Forms.ListControlConvertEventArgs>.</span></span>  
  
 <span data-ttu-id="c0aba-166">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-166">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-167">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-167">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c0aba-168">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ListControl.Format> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-168">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.Format> event.</span></span> <span data-ttu-id="c0aba-169">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-169">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c0aba-170">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-170">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c0aba-171">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ListControl>와 같은 한 <xref:System.Windows.Forms.ComboBox> 또는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-171">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="c0aba-172">다음 인스턴스 이름을 `ListControl1` 이벤트 처리기가 연결 확인 하 고는 <xref:System.Windows.Forms.ListControl.Format> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-172">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.Format> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#144](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#144)]
 [!code-vb[System.Windows.Forms.EventExamples#144](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#144)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatInfo">
      <MemberSignature Language="C#" Value="public IFormatProvider FormatInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.FormatInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatInfo As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IFormatProvider ^ FormatInfo { IFormatProvider ^ get(); void set(IFormatProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-173">사용자 지정 형식 지정 동작을 제공하는 <see cref="T:System.IFormatProvider" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-173">Gets or sets the <see cref="T:System.IFormatProvider" /> that provides custom formatting behavior.</span></span></summary>
        <value><span data-ttu-id="c0aba-174">사용자 지정 형식 지정 동작을 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-174">The <see cref="T:System.IFormatProvider" /> implementation that provides custom formatting behavior.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-175">설정의 <xref:System.Windows.Forms.ListControl.FormatInfo%2A> 속성이 기본 동작을 사용 하 여 서식 보다 우선 합니다는 <xref:System.Windows.Forms.Application.CurrentCulture%2A> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-175">Setting the <xref:System.Windows.Forms.ListControl.FormatInfo%2A> property will override the default formatting behavior, which uses the <xref:System.Windows.Forms.Application.CurrentCulture%2A> setting.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatInfoChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FormatInfoChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FormatInfoChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.FormatInfoChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormatInfoChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FormatInfoChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-176"><see cref="P:System.Windows.Forms.ListControl.FormatInfo" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-176">Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.FormatInfo" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-177">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-177">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-178">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-178">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c0aba-179">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ListControl.FormatInfoChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-179">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.FormatInfoChanged> event.</span></span> <span data-ttu-id="c0aba-180">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-180">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c0aba-181">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-181">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c0aba-182">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ListControl>와 같은 한 <xref:System.Windows.Forms.ComboBox> 또는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-182">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="c0aba-183">다음 인스턴스 이름을 `ListControl1` 이벤트 처리기가 연결 확인 하 고는 <xref:System.Windows.Forms.ListControl.FormatInfoChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-183">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.FormatInfoChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#145](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#145)]
 [!code-vb[System.Windows.Forms.EventExamples#145](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatString">
      <MemberSignature Language="C#" Value="public string FormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.FormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FormatStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-184">값을 표시할 방법을 나타내는 서식 지정자 문자를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-184">Gets or sets the format-specifier characters that indicate how a value is to be displayed.</span></span></summary>
        <value><span data-ttu-id="c0aba-185">값을 표시할 방법을 나타내는 서식 지정자 문자로 된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-185">The string of format-specifier characters that indicates how a value is to be displayed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-186">사용 된 형식 문자열을 표준 따라야 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 형식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-186">The format string used must follow standard [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] format specifications.</span></span> <span data-ttu-id="c0aba-187">자세한 내용은 참조 [.NET Framework의 형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-187">For more information, see [Formatting Types in the .NET Framework](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatStringChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FormatStringChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FormatStringChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.FormatStringChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormatStringChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FormatStringChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-188"><see cref="P:System.Windows.Forms.ListControl.FormatString" /> 속성 값이 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-188">Occurs when value of the <see cref="P:System.Windows.Forms.ListControl.FormatString" /> property changes</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-189">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-189">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-190">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-190">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c0aba-191">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ListControl.FormatStringChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-191">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.FormatStringChanged> event.</span></span> <span data-ttu-id="c0aba-192">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-192">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c0aba-193">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-193">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c0aba-194">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ListControl>와 같은 한 <xref:System.Windows.Forms.ComboBox> 또는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-194">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="c0aba-195">다음 인스턴스 이름을 `ListControl1` 이벤트 처리기가 연결 확인 하 고는 <xref:System.Windows.Forms.ListControl.FormatStringChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-195">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.FormatStringChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#146](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#146)]
 [!code-vb[System.Windows.Forms.EventExamples#146](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#146)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattingEnabled">
      <MemberSignature Language="C#" Value="public bool FormattingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormattingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.FormattingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property FormattingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormattingEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-196">형식이 <see cref="P:System.Windows.Forms.ListControl.DisplayMember" />의 <see cref="T:System.Windows.Forms.ListControl" /> 속성에 적용되지는 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-196">Gets or sets a value indicating whether formatting is applied to the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property of the <see cref="T:System.Windows.Forms.ListControl" />.</span></span></summary>
        <value>
          <span data-ttu-id="c0aba-197"><see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> 속성의 형식을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-197"><see langword="true" /> if formatting of the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c0aba-198">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-198">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-199">설정의 <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> 속성을 `true` 하면는 <xref:System.Windows.Forms.ListControl.Format> 표시 각 멤버에 대해 발생 하는 이벤트는 <xref:System.Windows.Forms.ListControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-199">Setting the <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> property to `true` causes the <xref:System.Windows.Forms.ListControl.Format> event to be raised for each visible member of the <xref:System.Windows.Forms.ListControl>.</span></span>  
  
 <span data-ttu-id="c0aba-200"><xref:System.Windows.Forms.ComboBox.SelectedIndex%2A><xref:System.Windows.Forms.ListControl.SelectedValue%2A>, 및 <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> 다음과 같이 관련 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-200"><xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>, <xref:System.Windows.Forms.ListControl.SelectedValue%2A>, and <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> are related as follows:</span></span>  
  
-   <span data-ttu-id="c0aba-201">경우 <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> 은 `false`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 있을 때-1로 설정 되지 것입니다 <xref:System.Windows.Forms.ListControl.SelectedValue%2A> 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-201">If <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> is `false`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> will not be set to -1 when <xref:System.Windows.Forms.ListControl.SelectedValue%2A> is blank.</span></span>  
  
-   <span data-ttu-id="c0aba-202">경우 <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> 은 `true`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 있을 때-1로 설정 됩니다 <xref:System.Windows.Forms.ListControl.SelectedValue%2A> 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-202">If <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> is `true`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> will be set to -1 when <xref:System.Windows.Forms.ListControl.SelectedValue%2A> is blank.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattingEnabledChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FormattingEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FormattingEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.FormattingEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormattingEnabledChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FormattingEnabledChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-203"><see cref="P:System.Windows.Forms.ListControl.FormattingEnabled" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-203">Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.FormattingEnabled" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-204">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-204">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-205">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-205">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c0aba-206">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ListControl.FormattingEnabledChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-206">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.FormattingEnabledChanged> event.</span></span> <span data-ttu-id="c0aba-207">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-207">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c0aba-208">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-208">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c0aba-209">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ListControl>와 같은 한 <xref:System.Windows.Forms.ComboBox> 또는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-209">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="c0aba-210">다음 인스턴스 이름을 `ListControl1` 이벤트 처리기가 연결 확인 하 고는 <xref:System.Windows.Forms.ListControl.FormattingEnabledChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-210">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.FormattingEnabledChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#147](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#147)]
 [!code-vb[System.Windows.Forms.EventExamples#147](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#147)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemText">
      <MemberSignature Language="C#" Value="public string GetItemText (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetItemText(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.GetItemText(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemText (item As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetItemText(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c0aba-211">표시할 내용을 가져올 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-211">The object from which to get the contents to display.</span></span></param>
        <summary><span data-ttu-id="c0aba-212">지정된 항목의 텍스트 표현을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-212">Returns the text representation of the specified item.</span></span></summary>
        <returns><span data-ttu-id="c0aba-213"><see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> 속성이 지정되어 있지 않으면 <see cref="M:System.Windows.Forms.ListControl.GetItemText(System.Object)" />에서 반환하는 값은 해당 항목의 <see langword="ToString" /> 메서드 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-213">If the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property is not specified, the value returned by <see cref="M:System.Windows.Forms.ListControl.GetItemText(System.Object)" /> is the value of the item's <see langword="ToString" /> method.</span></span> <span data-ttu-id="c0aba-214">그렇지 않으면 메서드가 <paramref name="item" /> 매개 변수에 지정된 개체에 대해 <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> 속성에서 지정된 멤버의 문자열 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-214">Otherwise, the method returns the string value of the member specified in the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property for the object specified in the <paramref name="item" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="c0aba-215"><see cref="T:System.Windows.Forms.Keys" />의 다음 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-215">One of the values of <see cref="T:System.Windows.Forms.Keys" />.</span></span></param>
        <summary><span data-ttu-id="c0aba-216">Page Up, Page Down, Home, End와 같은 특수 입력 키를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-216">Handles special input keys, such as PAGE UP, PAGE DOWN, HOME, END, and so on.</span></span></summary>
        <returns>
          <span data-ttu-id="c0aba-217"><paramref name="keyData" /> 매개 변수가 <see cref="F:System.Windows.Forms.Keys.End" />, <see cref="F:System.Windows.Forms.Keys.Home" />, <see cref="F:System.Windows.Forms.Keys.PageUp" /> 또는 <see cref="F:System.Windows.Forms.Keys.PageDown" /> 키를 지정하면 <see langword="true" />이고, <paramref name="keyData" /> 매개 변수가 <see cref="F:System.Windows.Forms.Keys.Alt" /> 키를 지정하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-217"><see langword="true" /> if the <paramref name="keyData" /> parameter specifies the <see cref="F:System.Windows.Forms.Keys.End" />, <see cref="F:System.Windows.Forms.Keys.Home" />, <see cref="F:System.Windows.Forms.Keys.PageUp" />, or <see cref="F:System.Windows.Forms.Keys.PageDown" /> key; <see langword="false" /> if the <paramref name="keyData" /> parameter specifies <see cref="F:System.Windows.Forms.Keys.Alt" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingContextChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c0aba-218">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-218">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c0aba-219"><see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-219">Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c0aba-220">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-220">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c0aba-221"><see cref="E:System.Windows.Forms.ListControl.DataSourceChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-221">Raises the <see cref="E:System.Windows.Forms.ListControl.DataSourceChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-222">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-222">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c0aba-223">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-223">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c0aba-224">또한 <xref:System.Windows.Forms.ListControl.OnDataSourceChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-224">The <xref:System.Windows.Forms.ListControl.OnDataSourceChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c0aba-225">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-225">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c0aba-226">파생 클래스에서 <see cref="M:System.Windows.Forms.ListControl.OnDataSourceChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ListControl.OnDataSourceChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-226">When overriding <see cref="M:System.Windows.Forms.ListControl.OnDataSourceChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnDataSourceChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnDisplayMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayMemberChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c0aba-227">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-227">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c0aba-228"><see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-228">Raises the <see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-229">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-229">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c0aba-230">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-230">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c0aba-231">또한 <xref:System.Windows.Forms.ListControl.OnDisplayMemberChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-231">The <xref:System.Windows.Forms.ListControl.OnDisplayMemberChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c0aba-232">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-232">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c0aba-233">파생 클래스에서 <see cref="M:System.Windows.Forms.ListControl.OnDisplayMemberChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ListControl.OnDisplayMemberChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-233">When overriding <see cref="M:System.Windows.Forms.ListControl.OnDisplayMemberChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnDisplayMemberChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFormat">
      <MemberSignature Language="C#" Value="protected virtual void OnFormat (System.Windows.Forms.ListControlConvertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormat(class System.Windows.Forms.ListControlConvertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormat (e As ListControlConvertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormat(System::Windows::Forms::ListControlConvertEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListControlConvertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c0aba-234">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.ListControlConvertEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-234">A <see cref="T:System.Windows.Forms.ListControlConvertEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c0aba-235"><see cref="E:System.Windows.Forms.ListControl.Format" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-235">Raises the <see cref="E:System.Windows.Forms.ListControl.Format" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-236">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-236">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c0aba-237">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-237">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c0aba-238">또한 <xref:System.Windows.Forms.ListControl.OnFormat%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-238">The <xref:System.Windows.Forms.ListControl.OnFormat%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c0aba-239">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-239">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c0aba-240">파생 클래스에서 <see cref="M:System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-240">When overriding <see cref="M:System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFormatInfoChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFormatInfoChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormatInfoChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormatInfoChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormatInfoChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c0aba-241">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-241">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c0aba-242"><see cref="E:System.Windows.Forms.ListControl.FormatInfoChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-242">Raises the <see cref="E:System.Windows.Forms.ListControl.FormatInfoChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-243">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-243">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c0aba-244">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-244">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c0aba-245">또한 <xref:System.Windows.Forms.ListControl.OnFormatInfoChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-245">The <xref:System.Windows.Forms.ListControl.OnFormatInfoChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c0aba-246">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-246">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c0aba-247">파생 클래스에서 <see cref="M:System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-247">When overriding <see cref="M:System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFormatStringChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFormatStringChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormatStringChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormatStringChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormatStringChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c0aba-248">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-248">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c0aba-249"><see cref="E:System.Windows.Forms.ListControl.FormatStringChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-249">Raises the <see cref="E:System.Windows.Forms.ListControl.FormatStringChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-250">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-250">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c0aba-251">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-251">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c0aba-252">또한 <xref:System.Windows.Forms.ListControl.OnFormatStringChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-252">The <xref:System.Windows.Forms.ListControl.OnFormatStringChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c0aba-253">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-253">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c0aba-254">파생 클래스에서 <see cref="M:System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-254">When overriding <see cref="M:System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFormattingEnabledChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFormattingEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormattingEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormattingEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormattingEnabledChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c0aba-255">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-255">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c0aba-256"><see cref="E:System.Windows.Forms.ListControl.FormattingEnabledChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-256">Raises the <see cref="E:System.Windows.Forms.ListControl.FormattingEnabledChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-257">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-257">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c0aba-258">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-258">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c0aba-259">또한 <xref:System.Windows.Forms.ListControl.OnFormattingEnabledChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-259">The <xref:System.Windows.Forms.ListControl.OnFormattingEnabledChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c0aba-260">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-260">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c0aba-261">파생 클래스에서 <see cref="M:System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-261">When overriding <see cref="M:System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c0aba-262">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-262">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c0aba-263"><see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-263">Raises the <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-264">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-264">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c0aba-265">파생 클래스에서 <see cref="M:System.Windows.Forms.ListControl.OnSelectedIndexChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ListControl.OnSelectedIndexChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-265">When overriding <see cref="M:System.Windows.Forms.ListControl.OnSelectedIndexChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnSelectedIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedValueChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedValueChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnSelectedValueChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedValueChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedValueChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c0aba-266">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-266">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c0aba-267"><see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-267">Raises the <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-268">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-268">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c0aba-269">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-269">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c0aba-270">파생 클래스에서 <see cref="M:System.Windows.Forms.ListControl.OnSelectedValueChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ListControl.OnSelectedValueChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-270">When overriding <see cref="M:System.Windows.Forms.ListControl.OnSelectedValueChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnSelectedValueChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnValueMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueMemberChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c0aba-271">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-271">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c0aba-272"><see cref="E:System.Windows.Forms.ListControl.ValueMemberChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-272">Raises the <see cref="E:System.Windows.Forms.ListControl.ValueMemberChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-273">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-273">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c0aba-274">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-274">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c0aba-275">또한 <xref:System.Windows.Forms.ListControl.OnValueMemberChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-275">The <xref:System.Windows.Forms.ListControl.OnValueMemberChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c0aba-276">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-276">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c0aba-277">파생 클래스에서 <see cref="M:System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-277">When overriding <see cref="M:System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RefreshItem">
      <MemberSignature Language="C#" Value="protected abstract void RefreshItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RefreshItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.RefreshItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub RefreshItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void RefreshItem(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c0aba-278">새로 고칠 데이터가 포함되어 있는 항목의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-278">The zero-based index of the item whose data to refresh.</span></span></param>
        <summary><span data-ttu-id="c0aba-279">파생 클래스에서 재정의되면 지정한 인덱스에 있는 개체의 데이터를 데이터 소스의 내용과 다시 동기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-279">When overridden in a derived class, resynchronizes the data of the object at the specified index with the contents of the data source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItems">
      <MemberSignature Language="C#" Value="protected virtual void RefreshItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RefreshItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.RefreshItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RefreshItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RefreshItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0aba-280">파생 클래스에서 재정의되면 항목 데이터를 데이터 소스의 내용과 다시 동기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-280">When overridden in a derived class, resynchronizes the item data with the contents of the data source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public abstract int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-281">파생 클래스에서 재정의되면 현재 선택된 항목의 0부터 시작하는 인덱스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-281">When overridden in a derived class, gets or sets the zero-based index of the currently selected item.</span></span></summary>
        <value><span data-ttu-id="c0aba-282">현재 선택된 항목의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-282">A zero-based index of the currently selected item.</span></span> <span data-ttu-id="c0aba-283">선택된 항목이 없으면 -1 값이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-283">A value of negative one (-1) is returned if no item is selected.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-284"><see cref="P:System.Windows.Forms.ListControl.ValueMember" /> 속성이 지정한 멤버 속성의 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-284">Gets or sets the value of the member property specified by the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property.</span></span></summary>
        <value><span data-ttu-id="c0aba-285"><see cref="P:System.Windows.Forms.ListControl.ValueMember" /> 속성이 지정한 데이터 소스의 멤버 값을 포함하고 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-285">An object containing the value of the member of the data source specified by the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-286">속성에 지정 되지 않은 경우 <xref:System.Windows.Forms.ListControl.ValueMember%2A>, <xref:System.Windows.Forms.ListControl.SelectedValue%2A> 의 결과 반환는 `ToString` 는 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-286">If a property is not specified in <xref:System.Windows.Forms.ListControl.ValueMember%2A>, <xref:System.Windows.Forms.ListControl.SelectedValue%2A> returns the results of the `ToString` method of the object.</span></span>  
  
 <span data-ttu-id="c0aba-287"><xref:System.Windows.Forms.ComboBox.SelectedIndex%2A><xref:System.Windows.Forms.ListControl.SelectedValue%2A>, 및 <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> 다음과 같이 관련 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-287"><xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>, <xref:System.Windows.Forms.ListControl.SelectedValue%2A>, and <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> are related as follows:</span></span>  
  
-   <span data-ttu-id="c0aba-288">경우 <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> 은 `false`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 있을 때-1로 설정 되지 것입니다 <xref:System.Windows.Forms.ListControl.SelectedValue%2A> 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-288">If <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> is `false`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> will not be set to -1 when <xref:System.Windows.Forms.ListControl.SelectedValue%2A> is blank.</span></span>  
  
-   <span data-ttu-id="c0aba-289">경우 <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> 은 `true`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 있을 때-1로 설정 됩니다 <xref:System.Windows.Forms.ListControl.SelectedValue%2A> 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-289">If <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> is `true`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> will be set to -1 when <xref:System.Windows.Forms.ListControl.SelectedValue%2A> is blank.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-290">다음 코드 예제는 <xref:System.Windows.Forms.ListControl.SelectedValue%2A> 변수로 지정한 속성의 값 반환는 <xref:System.Windows.Forms.ListControl.ValueMember%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-290">The following code example shows the <xref:System.Windows.Forms.ListControl.SelectedValue%2A> returning the value of the property specified by the <xref:System.Windows.Forms.ListControl.ValueMember%2A> property.</span></span> <span data-ttu-id="c0aba-291">이 코드에 표시 된 예의 일부는는 <xref:System.Windows.Forms.ListControl> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-291">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.ListControl> class overview.</span></span> <span data-ttu-id="c0aba-292">참조 <xref:System.Windows.Forms.ListControl> 전체 코드 목록에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-292">See <xref:System.Windows.Forms.ListControl> for the whole code listing.</span></span>  
  
 [!code-cpp[ListControl#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ListControl/CPP/form1.cpp#3)]
 [!code-csharp[ListControl#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListControl/CS/form1.cs#3)]
 [!code-vb[ListControl#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListControl/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0aba-293">할당된 값이 <see langword="null" />이거나 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="c0aba-293">The assigned value is <see langword="null" /> or the empty string ("").</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ListControl.ValueMember" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValueChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.SelectedValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedValueChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedValueChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-294"><see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> 속성이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-294">Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-295">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-295">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-296">다음 코드 예제는 사용 하는 방법을 보여 주는 완전 한 응용 프로그램 <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.ValueMember%2A>, 및 <xref:System.Windows.Forms.ListControl.SelectedValue%2A> 의 멤버는 <xref:System.Windows.Forms.ListControl> 에 의해 구현 된 클래스는 <xref:System.Windows.Forms.ListBox> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-296">The following code example is a complete application that shows how you can use <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.ValueMember%2A>, and <xref:System.Windows.Forms.ListControl.SelectedValue%2A> members of the <xref:System.Windows.Forms.ListControl> class as implemented by the <xref:System.Windows.Forms.ListBox> class.</span></span> <span data-ttu-id="c0aba-297">이 예제에서는 로드 된 <xref:System.Collections.ArrayList> 와 목록 상자입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-297">The example loads an <xref:System.Collections.ArrayList> and the list box.</span></span> <span data-ttu-id="c0aba-298">또한이 예제에서는 <xref:System.Windows.Forms.ListControl.SelectedValueChanged> 목록 상자에서 항목을 선택 하면 텍스트 상자를 작성 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-298">The example also uses the <xref:System.Windows.Forms.ListControl.SelectedValueChanged> event to fill in a text box when the user selects an item in the list box.</span></span> <span data-ttu-id="c0aba-299">텍스트 상자는 선택한 항목에 연결 된 데이터로 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-299">The text box is filled with the data associated with the selected item.</span></span>  
  
 [!code-cpp[ListControl#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListControl/CPP/form1.cpp#1)]
 [!code-csharp[ListControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListControl/CS/form1.cs#1)]
 [!code-vb[ListControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListControl/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemCore">
      <MemberSignature Language="C#" Value="protected virtual void SetItemCore (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetItemCore(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.SetItemCore(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetItemCore (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetItemCore(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c0aba-300">개체의 배열 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-300">The array index of the object.</span></span></param>
        <param name="value"><span data-ttu-id="c0aba-301">개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-301">The object.</span></span></param>
        <summary><span data-ttu-id="c0aba-302">파생 클래스에서 재정의되면 개체를 파생 클래스에 지정된 인덱스로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-302">When overridden in a derived class, sets the object with the specified index in the derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemsCore">
      <MemberSignature Language="C#" Value="protected abstract void SetItemsCore (System.Collections.IList items);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetItemsCore(class System.Collections.IList items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.SetItemsCore(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetItemsCore (items As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetItemsCore(System::Collections::IList ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="c0aba-303">항목의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-303">An array of items.</span></span></param>
        <summary><span data-ttu-id="c0aba-304">파생 클래스에서 재정의되면 파생 클래스의 컬렉션에서 지정된 개체 배열을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-304">When overridden in a derived class, sets the specified array of objects in a collection in the derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueMember">
      <MemberSignature Language="C#" Value="public string ValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.ValueMember" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-305"><see cref="T:System.Windows.Forms.ListControl" />에서 항목의 실제 값으로 사용할 속성의 경로를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-305">Gets or sets the path of the property to use as the actual value for the items in the <see cref="T:System.Windows.Forms.ListControl" />.</span></span></summary>
        <value><span data-ttu-id="c0aba-306"><see cref="T:System.String" /> 속성 값의 단일 속성 이름 또는 데이터 바인딩된 마지막 개체의 속성 이름을 확인하는 마침표로 구분된 속성 이름의 계층 구조를 나타내는 <see cref="P:System.Windows.Forms.ListControl.DataSource" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-306">A <see cref="T:System.String" /> representing a single property name of the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property value, or a hierarchy of period-delimited property names that resolves to a property name of the final data-bound object.</span></span> <span data-ttu-id="c0aba-307">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-307">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-308">내용을 지정 된 <xref:System.Windows.Forms.ListControl.ValueMember%2A> 데이터를 바인딩하는 경우에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-308">Specify the contents of the <xref:System.Windows.Forms.ListControl.ValueMember%2A> property in cases where you bind data.</span></span>  
  
 <span data-ttu-id="c0aba-309">지울 수는 <xref:System.Windows.Forms.ListControl.ValueMember%2A> 속성을 빈 문자열로 설정 하 여 속성 ("") 또는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-309">You can clear the <xref:System.Windows.Forms.ListControl.ValueMember%2A> property by setting the property to an empty string ("") or `null`.</span></span>  
  
 <span data-ttu-id="c0aba-310">새 설정 <xref:System.Windows.Forms.ListControl.ValueMember%2A> 속성 발생의 <xref:System.Windows.Forms.ListControl.ValueMemberChanged> 및 <xref:System.Windows.Forms.ListControl.SelectedValueChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-310">Setting a new <xref:System.Windows.Forms.ListControl.ValueMember%2A> property raises the <xref:System.Windows.Forms.ListControl.ValueMemberChanged> and <xref:System.Windows.Forms.ListControl.SelectedValueChanged> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-311">다음 코드 예제에서는으로 데이터를 로드 한 <xref:System.Collections.ArrayList> 설정는 <xref:System.Windows.Forms.ListControl.ValueMember%2A> 목록에 있는 개체의 속성에 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-311">The following code example shows loading the data into an <xref:System.Collections.ArrayList> and setting the <xref:System.Windows.Forms.ListControl.ValueMember%2A> to a property of the object in the list.</span></span>  
  
 [!code-cpp[ListControl#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListControl/CPP/form1.cpp#1)]
 [!code-csharp[ListControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListControl/CS/form1.cs#1)]
 [!code-vb[ListControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListControl/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0aba-312">지정한 속성 경로는 <see cref="P:System.Windows.Forms.ListControl.DataSource" /> 속성에 지정한 개체를 통해 확인할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-312">The specified property path cannot be resolved through the object specified by the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValueMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ValueMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ValueMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.ValueMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValueMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ValueMemberChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-313"><see cref="P:System.Windows.Forms.ListControl.ValueMember" /> 속성이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-313">Occurs when the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-314">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-314">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-315">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-315">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c0aba-316">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ListControl.ValueMemberChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-316">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.ValueMemberChanged> event.</span></span> <span data-ttu-id="c0aba-317">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-317">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c0aba-318">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-318">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c0aba-319">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ListControl>와 같은 한 <xref:System.Windows.Forms.ComboBox> 또는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-319">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="c0aba-320">다음 인스턴스 이름을 `ListControl1` 이벤트 처리기가 연결 확인 하 고는 <xref:System.Windows.Forms.ListControl.ValueMemberChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0aba-320">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.ValueMemberChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#148](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#148)]
 [!code-vb[System.Windows.Forms.EventExamples#148](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#148)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>