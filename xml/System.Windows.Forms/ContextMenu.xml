<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ContextMenu.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59f4dc49d85f598e984cefbf14a41cf72062a7f67.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f4dc49d85f598e984cefbf14a41cf72062a7f67</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.ContextMenu">
          <source>Represents a shortcut menu.</source>
          <target state="translated">바로 가기 메뉴를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.ContextMenu">
          <source>Although <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph> replaces and adds functionality to the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> control of previous versions, <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> is retained for both backward compatibility and future use if you choose.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph>은 이전 버전의 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> 컨트롤을 대체하고 확장한 컨트롤이지만 이전 버전과의 호환성 및 앞으로의 사용 가능성을 고려하여 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph>를 유지하도록 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> class represents shortcut menus that can be displayed when the user clicks the right mouse button over a control or area of the form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 클래스 컨트롤 또는 양식의 영역 위에 마우스 오른쪽 단추를 클릭할 때 표시 될 수 있는 바로 가기 메뉴를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>Shortcut menus are typically used to combine different menu items from a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> of a form that are useful for the user given the context of the application.</source>
          <target state="translated">바로 가기 메뉴는 일반적으로 다른 메뉴 항목을 결합 하는 데 사용 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 사용자 응용 프로그램의 컨텍스트를 지정 하는 데 도움이 되는 폼의 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>For example, you can use a shortcut menu assigned to a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control to provide menu items for changing the font of the text, finding text within the control, or Clipboard features for copying and pasting text.</source>
          <target state="translated">예를 들어에 할당 된 바로 가기 메뉴를 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 컨트롤 또는 텍스트 복사 및 붙여넣기를 위한 클립보드 기능 내에서 텍스트 찾기는 텍스트의 글꼴을 변경 하기 위한 메뉴 항목을 제공 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>You can also display new <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects in a shortcut menu that are not located within a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to provide situation specific commands that are not appropriate for the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to display.</source>
          <target state="translated">표시할 수도 있습니다. 새로운 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 바로 가기 메뉴에서 내에 없는 개체는 <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 에 적합 하지 않은 상황 특정 명령을 제공 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 표시할 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>Typically, a shortcut menu is displayed when a user clicks the right mouse button over a control or the form itself.</source>
          <target state="translated">일반적으로 바로 가기 메뉴는 컨트롤 또는 양식 자체를 통해 마우스 오른쪽 단추를 클릭할 때 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>Visible controls and <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> have a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> property that binds the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> class to the control that displays the shortcut menu.</source>
          <target state="translated">표시 된 컨트롤이 및 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 가 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> 바인딩된 속성을는 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 바로 가기 메뉴를 표시 하는 컨트롤에는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>More than one control can use a <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">하나 이상의 컨트롤을 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.SourceControl%2A&gt;</ph> property to determine which control last displayed the shortcut menu in order to perform tasks specific to the control or to modify the shortcut menu displayed for the control.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.SourceControl%2A&gt;</ph> 속성을 컨트롤에 관련 된 작업을 수행 하기 위해 또는 컨트롤에 대해 표시 되는 바로 가기 메뉴를 수정 하려면 마지막 바로 가기 메뉴를 표시 한 컨트롤을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>You might want to know when the shortcut menu is being displayed in order to set check marks, disable items, and perform other menu tasks before the menu is displayed to the user.</source>
          <target state="translated">에 확인 표시를 설정 하 고, 항목을 사용 하지 않도록 설정 하 고, 사용자에 게는 메뉴가 표시 되기 전에 다른 메뉴 작업을 수행 하기 위해 바로 가기 메뉴가 표시 되는 때를 알아야 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Popup&gt;</ph> event to determine when the shortcut menu is being displayed.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Popup&gt;</ph> 바로 가기 메뉴가 표시 되 면을 결정 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>In order to reuse <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that are displayed in a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> for use in a <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, you must create a copy of the menu using the <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> class.</source>
          <target state="translated">다시 사용 하기 위해 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 에 표시 되는 개체는 <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 에서 사용 하기 위해는 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>를 사용 하 여 메뉴의 복사본을 만들어야 합니다는 <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph> 의 메서드는 <ph id="ph5">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>You can also merge menu items and their submenu items into a single <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> object using the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> class.</source>
          <target state="translated">단일 메뉴 항목 및 해당 하위 메뉴 항목을 병합할 수도 있습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 를 사용 하 여 개체는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>The following code example creates an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Popup&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에 대 한 이벤트 처리기를 만듭니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Popup&gt;</ph> 의 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>The code in the event handler determines which of two controls a <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> named <ph id="ph2">`pictureBox1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph4">`textBox1`</ph> is the control displaying the shortcut menu.</source>
          <target state="translated">두 컨트롤 중을 결정 하는 이벤트 처리기의 코드는 <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> 라는 <ph id="ph2">`pictureBox1`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 라는 <ph id="ph4">`textBox1`</ph> 바로 가기 메뉴를 표시 하는 컨트롤은 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>Depending on which control caused the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> to display its shortcut menu, the control adds the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">발생 하는 컨트롤에 따라는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 컨트롤 바로 가기 메뉴를 표시 하려면 적절 한 추가 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>This example requires that you have an instance of the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> class, named <ph id="ph2">`contextMenu1`</ph>, defined within the form.</source>
          <target state="translated">이 예제에서는 있어야의 인스턴스는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 라는 클래스를 <ph id="ph2">`contextMenu1`</ph>폼 내에 정의 된 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ContextMenu">
          <source>This example also requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> added to a form and that the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> property of these controls is set to <ph id="ph4">`contextMenu1`</ph>.</source>
          <target state="translated">이 예제에서는 또한 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> 폼에 추가 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> 이러한 컨트롤의 속성이로 설정 되어 <ph id="ph4">`contextMenu1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.ContextMenu">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> class with no menu items specified.</source>
          <target state="translated">지정된 메뉴 항목을 사용하지 않고 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.#ctor">
          <source>Once you have used this version of the constructor, you can add menu items to the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> by using the <ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection&gt;</ph> class.</source>
          <target state="translated">이 버전의 생성자를 사용한 메뉴 항목을 추가할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.#ctor">
          <source>You can access the <ph id="ph1">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection&gt;</ph> through the <ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> property.</source>
          <target state="translated">에 액세스할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection&gt;</ph> 통해는 <ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> objects that represent the menu items to add to the shortcut menu.</source>
          <target state="translated">바로 가기 메뉴에 추가할 메뉴 항목을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> class with a specified set of <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> objects.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> 개체의 집합을 사용하여 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>You can use this version of the constructor to create a <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> that has its menu items specified at the time it is created.</source>
          <target state="translated">이 버전의 생성자를 사용 하 여 만들려는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 생성 시 지정 된 해당 메뉴 항목이 포함 된 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>Once you have used this version of the constructor, you can add additional menu items to the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> by using the <ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection&gt;</ph> class.</source>
          <target state="translated">이 버전의 생성자를 사용한 추가 메뉴 항목을 추가할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>You can access the <ph id="ph1">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection&gt;</ph> through the <ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> property.</source>
          <target state="translated">에 액세스할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Menu.MenuItemCollection&gt;</ph> 통해는 <ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>The following code example demonstrates constructing a shortcut menu and using the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Show%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 바로 가기 메뉴를 생성 하 고 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Show%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>To run the example, paste the following code in a form containing a button named Button1.</source>
          <target state="translated">이 예제를 실행 하려면 Button1 이라는 단추가 포함 된 폼에 다음 코드를 붙여 넣습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])">
          <source>Ensure all events are associated with their event-handling methods.</source>
          <target state="translated">모든 이벤트의 이벤트 처리 메서드와 연결 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.ContextMenu.Collapse">
          <source>Occurs when the shortcut menu collapses.</source>
          <target state="translated">바로 가기 메뉴가 축소될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Collapse">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Collapse">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Collapse">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Collapse&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Collapse&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Collapse">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Collapse">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Collapse">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> named <ph id="ph2">`ContextMenu1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 라는 <ph id="ph2">`ContextMenu1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Collapse">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Collapse&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Collapse&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.ContextMenu.Collapse" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.ContextMenu.Collapse" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.ContextMenu.Popup" /&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.ContextMenu.Popup" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.ContextMenu.Popup">
          <source>Occurs before the shortcut menu is displayed.</source>
          <target state="translated">바로 가기 메뉴가 표시되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Popup">
          <source>You can use this event to initialize the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects before they are displayed.</source>
          <target state="translated">이 이벤트를 사용 하 여 초기화 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 표시 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Popup">
          <source>For example, if you use a <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> for three <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls and you want to disable certain menu items in the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> depending on which <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> is displaying the shortcut menu, you can create an event handler for this event.</source>
          <target state="translated">예를 들어, 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 에 대 한 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 연 컨트롤에 특정 메뉴 항목을 사용 하지 않도록 설정 하려면는 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 따라 <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 는 바로 가기 메뉴를 표시,이 이벤트에 대 한 이벤트 처리기를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Popup">
          <source>You could use the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.SourceControl%2A&gt;</ph> property to determine which <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> is about to display the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> and disable the appropriate <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.SourceControl%2A&gt;</ph> 속성 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 표시 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 적절 한 사용 하지 않도록 설정 하 고 <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Popup">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Popup">
          <source>The following code example creates an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Popup&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에 대 한 이벤트 처리기를 만듭니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Popup&gt;</ph> 의 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Popup">
          <source>The code in the event handler determines which of two controls a <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> named <ph id="ph2">`pictureBox1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph4">`textBox1`</ph> is the control displaying the shortcut menu.</source>
          <target state="translated">두 컨트롤 중을 결정 하는 이벤트 처리기의 코드는 <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> 라는 <ph id="ph2">`pictureBox1`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 라는 <ph id="ph4">`textBox1`</ph> 바로 가기 메뉴를 표시 하는 컨트롤은 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Popup">
          <source>Depending on which control caused the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> to display its shortcut menu, the control adds the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">발생 하는 컨트롤에 따라는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 컨트롤 바로 가기 메뉴를 표시 하려면 적절 한 추가 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Popup">
          <source>This example requires that you have an instance of the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> class, named <ph id="ph2">`contextMenu1`</ph>, defined within the form.</source>
          <target state="translated">이 예제에서는 있어야의 인스턴스는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 라는 클래스를 <ph id="ph2">`contextMenu1`</ph>폼 내에 정의 된 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ContextMenu.Popup">
          <source>This example also requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> added to a form and that the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> property of these controls is set to <ph id="ph4">`contextMenu1`</ph>.</source>
          <target state="translated">이 예제에서는 또한 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> 폼에 추가 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> 이러한 컨트롤의 속성이로 설정 되어 <ph id="ph4">`contextMenu1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">처리할 창 메시지를 나타내며 참조에 의해 전달되는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">처리할 키를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>The control to which the command key applies.</source>
          <target state="translated">명령 키가 적용될 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>Processes a command key.</source>
          <target state="translated">명령 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컨트롤이 문자를 처리하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>This method is called during message preprocessing to handle command keys.</source>
          <target state="translated">이 메서드는 명령 키를 처리 하기 위해 메시지 전처리 하는 동안 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>Command keys are keys that always take precedence over regular input keys.</source>
          <target state="translated">명령 키가 일반 입력된 키 보다 항상 우선 하는 키입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>Examples of command keys include accelerators and menu shortcuts.</source>
          <target state="translated">명령 키의 예로 액셀러레이터 키 및 바로 가기 메뉴를 들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>The method must return <ph id="ph1">`true`</ph> to indicate that it has processed the command key, or <ph id="ph2">`false`</ph> to indicate that the key is not a command key.</source>
          <target state="translated">메서드 반환 해야 <ph id="ph1">`true`</ph> 명령 키가 처리 되었는지 나타내는 또는 <ph id="ph2">`false`</ph> 키 명령 키 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</source>
          <target state="translated">이 메서드는 컨트롤은 ActiveX 컨트롤 또는 Windows Forms 응용 프로그램에서 호스트 되는 경우에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A&gt;</ph> method first determines whether the control has a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, and if so, enables the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> to process the command key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A&gt;</ph> 메서드는 컨트롤에 있는지 먼저 확인는 <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, 그렇다면 수 있도록는 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 명령 키를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A&gt;</ph> method.</source>
          <target state="translated">부모에 전달 된 키에 명령 키가 메뉴 바로 가기 하는 경우 컨트롤에 부모 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>The net effect is that command keys are "bubbled" up the control hierarchy.</source>
          <target state="translated">한 순수 효과 키 있게 됩니다"컨트롤 계층 구조는 명령입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key.</source>
          <target state="translated">사용자가 누른 키 뿐만 아니라 키 데이터도 나타냅니다에 누른 보조키 있는 경우 키와 같은 시간입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>Modifier keys include the SHIFT, CTRL, and ALT keys.</source>
          <target state="translated">보조키는 SHIFT, CTRL 및 ALT 키를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">비관리 코드를 호출할 직접 실행 호출자입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">재정의 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> 파생된 클래스에서 메서드를 컨트롤은 반환 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 키가 처리 되었는지 나타냅니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>For keys that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> method should be returned.</source>
          <target state="translated">컨트롤의 기본 클래스의 호출 결과 의해 처리 되지 않은 키에 대 한 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> 메서드를 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">컨트롤 거의 얻어지는 경우 할이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ContextMenu.RightToLeft">
          <source>Gets or sets a value indicating whether text displayed by the control is displayed from right to left.</source>
          <target state="translated">컨트롤의 텍스트가 오른쪽에서 왼쪽으로 표시되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.RightToLeft">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.RightToLeft">
          <source>This property enables your menus to support languages that are written from right to left.</source>
          <target state="translated">이 속성 메뉴 오른쪽에서 왼쪽으로 작성 된 언어를 지원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.RightToLeft">
          <source>When this property is set to <ph id="ph1">`RightToLeft.Yes`</ph>, the menu item text is displayed from right to left instead of the default left to right method.</source>
          <target state="translated">이 속성이로 설정 된 경우 <ph id="ph1">`RightToLeft.Yes`</ph>, 오른쪽에서 왼쪽으로 기본값 대신 메뉴 항목의 텍스트 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.RightToLeft">
          <source>For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property.</source>
          <target state="translated">Windows Forms 컨트롤에 미치는 오른쪽에서 왼쪽 맞춤을 사용 하도록 설정 하는 방법에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ContextMenu.RightToLeft">
          <source>The value assigned to the property is not a valid member of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> enumeration.</source>
          <target state="translated">속성에 할당된 값이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> 열거형의 올바른 멤버가 아닌 경우</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.ContextMenu">
          <source>Displays the shortcut menu at the specified position.</source>
          <target state="translated">지정된 위치에 바로 가기 메뉴를 표시합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that specifies the control with which this shortcut menu is associated.</source>
          <target state="translated">이 바로 가기 메뉴가 연결된 컨트롤을 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the coordinates at which to display the menu.</source>
          <target state="translated">메뉴가 표시될 좌표를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)">
          <source>These coordinates are specified relative to the client coordinates of the control specified in the <bpt id="p1">&lt;c&gt;</bpt>control<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">이 좌표는 <bpt id="p1">&lt;c&gt;</bpt>control<ept id="p1">&lt;/c&gt;</ept> 매개 변수에서 지정된 컨트롤의 클라이언트 좌표에 대한 상대 좌표로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)">
          <source>Displays the shortcut menu at the specified position.</source>
          <target state="translated">지정된 위치에 바로 가기 메뉴를 표시합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> is displayed when the user clicks the right mouse button on a control or area of the form that the <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> is bound to.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 컨트롤이 나 폼의 영역에서 마우스 오른쪽 단추를 클릭할 때 표시 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 에 바인딩된 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)">
          <source>You can use this method to manually display the shortcut menu at a specific location and bind it with a specific control.</source>
          <target state="translated">수동으로 특정 위치에 바로 가기 메뉴를 표시 하 고 특정 컨트롤에 연결 하려면이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)">
          <source>This method does not return until the menu is dismissed.</source>
          <target state="translated">이 메서드는 메뉴가 해제 될 때까지 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)">
          <source>The following code example demonstrates constructing a shortcut menu and using the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Show%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 바로 가기 메뉴를 생성 하 고 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Show%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)">
          <source>To run the example, paste the following code in a form containing a button named Button1.</source>
          <target state="translated">이 예제를 실행 하려면 Button1 이라는 단추가 포함 된 폼에 다음 코드를 붙여 넣습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)">
          <source>Ensure all events are associated with their event-handling methods.</source>
          <target state="translated">모든 이벤트의 이벤트 처리 메서드와 연결 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;paramref name="control" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="control" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)">
          <source>The handle of the control does not exist or the control is not visible.</source>
          <target state="translated">컨트롤의 핸들이 없거나 컨트롤이 표시되지 않는 경우</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that specifies the control with which this shortcut menu is associated.</source>
          <target state="translated">이 바로 가기 메뉴가 연결된 컨트롤을 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the coordinates at which to display the menu.</source>
          <target state="translated">메뉴가 표시될 좌표를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)">
          <source>These coordinates are specified relative to the client coordinates of the control specified in the <bpt id="p1">&lt;c&gt;</bpt>control<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">이 좌표는 <bpt id="p1">&lt;c&gt;</bpt>control<ept id="p1">&lt;/c&gt;</ept> 매개 변수에서 지정된 컨트롤의 클라이언트 좌표에 대한 상대 좌표로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> that specifies the alignment of the control relative to the <bpt id="p1">&lt;c&gt;</bpt>pos<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>pos<ept id="p1">&lt;/c&gt;</ept> 매개 변수에 상대적인 컨트롤의 맞춤을 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)">
          <source>Displays the shortcut menu at the specified position and with the specified alignment.</source>
          <target state="translated">지정된 맞춤을 사용하여 지정된 위치에 바로 가기 메뉴를 표시합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ContextMenu.SourceControl">
          <source>Gets the control that is displaying the shortcut menu.</source>
          <target state="translated">바로 가기 메뉴를 표시하는 컨트롤을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.SourceControl">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the control that is displaying the shortcut menu.</source>
          <target state="translated">바로 가기 메뉴를 표시하는 컨트롤을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.SourceControl">
          <source>If no control has displayed the shortcut menu, the property returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">바로 가기 메뉴를 표시하는 컨트롤이 없으면 속성이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.SourceControl">
          <source>This property enables you to determine which control currently displays the shortcut menu defined in the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">이 속성을 사용 하면 컨트롤이 현재 표시를 확인할 수 있습니다에 정의 된 바로 가기 메뉴는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.SourceControl">
          <source>If the shortcut menu is not currently displayed, you can use this property to determine which control last displayed the shortcut menu.</source>
          <target state="translated">바로 가기 메뉴 현재 표시 되지 않는 경우에 마지막 바로 가기 메뉴를 표시 한 컨트롤을 확인 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.SourceControl">
          <source>You can use this property in the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Popup&gt;</ph> event to ensure that the control displays the proper menu items.</source>
          <target state="translated">이 속성을 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Popup&gt;</ph> 이벤트를 적절 한 메뉴 항목 컨트롤에 표시 되는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.SourceControl">
          <source>You can also use this property to pass a reference to the control to a method that performs the tasks associated with a menu command displayed in the shortcut menu.</source>
          <target state="translated">또한 바로 가기 메뉴에 표시 되는 메뉴 명령과 사용 하 여 관련 작업을 수행 하는 메서드에 컨트롤에 대 한 참조를 전달 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.SourceControl">
          <source>Since the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>, you can also use this property if the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> is associated with a form.</source>
          <target state="translated">이후는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 클래스에서 상속 <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>, 경우에이 속성을 사용할 수 있습니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 형식과 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.SourceControl">
          <source>The following code example creates an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Popup&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에 대 한 이벤트 처리기를 만듭니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu.Popup&gt;</ph> 의 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.SourceControl">
          <source>The code in the event handler determines which of two controls a <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> named <ph id="ph2">`pictureBox1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph4">`textBox1`</ph> is the control displaying the shortcut menu.</source>
          <target state="translated">두 컨트롤 중을 결정 하는 이벤트 처리기의 코드는 <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> 라는 <ph id="ph2">`pictureBox1`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 라는 <ph id="ph4">`textBox1`</ph> 바로 가기 메뉴를 표시 하는 컨트롤은 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.SourceControl">
          <source>Depending on which control caused the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> to display its shortcut menu, the control adds the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">발생 하는 컨트롤에 따라는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 컨트롤 바로 가기 메뉴를 표시 하려면 적절 한 추가 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.SourceControl">
          <source>This example requires that you have an instance of the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> class, named <ph id="ph2">`contextMenu1`</ph>, defined within the form.</source>
          <target state="translated">이 예제에서는 있어야의 인스턴스는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 라는 클래스를 <ph id="ph2">`contextMenu1`</ph>폼 내에 정의 된 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ContextMenu.SourceControl">
          <source>This example also requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> added to a form and that the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> property of these controls is set to <ph id="ph4">`contextMenu1`</ph>.</source>
          <target state="translated">이 예제에서는 또한 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> 폼에 추가 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> 이러한 컨트롤의 속성이로 설정 되어 <ph id="ph4">`contextMenu1`</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>