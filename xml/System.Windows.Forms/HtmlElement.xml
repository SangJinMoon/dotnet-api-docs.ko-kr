<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HtmlElement.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54ea4df987f01be023f9505e29b7e260d853c5a31.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ea4df987f01be023f9505e29b7e260d853c5a31</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.HtmlElement">
          <source>Represents an HTML element inside of a Web page.</source>
          <target state="translated">웹 페이지 내의 HTML 요소를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> represents any possible type of element in an HTML document, such as <ph id="ph2">`BODY`</ph>, <ph id="ph3">`TABLE`</ph>, and <ph id="ph4">`FORM`</ph>, among others.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 모든 가능한 형식의 HTML 문서에서 요소를 같은 나타냅니다 <ph id="ph2">`BODY`</ph>, <ph id="ph3">`TABLE`</ph>, 및 <ph id="ph4">`FORM`</ph>, 다른 규칙 으로부터 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>The class exposes the most common properties you can expect to find on all elements.</source>
          <target state="translated">클래스에서 모든 요소를 찾을 예상할 수 있는 가장 일반적인 속성을 노출 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>Most elements can have <bpt id="p1">*</bpt>child elements<ept id="p1">*</ept>: other HTML elements that are placed underneath them.</source>
          <target state="translated">대부분의 요소를 가질 수 있습니다 <bpt id="p1">*</bpt>자식 요소<ept id="p1">*</ept>:는 아래에 위치 하는 다른 HTML 요소입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph> property to test whether a given element has children, and the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> collection to iterate through them.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph> 지정된 된 요소에 자식 개체가 있는지 여부를 테스트 하는 속성 및 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> 반복 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> in which the current element is nested.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> 속성에서 반환 된 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 현재 요소가 중첩 되어에 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>You often need access to attributes, properties, and methods on the underlying element that are not directly exposed by <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>, such as the <ph id="ph2">`SRC`</ph> attribute on an <ph id="ph3">`IMG`</ph> element or the <ph id="ph4">`Submit`</ph> method on a <ph id="ph5">`FORM`</ph>.</source>
          <target state="translated">특성, 속성 및 메서드에 의해 직접 노출 되지 않는 내부 요소에 액세스 해야 할 수 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>와 같은 <ph id="ph2">`SRC`</ph> 특성에 <ph id="ph3">`IMG`</ph> 요소 또는 <ph id="ph4">`Submit`</ph> 에서 메서드는 <ph id="ph5">`FORM`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> methods enable you to retrieve and alter any attribute or property on a specific element, while <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph> provides access to any methods not exposed in the managed Document Object Model (DOM).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> 메서드를 사용 하면 검색 한 특성이 나 특정 요소에 속성을 변경 하는 동안 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph> 액세스에는 관리 되는 DOM 문서 개체 모델 ()를 노출 되지 않는 모든 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>If your application has unmanaged code permission, you can also access unexposed properties and methods with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DomElement%2A&gt;</ph> attribute.</source>
          <target state="translated">노출 되지 않은 속성 및 메서드를 액세스할 경우 응용 프로그램에 비관리 코드 권한는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DomElement%2A&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TagName%2A&gt;</ph> property to test whether an element is of a specific type.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TagName%2A&gt;</ph> 요소가 특정 유형 인지를 테스트 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>Any HTML document can be modified at run time.</source>
          <target state="translated">실행 시 모든 HTML 문서를 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>You can create new <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> objects with the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph> method of <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>, and add them to another element using the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph> methods.</source>
          <target state="translated">새로 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 개체와 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph> 방식의 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>, 사용 하 여 다른 요소에 추가 하는 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> 또는 <ph id="ph5">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>You can also create the elements as HTML tags and assign them to an existing element's <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property.</source>
          <target state="translated">HTML 태그로 요소를 만들 수 있고 기존 요소에 할당 하면 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>The following code example shows how to examine an arbitrary HTML document and derive a string describing the HTML elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document.</source>
          <target state="translated">다음 코드 예제에서는 임의의 HTML 문서를 검토 하 고 오목한 부분이 있는 HTML 요소를 설명 하는 문자열을 파생 하는 방법을 보여 줍니다. 중첩 및 수준 번호 수준을 나타내는 데 사용 되는 요소는 문서에 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>This code example requires that your application hosts a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>.</source>
          <target state="translated">이 코드 예제에서는 응용 프로그램 호스트는 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> 라는 컨트롤 <ph id="ph2">`WebBrowser1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.All">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElementCollection" /&gt;</ph> of all elements underneath the current element.</source>
          <target state="translated">현재 요소의 아래에 있는 모든 요소의 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElementCollection" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.All">
          <source>A collection of all elements that are direct or indirect children of the current element.</source>
          <target state="translated">현재 요소의 직계 또는 비직계 자식인 모든 요소의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.All">
          <source>If the current element is a <bpt id="p1">&lt;c&gt;</bpt>TABLE<ept id="p1">&lt;/c&gt;</ept>, for example, <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.All" /&gt;</ph> will return every <bpt id="p2">&lt;c&gt;</bpt>TH<ept id="p2">&lt;/c&gt;</ept>, <bpt id="p3">&lt;c&gt;</bpt>TR<ept id="p3">&lt;/c&gt;</ept>, and <bpt id="p4">&lt;c&gt;</bpt>TD<ept id="p4">&lt;/c&gt;</ept> element within the table, as well as any other elements, such as <bpt id="p5">&lt;c&gt;</bpt>DIV<ept id="p5">&lt;/c&gt;</ept> and <bpt id="p6">&lt;c&gt;</bpt>SPAN<ept id="p6">&lt;/c&gt;</ept> elements, contained within the cells.</source>
          <target state="translated">현재 요소가 <bpt id="p1">&lt;c&gt;</bpt>테이블<ept id="p1">&lt;/c&gt;</ept>, 예를 들어 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.All" /&gt;</ph> 돌아갑니다 모든 <bpt id="p2">&lt;c&gt;</bpt>번째<ept id="p2">&lt;/c&gt;</ept>, <bpt id="p3">&lt;c&gt;</bpt>TR<ept id="p3">&lt;/c&gt;</ept>, 및 <bpt id="p4">&lt;c&gt;</bpt>TD<ept id="p4">&lt;/c&gt;</ept> 아니라 테이블, 와 같은 다른 요소 외에 <bpt id="p5">&lt;c&gt;</bpt>DIV<ept id="p5">&lt;/c&gt;</ept> 및 <bpt id="p6">&lt;c&gt;</bpt>범위<ept id="p6">&lt;/c&gt;</ept> 셀 내에 포함 된 요소입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.All">
          <source>To access only those elements which have the current element as their direct parent, use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> collection instead.</source>
          <target state="translated">직계 부모 요소가 현재 요소에만 액세스는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> 컬렉션 대신 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.All">
          <source>Elements in this collection will not necessarily be returned in source order.</source>
          <target state="translated">이 컬렉션의 요소 소스 순서 대로 반드시 반환 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> to append to this location in the tree.</source>
          <target state="translated">트리의 이 위치 뒤에 추가할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>Adds an element to another element's subtree.</source>
          <target state="translated">요소를 다른 요소의 하위 트리에 추가합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>The element after it has been added to the tree.</source>
          <target state="translated">트리에 추가된 후의 요소입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>The HTML Document Object Model (DOM) enables you to alter the run-time contents of an HTML file in a number of ways.</source>
          <target state="translated">HTML 문서 개체 모델 (DOM)을 사용 하면 다양 한 방법으로 HTML 파일의 실행 시간 내용을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> to add new elements to an existing document, or to move an element on the page.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> 기존 문서에 새 요소를 추가 하거나 페이지에서 요소를 이동할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>If an element has already been parented, appending an element to another element will automatically remove that element from its previous parent.</source>
          <target state="translated">요소가 이미 부모가 있으면, 요소가 다른 요소에 추가 됩니다 자동으로 제거 해당 요소 이전 부모에서.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>Any additions made to a document at run-time using <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> will not be persisted when you call the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A&gt;</ph> method on the <ph id="ph3">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.</source>
          <target state="translated">런타임에 사용 하 여 문서에 대 한 추가 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> 를 호출할 때 유지 되지 것입니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A&gt;</ph> 에서 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>The following code example creates a new hyperlink using the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph> method and adds it to end of a page using <ph id="ph2">`AppendChild`</ph> on the <ph id="ph3">`BODY`</ph> element.</source>
          <target state="translated">다음 코드 예제를 사용 하 여 새 하이퍼링크 만듭니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph> 메서드 끝에 추가 하 고 사용 하 여 페이지의 <ph id="ph2">`AppendChild`</ph> 에 <ph id="ph3">`BODY`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>The example requires that your application contains a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>.</source>
          <target state="translated">이 예제에서는 응용 프로그램에 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> 라는 컨트롤 <ph id="ph2">`WebBrowser1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>The name of the event you want to handle.</source>
          <target state="translated">처리할 이벤트의 이름입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>The managed code that handles the event.</source>
          <target state="translated">이벤트를 처리하는 관리 코드입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>Adds an event handler for a named event on the HTML Document Object Model (DOM).</source>
          <target state="translated">HTML DOM(문서 개체 모델)의 명명된 이벤트에 대한 이벤트 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>The Managed Document Object Model (DOM) exposes only a select number of events.</source>
          <target state="translated">관리 되는 문서 개체 모델 (DOM) 선택 된 수의 이벤트를 노출합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>Most of the unexposed events are only defined for specific types of elements; such as the <ph id="ph1">`submit`</ph> event, which is valid only on <ph id="ph2">`FORM`</ph> elements.</source>
          <target state="translated">대부분의 이벤트를 노출 되지 않은 특정 형식의 요소에 대해서만 정의 됩니다. 와 같은 <ph id="ph1">`submit`</ph> 이벤트에 대해서만 사용할 수 있는 <ph id="ph2">`FORM`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A&gt;</ph> to add an event handler to these unexposed events.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A&gt;</ph> 에 노출 되지 않는 이러한 이벤트에 이벤트 처리기를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>You should not attach an event to the document or one of its objects until the document has completed loading.</source>
          <target state="translated">문서 로드가 완료 될 때까지 문서 또는 해당 개체 중 하나에 이벤트를 연결 해야 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>The earliest you should call this method is in the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.</source>
          <target state="translated">이 메서드를 호출 해야 가장 빠른는 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;</ph> 의 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>For more information about the available unmanaged events, see <bpt id="p1">[</bpt>Accessing Unexposed Members on the Managed HTML Document Object Model<ept id="p1">](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)</ept> and the IHTMLElement interfaces: <bpt id="p2">[</bpt>IHTMLElement<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=104876)</ept>, <bpt id="p3">[</bpt>IHTMLElement2<ept id="p3">](http://go.microsoft.com/fwlink/?LinkId=104877)</ept>, <bpt id="p4">[</bpt>IHTMLElement3<ept id="p4">](http://go.microsoft.com/fwlink/?LinkId=104878)</ept>, <bpt id="p5">[</bpt>IHTMLElement4<ept id="p5">](http://go.microsoft.com/fwlink/?LinkId=104879)</ept>.</source>
          <target state="translated">사용 가능한 관리 되지 않는 이벤트에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되는 HTML 문서 개체 모델에서 노출 되지 않은 멤버에 액세스<ept id="p1">](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)</ept> 및 주어진 인터페이스: <bpt id="p2">[</bpt>주어진<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=104876)</ept>, <bpt id="p3">[</bpt>IHTMLElement2<ept id="p3">](http://go.microsoft.com/fwlink/?LinkId=104877)</ept>, <bpt id="p4">[</bpt>IHTMLElement3<ept id="p4">](http://go.microsoft.com/fwlink/?LinkId=104878)</ept>, <bpt id="p5">[</bpt>IHTMLElement4<ept id="p5">](http://go.microsoft.com/fwlink/?LinkId=104879)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>Gets a value indicating whether this element can have child elements.</source>
          <target state="translated">이 요소가 자식 요소를 가질 수 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if element can have child elements; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">요소가 자식 요소를 가질 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>Some elements, such as <ph id="ph1">`IMG`</ph> and <ph id="ph2">`SCRIPT`</ph>, cannot have any children.</source>
          <target state="translated">일부 요소와 같은 <ph id="ph1">`IMG`</ph> 및 <ph id="ph2">`SCRIPT`</ph>, 감추어진 자식을 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>Use this property before you call <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph> on an arbitrary element.</source>
          <target state="translated">호출 하기 전에이 속성을 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph> 임의 요소에 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>The following code example handles the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event on <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 핸들의 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> 에 이벤트 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>If an element was not previous selected using a mouse click, the code assigns the element to a private class variable named <ph id="ph1">`MoveElement`</ph>.</source>
          <target state="translated">코드 요소 라는 전용 클래스 변수에 할당 요소에 이전 마우스 클릭을 사용 하 여 선택 하지 않은 경우 <ph id="ph1">`MoveElement`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>If an element was selected, the code attempts to append it to the element that was just clicked.</source>
          <target state="translated">요소를 선택한 경우 코드는 방금 클릭 하는 요소에 추가 하려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>This code example requires that your application hosts a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>, and that you have already added an event handler for the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event on <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
          <target state="translated">이 코드 예제에서는 응용 프로그램 호스트는 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> 라는 컨트롤 <ph id="ph2">`WebBrowser1`</ph>, 이미 있는 및 추가 대 한 이벤트 처리기는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> 이벤트에 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElementCollection" /&gt;</ph> of all children of the current element.</source>
          <target state="translated">현재 요소에 대한 모든 자식의 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElementCollection" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>A collection of all <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> objects that have the current element as a parent.</source>
          <target state="translated">현재 요소가 부모인 모든 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>Many of the elements inside of an HTML file can have other HTML elements underneath them.</source>
          <target state="translated">다양 한 HTML 파일 요소 별로 다른 HTML 요소를 가질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> collection provides a simple mechanism for exploring the tree structure of a document.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> 컬렉션의 문서 트리 구조를 탐색 하기 위한 간단한 메커니즘을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> only exposes elements whose direct parent is the current element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> 현재 요소의 직계 부모가 요소를 노출 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>If you have an <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> for a <ph id="ph2">`TABLE`</ph> element, <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> will give you all of the <ph id="ph4">`TR`</ph> (row) elements inside of the <ph id="ph5">`TABLE`</ph>.</source>
          <target state="translated">있는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 에 대 한는 <ph id="ph2">`TABLE`</ph> 요소인 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> 하면 모든는 <ph id="ph4">`TR`</ph> (행) 요소 내에 <ph id="ph5">`TABLE`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>To retrieve the <ph id="ph1">`TD`</ph> (cell) elements contained inside of the <ph id="ph2">`TR`</ph> elements, you will need to use either the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> collection on each individual <ph id="ph4">`TR`</ph> element, or use the <ph id="ph5">&lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt;</ph> collection on <ph id="ph6">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>.</source>
          <target state="translated">검색 하는 <ph id="ph1">`TD`</ph> 내에 포함 된 (셀) 요소는 <ph id="ph2">`TR`</ph> 요소를 사용 하 여 해야 합니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> 각 개별 컬렉션 <ph id="ph4">`TR`</ph> 요소 또는 사용 하 여는 <ph id="ph5">&lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt;</ph> 컬렉션에 <ph id="ph6">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>Elements in this collection are not guaranteed to be in source order.</source>
          <target state="translated">이 컬렉션의 요소는 원본 순서에 포함 되도록 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph> is <ph id="ph2">`false`</ph>, <ph id="ph3">`Children`</ph> will always be empty.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>, <ph id="ph3">`Children`</ph> 항상 비어 있게 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>The following code example examines an arbitrary HTML document and derive a string describing the elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document.</source>
          <target state="translated">다음 코드 예제에서는 임의의 HTML 문서를 검사 하 고 오목한 부분이 있는 요소를 설명 하는 문자열을 파생 수준 중첩 및 번호 수준을 나타내는 데 사용 되는 요소는 문서에 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>It does this by searching the <ph id="ph1">`Children`</ph> collection of all elements recursively, starting with the HTML element at the top of the document.</source>
          <target state="translated">검색 하 여 수행 된 <ph id="ph1">`Children`</ph> 문서 맨 위에 있는 HTML 요소부터 재귀적으로 모든 요소의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>This code example requires that your application has a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>.</source>
          <target state="translated">이 코드 예제에서는 응용 프로그램에 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> 라는 컨트롤 <ph id="ph2">`WebBrowser1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>Occurs when the user clicks on the element with the left mouse button.</source>
          <target state="translated">마우스 왼쪽 단추로 요소를 클릭할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">에 대 한 기본 동작을 취소할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> 설정 하 여 요소에는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 요소와에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>If the user clicks on an element that does not currently have input focus, the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event will occur after the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> event, but before the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> event for that element.</source>
          <target state="translated">사용자가 하지 현재 입력 포커스가 없는 하는 요소를 클릭할 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> 이벤트 후에 수행 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> 이벤트를 하기 전에 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> 해당 요소에 대 한 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source>Gets the bounds of the client area of the element in the HTML document.</source>
          <target state="translated">HTML 문서에 있는 요소의 클라이언트 영역 경계를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source>The client area occupied by the element, minus any area taken by borders and scroll bars.</source>
          <target state="translated">요소가 차지하는 클라이언트 영역 중 경계와 스크롤 막대가 차지하는 영역을 제외한 영역입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source>To obtain the position and dimensions of the element inclusive of its adornments, use <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph> instead.</source>
          <target state="translated">장식을 포함한 요소의 위치와 크기를 가져오려면 대신 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph>을 사용합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ClientRectangle%2A&gt;</ph> will return position data only for elements that have been assigned an explicit height and width, or elements that use absolute positioning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ClientRectangle%2A&gt;</ph> 명시적 높이 너비를 지정 된 요소 또는 절대 위치를 사용 하는 요소에 대해서만 위치 데이터를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source>A document is absolutely positioned if its position style is set to <ph id="ph1">`absolute`</ph>, after which it can be positioned at any coordinate on the HTML page.</source>
          <target state="translated">위치 스타일으로 설정 된 경우 문서는 절대 위치로 지정 <ph id="ph1">`absolute`</ph>, 이후에 배치할 수 있습니다는 HTML 페이지에 어느 좌표입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source>Assume you have loaded the following HTML page into a hosted instance of the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.</source>
          <target state="translated">다음 HTML 페이지의 호스트 인스턴스로 로드 했다고 가정은 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source>The following code example demonstrates retrieving this element and expanding its dimensions if the client area is less than 400 pixels wide by 50 pixels high, and also sets the <ph id="ph1">`DIV`</ph> to the <ph id="ph2">`contentEditable`</ph> state so that the user can input text.</source>
          <target state="translated">다음 코드 예제에서는이 요소를 검색 클라이언트 영역 보다 작은 400 x 50 픽셀인 이며도 설정 하는 경우 크기를 확장 하는 <ph id="ph1">`DIV`</ph> 에 <ph id="ph2">`contentEditable`</ph> 사용자 텍스트를 입력할 수 있도록 상태입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)">
          <source>The name of the event you want to handle.</source>
          <target state="translated">처리할 이벤트의 이름입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)">
          <source>The managed code that handles the event.</source>
          <target state="translated">이벤트를 처리하는 관리 코드입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)">
          <source>Removes an event handler from a named event on the HTML Document Object Model (DOM).</source>
          <target state="translated">HTML DOM(문서 개체 모델)의 명명된 이벤트에서 이벤트 처리기를 제거합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Document">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlDocument" /&gt;</ph> to which this element belongs.</source>
          <target state="translated">이 요소가 속한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlDocument" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Document">
          <source>The parent document of this element.</source>
          <target state="translated">이 요소의 부모 문서입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Document">
          <source>Some HTML pages can host frames using the <ph id="ph1">`FRAMESET`</ph> tags.</source>
          <target state="translated">일부 HTML 페이지를 사용 하 여 프레임을 호스트할 수는 <ph id="ph1">`FRAMESET`</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Document">
          <source>In this case, each individual <ph id="ph1">`FRAME`</ph> element will contain its own instance of <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
          <target state="translated">이 경우, 각 개별 <ph id="ph1">`FRAME`</ph> 요소 자체의 인스턴스를 포함 합니다 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Document">
          <source>This property is most useful when you have received a reference to an element in an event handler from the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>, and need to perform some action on the document in which the element resides.</source>
          <target state="translated">이 속성은 요소에 대 한 참조에서 이벤트 처리기에서 받은 경우 가장 유용는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>, 요소가 있는 문서에 작업을 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>Gets an unmanaged interface pointer for this element.</source>
          <target state="translated">이 요소에 대한 비관리 인터페이스 포인터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>The COM <bpt id="p1">&lt;c&gt;</bpt>IUnknown<ept id="p1">&lt;/c&gt;</ept> pointer for the element, which you can cast to one of the HTML element interfaces, such as <bpt id="p2">&lt;c&gt;</bpt>IHTMLElement<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">COM <bpt id="p1">&lt;c&gt;</bpt>IUnknown<ept id="p1">&lt;/c&gt;</ept> HTML 요소 중 하나로 캐스팅할 수 있는 요소에 대 한 포인터와 같은 인터페이스 <bpt id="p2">&lt;c&gt;</bpt>주어진<ept id="p2">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> is a wrapper for the Internet Explorer Document Object Model (DOM), which is written using the Component Object Model (COM).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 래퍼에 대 한는 Internet Explorer DOM 문서 개체 모델 (), 구성 요소 개체 모델 (COM)를 사용 하 여 작성 됩니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>If you need to access unexposed properties or methods on the underlying COM interfaces, such as <ph id="ph1">`IHTMLElement`</ph>, you can use this object to query for them.</source>
          <target state="translated">와 같은 내부 COM 인터페이스에서 노출 되지 않은 속성이 나 메서드에 액세스 해야 할 경우 <ph id="ph1">`IHTMLElement`</ph>를 쿼리 하기 위해이 개체에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>In order to use the unmanaged interfaces, you will need to import the MSHTML library (mshtml.dll) into your application.</source>
          <target state="translated">관리 되지 않는 인터페이스를 사용 하려면 응용 프로그램에 MSHTML 라이브러리 (mshtml.dll)를 가져올 해야 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>However, you can also execute unexposed properties and methods using the <ph id="ph1">`Invoke`</ph> method.</source>
          <target state="translated">그러나 실행할 수도 있습니다 노출 되지 않은 속성 및 메서드를 사용 하 여 <ph id="ph1">`Invoke`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>The following code example uses unmanaged interfaces to take the currently selected text and convert it into a hyperlink, with the URL chosen by the user.</source>
          <target state="translated">다음 코드 예제에서는 관리 되지 않는 인터페이스를 사용 하 여 현재 선택한 텍스트를 사용자가 선택한 URL로 하이퍼링크를로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>This code was written under the assumption that your form has a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>, and that you have added the unmanaged MSHTML library as a reference to your project.</source>
          <target state="translated">폼에 있다는 가정 아래에서이 코드를 작성 한 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> 라는 컨트롤 <ph id="ph2">`WebBrowser1`</ph>, 프로젝트에 대 한 참조로 관리 되지 않는 MSHTML 라이브러리를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>Occurs when the user clicks the left mouse button over an element twice, in rapid succession.</source>
          <target state="translated">요소를 마우스 왼쪽 단추로 연속하여 두 번 빠르게 클릭할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>A double-click is determined by the mouse settings of the user's operating system.</source>
          <target state="translated">두 번 클릭은 운영 체제의 마우스 설정에 따라 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</source>
          <target state="translated">천천히 두 번 클릭하는 것이 아닌 두 번 클릭(double-click)으로 간주될 수 있도록 마우스 단추 클릭 간격을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">에 대 한 기본 동작을 취소할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> 설정 하 여 요소에는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 요소와에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>Occurs when the user drags text to various locations.</source>
          <target state="translated">사용자가 텍스트를 여러 위치로 끌 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>This event occurs when text is dragged to the following locations:</source>
          <target state="translated">이 이벤트는 다음 위치에 텍스트를 끌 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>Within or between HTML pages hosted in the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control or Internet Explorer</source>
          <target state="translated">내 또는 저장소에서 호스팅되는 HTML 페이지 간에 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> 컨트롤 또는 Internet Explorer</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>To another application</source>
          <target state="translated">다른 응용 프로그램</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>To the Windows desktop</source>
          <target state="translated">Windows 바탕 화면에</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">에 대 한 기본 동작을 취소할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> 설정 하 여 요소에는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 요소와에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>Occurs when a user finishes a drag operation.</source>
          <target state="translated">사용자가 끌기 작업을 완료할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">에 대 한 기본 동작을 취소할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> 설정 하 여 요소에는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 요소와에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>Occurs when the user is no longer dragging an item over this element.</source>
          <target state="translated">사용자가 이 요소 위로 항목을 더 이상 끌지 않을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragLeave&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragLeave&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragLeave&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragLeave&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>Occurs when the user drags text over the element.</source>
          <target state="translated">사용자가 텍스트를 요소 위로 끌 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">에 대 한 기본 동작을 취소할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> 설정 하 여 요소에는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 요소와에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Enabled">
          <source>Gets or sets whether the user can input data into this element.</source>
          <target state="translated">사용자가 이 요소에 데이터를 입력할 수 있는지를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element allows user input; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자가 요소에 입력할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Enabled">
          <source>For <ph id="ph1">`FORM`</ph> elements such as text boxes and radio buttons, setting <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Enabled%2A&gt;</ph> to <ph id="ph3">`false`</ph> will prevent the user from using these form fields.</source>
          <target state="translated">에 대 한 <ph id="ph1">`FORM`</ph> 텍스트 상자 및 라디오 단추, 설정 등의 요소 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Enabled%2A&gt;</ph> 를 <ph id="ph3">`false`</ph> 이러한 양식 필드를 사용 하 여 사용자를 방지 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Enabled">
          <source>For other elements, such as <ph id="ph1">`DIV`</ph> or <ph id="ph2">`SPAN`</ph>, setting <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Enabled%2A&gt;</ph> to <ph id="ph4">`false`</ph> will cause all text within the element to appear shaded; however, the text will still be selectable.</source>
          <target state="translated">다른 요소에 대해와 같은 <ph id="ph1">`DIV`</ph> 또는 <ph id="ph2">`SPAN`</ph>설정 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Enabled%2A&gt;</ph> 를 <ph id="ph4">`false`</ph> 회색으로 표시 요소에서 모든 텍스트를 발생 합니다; 그러나 텍스트를 여전히 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Enabled">
          <source>To cancel selection, add an event handler for the unexposed <ph id="ph1">`onselectstart`</ph> event using the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A&gt;</ph> method.</source>
          <target state="translated">선택 영역을 취소 하려면 노출 되지 않은 항목에 대 한 이벤트 처리기를 추가 <ph id="ph1">`onselectstart`</ph> 사용 하 여 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.Equals(System.Object)">
          <source>The object to test for equality.</source>
          <target state="translated">같은지를 테스트할 개체입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.Equals(System.Object)">
          <source>Tests if the supplied object is equal to the current element.</source>
          <target state="translated">제공된 개체가 현재 요소와 같은지 테스트합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is an <ph id="ph3">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="obj" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.FirstChild">
          <source>Gets the next element below this element in the document tree.</source>
          <target state="translated">문서 트리에서 이 요소의 아래에 있는 다음 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.FirstChild">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> representing the first element contained underneath the current element, in source order.</source>
          <target state="translated">원본 순서에서 현재 요소의 아래에 포함된 첫 번째 요소를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.FirstChild">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.FirstChild%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.NextSibling%2A&gt;</ph> to walk the document tree for an HTML document.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.FirstChild%2A&gt;</ph> 함께에서 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.NextSibling%2A&gt;</ph> HTML 문서에 대 한 문서 트리를 탐색 하 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.Focus">
          <source>Puts user input focus on the current element.</source>
          <target state="translated">현재 요소에 사용자 입력 포커스를 놓습니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.Focus">
          <source>Setting the focus on an element both gives that element focus and makes it the active element; for example, the element that has focus will be returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
          <target state="translated">요소에 포커스를 설정 합니다. 해당 요소가 포커스를 제공 하면는 활성 요소가 됩니다. 포커스가 있는 요소에서 반환할 예를 들어는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A&gt;</ph> 속성 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.Focus">
          <source>Any key strokes entered by a user after <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> has been called will be sent to that element.</source>
          <target state="translated">모든 키 입력 한 후 사용자가 입력 한 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> 가 호출 된 해당 요소에 보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>Occurs when the element first receives user input focus.</source>
          <target state="translated">요소에서 사용자 입력 포커스를 처음 받을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>An element that had focus before the user switched to another application using the taskbar or the ALT+TAB keys will receive the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph> events again when the user switches back to your application.</source>
          <target state="translated">작업 표시줄 또는 ALT + TAB 키를 사용 하 여 다른 응용 프로그램으로 전환 하는 사용자에 게 전에 포커스가 있던 하는 요소는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph> 이벤트 다시 전환한 경우에 사용자 응용 프로그램으로 다시 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>You cannot cancel the default behavior of this event.</source>
          <target state="translated">이 이벤트의 기본 동작을 취소할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>To remove focus from an element, call <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> on a different element from within the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph> event.</source>
          <target state="translated">요소에서 포커스를 제거 하려면 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> 내에서 다른 요소에는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> event on an element will also occur on that element's parents and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 및에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>The name of the attribute.</source>
          <target state="translated">특성 이름입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>This argument is case-insensitive.</source>
          <target state="translated">이 인수는 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>Retrieves the value of the named attribute on the element.</source>
          <target state="translated">요소에서 명명된 특성의 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>The value of this attribute on the element, as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 값으로서 요소에 대한 이 특성의 값입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>If the specified attribute does not exist on this element, returns an empty string.</source>
          <target state="translated">지정된 특성이 이 요소에 없으면 빈 문자열이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>An attribute in HTML is any valid name/value pair for that element.</source>
          <target state="translated">Html에서 특성에 해당 요소에 대 한 모든 유효한 이름/값 쌍입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; <ph id="ph2">`SRC`</ph> is a predefined attribute for the <ph id="ph3">`IMG`</ph> tag, for example, but not for the <ph id="ph4">`DIV`</ph> tag.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 특정 유형의 요소에만 적용 되는 모든 요소에 공통 되는 특성에만 노출 <ph id="ph2">`SRC`</ph> 에 대 한 미리 정의 된 특성이 <ph id="ph3">`IMG`</ph> 예를 들어 태그에 대 한는 <ph id="ph4">`DIV`</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> to manipulate attributes not exposed on the managed Document Object Model (DOM).</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> 에 관리 되는 DOM 문서 개체 모델 ()를 노출 되지 않은 특성을 조작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> are case-insensitive.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>The following code example retrieves all of the <ph id="ph1">`META`</ph> tags within an HTML document, using <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> to find the <ph id="ph3">`META`</ph> tag with the name <ph id="ph4">`Description`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 모든 검색는 <ph id="ph1">`META`</ph> 태그는 HTML 내에서 문서를 사용 하 여 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> 찾을 수는 <ph id="ph3">`META`</ph> 태그 이름의 <ph id="ph4">`Description`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>The example requires that your application has a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>.</source>
          <target state="translated">이 예제에서는 응용 프로그램에 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> 라는 컨트롤 <ph id="ph2">`WebBrowser1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)">
          <source>The name of the tag whose <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> objects you wish to retrieve.</source>
          <target state="translated">검색할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> 개체의 태그 이름입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)">
          <source>Retrieves a collection of elements represented in HTML by the specified <bpt id="p1">&lt;c&gt;</bpt>HTML<ept id="p1">&lt;/c&gt;</ept> tag.</source>
          <target state="translated">HTML에서 지정된 <bpt id="p1">&lt;c&gt;</bpt>HTML<ept id="p1">&lt;/c&gt;</ept> 태그로 표시되는 요소의 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElementCollection" /&gt;</ph> containing all elements whose <bpt id="p1">&lt;c&gt;</bpt>HTML<ept id="p1">&lt;/c&gt;</ept> tag name is equal to <ph id="ph2">&lt;paramref name="tagName" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>HTML<ept id="p1">&lt;/c&gt;</ept> 태그 이름이 <ph id="ph2">&lt;paramref name="tagName" /&gt;</ph>과 동일한 모든 요소가 포함된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElementCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetHashCode">
          <source>Serves as a hash function for a particular type.</source>
          <target state="translated">특정 형식에 대한 해시 함수 역할을 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>의 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>Occurs when the element has received user input focus.</source>
          <target state="translated">요소에서 사용자 입력 포커스를 받았을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>You can neither cancel this event's default behavior, nor prevent it from bubbling.</source>
          <target state="translated">이 이벤트의 기본 동작을 취소 하거나 버블링에서 방지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>To remove focus from an element, call <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> on a different element from within the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph> event.</source>
          <target state="translated">요소에서 포커스를 제거 하려면 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> 내에서 다른 요소에는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>Save the following HTML code into a file, and load the file into a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control in a Windows Forms project.</source>
          <target state="translated">파일에 다음 HTML 코드를 저장 하 고 해당 파일을 로드 한 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> Windows Forms 프로젝트에서 제어 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>The following code example prevents the next <ph id="ph1">`INPUT`</ph> element in the tab order from receiving user input focus if the previous element contains less than five characters.</source>
          <target state="translated">다음 코드 예제에서는 다음 방지 <ph id="ph1">`INPUT`</ph> 이전 요소 보다 작거나 5 개 문자를 포함 하는 경우 사용자 입력된 포커스를 받지 못하도록 탭 순서에 대 한 요소입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>The example requires that the previously mentioned HTML file is loaded into an instance of the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>.</source>
          <target state="translated">이 예제에서는 앞에서 언급 한 HTML 파일이의 인스턴스로 로드 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> 라는 컨트롤 <ph id="ph2">`WebBrowser1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Id">
          <source>Gets or sets a label by which to identify the element.</source>
          <target state="translated">요소를 식별하는 기준이 되는 레이블을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Id">
          <source>The unique identifier for the element.</source>
          <target state="translated">요소에 대한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Id">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Id%2A&gt;</ph> must be unique; you cannot have two elements with the same <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Id%2A&gt;</ph> inside of the same document.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Id%2A&gt;</ph> 달라 야 합니다. 동일한 두 개의 요소를 사용할 수 없습니다 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Id%2A&gt;</ph> 같은 문서 내에서.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Id">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph> property to give the same identifier to a group of logically related elements.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph> 속성을 논리적으로 관련 된 요소 그룹에 동일한 식별자를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Gets or sets the HTML markup underneath this element.</source>
          <target state="translated">이 요소 아래에 있는 HTML 태그를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>The HTML markup that defines the child elements of the current element.</source>
          <target state="translated">현재 요소의 자식 요소를 정의하는 HTML 태그입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>There are several ways to add new elements to an existing HTML page, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph> methods.</source>
          <target state="translated">와 같은 기존 HTML 페이지에 새 요소를 추가 하는 방법은 여러 가지가 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> is often the fastest way to add new content when you have to set many attributes or styles on your new elements.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 새 요소에 많은 특성 또는 스타일을 설정 하는 경우 새 콘텐츠를 추가 하는 가장 빠른 방법은 방식은 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> differs from <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> in that <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will not include the HTML that represents the object you are calling.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 와 다른 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> 한다는 점에서 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 호출 하는 개체를 나타내는 HTML에 포함 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> for more information about the difference between these two properties.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> 이러한 두 속성의 차이 대 한 자세한 내용은 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> destroys any children previously appended to the element.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 요소에 이전에 추가 된 모든 자식을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>If you retrieve an element from the DOM and then assign new HTML to its parents' <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property, your reference to that element will be useless, and its behavior when it calls its properties and methods is undefined.</source>
          <target state="translated">DOM에서 요소를 검색 하 고 다음이 요소를 부모 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 에서 참조를 해당 요소는 쓸모 없게 됩니다 속성과 해당 속성 및 메서드를 호출할 때 해당 동작은 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>For some elements, setting <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> is not a valid operation.</source>
          <target state="translated">일부 요소 설정에 대 한 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 은 올바른 작업이 아닙니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Some HTML tags have no closing tag, such as the <ph id="ph1">`IMG`</ph> tag, and therefore cannot contain nested elements.</source>
          <target state="translated">일부 HTML 태그 등 닫는 태그가 포함 되어는 <ph id="ph1">`IMG`</ph> 태그와 때문에 중첩 된 요소가 포함 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Some tags, such as the <ph id="ph1">`SCRIPT`</ph> tag, can only contain text content; setting <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will result in an error.</source>
          <target state="translated">와 같은 일부 태그는 <ph id="ph1">`SCRIPT`</ph> 태그, 텍스트 콘텐츠 설정;만 포함할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 에서 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>For both types of tags, the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph> property will return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">두 가지 유형의 태그는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph> 속성은 반환 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>However, you also cannot set <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> on <ph id="ph2">`TABLE`</ph> and <ph id="ph3">`TR`</ph> elements, as assigning malformed HTML to these elements could corrupt the rendering of the document.</source>
          <target state="translated">그러나도 설정할 수 없습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 에 <ph id="ph2">`TABLE`</ph> 및 <ph id="ph3">`TR`</ph> 이러한 요소에 잘못 된 HTML 할당 요소는 문서의 렌더링 손상 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> or the <ph id="ph2">`insertRow`</ph> and <ph id="ph3">`insertCell`</ph> methods on the unmanaged <ph id="ph4">`IHTMLTable`</ph> interface to add rows and cells to a <ph id="ph5">`TABLE`</ph>.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> 또는 <ph id="ph2">`insertRow`</ph> 및 <ph id="ph3">`insertCell`</ph> 에서 관리 되지 않는 메서드 <ph id="ph4">`IHTMLTable`</ph> 추가할 인터페이스 행과 셀을 <ph id="ph5">`TABLE`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>If you need only to assign text to an element and not HTML markup, use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> property instead.</source>
          <target state="translated">텍스트를 요소와 HTML 태그 되지 할당에 필요한 경우 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> 속성 대신 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Assigning a value to <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will destroy any text values previously assigned using <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>.</source>
          <target state="translated">값을 할당 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 이전에 사용 하 여 할당 된 모든 텍스트 값을 삭제 합니다 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Creating child elements on this element is not allowed.</source>
          <target state="translated">이 요소에 대해 자식 요소를 만드는 작업은 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>Gets or sets the text assigned to the element.</source>
          <target state="translated">요소에 할당된 텍스트를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>The element's text, absent any HTML markup.</source>
          <target state="translated">HTML 태그를 제외한 요소의 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>If the element contains child elements, only the text in those child elements will be preserved.</source>
          <target state="translated">요소에 자식 요소가 있으면 자식 요소에 있는 텍스트만 보존됩니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>If you attempt to assign HTML to an element with <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file.</source>
          <target state="translated">HTML 요소에 할당 하려고 하면 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>, 한 경우 처럼 텍스트 파일 내에서 HTML을 보는 HTML 코드는 문서에 리터럴로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>If you assign HTML to an element using the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property, <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> will return all of the text in that HTML with the markup removed.</source>
          <target state="translated">HTML을 할당 하면 사용 하 여 요소는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 속성 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> HTML 태그를 제거 하는 텍스트를 모두 반환 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>Assigning a value to <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> will destroy any child elements that belong to the element.</source>
          <target state="translated">값을 할당 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> 요소에 속하는 모든 자식 요소를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>The following code creates a new hyperlink using <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph>, and assigns text to the link using the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드에서는 사용 하 여 새 하이퍼링크 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph>, 텍스트를 사용 하 여 링크 할당은 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>The specified element cannot contain text (for example, an <bpt id="p1">&lt;c&gt;</bpt>IMG<ept id="p1">&lt;/c&gt;</ept> element).</source>
          <target state="translated">지정된 요소에는 텍스트가 포함될 수 없습니다(예: <bpt id="p1">&lt;c&gt;</bpt>IMG<ept id="p1">&lt;/c&gt;</ept> 요소).</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>Where to insert this element in relation to the current element.</source>
          <target state="translated">현재 요소를 기준으로 이 요소를 삽입할 위치입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>The new element to insert.</source>
          <target state="translated">삽입할 새 요소입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>Insert a new element into the Document Object Model (DOM).</source>
          <target state="translated">새 요소를 DOM(문서 개체 모델)에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> that was just inserted.</source>
          <target state="translated">방금 삽입한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>If insertion failed, this will return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">삽입이 실패한 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>Do not call this method until after the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;</ph> event on the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control has occurred.</source>
          <target state="translated">후 때까지이 메서드를 호출 하지 마십시오는 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;</ph> 이벤트에는 <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> 컨트롤에서 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>Calling this method before then can result in an exception, as the document will not have finished loading.</source>
          <target state="translated">그 전에이 메서드를 호출 처럼 문서 로드가 완료 되지 것입니다 예외가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>Whether a value of <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation&gt;</ph> is valid will depend on the type of the element.</source>
          <target state="translated">값이 있는지 여부를 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation&gt;</ph> 유효한 요소 형식에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>For example, <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin&gt;</ph> is valid if the element is a <ph id="ph2">`DIV`</ph>, but not if it is a <ph id="ph3">`SCRIPT`</ph> or <ph id="ph4">`IMG`</ph> element, neither of which can contain child elements.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin&gt;</ph> 요소가 유효는 <ph id="ph2">`DIV`</ph>, 하지만 하지는 <ph id="ph3">`SCRIPT`</ph> 또는 <ph id="ph4">`IMG`</ph> 요소, 자식 요소를 포함할 수 있으며 둘 다 있습니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>The following code example inserts a <ph id="ph1">`DIV`</ph> element into the top of every page that users view outside of the ADatum.com server.</source>
          <target state="translated">다음 코드 예제에서는 삽입 된 <ph id="ph1">`DIV`</ph> ADatum.com 서버 외부에서 볼 수 있는 모든 페이지의 맨 위에 있는 요소입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>The example requires that your form contains a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>.</source>
          <target state="translated">이 예제에서는 폼에는 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> 라는 컨트롤 <ph id="ph2">`WebBrowser1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>Your sample must also import the namespace <ph id="ph1">&lt;xref:System.Text.RegularExpressions&gt;</ph>.</source>
          <target state="translated">샘플 네임 스페이스를 가져와야도 <ph id="ph1">&lt;xref:System.Text.RegularExpressions&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.HtmlElement">
          <source>Executes a method unique to the current element.</source>
          <target state="translated">현재 요소에 고유한 메서드를 실행합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>The name of the property or method to invoke.</source>
          <target state="translated">호출할 속성이나 메서드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>Executes an unexposed method on the underlying DOM element of this element.</source>
          <target state="translated">이 요소의 내부 DOM 요소에 대해 노출되지 않은 메서드를 실행합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>The element returned by this method, represented as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">이 메서드에서 반환된 요소이며 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>로 표시됩니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>가 다른 HTML 요소이고 관리되지 않는 MSHTML 라이브러리의 참조를 프로젝트에 추가한 경우 이 요소를 관리되지 않는 해당 인터페이스로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code.</source>
          <target state="translated">DOM 문서 개체 모델 ()가 없는 해당 하는 관리 코드에서 메서드를 호출 하이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>Use this version of <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph> to execute unexposed methods that take no arguments.</source>
          <target state="translated">이 버전의를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph> 인수를 사용 하는 노출 되지 않은 메서드를 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>The name of the property or method to invoke.</source>
          <target state="translated">호출할 속성이나 메서드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>A list of parameters to pass.</source>
          <target state="translated">전달할 매개 변수 목록입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>Executes a function defined in the current HTML page by a scripting language.</source>
          <target state="translated">스크립트 언어로 현재 HTML 페이지에 정의된 함수를 실행합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>The element returned by the function, represented as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">함수에서 반환한 요소이며, <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>로 표시됩니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>가 다른 HTML 요소이고 관리되지 않는 MSHTML 라이브러리의 참조를 프로젝트에 추가한 경우 이 요소를 관리되지 않는 해당 인터페이스로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code.</source>
          <target state="translated">DOM 문서 개체 모델 ()가 없는 해당 하는 관리 코드에서 메서드를 호출 하이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>All arguments supplied to <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph> will be converted to Win32 <ph id="ph2">`VARIANT`</ph> data types before they are passed to the named scripting function.</source>
          <target state="translated">모든 인수에 제공 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph> Win32로 변환 됩니다 <ph id="ph2">`VARIANT`</ph> 명명 된 스크립팅 함수에 전달 하기 전에 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>The following code example gets a <ph id="ph1">`TABLE`</ph> called <ph id="ph2">`dataTable`</ph> and uses the unexposed <ph id="ph3">`moveRow`</ph> method to move a row from the end of the table to the beginning.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">`TABLE`</ph> 호출 <ph id="ph2">`dataTable`</ph> 노출 되지 않은 사용 하 여 <ph id="ph3">`moveRow`</ph> 메서드를 처음으로 테이블의 끝에서 한 행을 이동 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>Occurs when the user presses a key on the keyboard.</source>
          <target state="translated">사용자가 키보드의 키를 누를 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> occurs before <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>, which in turns occurs before <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> 앞에 오는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>, 결과적으로 발생 하기 전에 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">에 대 한 기본 동작을 취소할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> 설정 하 여 요소에는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 요소와에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>Occurs when the user presses and releases a key on the keyboard.</source>
          <target state="translated">사용자가 키보드의 키를 눌렀다가 놓을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> occurs after <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> and before <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> 뒤에 오는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> 하기 전에 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">에 대 한 기본 동작을 취소할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> 설정 하 여 요소에는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 요소와에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>Occurs when the user releases a key on the keyboard.</source>
          <target state="translated">사용자가 키보드의 키를 놓을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> occurs after <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>, which occurs after <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> 뒤에 오는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>, 후 발생 하 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>You cannot cancel this event.</source>
          <target state="translated">이 이벤트를 취소할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 요소와에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.LosingFocus">
          <source>Occurs when the element is losing user input focus.</source>
          <target state="translated">요소에서 사용자 입력 포커스를 잃을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LosingFocus">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LosingFocus">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LosingFocus&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LosingFocus&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LosingFocus">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LosingFocus">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LosingFocus">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LosingFocus&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LosingFocus&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>Occurs when the element has lost user input focus.</source>
          <target state="translated">요소에서 사용자 입력 포커스를 잃었을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>An element will no longer receive key stroke events after <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> occurs until it is given focus again, either by the user selecting it on the page or by the application calling the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> method on that element.</source>
          <target state="translated">요소 키 입력 이벤트 후에 더 이상 받지 것입니다 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> 지정 포커스 다시 페이지에서 선택 하는 사용자 또는 응용 프로그램 호출 될 때까지 발생는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> 해당 요소에 대해 메서드.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>You cannot cancel this event.</source>
          <target state="translated">이 이벤트를 취소할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> event on an element will also occur on that element's parents and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 및에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>Occurs when the user presses a mouse button.</source>
          <target state="translated">사용자가 마우스 단추를 누를 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">에 대 한 기본 동작을 취소할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> 설정 하 여 요소에는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 요소와에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>Occurs when the user first moves the mouse cursor over the current element.</source>
          <target state="translated">마우스 커서가 현재 요소 위를 처음 이동할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseEnter&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseEnter&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseEnter&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseEnter&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>Occurs when the user moves the mouse cursor off of the current element.</source>
          <target state="translated">마우스 커서가 현재 요소를 벗어나 이동할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseLeave&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseLeave&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseLeave&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseLeave&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>Occurs when the user moves the mouse cursor across the element.</source>
          <target state="translated">마우스 커서가 요소에서 이동할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>You cannot cancel this event.</source>
          <target state="translated">이 이벤트를 취소할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseMove&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseMove&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 요소와에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseMove&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseMove&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseMove&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseMove&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>Occurs when the mouse cursor enters the bounds of the element.</source>
          <target state="translated">마우스 커서가 요소의 경계 내로 들어올 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">에 대 한 기본 동작을 취소할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> 설정 하 여 요소에는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 요소와에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>Occurs when the user releases a mouse button.</source>
          <target state="translated">사용자가 마우스 단추를 놓을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">에 대 한 기본 동작을 취소할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> 설정 하 여 요소에는 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> 요소에는 이벤트는 해당 요소의 부모 요소와에 발생할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> 설정 하지 않으면 클래스 자체는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> 클래스를 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DHTML 개체 모델에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 라는 <ph id="ph2">`HtmlElement1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Name">
          <source>Gets or sets the name of the element.</source>
          <target state="translated">요소의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Name">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representing the element's name.</source>
          <target state="translated">요소의 이름을 나타내는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Name">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph> property to retrieve elements from a document using the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A&gt;</ph> method on the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph> 속성을 사용 하 여 문서에서 요소를 검색할는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A&gt;</ph> 에서 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt;</ph> 속성 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Name">
          <source>When applied to <ph id="ph1">`INPUT`</ph> elements, <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph> defines the variable name for that element's data when its form is submitted to the server.</source>
          <target state="translated">에 적용 될 때 <ph id="ph1">`INPUT`</ph> 요소 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph> 형태의 서버에 전송 될 때 해당 요소의 데이터에 대 한 변수 이름을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.NextSibling">
          <source>Gets the next element at the same level as this element in the document tree.</source>
          <target state="translated">문서 트리에서 이 요소와 같은 수준에 있는 다음 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.NextSibling">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> representing the element to the right of the current element.</source>
          <target state="translated">현재 요소의 오른쪽에 있는 요소를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.NextSibling">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.NextSibling%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.FirstChild%2A&gt;</ph> to walk the document tree for an HTML element.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.NextSibling%2A&gt;</ph> 함께에서 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.FirstChild%2A&gt;</ph> HTML 요소에 대 한 문서 트리를 탐색 하 합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>Gets the element from which <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph> is calculated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph>이 계산된 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>The element from which the offsets are calculated.</source>
          <target state="translated">오프셋이 계산된 요소입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>If an element's parent or another element in the element's hierarchy uses relative or absolute positioning, <ph id="ph1">&lt;see langword="OffsetParent" /&gt;</ph> will be the first relatively or absolutely positioned element in which the current element is nested.</source>
          <target state="translated">요소의 계층에 있는 요소의 부모 또는 다른 요소가 상대 또는 절대 위치를 사용하는 경우 <ph id="ph1">&lt;see langword="OffsetParent" /&gt;</ph>는 현재 요소가 중첩된 첫 번째 상대 위치 또는 절대 위치에 배치된 요소가 됩니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>If none of the elements above the current element are absolutely or relatively positioned, <ph id="ph1">&lt;see langword="OffsetParent" /&gt;</ph> will be the <bpt id="p1">&lt;c&gt;</bpt>BODY<ept id="p1">&lt;/c&gt;</ept> tag of the document.</source>
          <target state="translated">현재 요소 위에 요소는 절대적 또는 상대적으로 배치 되 면, <ph id="ph1">&lt;see langword="OffsetParent" /&gt;</ph> 됩니다는 <bpt id="p1">&lt;c&gt;</bpt>본문<ept id="p1">&lt;/c&gt;</ept> 문서 태그입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>Elements can be positioned on an HTML page in one of three ways: default flow positioning; relative positioning, in which the element is offset by a fixed amount relative to its parent; and absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.</source>
          <target state="translated">요소는 다음 세 가지 방법 중 하나에서 HTML 페이지에 배치 될 수 있습니다: 기본 흐름 위치; 상대 위치 일정량; 부모에 상대적인 오프셋 되는 요소에 및 절대 위치는 요소가 지정 되는 고정 문서의 왼쪽 위 모퉁이 기준으로 위치를 조정 합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>When a document's elements use relative or absolute positioning, you can use <ph id="ph1">`OffsetParent`</ph> to calculate an element's coordinate position in the client area.</source>
          <target state="translated">문서 요소가 상대 또는 절대 위치를 사용 하는 경우 사용할 수 있습니다 <ph id="ph1">`OffsetParent`</ph> 클라이언트 영역 내에서 요소의 좌표 위치를 계산 하 합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>For more information about element positioning in HTML, see <bpt id="p1">[</bpt>About Element Positioning<ept id="p1">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>.</source>
          <target state="translated">요소에 대 한 자세한 내용은 참조 HTML의 위치 지정 <bpt id="p1">[</bpt>요소 위치 지정에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>The following code example shows how <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OffsetParent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A&gt;</ph> differ for <ph id="ph3">`span1`</ph>, <ph id="ph4">`span2`</ph> and <ph id="ph5">`span3`</ph>:</source>
          <target state="translated">다음 코드 예제와 방법을 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OffsetParent%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A&gt;</ph> 마다 다르지만 <ph id="ph3">`span1`</ph>, <ph id="ph4">`span2`</ph> 및 <ph id="ph5">`span3`</ph>:</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>Gets the location of an element relative to its parent.</source>
          <target state="translated">부모 요소를 기준으로 요소의 위치를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>The x- and y-coordinate positions of the element, and its width and its height, in relation to its parent.</source>
          <target state="translated">부모 요소를 기준으로 한 요소의 X 좌표 및 Y 좌표 위치와 요소의 너비 및 높이입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>If an element's parent is relatively or absolutely positioned, <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph> will return the offset of the parent element.</source>
          <target state="translated">요소의 부모가 상대 위치 또는 절대 위치에 배치된 경우 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph>은 부모 요소의 오프셋을 반환합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>If the element itself is relatively positioned with respect to its parent, <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph> will return the offset from its parent.</source>
          <target state="translated">요소 자체가 부모 요소를 기준으로 상대 위치에 배치된 경우 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph>은 부모 요소의 오프셋을 반환합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>Elements can be positioned on an HTML page in one of three ways:</source>
          <target state="translated">요소는 다음 세 가지 방법 중 하나에서 HTML 페이지에 배치 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>Default flow positioning.</source>
          <target state="translated">기본 흐름 위치입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>Relative positioning, in which the element is offset by a fixed amount relative to its parent.</source>
          <target state="translated">상대 위치 일정량 부모에 상대적인 오프셋 되는 요소에 있습니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>Absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.</source>
          <target state="translated">절대 위치는 요소가 지정 되는 고정 문서의 왼쪽 위 모퉁이 기준으로 위치를 조정 합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>For more information about element positioning in HTML, see <bpt id="p1">[</bpt>About Element Positioning<ept id="p1">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>.</source>
          <target state="translated">요소에 대 한 자세한 내용은 참조 HTML의 위치 지정 <bpt id="p1">[</bpt>요소 위치 지정에 대 한<ept id="p1">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>The following code example shows how <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OffsetParent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A&gt;</ph> differ for <ph id="ph3">`span1`</ph>, <ph id="ph4">`span2`</ph> and <ph id="ph5">`span3`</ph>:</source>
          <target state="translated">다음 코드 예제와 방법을 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OffsetParent%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A&gt;</ph> 마다 다르지만 <ph id="ph3">`span1`</ph>, <ph id="ph4">`span2`</ph> 및 <ph id="ph5">`span3`</ph>:</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>.</source>
          <target state="translated">두 번째 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>Compares two elements for equality.</source>
          <target state="translated">두 요소가 같은지 비교합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if both parameters are <ph id="ph2">&lt;see langword="null" /&gt;</ph>, or if both elements have the same underlying COM interface; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">두 매개 변수가 모두 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나 두 요소 모두에 같은 내부 COM 인터페이스가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The equality operator tests the <ph id="ph1">`IUnknown`</ph> pointers of the underlying COM objects wrapped by the supplied <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> classes.</source>
          <target state="translated">같음 연산자 테스트는 <ph id="ph1">`IUnknown`</ph> 제공 된로 래핑된 내부 COM 개체의 포인터 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>.</source>
          <target state="translated">두 번째 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> objects for inequality.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> 개체가 다른지 비교합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> is only one element is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, or the two objects are not equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">한 요소만 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나 두 개체가 같지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The equivalent method for this operator is the negation of <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자에 대해 해당 하는 방법은의 부정 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.OuterHtml">
          <source>Gets or sets the current element's HTML code.</source>
          <target state="translated">현재 요소의 HTML 코드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterHtml">
          <source>The HTML code for the current element and its children.</source>
          <target state="translated">현재 요소 및 자식 요소의 HTML 코드입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterHtml">
          <source>Whereas <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will return all HTML contained in the current element excluding the current element's surrounding tags, <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> includes the current element's tag as well as the HTML that tag contains, for example:</source>
          <target state="translated">반면 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 현재 요소의 주변 태그를 제외 하 고 현재 요소에 포함 된 모든 HTML을 반환 합니다 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> 태그가 포함 된 HTML 뿐만 아니라 현재 요소의 태그 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterHtml">
          <source>In this example, calling <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> on <ph id="ph2">`div2`</ph> will return:</source>
          <target state="translated">이 예제에서는 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> 에 <ph id="ph2">`div2`</ph> 반환 합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterHtml">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will return:</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 반환 합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterHtml">
          <source>If you assign a new value to <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph>, the current element reference will become invalid; it will not reflect the name, properties and child content of the HTML you have just assigned.</source>
          <target state="translated">새 값을 할당 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph>, 현재 요소 참조는 유효 하지 않게 됩니다; 이름을 반영 되지 것입니다, 속성 및 자식 콘텐츠를 html 할당 했습니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.OuterText">
          <source>Gets or sets the current element's text.</source>
          <target state="translated">현재 요소의 텍스트를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterText">
          <source>The text inside the current element, and in the element's children.</source>
          <target state="translated">현재 요소와 자식 요소에 들어 있는 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterText">
          <source>If you attempt to assign HTML to an element with <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file.</source>
          <target state="translated">HTML 요소에 할당 하려고 하면 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph>, 한 경우 처럼 텍스트 파일 내에서 HTML을 보는 HTML 코드는 문서에 리터럴로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterText">
          <source>If you assign HTML to an element using the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property, <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph> will return all of the text in that HTML with the markup removed.</source>
          <target state="translated">HTML을 할당 하면 사용 하 여 요소는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 속성 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph> HTML 태그를 제거 하는 텍스트를 모두 반환 합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterText">
          <source>Assigning a value to <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph> will destroy any child elements that belong to the element.</source>
          <target state="translated">값을 할당 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph> 요소에 속하는 모든 자식 요소를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.OuterText">
          <source>You cannot set text outside of this element.</source>
          <target state="translated">이 요소 외부에서 텍스트를 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>Gets the current element's parent element.</source>
          <target state="translated">현재 요소의 부모 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>The element above the current element in the HTML document's hierarchy.</source>
          <target state="translated">HTML 문서의 계층에서 현재 요소의 위에 있는 요소입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> property enables discovery of an element's context.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> 속성 요소의 컨텍스트를 검색할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>It is most useful inside of event handlers such as <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph>, which can fire for any element anywhere in the document's object hierarchy.</source>
          <target state="translated">가장 유용 이벤트 처리기 내에서 같은 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph>, 문서의 개체 계층 구조에 있는 모든 요소에 대해 발생할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> property of the HTML element (the top of an HTML document) points back to itself.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> 의 HTML 요소 (HTML 문서의 최상위) 속성 자신에 게 다시 가리킵니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> inside a loop, verify that the loop's break condition compares the type of the current element and the type of the <ph id="ph2">`Parent`</ph> property, or else your code may execute an infinite loop.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> 루프 내부 루프의 중단 조건 비교의 형식과 현재 요소의 형식이 있는지 확인은 <ph id="ph2">`Parent`</ph> 코드 속성, 그렇지 않으면 무한 루프가 실행 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>The following code example finds all of the <ph id="ph1">`IMG`</ph> tags in a document, and uses the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> property to test whether the <ph id="ph3">`IMG`</ph> is hyperlinked to another page; if it is, the code assigns the URL to the <ph id="ph4">`ALT`</ph> attribute of the <ph id="ph5">`IMG`</ph> tag, so that users can mouse over the image to see where it will take them.</source>
          <target state="translated">다음 코드 예제에서는 모두 찾습니다는 <ph id="ph1">`IMG`</ph> 문서에서 태그를 삽입 하 고 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> 속성을 테스트 여부는 <ph id="ph3">`IMG`</ph> 다른 페이지에 대 한 하이퍼링크는 코드에 URL 할당 인 경우는 <ph id="ph4">`ALT`</ph> 는 의특성<ph id="ph5">`IMG`</ph>있도록에 태그, 사용자가 위치에 걸립니다 표시 하려면 이미지 위에 마우스를 놓습니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.RaiseEvent(System.String)">
          <source>The name of the event to raise.</source>
          <target state="translated">발생할 이벤트의 이름입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.RaiseEvent(System.String)">
          <source>Causes the named event to call all registered event handlers.</source>
          <target state="translated">명명된 이벤트에서 등록된 이벤트 처리기를 모두 호출하게 됩니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.RaiseEvent(System.String)">
          <source>This method is used to access HTML Document Object Model (DOM) events.</source>
          <target state="translated">이 메서드는 HTML 문서 개체 모델 (DOM) 이벤트에 액세스 하는 합니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.RaiseEvent(System.String)">
          <source>It directly calls the <bpt id="p1">[</bpt>IHTMLElement3::fireEvent<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=103189)</ept> method.</source>
          <target state="translated">직접 호출 된 <bpt id="p1">[</bpt>IHTMLElement3::fireEvent<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=103189)</ept> 메서드.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.RaiseEvent(System.String)">
          <source>For more information about how to use the DOM through the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> class, see <bpt id="p1">[</bpt>Accessing Unexposed Members on the Managed HTML Document Object Model<ept id="p1">](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)</ept>.</source>
          <target state="translated">통해 DOM을 사용 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 클래스를 참조 하십시오. <bpt id="p1">[</bpt>관리 되는 HTML 문서 개체 모델에서 노출 되지 않은 멤버에 액세스<ept id="p1">](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.RemoveFocus">
          <source>Removes focus from the current element, if that element has focus.</source>
          <target state="translated">현재 요소에 포커스가 있으면 현재 요소에서 포커스를 제거합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.RemoveFocus">
          <source>Calling this method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> event for the element.</source>
          <target state="translated">이 메서드 호출의 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> 요소에 대 한 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.RemoveFocus">
          <source>When focus is cleared from an element using this method, it is given to the document containing the element, not to the next element in the tab order.</source>
          <target state="translated">이 메서드를 사용 하 여 요소에서 포커스를 지우면 하지를 탭 순서의 다음 요소로 요소를 포함 하는 문서에 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the top of the object will be displayed at the top of the window.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 개체의 위쪽이 창의 위쪽에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the bottom of the object will be displayed at the bottom of the window.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>이면 개체의 아래쪽이 창의 아래쪽에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)">
          <source>Scrolls through the document containing this element until the top or bottom edge of this element is aligned with the document's window.</source>
          <target state="translated">이 요소의 위쪽 또는 아래쪽 가장자리가 문서 창과 맞춰질 때까지 이 요소가 들어 있는 문서를 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)">
          <source>The following code example finds an element by name and scrolls through the page so that the top of the element is aligned with the top of the visible page.</source>
          <target state="translated">다음 코드 예제에서는 이름으로는 요소를 찾아 선택한 페이지 요소의 맨 위에 표시 되는 페이지 맨 아래에 정렬 되도록입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.ScrollLeft">
          <source>Gets or sets the distance between the edge of the element and the left edge of its content.</source>
          <target state="translated">요소의 가장자리와 요소 내용의 왼쪽 가장자리 사이의 거리를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollLeft">
          <source>The distance, in pixels, between the left edge of the element and the left edge of its content.</source>
          <target state="translated">요소의 왼쪽 가장자리와 요소 내용의 왼쪽 가장자리 사이의 거리(픽셀)입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollLeft">
          <source>The full dimensions of the scroll area are available using <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;</ph>; <ph id="ph2">`ScrollLeft`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;</ph> are exposed independently because these are the only two properties of the scroll area that developers can set.</source>
          <target state="translated">전체 크기 스크롤 영역에는 사용할 수 있는 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;</ph>; <ph id="ph2">`ScrollLeft`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;</ph> 노출 됩니다 하지 독립적으로 이러한은 개발자가 설정할 수 있는 스크롤 영역의 두 개의 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.ScrollRectangle">
          <source>Gets the dimensions of an element's scrollable region.</source>
          <target state="translated">요소의 스크롤 가능한 영역의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollRectangle">
          <source>The size and coordinate location of the scrollable area of an element.</source>
          <target state="translated">요소의 스크롤 가능한 영역의 크기 및 좌표 위치입니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollRectangle">
          <source>An element will have a scrollable region if its content exceeds the size of its dimensions, unless the overflow style on the element forbids rendering scrollbars.</source>
          <target state="translated">요소는 요소에 대해 오버플로 스타일 렌더링 스크롤 막대를 금지 하지 않는 한 해당 차원의 크기를 초과 스크롤 가능한 영역을 포함할 합니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollRectangle">
          <source>You cannot modify the size of the scroll area directly, but you can modify the distance between the edges of the scroll area and the edges of the element.</source>
          <target state="translated">를 직접 스크롤 영역 크기를 수정할 수는 없지만 요소의 가장자리와 스크롤 영역 가장자리 사이의 거리를 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollRectangle">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;</ph> properties to achieve this.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;</ph> 이 작업을 수행할 속성입니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.ScrollTop">
          <source>Gets or sets the distance between the edge of the element and the top edge of its content.</source>
          <target state="translated">요소의 가장자리와 요소 내용의 위쪽 가장자리 사이의 거리를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollTop">
          <source>The distance, in pixels, between the top edge of the element and the top edge of its content.</source>
          <target state="translated">요소의 위쪽 가장자리와 요소 내용의 위쪽 가장자리 사이의 거리(픽셀)입니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollTop">
          <source>The full dimensions of the scroll area are available using <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;</ph>; <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;</ph> and <ph id="ph3">`ScrollTop`</ph> are exposed independently because these are the only two properties of the scroll area that developers can set.</source>
          <target state="translated">전체 크기 스크롤 영역에는 사용할 수 있는 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;</ph>; <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;</ph> 및 <ph id="ph3">`ScrollTop`</ph> 노출 됩니다 하지 독립적으로 이러한은 개발자가 설정할 수 있는 스크롤 영역의 두 개의 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>The name of the attribute to set.</source>
          <target state="translated">설정할 특성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>The new value of this attribute.</source>
          <target state="translated">이 특성의 새 값입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>Sets the value of the named attribute on the element.</source>
          <target state="translated">요소에서 명명된 특성의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>An attribute in HTML is any valid name-value pair for that element.</source>
          <target state="translated">Html에서 특성에 해당 요소에 대 한 올바른 이름-값 쌍입니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; <ph id="ph2">`SRC`</ph> is a predefined attribute for the <ph id="ph3">`IMG`</ph> tag, for example, but not for the <ph id="ph4">`DIV`</ph> tag.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 특정 유형의 요소에만 적용 되는 모든 요소에 공통 되는 특성에만 노출 <ph id="ph2">`SRC`</ph> 에 대 한 미리 정의 된 특성이 <ph id="ph3">`IMG`</ph> 예를 들어 태그에 대 한는 <ph id="ph4">`DIV`</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> to manipulate attributes not exposed on the managed Document Object Model (DOM).</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> 에 관리 되는 DOM 문서 개체 모델 ()를 노출 되지 않은 특성을 조작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>If <ph id="ph1">`attributeName`</ph> is not a defined attribute on an element, <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> will define it on the element as a new attribute.</source>
          <target state="translated">경우 <ph id="ph1">`attributeName`</ph> 요소에 정의 된 특성이 아니므로 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> 새로운 특성으로 요소에 정의 합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> are case-insensitive.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>To set the <ph id="ph1">`class`</ph> attribute on an <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> , you must refer to the attribute as <ph id="ph3">`className`</ph> when specifying the first argument to <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph></source>
          <target state="translated">설정 하는 <ph id="ph1">`class`</ph> 특성에 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> , 특성으로 참조 해야 <ph id="ph3">`className`</ph> 첫 번째 인수를 지정 하는 경우 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>The following code example adds a new <ph id="ph1">`IMG`</ph> element to the current document, using <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> to set the <ph id="ph3">`SRC`</ph> attribute for the image.</source>
          <target state="translated">다음 코드 예제에서는 새 <ph id="ph1">`IMG`</ph> 요소를 현재 문서에 사용 하 여 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> 설정 하 여 <ph id="ph3">`SRC`</ph> 이미지에 대 한 특성입니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Style">
          <source>Gets or sets a semicolon-delimited list of styles for the current element.</source>
          <target state="translated">현재 요소에 대한 세미콜론으로 구분된 스타일 목록을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Style">
          <source>A string consisting of all of the element's styles</source>
          <target state="translated">요소의 모든 스타일로 구성된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Style">
          <source>The HTML Document Object Model (DOM) uses styles as defined in the World Wide Web Consortiums Cascading Style Sheets specification to control the display of an element.</source>
          <target state="translated">HTML 문서 개체 모델 (DOM)를 사용 하 여 스타일 World Wide Web 협회 연계 스타일 시트 사양에 정의 된 대로 요소의 표시를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Style">
          <source>Styles in the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Style%2A&gt;</ph> property take the form of colon-delimited name-value pairs, with each pair separated by a semicolon, as follows:</source>
          <target state="translated">스타일을 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Style%2A&gt;</ph> 속성 콜론으로 구분 된 이름-값 쌍을 다음과 같이 세미콜론으로 구분 하는 각 쌍의 형태로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Style">
          <source>To set the font for a <ph id="ph1">`DIV`</ph> element to 14-point Times New Roman bold, for example, you would assign the following string:</source>
          <target state="translated">에 대 한 글꼴을 설정 하는 <ph id="ph1">`DIV`</ph> 14pt 바탕으로 굵게 표시 된 요소, 예를 들어 할당할 때 다음과 같은 문자열:</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Style">
          <source>For a full list of all available styles in the HTML DOM, see <bpt id="p1">[</bpt>STYLE Attribute<ept id="p1">](http://msdn.microsoft.com/library/ms534651.aspx)</ept>.</source>
          <target state="translated">HTML DOM에서 모든 사용 가능한 스타일의 전체 목록을 참조 하십시오. <bpt id="p1">[</bpt>스타일 특성<ept id="p1">](http://msdn.microsoft.com/library/ms534651.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.TabIndex">
          <source>Gets or sets the location of this element in the tab order.</source>
          <target state="translated">탭 순서에서 이 요소의 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TabIndex">
          <source>The numeric index of the element in the tab order.</source>
          <target state="translated">탭 순서에 있는 요소의 숫자 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TabIndex">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph> determines which element in an HTML document will next receive focus when the user presses the TAB key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph> HTML 문서에서 요소는 TAB 키를 누를 때 포커스를 받을 다음 결정 합니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TabIndex">
          <source>By default, the only elements included in the tab order are <ph id="ph1">`INPUT`</ph> elements, the <ph id="ph2">`SELECT`</ph> control, and any element whose <ph id="ph3">`contentEditable`</ph> property is set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">탭 순서에 포함 된 요소만 기본적으로 <ph id="ph1">`INPUT`</ph> 요소는 <ph id="ph2">`SELECT`</ph> 제어 및 모든 요소를 <ph id="ph3">`contentEditable`</ph> 속성이로 설정 되어 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TabIndex">
          <source>You can include any HTML element in the tab order, such as a <ph id="ph1">`DIV`</ph>, by assigning it an explicit <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph>.</source>
          <target state="translated">탭 순서에서 같은 HTML 요소를 포함할 수는 <ph id="ph1">`DIV`</ph>를 명시적으로 할당 하 여 <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TabIndex">
          <source>Valid values for <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph> range from -32767 to 32767.</source>
          <target state="translated">유효한 값에 대 한 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph> 32767에서 32767 까지입니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.TagName">
          <source>Gets the name of the HTML tag.</source>
          <target state="translated">HTML 태그의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TagName">
          <source>The name used to create this element using HTML markup.</source>
          <target state="translated">HTML 태그를 사용하여 이 요소를 만드는 데 사용되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TagName">
          <source>Many elements in the HTML Document Object Model have attributes, properties, and methods that are unique to those elements; such as the <ph id="ph1">`HREF`</ph> attribute on the <ph id="ph2">`A`</ph> element, or the <ph id="ph3">`Submit`</ph> method on <ph id="ph4">`FORM`</ph>.</source>
          <target state="translated">HTML 문서 개체 모델의 많은 요소에는 특성, 속성 및 해당 요소에 고유한 메서드 와 같은 <ph id="ph1">`HREF`</ph> 특성에 <ph id="ph2">`A`</ph> 요소 또는 <ph id="ph3">`Submit`</ph> 메서드를 <ph id="ph4">`FORM`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TagName">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TagName%2A&gt;</ph> when you have an element of a potentially arbitrary type, and need to perform a type-specific operation.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TagName%2A&gt;</ph> 잠재적으로 임의 형식의 요소가 있어야 하 고 형식 관련 작업을 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TagName">
          <source>The following code example finds all of the <ph id="ph1">`IMG`</ph> tags in a document, and uses the <ph id="ph2">`TagName`</ph> property to test whether the <ph id="ph3">`IMG`</ph> is hyperlinked to another page; if it is, the code assigns the URL to the <ph id="ph4">`ALT`</ph> attribute of the <ph id="ph5">`IMG`</ph> tag, so that users can mouse over the image to see where it will take them.</source>
          <target state="translated">다음 코드 예제에서는 모두 찾습니다는 <ph id="ph1">`IMG`</ph> 문서에서 태그를 삽입 하 고 사용 하 여는 <ph id="ph2">`TagName`</ph> 속성을 테스트 여부는 <ph id="ph3">`IMG`</ph> 다른 페이지에 대 한 하이퍼링크는 코드에 URL 할당 인 경우는 <ph id="ph4">`ALT`</ph> 는 의특성<ph id="ph5">`IMG`</ph>있도록에 태그, 사용자가 위치에 걸립니다 표시 하려면 이미지 위에 마우스를 놓습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>