<Type Name="ToolBarButton" FullName="System.Windows.Forms.ToolBarButton">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4574e23b4abb5b9f696b52192bf67b2172ceaf0c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30649827" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToolBarButton : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolBarButton extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolBarButton" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolBarButton&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolBarButton : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolBarButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows 도구 모음 단추를 나타냅니다. <see cref="T:System.Windows.Forms.ToolStripButton" />은 이전 버전의 <see cref="T:System.Windows.Forms.ToolBarButton" /> 컨트롤을 대체하고 확장하지만 이전 버전과의 호환성 및 앞으로의 사용 가능성을 고려하여 <see cref="T:System.Windows.Forms.ToolBarButton" />를 유지하도록 선택할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton> 컨트롤에 의해 부모가 <xref:System.Windows.Forms.ToolBar> 컨트롤입니다. 도구 모음 단추를 만들었으면를 설정 하는 일반적인 속성은 <xref:System.Windows.Forms.ToolBarButton.Text%2A> 및 <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A>합니다. 설정의 <xref:System.Windows.Forms.ToolBarButton.Text%2A> 텍스트 또는 이미지의 오른쪽 아래에 표시 하는 단추의 속성입니다. 이미지를 할당 하려면 단추에 만들어는 <xref:System.Windows.Forms.ImageList>에 할당는 <xref:System.Windows.Forms.ToolBar.ImageList%2A> 도구 모음의; 속성 이미지 인덱스 값을 할당 한 다음는 <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A> 단추의 속성입니다.  
  
 도구 모음에 할당 된 도구 모음 단추의 모양을 변경 하려면는 <xref:System.Windows.Forms.ToolBar.Appearance%2A> 부모 도구 모음 컨트롤의 속성입니다. `ToolBarAppearance.Flat` 모양 평면 모양 단추를 제공 합니다. 마우스 포인터의 모양 변경 3 차원 단추 위로 이동합니다. 단추 구분선 평면 모양 일 때 단추 사이 공백이 아닌 선으로 나타납니다. 경우는 <xref:System.Windows.Forms.ToolBar.Appearance%2A> 속성이 `ToolBarAppearance.Normal`, 단추, 볼록하게 표시 및 구분 기호 사이의 단추 간격으로 표시 합니다.  
  
 할당할 수는 <xref:System.Windows.Forms.ContextMenu> 를 단추에 경우는 <xref:System.Windows.Forms.ToolBarButton.Style%2A> 속성이로 설정 된 `ToolBarButtonStyle.DropDown`합니다. 단추를 클릭할 때 할당 된 메뉴가 표시 됩니다.  
  
 컬렉션을 만들려면 <xref:System.Windows.Forms.ToolBarButton> 컨트롤에 표시 하는 <xref:System.Windows.Forms.ToolBar>, 단추를 사용 하 여 개별적으로 추가 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> 의 메서드는 <xref:System.Windows.Forms.ToolBar.Buttons%2A> 속성입니다. 또는 사용 하 여 여러 도구 모음 단추를 추가할 수는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Windows.Forms.ToolBar> 및 세 개의 <xref:System.Windows.Forms.ToolBarButton> 컨트롤입니다. 도구 모음 단추는 단추 컬렉션에 할당 된, 컬렉션의 도구 모음에 할당 하 고 도구 모음 폼에 추가 됩니다. 에 <xref:System.Windows.Forms.ToolBar.ButtonClick> 도구 모음의 이벤트는 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> 속성의는 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> 평가 되 해당 대화 상자가 열립니다. 이 코드를 실행 하려면 한 <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.OpenFileDialog>, <xref:System.Windows.Forms.SaveFileDialog>, 및 <xref:System.Windows.Forms.PrintDialog> 모두 만들어야 합니다.  
  
 [!code-cpp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBar Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolBar" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="T:System.Windows.Forms.ToolTip" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolBarButton" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolBarButton" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새로 만든 <xref:System.Windows.Forms.ToolBarButton> 기본값이 없는 <xref:System.Windows.Forms.ToolBarButton.Text%2A> 또는 <xref:System.Drawing.Image> 에 할당 합니다. 단추의 기본 스타일은 `ToolBarButtonStyle.PushButton`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Windows.Forms.ToolBar> 및 세 개의 <xref:System.Windows.Forms.ToolBarButton> 제어 단추 도구 모음에 할당 하 고 해당 단추의 공통 속성 중 일부를 설정 합니다. 이 코드를 실행 하려면 한 <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> 및 <xref:System.Windows.Forms.Form> 만든 및 <xref:System.Windows.Forms.ImageList> 가 하나 이상 <xref:System.Drawing.Image> 에 할당 합니다.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButton (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButton(System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">새 <see cref="T:System.Windows.Forms.ToolBarButton" />에 표시되는 텍스트입니다.</param>
        <summary>
          <see cref="T:System.Windows.Forms.ToolBarButton" /> 클래스의 새 인스턴스를 초기화하고 할당된 텍스트를 단추에 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새로 만든 <xref:System.Windows.Forms.ToolBarButton> 아무런 <xref:System.Drawing.Image> 에 할당 합니다. 단추의 기본 스타일은 <xref:System.Windows.Forms.ToolBarButtonStyle.PushButton>합니다. `text` 에 할당 된 매개 변수는 <xref:System.Windows.Forms.ToolBarButton.Text%2A> 속성 및 새 도구 모음 단추 컨트롤에 표시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Windows.Forms.ToolBar> 및 세 개의 <xref:System.Windows.Forms.ToolBarButton> 제어 단추 도구 모음에 할당 하 고 해당 단추의 공통 속성 중 일부를 설정 합니다. 이 코드를 실행 하려면 한 <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> 및 <xref:System.Windows.Forms.Form> 만든 및 <xref:System.Windows.Forms.ImageList> 가 하나 이상 <xref:System.Drawing.Image> 에 할당 합니다.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBarButton.Text" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary>
          <see cref="T:System.Windows.Forms.ToolBarButton" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 public `Dispose` 메서드 및 <xref:System.Object.Finalize%2A> 메서드. `Dispose` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.  
  
 경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Windows.Forms.ToolBarButton> 참조 합니다. 이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" /> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
 에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DropDownMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu DropDownMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu DropDownMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.DropDownMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownMenu As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Menu ^ DropDownMenu { System::Windows::Forms::Menu ^ get(); void set(System::Windows::Forms::Menu ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>드롭다운 도구 모음 단추에 표시할 메뉴를 가져오거나 설정합니다.</summary>
        <value>드롭다운 도구 모음 단추에 표시할 <see cref="T:System.Windows.Forms.ContextMenu" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정할 수는 <xref:System.Windows.Forms.ContextMenu> 드롭 다운 단추를 클릭할 때 표시 될 합니다. 이 속성이 사용 되지 않는 한는 <xref:System.Windows.Forms.ToolBarButton.Style%2A> 속성 값으로 설정 됩니다 <xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton?displayProperty=nameWithType>합니다.  
  
> [!NOTE]
>  하지만 <xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A> 속성으로 정의 되는 <xref:System.Windows.Forms.Menu> 유형을 할당 해야는 <xref:System.Windows.Forms.ContextMenu> 제대로 표시 하려면. 만드는 경우 사용자 고유의 <xref:System.Windows.Forms.MenuItem> 파생 개체를 할당 해야 하는 클래스는 <xref:System.Windows.Forms.ContextMenu> 할당는 <xref:System.Windows.Forms.ContextMenu> 에 <xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A> 속성.  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Windows.Forms.ToolBar> 및 세 개의 <xref:System.Windows.Forms.ToolBarButton> 제어 단추 도구 모음에 할당 하 고 해당 단추의 공통 속성 중 일부를 설정 합니다. 이 코드를 실행 하려면 프로그램 <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> 및 <xref:System.Windows.Forms.Form> 만든 및 <xref:System.Windows.Forms.ImageList> 가 하나 이상 <xref:System.Drawing.Image> 에 할당 합니다.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">할당된 개체가 <see cref="T:System.Windows.Forms.ContextMenu" />가 아닌 경우</exception>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>단추를 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          단추를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.ToolBarButton.Enabled%2A> 속성이 `false`, 도구 모음 단추를 클릭할 수 없으며 및 단추의 모양을 변경 합니다. <xref:System.Drawing.Image> 및 <xref:System.Windows.Forms.ToolBarButton.Text%2A> 단추에 할당 된 회색으로 나타납니다. Image 또는 text에 여러 색이 회색으로 표시 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageIndexConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>단추에 할당된 이미지의 인덱스 값을 가져오거나 설정합니다.</summary>
        <value>도구 모음 단추에 할당된 <see cref="T:System.Drawing.Image" />의 인덱스 값입니다. 기본값은 -1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A> 값에 있는 이미지의 인덱싱된 값 참조는 <xref:System.Windows.Forms.ImageList> 부모에 할당 된 <xref:System.Windows.Forms.ToolBar> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Windows.Forms.ToolBar> 및 세 개의 <xref:System.Windows.Forms.ToolBarButton> 제어 단추 도구 모음에 할당 하 고 해당 단추의 공통 속성 중 일부를 설정 합니다. 이 코드를 실행 하려면 한 <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> 및 <xref:System.Windows.Forms.Form> 만든 및 <xref:System.Windows.Forms.ImageList> 가 하나 이상 <xref:System.Drawing.Image> 에 할당 합니다.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">할당된 값이 -1보다 작습니다.</exception>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="T:System.Windows.Forms.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>단추에 할당된 이미지의 이름을 가져오거나 설정합니다.</summary>
        <value>도구 모음 단추에 할당된 <see cref="T:System.Drawing.Image" />의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.ImageKey%2A> 값 이미지를 나타냅니다는 <xref:System.Windows.Forms.ImageList> 부모에 할당 된 <xref:System.Windows.Forms.ToolBar> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBar.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>단추의 이름입니다.</summary>
        <value>단추의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 검색 하는 단추 이름을 키로 사용할 수 있습니다는 <xref:System.Windows.Forms.ToolBarButton> 에서 <xref:System.Windows.Forms.ToolBar.Buttons%2A> 의 컬렉션을 <xref:System.Windows.Forms.ToolBar> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBar Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBar Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As ToolBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolBar ^ Parent { System::Windows::Forms::ToolBar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>도구 모음 단추가 할당된 ToolBar 컨트롤을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolBar" />이 할당된 <see cref="T:System.Windows.Forms.ToolBarButton" /> 컨트롤입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
      </Docs>
    </Member>
    <Member MemberName="PartialPush">
      <MemberSignature Language="C#" Value="public bool PartialPush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PartialPush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.PartialPush" />
      <MemberSignature Language="VB.NET" Value="Public Property PartialPush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PartialPush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>토글 스타일 도구 모음 단추가 부분적으로 눌리는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          토글 스타일 도구 모음 단추가 부분적으로 눌리면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> 로 설정 된 `true`, 표면이 회색를 이동 하면 도구 모음 단추가 나타납니다. 이 모양과 다른 흐리게 표시 되는 경우는 <xref:System.Windows.Forms.ToolBarButton.Enabled%2A> 속성이로 설정 되어 `false` 부분 누름 모양은 엷게 단추의 전체 때문입니다. 이 속성에는 아무런 영향을 주지 않으면는 <xref:System.Windows.Forms.ToolBarButtonStyle> 로 설정 되어 `ToggleButton`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, 및 <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> 속성입니다. 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms.RichTextBox> 이라는 컨트롤 `RichTextBox1`합니다. 호출 된 `InitializeToolBar` 폼의 생성자 또는 `Load` 메서드.  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Pushed">
      <MemberSignature Language="C#" Value="public bool Pushed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pushed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Pushed" />
      <MemberSignature Language="VB.NET" Value="Public Property Pushed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Pushed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>토글 스타일 도구 모음 단추가 현재 눌러진 상태에 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          토글 스타일 도구 모음 단추가 현재 눌러진 상태이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 <xref:System.Windows.Forms.ToolBarButton.Pushed%2A> 로 설정 된 `true`, 오목 하 게 다른 단추를 기준으로 이동 하면 도구 모음 단추가 나타납니다. 이 속성에는 아무런 영향을 주지 않으면는 <xref:System.Windows.Forms.ToolBarButtonStyle> 로 설정 되어 `ToggleButton`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, 및 <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> 속성입니다. 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms.RichTextBox> 이라는 컨트롤 `RichTextBox1`합니다. 호출 된 `InitializeToolBar` 폼의 생성자 또는 `Load` 메서드.  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Rectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Rectangle { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>도구 모음 단추의 경계 사각형을 가져옵니다.</summary>
        <value>도구 모음 단추의 경계 <see cref="T:System.Drawing.Rectangle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.ToolBar> 과 현재 단추가 모두 <xref:System.Windows.Forms.ToolBarButton.Visible%2A>,이 속성의 단추에 현재 포함 된 경계 사각형을 검색 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBarButton.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBarButtonStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolBarButtonStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As ToolBarButtonStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolBarButtonStyle Style { System::Windows::Forms::ToolBarButtonStyle get(); void set(System::Windows::Forms::ToolBarButtonStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButtonStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>도구 모음 단추의 스타일을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolBarButtonStyle" /> 값 중 하나입니다. 기본값은 <see langword="ToolBarButtonStyle.PushButton" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 단추 <xref:System.Windows.Forms.ToolBarButton.Style%2A> 로 설정 되어 <xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton> 지정할 수는 <xref:System.Windows.Forms.MenuItem> 드롭 다운 단추를 누를 때 표시할 합니다. 스타일으로 설정 되어 있으면 `ToolBarButtonStyle.Separator`를 단추가 아닌 단추 구분 기호로 이동 하면 도구 모음 단추가 나타납니다. `ToolBarButtonStyle.ToggleButton` 스타일 도구 모음 단추는 토글 단추 처럼 동작할 수로 인해이 될 수 있습니다;는 또는 상태를 해제 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Windows.Forms.ToolBar> 및 세 개의 <xref:System.Windows.Forms.ToolBarButton> 제어 단추 도구 모음에 할당 하 고 해당 단추의 공통 속성 중 일부를 설정 합니다. 이 코드를 실행 하려면 한 <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> 및 <xref:System.Windows.Forms.Form> 만든 및 <xref:System.Windows.Forms.ImageList> 가 하나 이상 <xref:System.Drawing.Image> 에 할당 합니다.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">할당된 값이 <see cref="T:System.Windows.Forms.ToolBarButtonStyle" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>도구 모음 단추에 대한 데이터가 들어 있는 개체를 가져오거나 설정합니다.</summary>
        <value>도구 모음 단추에 대한 데이터가 들어 있는 <see cref="T:System.Object" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 검색 하거나 도구 모음 단추와 현재 연결 된 데이터를 할당 합니다. 모든 <xref:System.Object> 파생된 형식을이 속성에 할당할 수 있습니다. Windows Forms 디자이너를 통해이 속성이 설정 되어, 텍스트만 할당할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>, 및 <xref:System.Windows.Forms.ToolBarButton.Tag%2A> 속성입니다. 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms.RichTextBox> 이라는 컨트롤 `RichTextBox1`합니다. 호출 된 `InitializeToolBar` 폼의 생성자 또는 `Load` 메서드.  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>도구 모음 단추에 표시되는 텍스트를 가져오거나 설정합니다.</summary>
        <value>도구 모음 단추에 표시되는 텍스트입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 텍스트 속성 값은 빈 문자열 ("") 사용 하 여 컨트롤을 만들지 않은 <xref:System.Windows.Forms.ToolBar.%23ctor%2A> 텍스트 문자열을 매개 변수로 허용 하는 생성자입니다. 도구 모음 단추 텍스트의 방향을 따라 사용자가 <xref:System.Windows.Forms.ToolBar.TextAlign%2A> 단추의 부모의 속성 <xref:System.Windows.Forms.ToolBar>, 중 하나로 설정할 수 있는 <xref:System.Windows.Forms.ToolBarTextAlign> 열거형 값입니다. 단추에 할당 된 이미지와 관련 하 여는 방향이입니다. 공간 됩니다 이미지가 없는 단추에 할당 된 경우 도구 모음 단추의 표면에 보관 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Windows.Forms.ToolBar> 및 세 개의 <xref:System.Windows.Forms.ToolBarButton> 제어 단추 도구 모음에 할당 하 고 해당 단추의 공통 속성 중 일부를 설정 합니다. 이 코드를 실행 하려면 한 <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> 및 <xref:System.Windows.Forms.Form> 만든 및 <xref:System.Windows.Forms.ImageList> 가 하나 이상 <xref:System.Drawing.Image> 에 할당 합니다.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>단추의 도구 설명으로 표시되는 텍스트를 가져오거나 설정합니다.</summary>
        <value>마우스 포인터를 도구 모음 단추 위로 가져갈 때 표시되는 텍스트입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 마우스 포인터를 단추 위로 이동 하면 도구 설명 텍스트를 표시 하려면 설정는 <xref:System.Windows.Forms.ToolBar.ShowToolTips%2A> 단추의 부모의 속성 <xref:System.Windows.Forms.ToolBar> 를 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Windows.Forms.ToolBar> 및 세 개의 <xref:System.Windows.Forms.ToolBarButton> 제어 단추 도구 모음에 할당 하 고 해당 단추의 공통 속성 중 일부를 설정 합니다. 이 코드를 실행 하려면 한 <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> 및 <xref:System.Windows.Forms.Form> 만든 및 <xref:System.Windows.Forms.ImageList> 가 하나 이상 <xref:System.Drawing.Image> 에 할당 합니다.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolBar.ShowToolTips" />
        <altmember cref="T:System.Windows.Forms.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolBarButton" /> 컨트롤을 나타내는 문자열을 반환합니다.</summary>
        <returns>현재 <see cref="T:System.Windows.Forms.ToolBarButton" />을(를) 나타내는 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.ToString%2A> 형식과의 값이 포함 된 문자열을 반환 하는 메서드는 <xref:System.Windows.Forms.ToolBarButton.Style%2A> 및 <xref:System.Windows.Forms.ToolBarButton.Text%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>도구 모음 단추가 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          도구 모음 단추가 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 도구 모음 단추가 표시 되지 않는 경우 도구 모음에 표시 되지 않습니다 및 사용자 입력을 받을 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>