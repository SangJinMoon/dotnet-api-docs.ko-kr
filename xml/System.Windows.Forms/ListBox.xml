<Type Name="ListBox" FullName="System.Windows.Forms.ListBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e2ec491840dd2c40114a36162e4b9eecf313c182" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListBox : System.Windows.Forms.ListControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListBox extends System.Windows.Forms.ListControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox&#xA;Inherits ListControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListBox : System::Windows::Forms::ListControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6a37a-101">항목 목록을 표시할 Windows 컨트롤을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a37a-101">Represents a Windows control to display a list of items.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-102"><xref:System.Windows.Forms.ListBox> 컨트롤을 사용 하면 사용자가 클릭 하 여 선택할 수 있는 사용자에 게 항목의 목록을 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-102">The <xref:System.Windows.Forms.ListBox> control enables you to display a list of items to the user that the user can select by clicking.</span></span> <span data-ttu-id="6a37a-103">A <xref:System.Windows.Forms.ListBox> 단일 컴퓨터 또는 다중 선택을 사용 하 여 제공할 수 있습니다는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-103">A <xref:System.Windows.Forms.ListBox> control can provide single or multiple selections using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property.</span></span> <span data-ttu-id="6a37a-104"><xref:System.Windows.Forms.ListBox> 또한 제공 된 <xref:System.Windows.Forms.ListBox.MultiColumn%2A> 속성을 사용 하는 항목의 거리 목록 대신 열에 있는 항목의 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-104">The <xref:System.Windows.Forms.ListBox> also provides the <xref:System.Windows.Forms.ListBox.MultiColumn%2A> property to enable the display of items in columns instead of a straight vertical list of items.</span></span> <span data-ttu-id="6a37a-105">이 컨트롤이 더 많은 항목을 표시할 수 있으며 사용자는 더 이상 항목으로 스크롤합니다 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-105">With this, the control can display more visible items and the user no longer needs to scroll to an item.</span></span>  
  
 <span data-ttu-id="6a37a-106">Windows에 표시할 항목의 그리기 작업을 처리 하는 일반적으로 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-106">Typically, Windows handles the task of drawing the items to display in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-107">사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 속성과 핸들은 <xref:System.Windows.Forms.ListBox.MeasureItem> 및 <xref:System.Windows.Forms.ListBox.DrawItem> 이벤트는 자동 Windows 그리기를 재정의할 수 있도록 제공 및 직접 항목을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-107">You can use the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property, and handle the <xref:System.Windows.Forms.ListBox.MeasureItem> and <xref:System.Windows.Forms.ListBox.DrawItem> events so you can override the automatic drawing that Windows provides and draw the items yourself.</span></span> <span data-ttu-id="6a37a-108">소유자가 그린를 사용할 수 있습니다 <xref:System.Windows.Forms.ListBox> 목록에 가변 길이 항목, 이미지 또는 다른 색 또는 각 항목의 텍스트 글꼴을 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-108">You can use owner-drawn <xref:System.Windows.Forms.ListBox> controls to display variable-height items, images, or a different color or font for the text of each item in the list.</span></span> <span data-ttu-id="6a37a-109"><xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> 속성 <xref:System.Windows.Forms.ListBox.GetItemHeight%2A>, 및 <xref:System.Windows.Forms.ListBox.GetItemRectangle%2A> 사용자 고유의 항목을 그릴 수 있도록 도와 드릴 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-109">The <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> property, <xref:System.Windows.Forms.ListBox.GetItemHeight%2A>, and <xref:System.Windows.Forms.ListBox.GetItemRectangle%2A> also help you draw your own items.</span></span>  
  
 <span data-ttu-id="6a37a-110">표시 및 선택 기능 이외에 <xref:System.Windows.Forms.ListBox> 효율적으로 항목을 추가할 수 있도록 하는 기능도 제공는 <xref:System.Windows.Forms.ListBox> 목록 항목 내에서 텍스트를 검색 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-110">In addition to display and selection functionality, the <xref:System.Windows.Forms.ListBox> also provides features that enable you to efficiently add items to the <xref:System.Windows.Forms.ListBox> and to find text within the items of the list.</span></span> <span data-ttu-id="6a37a-111"><xref:System.Windows.Forms.ListBox.BeginUpdate%2A> 및 <xref:System.Windows.Forms.ListBox.EndUpdate%2A> 메서드를 사용 하면 많은 수의 항목을 추가 하는 <xref:System.Windows.Forms.ListBox> 컨트롤 될 때마다 다시 표시 하지 않고 항목 목록에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-111">The <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods enable you to add a large number of items to the <xref:System.Windows.Forms.ListBox> without the control being repainted each time an item is added to the list.</span></span> <span data-ttu-id="6a37a-112"><xref:System.Windows.Forms.ListBox.FindString%2A> 및 <xref:System.Windows.Forms.ListBox.FindStringExact%2A> 메서드를 사용 하는 특정 검색 문자열이 포함 된 목록에서 항목을 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-112">The <xref:System.Windows.Forms.ListBox.FindString%2A> and <xref:System.Windows.Forms.ListBox.FindStringExact%2A> methods enable you to search for an item in the list that contains a specific search string.</span></span>  
  
 <span data-ttu-id="6a37a-113"><xref:System.Windows.Forms.ListBox.Items%2A>, <xref:System.Windows.Forms.ListBox.SelectedItems%2A>, 및 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> 속성에서 사용 되는 세 가지 컬렉션에 대 한 액세스를 제공는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-113">The <xref:System.Windows.Forms.ListBox.Items%2A>, <xref:System.Windows.Forms.ListBox.SelectedItems%2A>, and <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> properties provide access to the three collections that are used by the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-114">다음 표에서 설명에서 사용 하는 세 가지 컬렉션은 <xref:System.Windows.Forms.ListBox> 및 컨트롤 내에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-114">The following table outlines the three collections used by the <xref:System.Windows.Forms.ListBox> and their use within the control.</span></span>  
  
|<span data-ttu-id="6a37a-115">컬렉션 클래스</span><span class="sxs-lookup"><span data-stu-id="6a37a-115">Collection class</span></span>|<span data-ttu-id="6a37a-116">내에서 사용 하는 <xref:System.Windows.Forms.ListBox></span><span class="sxs-lookup"><span data-stu-id="6a37a-116">Use within the <xref:System.Windows.Forms.ListBox></span></span>|  
|----------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Windows.Forms.ListBox.ObjectCollection>|<span data-ttu-id="6a37a-117">에 포함 된 모든 항목이 포함 된 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-117">Contains all items contained in the <xref:System.Windows.Forms.ListBox> control.</span></span>|  
|<xref:System.Windows.Forms.ListBox.SelectedObjectCollection>|<span data-ttu-id="6a37a-118">포함 된 항목의 하위 집합인 선택한 항목의 컬렉션을 포함에 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-118">Contains a collection of the selected items which is a subset of the items contained in the <xref:System.Windows.Forms.ListBox> control.</span></span>|  
|<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>|<span data-ttu-id="6a37a-119">인덱스의 하위 집합 선택된 된 인덱스의 컬렉션을 포함의 <xref:System.Windows.Forms.ListBox.ObjectCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-119">Contains a collection of the selected indexes, which is a subset of the indexes of the <xref:System.Windows.Forms.ListBox.ObjectCollection>.</span></span> <span data-ttu-id="6a37a-120">이러한 인덱스는 선택 된 항목을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-120">These indexes specify items that are selected.</span></span>|  
  
 <span data-ttu-id="6a37a-121">다음 세 가지 예제를 보여 세 인덱싱된 컬렉션 하는 <xref:System.Windows.Forms.ListBox> 클래스는 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-121">The following three examples show the three indexed collections that the <xref:System.Windows.Forms.ListBox> class supports.</span></span>  
  
 <span data-ttu-id="6a37a-122">다음 표에서 방법의 예를 보여 줍니다. <xref:System.Windows.Forms.ListBox.ObjectCollection> 의 항목을 저장 된 <xref:System.Windows.Forms.ListBox> 예제에서의 선택 상태 뿐만 아니라 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-122">The following table shows an example of how the <xref:System.Windows.Forms.ListBox.ObjectCollection> stores the items of the <xref:System.Windows.Forms.ListBox> as well as their selection state within an example <xref:System.Windows.Forms.ListBox>.</span></span>  
  
|<span data-ttu-id="6a37a-123">인덱스</span><span class="sxs-lookup"><span data-stu-id="6a37a-123">Index</span></span>|<span data-ttu-id="6a37a-124">항목</span><span class="sxs-lookup"><span data-stu-id="6a37a-124">Item</span></span>|<span data-ttu-id="6a37a-125">목록 상자 내에서 선택 상태</span><span class="sxs-lookup"><span data-stu-id="6a37a-125">Selection state within the ListBox</span></span>|  
|-----------|----------|----------------------------------------|  
|<span data-ttu-id="6a37a-126">0</span><span class="sxs-lookup"><span data-stu-id="6a37a-126">0</span></span>|<span data-ttu-id="6a37a-127">개체 1</span><span class="sxs-lookup"><span data-stu-id="6a37a-127">object1</span></span>|<span data-ttu-id="6a37a-128">선택 취소</span><span class="sxs-lookup"><span data-stu-id="6a37a-128">Unselected</span></span>|  
|<span data-ttu-id="6a37a-129">1</span><span class="sxs-lookup"><span data-stu-id="6a37a-129">1</span></span>|<span data-ttu-id="6a37a-130">object2</span><span class="sxs-lookup"><span data-stu-id="6a37a-130">object2</span></span>|<span data-ttu-id="6a37a-131">선택함</span><span class="sxs-lookup"><span data-stu-id="6a37a-131">Selected</span></span>|  
|<span data-ttu-id="6a37a-132">2</span><span class="sxs-lookup"><span data-stu-id="6a37a-132">2</span></span>|<span data-ttu-id="6a37a-133">object3</span><span class="sxs-lookup"><span data-stu-id="6a37a-133">object3</span></span>|<span data-ttu-id="6a37a-134">선택 취소</span><span class="sxs-lookup"><span data-stu-id="6a37a-134">Unselected</span></span>|  
|<span data-ttu-id="6a37a-135">3</span><span class="sxs-lookup"><span data-stu-id="6a37a-135">3</span></span>|<span data-ttu-id="6a37a-136">object4</span><span class="sxs-lookup"><span data-stu-id="6a37a-136">object4</span></span>|<span data-ttu-id="6a37a-137">선택함</span><span class="sxs-lookup"><span data-stu-id="6a37a-137">Selected</span></span>|  
|<span data-ttu-id="6a37a-138">4</span><span class="sxs-lookup"><span data-stu-id="6a37a-138">4</span></span>|<span data-ttu-id="6a37a-139">object5</span><span class="sxs-lookup"><span data-stu-id="6a37a-139">object5</span></span>|<span data-ttu-id="6a37a-140">선택함</span><span class="sxs-lookup"><span data-stu-id="6a37a-140">Selected</span></span>|  
  
 <span data-ttu-id="6a37a-141">에 따라는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 이전 표와이 테이블을 보여 줍니다 방법을 <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-141">Based on the <xref:System.Windows.Forms.ListBox.ObjectCollection> shown in the previous table, this table shows how the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> would appear.</span></span>  
  
|<span data-ttu-id="6a37a-142">인덱스</span><span class="sxs-lookup"><span data-stu-id="6a37a-142">Index</span></span>|<span data-ttu-id="6a37a-143">항목</span><span class="sxs-lookup"><span data-stu-id="6a37a-143">Item</span></span>|  
|-----------|----------|  
|<span data-ttu-id="6a37a-144">0</span><span class="sxs-lookup"><span data-stu-id="6a37a-144">0</span></span>|<span data-ttu-id="6a37a-145">object2</span><span class="sxs-lookup"><span data-stu-id="6a37a-145">object2</span></span>|  
|<span data-ttu-id="6a37a-146">1</span><span class="sxs-lookup"><span data-stu-id="6a37a-146">1</span></span>|<span data-ttu-id="6a37a-147">object4</span><span class="sxs-lookup"><span data-stu-id="6a37a-147">object4</span></span>|  
|<span data-ttu-id="6a37a-148">2</span><span class="sxs-lookup"><span data-stu-id="6a37a-148">2</span></span>|<span data-ttu-id="6a37a-149">object5</span><span class="sxs-lookup"><span data-stu-id="6a37a-149">object5</span></span>|  
  
 <span data-ttu-id="6a37a-150">에 따라는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 이전 표와이 테이블을 보여 줍니다 방법을 <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-150">Based on the <xref:System.Windows.Forms.ListBox.ObjectCollection> shown in the previous table, this table shows how the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> would appear.</span></span>  
  
|<span data-ttu-id="6a37a-151">인덱스</span><span class="sxs-lookup"><span data-stu-id="6a37a-151">Index</span></span>|<span data-ttu-id="6a37a-152">항목의 인덱스</span><span class="sxs-lookup"><span data-stu-id="6a37a-152">Index of item</span></span>|  
|-----------|-------------------|  
|<span data-ttu-id="6a37a-153">0</span><span class="sxs-lookup"><span data-stu-id="6a37a-153">0</span></span>|<span data-ttu-id="6a37a-154">1</span><span class="sxs-lookup"><span data-stu-id="6a37a-154">1</span></span>|  
|<span data-ttu-id="6a37a-155">1</span><span class="sxs-lookup"><span data-stu-id="6a37a-155">1</span></span>|<span data-ttu-id="6a37a-156">3</span><span class="sxs-lookup"><span data-stu-id="6a37a-156">3</span></span>|  
|<span data-ttu-id="6a37a-157">2</span><span class="sxs-lookup"><span data-stu-id="6a37a-157">2</span></span>|<span data-ttu-id="6a37a-158">4</span><span class="sxs-lookup"><span data-stu-id="6a37a-158">4</span></span>|  
  
 <span data-ttu-id="6a37a-159"><xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 클래스를 사용 하면 항목을 추가 하는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-159">The <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class enables you to add items to the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-160"><xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 메서드는 멤버를 추가할 때 모든 개체를 사용할 수는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-160">The <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method can accept any object when adding a member to the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-161">에 개체가 추가 되는 경우는 <xref:System.Windows.Forms.ListBox>, 컨트롤이 정의 된 텍스트를 사용 하는 <xref:System.Object.ToString%2A> 개체의 메서드는 개체 내에서 멤버 이름을 지정 하지 않으면에 지정 된는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-161">When an object is being added to the <xref:System.Windows.Forms.ListBox>, the control uses the text defined in the <xref:System.Object.ToString%2A> method of the object unless a member name within the object is specified in the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property.</span></span> <span data-ttu-id="6a37a-162">사용 하 여 항목을 추가할 뿐 아니라는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 클래스를 추가할 수도 있습니다를 사용 하 여 항목의 <xref:System.Windows.Forms.ListControl.DataSource%2A> 속성의는 <xref:System.Windows.Forms.ListControl> 클래스.</span><span class="sxs-lookup"><span data-stu-id="6a37a-162">In addition to adding items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class you can also add items using the <xref:System.Windows.Forms.ListControl.DataSource%2A> property of the <xref:System.Windows.Forms.ListControl> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a37a-163">있는 경우는 <xref:System.Windows.Forms.ListBox>, <xref:System.Windows.Forms.ComboBox>, 또는 <xref:System.Windows.Forms.CheckedListBox> 는 기본 Windows form 및 파생된 Windows form에서 해당 컨트롤의 문자열 컬렉션을 수정 하려는에서는 기본 Windows form에서 해당 컨트롤의 문자열 컬렉션 비어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-163">If you have a <xref:System.Windows.Forms.ListBox>, <xref:System.Windows.Forms.ComboBox>, or <xref:System.Windows.Forms.CheckedListBox> on a base Windows form and want to modify the string collections of those controls in a derived Windows form, the string collections of those controls in the base Windows form must be empty.</span></span> <span data-ttu-id="6a37a-164">문자열 컬렉션이 비어 있지 않으며 되는 읽기 전용 다른 Windows form을 파생 시킬 때 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-164">If the string collections are not empty, they become read-only when you derive another Windows form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-165">다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox> 컨트롤 열에 여러 항목을 표시 하는 컨트롤의 목록에서 선택한 항목을 여러 개 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-165">The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list.</span></span> <span data-ttu-id="6a37a-166">50 개의 항목을 추가 하는 예제 코드는 <xref:System.Windows.Forms.ListBox> 를 사용 하는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 사용 하 여 목록에서 세 개의 항목 클래스와 선택은 <xref:System.Windows.Forms.ListBox.SetSelected%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-166">The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span> <span data-ttu-id="6a37a-167">다음 코드에서 값이 표시는 <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> 컬렉션을 통해는 <xref:System.Windows.Forms.ListBox.SelectedItems%2A> 속성 및 <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>을 통해는 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="6a37a-167">The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection, through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property, and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property.</span></span> <span data-ttu-id="6a37a-168">이 예제 코드에서 호출에 위치 하는 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-168">This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-169">
            <see cref="T:System.Windows.Forms.ListBox" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-169">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListBox" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6a37a-170">다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox> 컨트롤 열에 여러 항목을 표시 하는 컨트롤의 목록에서 선택한 항목을 여러 개 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-170">The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list.</span></span> <span data-ttu-id="6a37a-171">50 개의 항목을 추가 하는 예제 코드는 <xref:System.Windows.Forms.ListBox> 를 사용 하는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 사용 하 여 목록에서 세 개의 항목 클래스와 선택은 <xref:System.Windows.Forms.ListBox.SetSelected%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-171">The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span> <span data-ttu-id="6a37a-172">다음 코드에서 값이 표시는 <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> 컬렉션을 통해는 <xref:System.Windows.Forms.ListBox.SelectedItems%2A> 속성 및 <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>을 통해는 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="6a37a-172">The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection, through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property, and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property.</span></span> <span data-ttu-id="6a37a-173">이 예제 코드에서 호출에 위치 하는 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-173">This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemsCore">
      <MemberSignature Language="C#" Value="protected virtual void AddItemsCore (object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddItemsCore(object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.AddItemsCore(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddItemsCore (value As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddItemsCore(cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated.  There is no replacement.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6a37a-174">개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-174">An array of objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-175">이 멤버는 더 이상 사용되지 않으며 대체 멤버도 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-175">This member is obsolete, and there is no replacement.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSelection">
      <MemberSignature Language="C#" Value="protected override bool AllowSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.AllowSelection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property AllowSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool AllowSelection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-176">
            <see cref="T:System.Windows.Forms.ListBox" />에서 현재 목록의 항목을 선택할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-176">Gets a value indicating whether the <see cref="T:System.Windows.Forms.ListBox" /> currently enables selection of list items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-177">
            <see cref="T:System.Windows.Forms.SelectionMode" />가 <see cref="F:System.Windows.Forms.SelectionMode.None" />가 아니면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-177">
              <see langword="true" /> if <see cref="T:System.Windows.Forms.SelectionMode" /> is not <see cref="F:System.Windows.Forms.SelectionMode.None" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-178">컨트롤의 배경색을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-178">Gets or sets the background color for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-179">컨트롤의 배경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-179">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span>
          </span>
          <span data-ttu-id="6a37a-180">기본값은 <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-180">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-181">이 속성은 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-181">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-182">형식의 배경 이미지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-182">The background image of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-183">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-183">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-184">레이블의 <see cref="P:System.Windows.Forms.ListBox.BackgroundImage" /> 속성이 변경될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-184">Occurs when the <see cref="P:System.Windows.Forms.ListBox.BackgroundImage" /> property of the label changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-185">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-185">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-186">
            <see cref="T:System.Windows.Forms.ListBox" /> 열거형에 정의된 대로 <see cref="T:System.Windows.Forms.ImageLayout" />의 배경 이미지 레이아웃을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-186">Gets or sets the background image layout for a <see cref="T:System.Windows.Forms.ListBox" /> as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-187">
            <see cref="T:System.Windows.Forms.ImageLayout" />의 다음 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-187">One of the values of <see cref="T:System.Windows.Forms.ImageLayout" />.</span>
          </span>
          <span data-ttu-id="6a37a-188">값은 <see langword="Center" />, <see langword="None" />, <see langword="Stretch" />, <see langword="Tile" /> 또는 <see langword="Zoom" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-188">The values are <see langword="Center" />, <see langword="None" />, <see langword="Stretch" />, <see langword="Tile" />, or <see langword="Zoom" />.</span>
          </span>
          <span data-ttu-id="6a37a-189">기본값은 <see langword="Center" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-189">
              <see langword="Center" /> is the default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-190">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-190">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="6a37a-191">지정된 열거형 값이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-191">The specified enumeration value does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-192">
            <see cref="P:System.Windows.Forms.ListBox.BackgroundImageLayout" /> 속성이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-192">Occurs when the <see cref="P:System.Windows.Forms.ListBox.BackgroundImageLayout" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-193">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-193">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-194">
            <see cref="T:System.Windows.Forms.ListBox" /> 메서드가 호출될 때까지 해당 컨트롤이 그려지지 않도록 하여 항목이 한 번에 하나씩 <see cref="M:System.Windows.Forms.ListBox.EndUpdate" />에 추가되는 동안 성능을 유지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-194">Maintains performance while items are added to the <see cref="T:System.Windows.Forms.ListBox" /> one at a time by preventing the control from drawing until the <see cref="M:System.Windows.Forms.ListBox.EndUpdate" /> method is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-195">여러 항목을 추가 하는 것이 좋습니다는 <xref:System.Windows.Forms.ListBox> 사용 하는 것은 <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 클래스 (통해는 <xref:System.Windows.Forms.ListBox.Items%2A> 의 속성은 <xref:System.Windows.Forms.ListBox>).</span><span class="sxs-lookup"><span data-stu-id="6a37a-195">The preferred way to add multiple items to the <xref:System.Windows.Forms.ListBox> is to use the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class (through the <xref:System.Windows.Forms.ListBox.Items%2A> property of the <xref:System.Windows.Forms.ListBox>).</span></span> <span data-ttu-id="6a37a-196">이 항목의 배열을 한 번의 작업 목록에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-196">This enables you to add an array of items to the list in a single operation.</span></span> <span data-ttu-id="6a37a-197">하지만 추가 하려는 항목을 사용 하 여 한 번에 하나씩는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 사용할 수 있습니다 클래스는 <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> 컨트롤 다시 칠하지 않으려면 메서드는 <xref:System.Windows.Forms.ListBox> 항목이 목록에 추가 될 때마다 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-197">However, if you want to add items one at a time using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class, you can use the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> method to prevent the control from repainting the <xref:System.Windows.Forms.ListBox> each time an item is added to the list.</span></span> <span data-ttu-id="6a37a-198">목록에 항목을 추가 작업을 완료 했으면, 호출는 <xref:System.Windows.Forms.ListBox.EndUpdate%2A> 메서드를 사용 하도록 설정 된 <xref:System.Windows.Forms.ListBox> 다시 그려야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-198">Once you have completed the task of adding items to the list, call the <xref:System.Windows.Forms.ListBox.EndUpdate%2A> method to enable the <xref:System.Windows.Forms.ListBox> to repaint.</span></span> <span data-ttu-id="6a37a-199">이 방법으로 항목의 그리기 추가 <xref:System.Windows.Forms.ListBox> 많은 수의 항목은 목록에 추가 될 때입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-199">This way of adding items can prevent flickered drawing of the <xref:System.Windows.Forms.ListBox> when a large number of items are being added to the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-200">다음 코드 예제에서는 <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> 및 <xref:System.Windows.Forms.ListBox.EndUpdate%2A> 5 천 항목을 추가 하는 동안 메서드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-200">The following code example uses the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods while adding five thousand items to a <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-201">이 예제에서는 <xref:System.Windows.Forms.ListBox> 라는 컨트롤 `listBox1`에 추가 된는 <xref:System.Windows.Forms.Form> 이 메서드는 폼 내에 배치 하 고 여기에서 호출 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-201">This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.</span></span>  
  
 [!code-cpp[Classic ListBox.BeginUpdate Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox.BeginUpdate Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox.BeginUpdate Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox.BeginUpdate Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox.BeginUpdate Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox.BeginUpdate Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.EndUpdate" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-202">
            <see cref="T:System.Windows.Forms.ListBox" />에 그려진 테두리의 형식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-202">Gets or sets the type of border that is drawn around the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-203">
            <see cref="T:System.Windows.Forms.BorderStyle" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-203">One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values.</span>
          </span>
          <span data-ttu-id="6a37a-204">기본값은 <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-204">The default is <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="6a37a-205">값이 <see cref="T:System.Windows.Forms.BorderStyle" /> 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-205">The value is not one of the <see cref="T:System.Windows.Forms.BorderStyle" /> values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="ClearSelected">
      <MemberSignature Language="C#" Value="public void ClearSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ClearSelected" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearSelected ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearSelected();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-206">
            <see cref="T:System.Windows.Forms.ListBox" />의 모든 항목을 선택 취소합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-206">Unselects all items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-207">이 메서드를 호출 하는 것이 설정에 해당 하는 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> 속성을-1입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-207">Calling this method is equivalent to setting the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property to negative one (-1).</span></span> <span data-ttu-id="6a37a-208">목록의 모든 항목이 선택 취소 신속 하 게 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-208">You can use this method to quickly unselect all items in the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-209">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> 속성으로는 <xref:System.Windows.Forms.ListBox.TopIndex%2A> 속성을 현재 선택 된 항목의 표시 영역에 있는 항목의 목록 맨 위로 이동 하는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-209">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-210">이 예에서 좀더 나아가 사용 하 여 항목을 제거 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> 의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> 클래스 및 사용 하 여 모든 항목 선택의 선택을 취소 하는 방법의 <xref:System.Windows.Forms.ListBox.ClearSelected%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-210">The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method.</span></span> <span data-ttu-id="6a37a-211">코드 현재 선택 된 항목을 먼저 이동는 <xref:System.Windows.Forms.ListBox> 목록의 맨 위로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-211">The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list.</span></span> <span data-ttu-id="6a37a-212">현재 선택한 항목 앞의 모든 항목을 제거 및에서 모든 선택을 취소 한 다음 코드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-212">The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-213">이 예제에서는 한 <xref:System.Windows.Forms.ListBox> 항목을 포함 하는 폼에 추가 하 고 선택 하는 항목은 현재는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-213">This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-cpp[ListBox.SelectedIndex#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndex/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndex#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndex/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndex#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndex/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedIndex" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-214">
            <see cref="T:System.Windows.Forms.ListBox" /> 컨트롤을 클릭하면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-214">Occurs when the <see cref="T:System.Windows.Forms.ListBox" /> control is clicked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidth">
      <MemberSignature Language="C#" Value="public int ColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-215">여러 열로 구성된 <see cref="T:System.Windows.Forms.ListBox" />의 열 너비를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-215">Gets or sets the width of columns in a multicolumn <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-216">컨트롤에 있는 각 열의 너비(픽셀)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-216">The width, in pixels, of each column in the control.</span>
          </span>
          <span data-ttu-id="6a37a-217">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-217">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-218">값 영 (0)으로 설정 하면 기본 너비는 각 열에 할당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-218">If you set the value to zero (0), a default width is assigned to each column.</span></span> <span data-ttu-id="6a37a-219">경우는 <xref:System.Windows.Forms.ListBox> 는 복수 열은 <xref:System.Windows.Forms.ListBox>,이 속성 목록에서 각 열의 현재 너비를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-219">If the <xref:System.Windows.Forms.ListBox> is a multicolumn <xref:System.Windows.Forms.ListBox>, this property returns the current width of each column in the list.</span></span> <span data-ttu-id="6a37a-220">이 속성을 사용 하 여 되도록 각 열에는 여러 열로 구성할 수 있습니다 <xref:System.Windows.Forms.ListBox> 항목이 제대로 표시 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-220">You can use this property to ensure that each column in a multicolumn <xref:System.Windows.Forms.ListBox> can properly display its items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-221">다음 코드 예제에서는 간단한 2 열을 보여 줍니다. <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-221">The following code example demonstrates a simple two-column <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListBox.MultiColumn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBox.MultiColumn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBox.MultiColumn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBox.MultiColumn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a37a-222">속성에 할당된 값이 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-222">A value less than zero is assigned to the property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateItemCollection">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.ListBox.ObjectCollection CreateItemCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.ListBox/ObjectCollection CreateItemCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.CreateItemCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItemCollection () As ListBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::ListBox::ObjectCollection ^ CreateItemCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-223">항목 컬렉션의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-223">Creates a new instance of the item collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a37a-224">새 항목 컬렉션을 나타내는 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-224">A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> that represents the new item collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6a37a-225">이 항목을 저장 하려면 다른 컬렉션을 제공 하 여 파생된 클래스에서 재정의할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6a37a-225">You can override this in your derived classes to provide a different collection to store your items.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.ListBox.ObjectCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-226">컨트롤 핸들이 만들어지는 경우 필요한 작성 매개 변수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-226">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-227">컨트롤 핸들을 만들 때 필요한 작성 매개 변수가 포함된 <see cref="T:System.Windows.Forms.CreateParams" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-227">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6a37a-228">에 비관리 코드와 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-228">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="6a37a-229">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-229">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CustomTabOffsets">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListBox.IntegerCollection CustomTabOffsets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListBox/IntegerCollection CustomTabOffsets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.CustomTabOffsets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomTabOffsets As ListBox.IntegerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListBox::IntegerCollection ^ CustomTabOffsets { System::Windows::Forms::ListBox::IntegerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+IntegerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-230">
            <see cref="T:System.Windows.Forms.ListBox" />에 있는 항목 사이의 탭 너비를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-230">Gets the width of the tabs between the items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-231">탭 너비를 나타내는 정수 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-231">A collection of integers representing the tab widths.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-232">정수 배열에는 오름차순 탭 공백이 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-232">The integer array contains the tab spaces in ascending order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultItemHeight">
      <MemberSignature Language="C#" Value="public const int DefaultItemHeight = 13;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultItemHeight = (13)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ListBox.DefaultItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultItemHeight As Integer  = 13" />
      <MemberSignature Language="C++ CLI" Value="public: int DefaultItemHeight = 13;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-233">소유자가 그린 <see cref="T:System.Windows.Forms.ListBox" />의 기본 항목 높이를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-233">Specifies the default item height for an owner-drawn <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-234">컨트롤의 기본 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-234">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-235">컨트롤의 기본 <see cref="T:System.Drawing.Size" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-235">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawItemEventHandler ^ DrawItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-236">소유자가 그린 <see cref="T:System.Windows.Forms.ListBox" />의 시각적 측면이 변경될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-236">Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.ListBox" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-237">이 이벤트는 사용 하 여 소유자가 그린 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-237">This event is used by an owner-drawn <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-238">이 이벤트는만 될 때 발생 하는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 속성이로 설정 되어 `DrawMode.OwnerDrawFixed` 또는 `DrawMode.OwnerDrawVariable`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-238">The event is only raised when the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawFixed` or `DrawMode.OwnerDrawVariable`.</span></span> <span data-ttu-id="6a37a-239">이 이벤트를 사용 하 여 항목을 그리는 데 필요한 작업을 수행 하는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-239">You can use this event to perform the tasks needed to draw items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-240">다양 한 크기 항목이 있는 경우 (때는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 속성이 `DrawMode.OwnerDrawVariable`), 항목을 그리기 전에 <xref:System.Windows.Forms.ListBox.MeasureItem> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-240">If you have a variable-sized item (when the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawVariable`), before drawing an item, the <xref:System.Windows.Forms.ListBox.MeasureItem> event is raised.</span></span> <span data-ttu-id="6a37a-241">에 대 한 이벤트 처리기를 만들 수는 <xref:System.Windows.Forms.ListBox.MeasureItem> 을 그리는 데에 대 한 이벤트 처리기에서 항목에 대 한 크기를 지정 하는 이벤트는 <xref:System.Windows.Forms.ListBox.DrawItem> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-241">You can create an event handler for the <xref:System.Windows.Forms.ListBox.MeasureItem> event to specify the size for the item that you are going to draw in your event handler for the <xref:System.Windows.Forms.ListBox.DrawItem> event.</span></span>  
  
 <span data-ttu-id="6a37a-242">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-242">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-243">다음 코드 예제에는 소유자가 그린 만드는 방법을 보여 줍니다 <xref:System.Windows.Forms.ListBox> 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-243">The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items.</span></span> <span data-ttu-id="6a37a-244">코드를 사용 하 여는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 그리는 항목은 고정 되도록 지정 하는 속성 및 <xref:System.Windows.Forms.ListBox.DrawItem> 에 각 항목의 그리기를 수행 하는 이벤트는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-244">The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-245">예제 코드의 메서드와 속성을 사용 하는 <xref:System.Windows.Forms.DrawItemEventArgs> 클래스 항목을 그립니다 이벤트 처리기에 매개 변수로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-245">The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items.</span></span> <span data-ttu-id="6a37a-246">이 예제에서는 한 <xref:System.Windows.Forms.ListBox> 라는 컨트롤 `listBox1` 폼에 추가 되었습니다는 <xref:System.Windows.Forms.ListBox.DrawItem> 예제 코드에 정의 된 이벤트 처리기 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-246">This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code.</span></span> <span data-ttu-id="6a37a-247">항목이에 추가 것도 예제를 실행 하려면는 <xref:System.Windows.Forms.ListBox> 그 순서 대로 "Apple", "주황색" 및 "Plum" 텍스트를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-247">The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of "Apple", "Orange", and "Plum" in that order.</span></span>  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DrawMode DrawMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.DrawMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DrawMode As DrawMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DrawMode DrawMode { System::Windows::Forms::DrawMode get(); void set(System::Windows::Forms::DrawMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-248">컨트롤의 그리기 모드를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-248">Gets or sets the drawing mode for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-249">컨트롤 항목의 그리기 모드를 나타내는 <see cref="T:System.Windows.Forms.DrawMode" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-249">One of the <see cref="T:System.Windows.Forms.DrawMode" /> values representing the mode for drawing the items of the control.</span>
          </span>
          <span data-ttu-id="6a37a-250">기본값은 <see langword="DrawMode.Normal" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-250">The default is <see langword="DrawMode.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6a37a-251">다음 코드 예제에는 소유자가 그린 만드는 방법을 보여 줍니다 <xref:System.Windows.Forms.ListBox> 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-251">The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items.</span></span> <span data-ttu-id="6a37a-252">코드를 사용 하 여는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 그리는 항목은 고정 되도록 지정 하는 속성 및 <xref:System.Windows.Forms.ListBox.DrawItem> 에 각 항목의 그리기를 수행 하는 이벤트는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-252">The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-253">예제 코드의 메서드와 속성을 사용 하는 <xref:System.Windows.Forms.DrawItemEventArgs> 클래스 항목을 그립니다 이벤트 처리기에 매개 변수로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-253">The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items.</span></span> <span data-ttu-id="6a37a-254">이 예제에서는 한 <xref:System.Windows.Forms.ListBox> 라는 컨트롤 `listBox1` 폼에 추가 되었습니다는 <xref:System.Windows.Forms.ListBox.DrawItem> 예제 코드에 정의 된 이벤트 처리기 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-254">This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code.</span></span> <span data-ttu-id="6a37a-255">항목이에 추가 것도 예제를 실행 하려면는 <xref:System.Windows.Forms.ListBox> 그 순서 대로 "Apple", "주황색" 및 "Plum" 텍스트를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-255">The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of "Apple", "Orange", and "Plum" in that order.</span></span>  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="6a37a-256">속성에 할당된 값이 <see cref="T:System.Windows.Forms.DrawMode" /> 열거형의 멤버가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-256">The value assigned to the property is not a member of the <see cref="T:System.Windows.Forms.DrawMode" /> enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a37a-257">여러 열로 구성된 <see cref="T:System.Windows.Forms.ListBox" />가 가변 높이를 가질 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-257">A multicolumn <see cref="T:System.Windows.Forms.ListBox" /> cannot have a variable-sized height.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.DrawMode" />
        <altmember cref="E:System.Windows.Forms.ListBox.DrawItem" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-258">
            <see cref="T:System.Windows.Forms.ListBox" /> 메서드에 의해 그리기가 일시 중단된 후 <see cref="M:System.Windows.Forms.ListBox.BeginUpdate" /> 컨트롤 그리기를 다시 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-258">Resumes painting the <see cref="T:System.Windows.Forms.ListBox" /> control after painting is suspended by the <see cref="M:System.Windows.Forms.ListBox.BeginUpdate" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-259">항목을 추가 하는 것이 좋습니다는 <xref:System.Windows.Forms.ListBox> 사용 하는 것은 <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 클래스 (통해는 <xref:System.Windows.Forms.ListBox.Items%2A> 의 속성은 <xref:System.Windows.Forms.ListBox>).</span><span class="sxs-lookup"><span data-stu-id="6a37a-259">The preferred way to add items to the <xref:System.Windows.Forms.ListBox> is to use the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class (through the <xref:System.Windows.Forms.ListBox.Items%2A> property of the <xref:System.Windows.Forms.ListBox>).</span></span> <span data-ttu-id="6a37a-260">이 항목의 배열 목록에 한 번에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-260">This enables you to add an array of items to the list at one time.</span></span> <span data-ttu-id="6a37a-261">하지만 추가 하려는 항목을 사용 하 여 한 번에 하나씩는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 사용할 수 있습니다 클래스는 <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> 컨트롤 다시 칠하지 않으려면 메서드는 <xref:System.Windows.Forms.ListBox> 항목이 목록에 추가 될 때마다 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-261">However, if you want to add items one at a time using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class, you can use the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> method to prevent the control from repainting the <xref:System.Windows.Forms.ListBox> each time an item is added to the list.</span></span> <span data-ttu-id="6a37a-262">목록에 항목을 추가 작업을 완료 했으면, 호출는 <xref:System.Windows.Forms.ListBox.EndUpdate%2A> 메서드를 사용 하도록 설정 된 <xref:System.Windows.Forms.ListBox> 다시 그려야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-262">Once you have completed the task of adding items to the list, call the <xref:System.Windows.Forms.ListBox.EndUpdate%2A> method to enable the <xref:System.Windows.Forms.ListBox> to repaint.</span></span> <span data-ttu-id="6a37a-263">이 방법으로 항목의 그리기 추가 <xref:System.Windows.Forms.ListBox> 많은 수의 항목은 목록에 추가 될 때입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-263">This way of adding items can prevent flickered drawing of the <xref:System.Windows.Forms.ListBox> when a large number of items are being added to the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-264">다음 코드 예제에서는 <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> 및 <xref:System.Windows.Forms.ListBox.EndUpdate%2A> 5 천 항목을 추가 하는 동안 메서드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-264">The following code example uses the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods while adding five thousand items to a <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-265">이 예제에서는 <xref:System.Windows.Forms.ListBox> 라는 컨트롤 `listBox1`에 추가 된는 <xref:System.Windows.Forms.Form> 이 메서드는 폼 내에 배치 하 고 여기에서 호출 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-265">This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.</span></span>  
  
 [!code-cpp[Classic ListBox.BeginUpdate Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox.BeginUpdate Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox.BeginUpdate Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox.BeginUpdate Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox.BeginUpdate Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox.BeginUpdate Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.BeginUpdate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindString">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-266">지정된 문자열로 시작되는 <see cref="T:System.Windows.Forms.ListBox" />의 첫째 항목을 찾습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-266">Finds the first item in the <see cref="T:System.Windows.Forms.ListBox" /> that starts with the specified string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindString">
      <MemberSignature Language="C#" Value="public int FindString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindString(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.FindString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindString (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindString(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6a37a-267">검색할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-267">The text to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-268">지정된 문자열로 시작되는 <see cref="T:System.Windows.Forms.ListBox" />의 첫째 항목을 찾습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-268">Finds the first item in the <see cref="T:System.Windows.Forms.ListBox" /> that starts with the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a37a-269">찾은 첫째 항목의 인덱스(0부터 시작)입니다. 일치하는 항목이 없으면 <see langword="ListBox.NoMatches" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-269">The zero-based index of the first item found; returns <see langword="ListBox.NoMatches" /> if no match is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-270">이 메서드에 의해 수행 되는 검색 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-270">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="6a37a-271">부분적으로 지정 된 검색 문자열 매개 변수의 이름과 일치 하는 단어에 대 한 검색이 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-271">The search looks for words that partially match the specified search string parameter, `s`.</span></span> <span data-ttu-id="6a37a-272">지정된 된 문자열과 일치 하는 첫 번째 항목을 검색 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-272">You can use this method to search for the first item that matches the specified string.</span></span> <span data-ttu-id="6a37a-273">사용 하 여 검색 텍스트를 포함 하는 항목을 제거 하는 등 작업을 수행할 수 있습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 메서드 또는 항목의 텍스트를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-273">You can then perform tasks such as removing the item that contains the search text by using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="6a37a-274">에 있는 텍스트의 다른 인스턴스를 검색 하려는 경우 지정된 된 텍스트를 발견 하면는 <xref:System.Windows.Forms.ListBox>의 버전을 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox.FindString%2A> 내의 시작 인덱스를 지정 하기 위한 매개 변수를 제공 하는 메서드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-274">Once you have found the specified text, if you want to search for other instances of the text in the <xref:System.Windows.Forms.ListBox>, you can use the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that provides a parameter for specifying a starting index within the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-275">사용 하 여 부분적으로 일치 하는 대신 정확 하 게 일치 하는 값에 대 한 검색을 수행 하려는 경우는 <xref:System.Windows.Forms.ListBox.FindStringExact%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-275">If you want to perform a search for an exact word match instead of a partial match, use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-276">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox.FindString%2A> 에 문자열의 첫 번째 인스턴스를 검색 하는 메서드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-276">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for the first instance of a string in a <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-277">검색 문자열을 일치 하는 항목을 찾지 <xref:System.Windows.Forms.ListBox.FindString%2A> -1을 반환 값과 예제에서는 표시 된 <xref:System.Windows.Forms.MessageBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-277">If no items are found that match the search string <xref:System.Windows.Forms.ListBox.FindString%2A> returns a -1 value and the example displays a <xref:System.Windows.Forms.MessageBox>.</span></span> <span data-ttu-id="6a37a-278">예제에서는 검색 텍스트와 일치 하는 항목이 없으면는 <xref:System.Windows.Forms.ListBox.SetSelected%2A> 에서 항목을 선택 하는 메서드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-278">If an item is found that matches the search text, the example uses the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method to select the item in the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-cpp[ListBox.FindString2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindString2/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindString2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindString2/CS/form1.cs#1)]
 [!code-vb[ListBox.FindString2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindString2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a37a-279">
            <paramref name="s" /> 매개 변수의 값이 -1보다 작거나 항목 수보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-279">The value of the <paramref name="s" /> parameter is less than -1 or greater than or equal to the item count.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.ListBox.FindStringExact(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FindString">
      <MemberSignature Language="C#" Value="public int FindString (string s, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindString(string s, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.FindString(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindString (s As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindString(System::String ^ s, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6a37a-280">검색할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-280">The text to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="6a37a-281">검색될 첫째 항목 앞에 나오는 항목의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-281">The zero-based index of the item before the first item to be searched.</span>
          </span>
          <span data-ttu-id="6a37a-282">컨트롤의 처음부터 검색하려면 -1로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-282">Set to negative one (-1) to search from the beginning of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-283">지정된 문자열로 시작되는 <see cref="T:System.Windows.Forms.ListBox" />의 첫째 항목을 찾습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-283">Finds the first item in the <see cref="T:System.Windows.Forms.ListBox" /> that starts with the specified string.</span>
          </span>
          <span data-ttu-id="6a37a-284">검색은 특정 시작 인덱스에서 시작됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-284">The search starts at a specific starting index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a37a-285">찾은 첫째 항목의 인덱스(0부터 시작)입니다. 일치하는 항목이 없으면 <see langword="ListBox.NoMatches" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-285">The zero-based index of the first item found; returns <see langword="ListBox.NoMatches" /> if no match is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-286">이 메서드에 의해 수행 되는 검색 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-286">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="6a37a-287">부분적으로 지정 된 검색 문자열 매개 변수의 이름과 일치 하는 단어에 대 한 검색이 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-287">The search looks for words that partially match the specified search string parameter, `s`.</span></span> <span data-ttu-id="6a37a-288">이 메서드를 사용 하 여 지정된 된 문자열에 대 한 항목의 목록에 지정 된 시작 인덱스에서 일치 하는 첫 번째 항목을 검색 하는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-288">You can use this method to search for the first item that matches the specified string at the specified starting index within the list of items for the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-289">사용 하 여 검색 텍스트를 포함 하는 항목을 제거 하는 등 작업을 수행할 수 있습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 메서드 또는 항목의 텍스트를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-289">You can then perform tasks such as removing the item that contains the search text by using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="6a37a-290">이 메서드는 호출을 시작 하는 인덱스를 지정 하지 않는이 메서드의 버전을 사용 하 여 수행 된 후 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-290">This method is typically used after a call has been made using the version of this method that does not specify a starting index.</span></span> <span data-ttu-id="6a37a-291">이 메서드는 인덱스 위치를 지정 하 여 검색 텍스트의 인스턴스를 추가로 찾는 데 일반적으로 목록의 첫 항목을 찾은 `startIndex` 후 첫 번째 발견된 인스턴스 검색 텍스트의 다음 항목의 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-291">Once an initial item has been found in the list, this method is typically used to find further instances of the search text by specifying the index position in the `startIndex` parameter of the item after the first found instance of the search text.</span></span> <span data-ttu-id="6a37a-292">사용 하 여 부분적으로 일치 하는 대신 정확 하 게 일치 하는 값에 대 한 검색을 수행 하려는 경우는 <xref:System.Windows.Forms.ListBox.FindStringExact%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-292">If you want to perform a search for an exact word match instead of a partial match, use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a37a-293">검색 맨 아래에 도달한 경우는 <xref:System.Windows.Forms.ListBox>, 맨 위부터 검색이 계속는 <xref:System.Windows.Forms.ListBox> 로 지정 된 항목으로 돌아가기는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-293">When the search reaches the bottom of the <xref:System.Windows.Forms.ListBox>, it continues searching from the top of the <xref:System.Windows.Forms.ListBox> back to the item specified by the `startIndex` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-294">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox.FindString%2A> 의 항목에서 검색 텍스트의 모든 인스턴스에 대 한 검색 메서드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-294">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for all instances of the search text in the items of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-295">버전을 사용 하 여의 예제는 <xref:System.Windows.Forms.ListBox.FindString%2A> 에 모든 항목의 연속 검색을 시작 하는 검색 인덱스를 지정할 수 있도록 하는 메서드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-295">The example uses the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-296">시기를 결정 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.FindString%2A> 메서드 재귀 검색을 방지 하기 위해 항목 목록의 아래쪽에 도달한 후 목록의 처음부터 검색 하기 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-296">The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindString%2A> method begins searching from the top of the list after it reaches the bottom of the list of items to prevent a recursive search.</span></span> <span data-ttu-id="6a37a-297">항목에서 발견 되 면는 <xref:System.Windows.Forms.ListBox>를 사용 하 여 선택 된 <xref:System.Windows.Forms.ListBox.SetSelected%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-297">Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span>  
  
 [!code-cpp[ListBox.FindString#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindString/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindString/CS/form1.cs#1)]
 [!code-vb[ListBox.FindString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindString/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a37a-298">
            <paramref name="startIndex" /> 매개 변수가 0보다 작거나 <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> 클래스의 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> 속성 값보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-298">The <paramref name="startIndex" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.ListBox.FindStringExact(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindStringExact">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-299">지정된 문자열과 정확히 일치하는 <see cref="T:System.Windows.Forms.ListBox" />의 첫째 항목을 찾습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-299">Finds the first item in the <see cref="T:System.Windows.Forms.ListBox" /> that exactly matches the specified string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindStringExact">
      <MemberSignature Language="C#" Value="public int FindStringExact (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindStringExact(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.FindStringExact(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindStringExact (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindStringExact(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6a37a-300">검색할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-300">The text to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-301">지정된 문자열과 정확히 일치하는 <see cref="T:System.Windows.Forms.ListBox" />의 첫째 항목을 찾습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-301">Finds the first item in the <see cref="T:System.Windows.Forms.ListBox" /> that exactly matches the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a37a-302">찾은 첫째 항목의 인덱스(0부터 시작)입니다. 일치하는 항목이 없으면 <see langword="ListBox.NoMatches" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-302">The zero-based index of the first item found; returns <see langword="ListBox.NoMatches" /> if no match is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-303">이 메서드에 의해 수행 되는 검색 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-303">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="6a37a-304">검색 문자열 매개 변수에서 지정 된 단어는 정확히 일치에 대 한 검색이 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-304">The search looks for an exact match to the words specified in the search string parameter, `s`.</span></span> <span data-ttu-id="6a37a-305">지정된 된 문자열과 일치 하는 첫 번째 항목을 검색 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-305">You can use this method to search for the first item that matches the specified string.</span></span> <span data-ttu-id="6a37a-306">사용 하 여 검색 텍스트를 포함 하는 항목을 제거 하는 등 작업을 수행할 수 있습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 메서드 또는 항목의 텍스트를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-306">You can then perform tasks such as removing the item that contains the search text by using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="6a37a-307">에 있는 텍스트의 다른 인스턴스를 검색 하려는 경우 지정된 된 텍스트를 발견 하면는 <xref:System.Windows.Forms.ListBox>의 버전을 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox.FindStringExact%2A> 내의 시작 인덱스를 지정 하기 위한 매개 변수를 제공 하는 메서드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-307">Once you have found the specified text, if you want to search for other instances of the text in the <xref:System.Windows.Forms.ListBox>, you can use the version of the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method that provides a parameter for specifying a starting index within the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-308">사용 하 여 완전 하 게 일치 하는 대신 부분 단어 검색을 수행 하려는 경우는 <xref:System.Windows.Forms.ListBox.FindString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-308">If you want to perform partial word search instead of an exact word match, use the <xref:System.Windows.Forms.ListBox.FindString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-309">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox.FindStringExact%2A?displayProperty=nameWithType> 메서드를 검색 한 <xref:System.Windows.Forms.ListBox> 지정 된 문자열과 정확히 일치 하는 항목에 대 한 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-309">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A?displayProperty=nameWithType> method to search a <xref:System.Windows.Forms.ListBox> control for an item that exactly matches a specified string.</span></span> <span data-ttu-id="6a37a-310">검색 문자열을 일치 하는 항목을 찾지 못할 경우 <xref:System.Windows.Forms.ListBox.FindStringExact%2A> -1을 반환 값과 예제에서는 표시는 <xref:System.Windows.Forms.MessageBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-310">If no items are found that match the search string, <xref:System.Windows.Forms.ListBox.FindStringExact%2A> returns a -1 value and the example displays a <xref:System.Windows.Forms.MessageBox>.</span></span> <span data-ttu-id="6a37a-311">예제에서는 검색 텍스트와 일치 하는 항목이 없으면는 <xref:System.Windows.Forms.ListBox.SetSelected%2A> 에서 항목을 선택 하는 메서드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-311">If an item is found that matches the search text, the example uses the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method to select the item in the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-cpp[ListBox.FindStringExact#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindStringExact/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindStringExact#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindStringExact/CS/form1.cs#1)]
 [!code-vb[ListBox.FindStringExact#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindStringExact/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.FindString(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FindStringExact">
      <MemberSignature Language="C#" Value="public int FindStringExact (string s, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindStringExact(string s, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindStringExact (s As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindStringExact(System::String ^ s, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6a37a-312">검색할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-312">The text to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="6a37a-313">검색될 첫째 항목 앞에 나오는 항목의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-313">The zero-based index of the item before the first item to be searched.</span>
          </span>
          <span data-ttu-id="6a37a-314">컨트롤의 처음부터 검색하려면 -1로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-314">Set to negative one (-1) to search from the beginning of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-315">지정된 문자열과 정확히 일치하는 <see cref="T:System.Windows.Forms.ListBox" />의 첫째 항목을 찾습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-315">Finds the first item in the <see cref="T:System.Windows.Forms.ListBox" /> that exactly matches the specified string.</span>
          </span>
          <span data-ttu-id="6a37a-316">검색은 특정 시작 인덱스에서 시작됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-316">The search starts at a specific starting index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a37a-317">찾은 첫째 항목의 인덱스(0부터 시작)입니다. 일치하는 항목이 없으면 <see langword="ListBox.NoMatches" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-317">The zero-based index of the first item found; returns <see langword="ListBox.NoMatches" /> if no match is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-318">이 메서드에 의해 수행 되는 검색 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-318">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="6a37a-319">지정 된 검색 문자열 매개 변수를 정확 하 게 일치 하는 단어에 대 한 검색이 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-319">The search looks for words that exactly match the specified search string parameter, `s`.</span></span> <span data-ttu-id="6a37a-320">이 메서드를 사용 하 여 지정된 된 문자열에 대 한 항목의 목록에 지정 된 시작 인덱스에서 일치 하는 첫 번째 항목을 검색 하는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-320">You can use this method to search for the first item that matches the specified string at the specified starting index within the list of items for the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-321">사용 하 여 검색 텍스트를 포함 하는 항목을 제거 하는 등 작업을 수행할 수 있습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 메서드 또는 항목의 텍스트를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-321">You can then perform tasks such as removing the item that contains the search text using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or change the item's text.</span></span> <span data-ttu-id="6a37a-322">이 메서드는 호출을 시작 하는 인덱스를 지정 하지 않는이 메서드의 버전을 사용 하 여 수행 된 후 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-322">This method is typically used after a call has been made using the version of this method that does not specify a starting index.</span></span> <span data-ttu-id="6a37a-323">이 메서드는 인덱스 위치를 지정 하 여 검색 텍스트의 인스턴스를 추가로 찾는 데 일반적으로 목록의 첫 항목을 찾은 `startIndex` 후 첫 번째 발견된 인스턴스 검색 텍스트의 다음 항목의 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-323">Once an initial item has been found in the list, this method is typically used to find further instances of the search text by specifying the index position in the `startIndex` parameter of the item after the first found instance of the search text.</span></span> <span data-ttu-id="6a37a-324">사용 하 여 완전 하 게 일치 하는 대신 부분 단어 검색을 수행 하려는 경우는 <xref:System.Windows.Forms.ListBox.FindString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-324">If you want to perform a partial word search instead of an exact word match, use the <xref:System.Windows.Forms.ListBox.FindString%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a37a-325">검색 맨 아래에 도달한 경우는 <xref:System.Windows.Forms.ListBox>, 맨 위부터 검색이 계속는 <xref:System.Windows.Forms.ListBox> 로 지정 된 항목으로 돌아가기는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-325">When the search reaches the bottom of the <xref:System.Windows.Forms.ListBox>, it continues searching from the top of the <xref:System.Windows.Forms.ListBox> back to the item specified by the `startIndex` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-326">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox.FindStringExact%2A> 에서 모든 항목을 검색 하는 메서드는 <xref:System.Windows.Forms.ListBox> 지정된 된 검색 텍스트가 정확히 일치 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-326">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method to search for all items in a <xref:System.Windows.Forms.ListBox> that exactly match the specified search text.</span></span> <span data-ttu-id="6a37a-327">버전을 사용 하 여의 예제는 <xref:System.Windows.Forms.ListBox.FindStringExact%2A> 에 모든 항목의 연속 검색을 시작 하는 검색 인덱스를 지정할 수 있도록 하는 메서드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-327">The example uses the version of the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-328">시기를 결정 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.FindStringExact%2A> 메서드 재귀 검색을 방지 하기 위해 항목 목록의 아래쪽에 도달한 후 목록의 처음부터 검색 하기 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-328">The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method begins searching from the top of the list after it reaches the bottom of the list of items, to prevent a recursive search.</span></span> <span data-ttu-id="6a37a-329">항목에서 발견 되 면는 <xref:System.Windows.Forms.ListBox>를 사용 하 여 선택 된 <xref:System.Windows.Forms.ListBox.SetSelected%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-329">Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span>  
  
 [!code-cpp[ListBox.FindStringExact2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindStringExact2/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindStringExact2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindStringExact2/CS/form1.cs#1)]
 [!code-vb[ListBox.FindStringExact2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindStringExact2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a37a-330">
            <paramref name="startIndex" /> 매개 변수가 0보다 작거나 <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> 클래스의 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> 속성 값보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-330">The <paramref name="startIndex" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.ListBox.FindString(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-331">컨트롤에서 표시되는 텍스트의 글꼴을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-331">Gets or sets the font of the text displayed by the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-332">컨트롤에 표시되는 텍스트에 적용되는 <see cref="T:System.Drawing.Font" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-332">The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.</span>
          </span>
          <span data-ttu-id="6a37a-333">기본값은 <see cref="P:System.Windows.Forms.Control.DefaultFont" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-333">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-334">컨트롤의 전경색을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-334">Gets or sets the foreground color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-335">컨트롤의 전경 <see cref="T:System.Drawing.Color" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-335">The foreground <see cref="T:System.Drawing.Color" /> of the control.</span>
          </span>
          <span data-ttu-id="6a37a-336">기본값은 <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-336">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemHeight">
      <MemberSignature Language="C#" Value="public int GetItemHeight (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetItemHeight(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.GetItemHeight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemHeight (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetItemHeight(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="6a37a-337">높이를 반환할 항목의 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-337">The zero-based index of the item to return the height for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-338">
            <see cref="T:System.Windows.Forms.ListBox" />의 항목 높이를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-338">Returns the height of an item in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a37a-339">지정된 항목의 높이(픽셀)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-339">The height, in pixels, of the specified item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-340">경우는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 속성으로 설정 되지 않은 `DrawMode.OwnerDrawVariable`, 모든 표준에서 항목의 인덱스 매개 변수 값은 무시 됩니다 <xref:System.Windows.Forms.ListBox> 크기는 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-340">If the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is not set to `DrawMode.OwnerDrawVariable`, the value of the index parameter is ignored because all items in a standard <xref:System.Windows.Forms.ListBox> are the same size.</span></span> <span data-ttu-id="6a37a-341">소유자가 그린 사용 하는 경우이 속성을 사용할 수 있습니다 <xref:System.Windows.Forms.ListBox> 내에서 모든 항목의 크기를 결정 하는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-341">You can use this property when you are using an owner-drawn <xref:System.Windows.Forms.ListBox> to determine the size of any item within the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a37a-342">
            <paramref name="index" /> 매개 변수에 지정된 값이 0보다 작거나 항목 수보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-342">The specified value of the <paramref name="index" /> parameter is less than zero or greater than the item count.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetItemRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRectangle (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRectangle(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRectangle (index As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRectangle(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="6a37a-343">해당 경계 사각형을 반환하려는 항목의 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-343">The zero-based index of item whose bounding rectangle you want to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-344">
            <see cref="T:System.Windows.Forms.ListBox" />의 항목에 대한 경계 사각형을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-344">Returns the bounding rectangle for an item in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a37a-345">지정된 항목의 경계 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-345">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle for the specified item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-346">항목에 지정 된 경우는 `index` 매개 변수 표시 이면이 메서드에서 반환 되는 사각형 컨트롤의 보이는 부분 외부 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-346">If the item specified in the `index` parameter is not visible, the rectangle returned by this method will be outside the visible portion of the control.</span></span> <span data-ttu-id="6a37a-347">목록 내 항목의 위치와 크기를 확인 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-347">You can use this method to determine the size and position of an item within the list.</span></span> <span data-ttu-id="6a37a-348">항목의 높이 얻기 위해 특히 가변 높이 소유자 그리기 목록 항목 있습니다 사용할 수는 <xref:System.Windows.Forms.ListBox.GetItemHeight%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-348">To get the height of an item, especially a variable-height owner drawn list item, you can use the <xref:System.Windows.Forms.ListBox.GetItemHeight%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a37a-349">
            <paramref name="index" /> 매개 변수가 0보다 작거나 <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> 클래스의 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> 속성 값보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-349">The <paramref name="index" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScaledBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetScaledBounds(valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetScaledBounds (bounds As Rectangle, factor As SizeF, specified As BoundsSpecified) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetScaledBounds(System::Drawing::Rectangle bounds, System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="bounds">
          <span data-ttu-id="6a37a-350">디스플레이 범위를 검색할 영역을 지정하는 <see cref="T:System.Drawing.Rectangle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-350">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span>
          </span>
        </param>
        <param name="factor">
          <span data-ttu-id="6a37a-351">컨트롤 범위의 높이 및 너비입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-351">The height and width of the control's bounds.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="6a37a-352">크기 및 위치를 정의하는 데 사용할 컨트롤 범위를 지정하는 <see cref="T:System.Windows.Forms.BoundsSpecified" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-352">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-353">
            <see cref="T:System.Windows.Forms.ListBox" />의 크기가 조정되는 범위를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-353">Retrieves the bounds within which the <see cref="T:System.Windows.Forms.ListBox" /> is scaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a37a-354">컨트롤의 크기가 조정되는 범위를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-354">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-355"><xref:System.Windows.Forms.ListBox> 재정의 <xref:System.Windows.Forms.Control.GetScaledBounds%2A?displayProperty=nameWithType> 요청 된 높이 현재 높이가 아닌 조정 된 메서드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-355">The <xref:System.Windows.Forms.ListBox> class overrides the <xref:System.Windows.Forms.Control.GetScaledBounds%2A?displayProperty=nameWithType> method to ensure that the requested height is scaled rather than the current height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public bool GetSelected (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSelected(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.GetSelected(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelected (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSelected(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="6a37a-356">항목이 선택되어 있는지 여부를 확인하는 항목의 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-356">The zero-based index of the item that determines whether it is selected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-357">지정된 항목이 선택되어 있는지를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-357">Returns a value indicating whether the specified item is selected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a37a-358">지정된 항목이 <see cref="T:System.Windows.Forms.ListBox" />에서 현재 선택되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-358">
              <see langword="true" /> if the specified item is currently selected in the <see cref="T:System.Windows.Forms.ListBox" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-359">신속 하 게 지정 된 항목이 선택 되어 있는지 여부를 확인 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-359">You can use this method to quickly determine whether a specified item is selected.</span></span> <span data-ttu-id="6a37a-360">이 메서드는 특정 작업 경우 다중 선택에서 특정 항목에 수행 해야 할 때 유용 <xref:System.Windows.Forms.ListBox> 을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-360">This method is useful when a specific operation needs to be performed when a specific item in a multiple-selection <xref:System.Windows.Forms.ListBox> is selected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-361">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox.GetSelected%2A> 에 항목을 확인 하는 <xref:System.Windows.Forms.ListBox> 선택 되지 않은 항목을 선택 하 고 선택 된 항목은 선택 취소 하려면 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-361">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected.</span></span> <span data-ttu-id="6a37a-362">또한 예제에 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A> 속성을 사용 하는 <xref:System.Windows.Forms.ListBox> 둘 이상의 하려면 사용 하 여 항목을 선택는 <xref:System.Windows.Forms.ListBox.Sorted%2A> 속성에서 항목을 정렬 하는 방법을 보여 주기 위해는 <xref:System.Windows.Forms.ListBox> 자동으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-362">The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically.</span></span> <span data-ttu-id="6a37a-363">이 예제에서는 <xref:System.Windows.Forms.ListBox>명명 된 `listBox1`, 폼에 추가 되었습니다는 `InitializeMyListBox` 에서 호출 되는 예제에 정의 된 메서드는 <xref:System.Windows.Forms.Form.Load> 폼의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-363">This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.</span></span>  
  
 [!code-cpp[ListBox.GetSelected#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.GetSelected/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.GetSelected#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.GetSelected/CS/form1.cs#1)]
 [!code-vb[ListBox.GetSelected#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.GetSelected/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a37a-364">
            <paramref name="index" /> 매개 변수가 0보다 작거나 <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> 클래스의 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> 속성 값보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-364">The <paramref name="index" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HorizontalExtent">
      <MemberSignature Language="C#" Value="public int HorizontalExtent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HorizontalExtent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.HorizontalExtent" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalExtent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HorizontalExtent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-365">
            <see cref="T:System.Windows.Forms.ListBox" />의 가로 스크롤 막대로 스크롤할 수 있는 너비를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-365">Gets or sets the width by which the horizontal scroll bar of a <see cref="T:System.Windows.Forms.ListBox" /> can scroll.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-366">가로 스크롤 막대로 컨트롤을 스크롤할 수 있는 너비(픽셀)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-366">The width, in pixels, that the horizontal scroll bar can scroll the control.</span>
          </span>
          <span data-ttu-id="6a37a-367">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-367">The default is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-368">이 속성만 값을 보고 하는 유용한 경우는 <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> 속성이로 설정 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-368">This property only reports a useful value if the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> property is set to `true`.</span></span> <span data-ttu-id="6a37a-369">하는 경우의 너비는 <xref:System.Windows.Forms.ListBox> 가로 스크롤 막대에 항목을 가로로 스크롤할이이 속성의 값 보다 작은 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-369">If the width of the <xref:System.Windows.Forms.ListBox> is smaller than the value of this property, the horizontal scroll bar horizontally scrolls items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-370">하는 경우의 너비는 <xref:System.Windows.Forms.ListBox> 이 값 보다 크거나 같은 가로 스크롤 막대가 숨겨집니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-370">If the width of the <xref:System.Windows.Forms.ListBox> is equal to or greater than this value, the horizontal scroll bar is hidden.</span></span> <span data-ttu-id="6a37a-371">이 속성의 값으로 동적으로 업데이트 되지 않습니다는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-371">The value of this property is not dynamically updated by the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-372">이 속성은 유용의 항목은 <xref:System.Windows.Forms.ListBox> 소유자가 그린 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-372">This property is useful when the items of the <xref:System.Windows.Forms.ListBox> are owner-drawn.</span></span> <span data-ttu-id="6a37a-373">예를 들어 경우의 소유자 그리기 항목은 <xref:System.Windows.Forms.ListBox> 은 200 픽셀 너비, 되지만 <xref:System.Windows.Forms.ListBox> 는 60 픽셀 너비는 <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> 속성 컨트롤의 표시 영역을 사용 하 여 항목의 오른쪽 가장자리 스크롤하여 하려면 200으로 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-373">For example, if the owner drawn items of the <xref:System.Windows.Forms.ListBox> are 200 pixels wide, but the <xref:System.Windows.Forms.ListBox> is 60 pixels wide, the <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> property would need to be set to 200 in order to scroll the right edge of the items into the visible region of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-374">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> 및 <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> 속성의 모든 항목 텍스트를 보여 주는 가로 스크롤 막대를 표시 하는 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-374">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="6a37a-375">또한이 예제에서는 <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> 속성을 항목이 크기 때문에 부분적으로 표시 되지 않습니다는 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-375">The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="6a37a-376">이 예제에서는 한 <xref:System.Windows.Forms.ListBox> 라는 컨트롤 `listBox1`, 폼에 추가 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-376">This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.</span></span>  
  
 [!code-cpp[ListView.HorizontalExtent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.HorizontalExtent/CPP/form1.cpp#1)]
 [!code-csharp[ListView.HorizontalExtent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.HorizontalExtent/CS/form1.cs#1)]
 [!code-vb[ListView.HorizontalExtent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.HorizontalExtent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.HorizontalScrollbar" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollbar">
      <MemberSignature Language="C#" Value="public bool HorizontalScrollbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HorizontalScrollbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.HorizontalScrollbar" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HorizontalScrollbar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-377">가로 스크롤 막대가 컨트롤에 표시되는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-377">Gets or sets a value indicating whether a horizontal scroll bar is displayed in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-378">컨트롤에 가로 스크롤 막대를 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-378">
              <see langword="true" /> to display a horizontal scroll bar in the control; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a37a-379">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-379">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-380"><xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> 속성 결정 여부는 <xref:System.Windows.Forms.ListBox> 가로 스크롤을 표시할지 막대 내의 항목의 너비는 <xref:System.Windows.Forms.ListBox> 컨트롤의 오른쪽 가장자리를 벗어날 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-380">The <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> property determines whether the <xref:System.Windows.Forms.ListBox> should display a horizontal scroll bar when the width of items within the <xref:System.Windows.Forms.ListBox> extend beyond the right edge of the control.</span></span> <span data-ttu-id="6a37a-381">이 속성이로 설정 된 경우 `true`, 스크롤 막대에 있는 항목의 너비에 따라 자동으로 표시 됩니다는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-381">When this property is set to `true`, the scroll bar is automatically displayed based on the width of items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-382">경우는 <xref:System.Windows.Forms.ListBox> 은 소유자가 그린 <xref:System.Windows.Forms.ListBox>, 가로 스크롤 막대를 올바르게 표시 하기 위해 설정 해야 합니다는 <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-382">If the <xref:System.Windows.Forms.ListBox> is an owner-drawn <xref:System.Windows.Forms.ListBox>, in order to properly display a horizontal scroll bar, you must set the <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-383">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> 및 <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> 속성의 모든 항목 텍스트를 보여 주는 가로 스크롤 막대를 표시 하는 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-383">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="6a37a-384">또한이 예제에서는 <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> 속성을 항목이 크기 때문에 부분적으로 표시 되지 않습니다는 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-384">The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="6a37a-385">이 예제에서는 한 <xref:System.Windows.Forms.ListBox> 라는 컨트롤 `listBox1`, 폼에 추가 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-385">This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.</span></span>  
  
 [!code-cpp[ListView.HorizontalExtent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.HorizontalExtent/CPP/form1.cpp#1)]
 [!code-csharp[ListView.HorizontalExtent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.HorizontalExtent/CS/form1.cs#1)]
 [!code-vb[ListView.HorizontalExtent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.HorizontalExtent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.HorizontalExtent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexFromPoint">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-386">지정된 좌표에 있는 항목의 0부터 시작하는 인덱스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-386">Returns the zero-based index of the item at the specified coordinates.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexFromPoint">
      <MemberSignature Language="C#" Value="public int IndexFromPoint (System.Drawing.Point p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexFromPoint(valuetype System.Drawing.Point p) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexFromPoint (p As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexFromPoint(System::Drawing::Point p);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="p">
          <span data-ttu-id="6a37a-387">항목 인덱스를 얻는 데 사용되는 좌표를 포함하는 <see cref="T:System.Drawing.Point" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-387">A <see cref="T:System.Drawing.Point" /> object containing the coordinates used to obtain the item index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-388">지정된 좌표에 있는 항목의 0부터 시작하는 인덱스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-388">Returns the zero-based index of the item at the specified coordinates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a37a-389">지정된 좌표에 있는 항목의 인덱스(0부터 시작)입니다. 일치하는 항목이 없으면 <see langword="ListBox.NoMatches" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-389">The zero-based index of the item found at the specified coordinates; returns <see langword="ListBox.NoMatches" /> if no match is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-390">이 메서드를 사용 하면 컨트롤 내의 특정 위치에 있는 항목을 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-390">This method enables you to determine which item is located at a specific location within the control.</span></span> <span data-ttu-id="6a37a-391">이 메서드를 사용 하 여 누를 때 선택 된 목록 내의 항목을 결정 하는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-391">You can use this method to determine which item within the list is selected when a user right-clicks the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-392">커서의 위치를 결정 하 고에 전달 된 수의 `p` 의 매개 변수는 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드를 한 사용자 항목을 확인할 마우스 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-392">The location of the cursor can be determined and passed to the `p` parameter of the <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method to determine which item the user right-clicked the mouse over.</span></span> <span data-ttu-id="6a37a-393">그런 다음 작업 및 특정 항목에 따라 기능을 제공 하기 위해 사용자는 바로 가기 메뉴를 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-393">You can then display a shortcut menu to the user to provide tasks and features based on the specific item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-394">다음 코드 예제에 사용 하 여 끌어서 놓기 작업을 수행 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox> 에 놓을 항목이 포함 된 컨트롤을 <xref:System.Windows.Forms.RichTextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-394">The following code example demonstrates how to perform drag-and-drop operations using a <xref:System.Windows.Forms.ListBox> control that contains items to drop into a <xref:System.Windows.Forms.RichTextBox> control.</span></span> <span data-ttu-id="6a37a-395">폼 집합의 생성자는 <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> 속성을 `true` 에 끌어서 놓기 작업을 사용 하도록는 <xref:System.Windows.Forms.RichTextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-395">The constructor of the form sets the <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> property to `true` to enable drag-and-drop operations to occur in the <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="6a37a-396">이 예제에서는 사용는 <xref:System.Windows.Forms.Control.MouseDown> 의 이벤트는 <xref:System.Windows.Forms.ListBox> 호출 하 여 끌기 작업을 시작 하는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-396">The example uses the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.ListBox> to start the drag operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method.</span></span> <span data-ttu-id="6a37a-397">이 예제에서는 사용는 <xref:System.Windows.Forms.Control.DragEnter> 항목으로 끌어 온 경우를 결정 하기 위해 이벤트는 <xref:System.Windows.Forms.RichTextBox> 유효한 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-397">The example uses the <xref:System.Windows.Forms.Control.DragEnter> event to determine if an item being dragged into the <xref:System.Windows.Forms.RichTextBox> is a valid data type.</span></span> <span data-ttu-id="6a37a-398"><xref:System.Windows.Forms.Control.DragDrop> 으로 끌어 온된 항목의 실제 삭제를 수행 하는 이벤트는 <xref:System.Windows.Forms.RichTextBox> 컨트롤 내에서 현재 커서 위치에는 <xref:System.Windows.Forms.RichTextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-398">The <xref:System.Windows.Forms.Control.DragDrop> event performs the actual dropping of a dragged item into the <xref:System.Windows.Forms.RichTextBox> control at the current cursor location within the <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="6a37a-399">이 예제에서는 <xref:System.Windows.Forms.Control.DragDrop> 및 <xref:System.Windows.Forms.Control.DragEnter> 예에서 정의 된 이벤트 처리기에 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-399">This example requires that the <xref:System.Windows.Forms.Control.DragDrop> and <xref:System.Windows.Forms.Control.DragEnter> events have been connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[RichTextBox.AllowDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.AllowDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CS/form1.cs#1)]
 [!code-vb[RichTextBox.AllowDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.AllowDrop/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexFromPoint">
      <MemberSignature Language="C#" Value="public int IndexFromPoint (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexFromPoint(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexFromPoint (x As Integer, y As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexFromPoint(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="6a37a-400">검색할 위치의 X 좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-400">The x-coordinate of the location to search.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="6a37a-401">검색할 위치의 Y 좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-401">The y-coordinate of the location to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-402">지정된 좌표에 있는 항목의 0부터 시작하는 인덱스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-402">Returns the zero-based index of the item at the specified coordinates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a37a-403">지정된 좌표에 있는 항목의 인덱스(0부터 시작)입니다. 일치하는 항목이 없으면 <see langword="ListBox.NoMatches" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-403">The zero-based index of the item found at the specified coordinates; returns <see langword="ListBox.NoMatches" /> if no match is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-404">이 메서드를 사용 하면 컨트롤 내의 특정 위치에 있는 항목을 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-404">This method enables you to determine which item that is located at a specific location within the control.</span></span> <span data-ttu-id="6a37a-405">이 메서드를 사용 하 여 누를 때 선택 된 목록 내의 항목을 결정 하는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-405">You can use this method to determine which item within the list is selected when a user right-clicks the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-406">커서의 위치를 결정 하 고에 전달 된 수의 `x` 및 `y` 의 매개 변수는 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드를 한 사용자 항목을 확인할 마우스 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-406">The location of the cursor can be determined and passed to the `x` and `y` parameters of the <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method to determine which item the user right-clicked the mouse over.</span></span> <span data-ttu-id="6a37a-407">그런 다음 작업 및 특정 항목에 따라 기능을 제공 하기 위해 사용자는 바로 가기 메뉴를 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-407">You can then display a shortcut menu to the user to provide tasks and features based on the specific item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-408">다음 코드 예제에 사용 하 여 끌어서 놓기 작업을 수행 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox> 에 놓을 항목이 포함 된 컨트롤을 <xref:System.Windows.Forms.RichTextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-408">The following code example demonstrates how to perform drag-and-drop operations using a <xref:System.Windows.Forms.ListBox> control that contains items to drop into a <xref:System.Windows.Forms.RichTextBox> control.</span></span> <span data-ttu-id="6a37a-409">폼 집합의 생성자는 <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> 속성을 `true` 에 끌어서 놓기 작업을 사용 하도록는 <xref:System.Windows.Forms.RichTextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-409">The constructor of the form sets the <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> property to `true` to enable drag-and-drop operations to occur in the <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="6a37a-410">이 예제에서는 사용는 <xref:System.Windows.Forms.Control.MouseDown> 의 이벤트는 <xref:System.Windows.Forms.ListBox> 호출 하 여 끌기 작업을 시작 하는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-410">The example uses the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.ListBox> to start the drag operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method.</span></span> <span data-ttu-id="6a37a-411">이 예제에서는 사용는 <xref:System.Windows.Forms.Control.DragEnter> 항목으로 끌어 온 경우를 결정 하기 위해 이벤트는 <xref:System.Windows.Forms.RichTextBox> 유효한 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-411">The example uses the <xref:System.Windows.Forms.Control.DragEnter> event to determine if an item being dragged into the <xref:System.Windows.Forms.RichTextBox> is a valid data type.</span></span> <span data-ttu-id="6a37a-412"><xref:System.Windows.Forms.Control.DragDrop> 으로 끌어 온된 항목의 실제 삭제를 수행 하는 이벤트는 <xref:System.Windows.Forms.RichTextBox> 컨트롤 내에서 현재 커서 위치에는 <xref:System.Windows.Forms.RichTextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-412">The <xref:System.Windows.Forms.Control.DragDrop> event performs the actual dropping of a dragged item into the <xref:System.Windows.Forms.RichTextBox> control at the current cursor location within the <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="6a37a-413">이 예제에서는 <xref:System.Windows.Forms.Control.DragDrop> 및 <xref:System.Windows.Forms.Control.DragEnter> 예에서 정의 된 이벤트 처리기에 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-413">This example requires that the <xref:System.Windows.Forms.Control.DragDrop> and <xref:System.Windows.Forms.Control.DragEnter> events have been connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[RichTextBox.AllowDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.AllowDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CS/form1.cs#1)]
 [!code-vb[RichTextBox.AllowDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.AllowDrop/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntegralHeight">
      <MemberSignature Language="C#" Value="public bool IntegralHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IntegralHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegralHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property IntegralHeight As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IntegralHeight { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-414">부분 항목을 표시하지 않도록 컨트롤의 크기를 조정할지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-414">Gets or sets a value indicating whether the control should resize to avoid showing partial items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-415">부분 항목을 표시하지 않도록 컨트롤의 크기를 조정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-415">
              <see langword="true" /> if the control resizes so that it does not display partial items; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a37a-416">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-416">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-417">이 속성이로 설정 된 경우 `true`, 컨트롤 크기가 자동으로 조정 항목 부분적으로 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-417">When this property is set to `true`, the control automatically resizes to ensure that an item is not partially displayed.</span></span> <span data-ttu-id="6a37a-418">원래 크기를 유지 하려는 경우는 <xref:System.Windows.Forms.ListBox> 폼의 공간 요구 사항에 따라,이 속성을 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-418">If you want to maintain the original size of the <xref:System.Windows.Forms.ListBox> based on the space requirements of your form, set this property to `false`.</span></span>  
  
 <span data-ttu-id="6a37a-419">기본적으로는 <xref:System.Windows.Forms.ListBox> 및 <xref:System.Windows.Forms.CheckedListBox> 크기는 전체 항목만 표시 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-419">By default, the <xref:System.Windows.Forms.ListBox> and the <xref:System.Windows.Forms.CheckedListBox> sizes are such that they show only whole items.</span></span> <span data-ttu-id="6a37a-420">원하는 경우는 <xref:System.Windows.Forms.ListBox> 또는 <xref:System.Windows.Forms.CheckedListBox> 도킹 된 영역을 완전히 채울 설정 <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> 를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-420">If you want the <xref:System.Windows.Forms.ListBox> or <xref:System.Windows.Forms.CheckedListBox> to completely fill a docked area, set <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> to `false`.</span></span> <span data-ttu-id="6a37a-421">이 인해 완전히 영역을 채우는 제어 하지만 마지막 항목이 완전히 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-421">This causes the control to completely fill the area, but the last item is not fully displayed.</span></span>  
  
 <span data-ttu-id="6a37a-422">경우는 <xref:System.Windows.Forms.ListBox> 에 포함 된 항목이이 속성이 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-422">If the <xref:System.Windows.Forms.ListBox> does not contain any items, this property has no effect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a37a-423">높이 기준으로 하는 정수 높이 <xref:System.Windows.Forms.ListBox>, 하는 대신 클라이언트 영역의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-423">The integral height is based on the height of the <xref:System.Windows.Forms.ListBox>, rather than the client area height.</span></span> <span data-ttu-id="6a37a-424">결과적으로,는 <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> 속성이 `true`, 항목 수는 계속 부분적으로 표시할 스크롤 막대가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-424">As a result, when the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property is set `true`, items can still be partially shown if scroll bars are displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a37a-425">경우는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 속성이 `DrawMode.OwnerDrawVariable`,이 속성이 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-425">If the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawVariable`, this property has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-426">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> 및 <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> 속성의 모든 항목 텍스트를 보여 주는 가로 스크롤 막대를 표시 하는 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-426">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="6a37a-427">또한이 예제에서는 <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> 속성을 항목이 크기 때문에 부분적으로 표시 되지 않습니다는 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-427">The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="6a37a-428">이 예제에서는 한 <xref:System.Windows.Forms.ListBox> 라는 컨트롤 `listBox1`, 폼에 추가 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-428">This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.</span></span>  
  
 [!code-cpp[ListView.HorizontalExtent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.HorizontalExtent/CPP/form1.cpp#1)]
 [!code-csharp[ListView.HorizontalExtent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.HorizontalExtent/CS/form1.cs#1)]
 [!code-vb[ListView.HorizontalExtent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.HorizontalExtent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.DrawMode" />
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public virtual int ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ItemHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-429">
            <see cref="T:System.Windows.Forms.ListBox" />의 항목 높이를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-429">Gets or sets the height of an item in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-430">컨트롤에 있는 항목의 높이(픽셀)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-430">The height, in pixels, of an item in the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-431">경우는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 속성이로 설정 되어 `DrawMode.OwnerDrawFixed`, 모든 항목의 높이가 같습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-431">When the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawFixed`, all items have the same height.</span></span> <span data-ttu-id="6a37a-432">때는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 속성이로 설정 되어 `DrawMode.OwnerDrawVariable`, <xref:System.Windows.Forms.ListBox.ItemHeight%2A> 속성에 추가 된 각 항목의 높이 지정 된 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-432">When the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawVariable`, the <xref:System.Windows.Forms.ListBox.ItemHeight%2A> property specifies the height of each item added to the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-433">소유자가 그린 목록에서 각 항목은 다른 높이 가질 수 있으므로 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox.GetItemHeight%2A> 에서 특정 항목의 높이 가져올 메서드를는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-433">Because each item in an owner-drawn list can have a different height, you can use the <xref:System.Windows.Forms.ListBox.GetItemHeight%2A> method to get the height of a specific item in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-434">사용 하는 경우는 <xref:System.Windows.Forms.ListBox.ItemHeight%2A> 속성에는 <xref:System.Windows.Forms.ListBox> 가변 높이의 항목과이 속성 컨트롤의 첫 번째 항목의 높이 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-434">If you use the <xref:System.Windows.Forms.ListBox.ItemHeight%2A> property on a <xref:System.Windows.Forms.ListBox> with items of variable height, this property returns the height of the first item in the control.</span></span>  
  
 <span data-ttu-id="6a37a-435">최대 높이 <xref:System.Windows.Forms.ListBox> 항목는 255 픽셀입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-435">The maximum height of a <xref:System.Windows.Forms.ListBox> item is 255 pixels.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a37a-436">
            <see cref="P:System.Windows.Forms.ListBox.ItemHeight" /> 속성이 0픽셀보다 작거나 255픽셀보다 크게 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-436">The <see cref="P:System.Windows.Forms.ListBox.ItemHeight" /> property was set to less than 0 or more than 255 pixels.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.ListBox.GetItemHeight(System.Int32)" />
        <altmember cref="P:System.Windows.Forms.ListBox.DrawMode" />
        <altmember cref="E:System.Windows.Forms.ListBox.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListBox.ObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListBox/ObjectCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListBox::ObjectCollection ^ Items { System::Windows::Forms::ListBox::ObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-437">
            <see cref="T:System.Windows.Forms.ListBox" />의 항목을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-437">Gets the items of the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-438">
            <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />에 있는 항목을 나타내는 <see cref="T:System.Windows.Forms.ListBox" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-438">An <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> representing the items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-439">이 속성에 현재 저장 되어 있는 항목의 목록에 대 한 참조를 가져올 수 있습니다는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-439">This property enables you to obtain a reference to the list of items that are currently stored in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-440">이 참조를 사용 추가 항목을 제거 및 컬렉션의 항목 수를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-440">With this reference, you can add items, remove items, and obtain a count of the items in the collection.</span></span> <span data-ttu-id="6a37a-441">항목 컬렉션으로 수행할 수 있는 작업에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 클래스 참조 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-441">For more information about the tasks that can be performed with the item collection, see the <xref:System.Windows.Forms.ListBox.ObjectCollection> class reference topics.</span></span>  
  
 <span data-ttu-id="6a37a-442">항목을 조작할 수 있습니다는 <xref:System.Windows.Forms.ListBox> 를 사용 하 여는 <xref:System.Windows.Forms.ListControl.DataSource%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-442">You can also manipulate the items of a <xref:System.Windows.Forms.ListBox> by using the <xref:System.Windows.Forms.ListControl.DataSource%2A> property.</span></span> <span data-ttu-id="6a37a-443">사용 하는 경우는 <xref:System.Windows.Forms.ListControl.DataSource%2A> 속성 항목을 추가 하는 <xref:System.Windows.Forms.ListBox>에 있는 항목을 볼 수 있습니다는 <xref:System.Windows.Forms.ListBox> 를 사용 하 여는 <xref:System.Windows.Forms.ListBox.Items%2A> 속성 있지만 더하거나의 메서드를 사용 하 여 목록에서 항목을 제거할 수 없습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-443">If you use the <xref:System.Windows.Forms.ListControl.DataSource%2A> property to add items to a <xref:System.Windows.Forms.ListBox>, you can view the items in the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.Items%2A> property but you cannot add or remove items from the list using the methods of the <xref:System.Windows.Forms.ListBox.ObjectCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-444">다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox> 컨트롤 열에 여러 항목을 표시 하는 컨트롤의 목록에서 선택한 항목을 여러 개 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-444">The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list.</span></span> <span data-ttu-id="6a37a-445">50 개의 항목을 추가 하는 예제 코드는 <xref:System.Windows.Forms.ListBox> 를 사용 하는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 사용 하 여 목록에서 세 개의 항목 클래스와 선택은 <xref:System.Windows.Forms.ListBox.SetSelected%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-445">The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span> <span data-ttu-id="6a37a-446">다음 코드에서 값이 표시는 <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> 컬렉션 (통해는 <xref:System.Windows.Forms.ListBox.SelectedItems%2A> 속성) 및 <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (통해는 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> 속성).</span><span class="sxs-lookup"><span data-stu-id="6a37a-446">The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property).</span></span> <span data-ttu-id="6a37a-447">이 예제 코드에서 호출에 위치 하는 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-447">This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListBox.ObjectCollection" />
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.MeasureItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MeasureItem As MeasureItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MeasureItemEventHandler ^ MeasureItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-448">소유자가 그린 <see cref="T:System.Windows.Forms.ListBox" />가 만들어지고 목록 항목의 크기가 결정될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-448">Occurs when an owner-drawn <see cref="T:System.Windows.Forms.ListBox" /> is created and the sizes of the list items are determined.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-449">항목을 그리기 전에 될 예정 크기를 지정 하려면이 이벤트에 대 한 이벤트 처리기를 만들 수는 <xref:System.Windows.Forms.ListBox.DrawItem> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-449">You can create an event handler for this event to specify the size an item will be made before it is drawn in the <xref:System.Windows.Forms.ListBox.DrawItem> event.</span></span> <span data-ttu-id="6a37a-450">이 이벤트는만 될 때 발생 하는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 속성이로 설정 된 <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-450">The event is only raised when the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable>.</span></span>  
  
 <span data-ttu-id="6a37a-451">최대 유효 높이 <xref:System.Windows.Forms.ListBox> 항목는 255 픽셀입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-451">The maximum valid height of a <xref:System.Windows.Forms.ListBox> item is 255 pixels.</span></span> <span data-ttu-id="6a37a-452">설정의 <xref:System.Windows.Forms.MeasureItemEventArgs.ItemHeight%2A> 의 속성은 <xref:System.Windows.Forms.MeasureItemEventArgs> 이 이벤트를 처리 하면 예기치 않은 결과가 경우 255 보다 큰 값으로.</span><span class="sxs-lookup"><span data-stu-id="6a37a-452">Setting the <xref:System.Windows.Forms.MeasureItemEventArgs.ItemHeight%2A> property of the <xref:System.Windows.Forms.MeasureItemEventArgs> to a value greater than 255 when handling this event may yield unexpected results.</span></span>  
  
 <span data-ttu-id="6a37a-453">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-453">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-454">다음 코드 예제에서는 소유자가 그린 <xref:System.Windows.Forms.ListBox> 설정 하 여는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 속성을 <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable> 및 처리는 <xref:System.Windows.Forms.ListBox.DrawItem> 및 <xref:System.Windows.Forms.ListBox.MeasureItem> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-454">The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable> and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and <xref:System.Windows.Forms.ListBox.MeasureItem> events.</span></span> <span data-ttu-id="6a37a-455">설정을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.BorderStyle%2A> 및 <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> 속성 및 사용 하 여 <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-455">It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.</span></span>  
  
 <span data-ttu-id="6a37a-456">이 예제를 실행 하려면 가져오는 빈 폼에 붙여넣습니다는 <xref:System.Drawing> 네임 스페이스 및 <xref:System.Windows.Forms> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-456">To run this example, paste it in an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace.</span></span> <span data-ttu-id="6a37a-457">호출 `InitializeOwnerDrawnListBox` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-457">Call `InitializeOwnerDrawnListBox` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.ItemHeight" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-458">사용자가 마우스 포인터로 <see cref="T:System.Windows.Forms.ListBox" /> 컨트롤을 클릭할 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-458">Occurs when the user clicks the <see cref="T:System.Windows.Forms.ListBox" /> control with the mouse pointer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiColumn">
      <MemberSignature Language="C#" Value="public bool MultiColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiColumn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.MultiColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiColumn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiColumn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-459">
            <see cref="T:System.Windows.Forms.ListBox" />에서 여러 열을 지원하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-459">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.ListBox" /> supports multiple columns.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-460">
            <see cref="T:System.Windows.Forms.ListBox" />에서 여러 열을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-460">
              <see langword="true" /> if the <see cref="T:System.Windows.Forms.ListBox" /> supports multiple columns; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a37a-461">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-461">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-462">multicolumn <xref:System.Windows.Forms.ListBox> 세로 스크롤이 필요 없도록 하는 데 필요한 만큼 많은 열에 항목을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-462">A multicolumn <xref:System.Windows.Forms.ListBox> places items into as many columns as are needed to make vertical scrolling unnecessary.</span></span> <span data-ttu-id="6a37a-463">사용자는 현재 표시 되지 않는 열으로 이동할 수 키보드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-463">The user can use the keyboard to navigate to columns that are not currently visible.</span></span> <span data-ttu-id="6a37a-464">설정의 <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> 속성을 `true` 의 표시 영역에 표시 되지 않는 열을 스크롤할 수 있도록 해 주는 가로 스크롤 막대를 표시 하는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-464">Set the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> property to `true` to display a horizontal scroll bar that enables the user to scroll to columns that are not currently shown in the visible region of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-465">값은 <xref:System.Windows.Forms.ListBox.ColumnWidth%2A> 속성 각 열의 너비를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-465">The value of the <xref:System.Windows.Forms.ListBox.ColumnWidth%2A> property determines the width of each column.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-466">다음 코드 예제에서는 간단한 2 열을 보여 줍니다. <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-466">The following code example demonstrates a simple two-column <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListBox.MultiColumn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBox.MultiColumn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBox.MultiColumn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBox.MultiColumn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a37a-467">여러 열로 구성된 <see cref="T:System.Windows.Forms.ListBox" />가 가변 높이를 가질 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-467">A multicolumn <see cref="T:System.Windows.Forms.ListBox" /> cannot have a variable-sized height.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.ListBox.HorizontalScrollbar" />
        <altmember cref="P:System.Windows.Forms.ListBox.ColumnWidth" />
      </Docs>
    </Member>
    <Member MemberName="NoMatches">
      <MemberSignature Language="C#" Value="public const int NoMatches = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NoMatches = (-1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ListBox.NoMatches" />
      <MemberSignature Language="VB.NET" Value="Public Const NoMatches As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int NoMatches = -1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-468">검색 중에 일치 항목을 찾지 못했음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-468">Specifies that no matches are found during a search.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-469">이 상수에서 반환 되는 <xref:System.Windows.Forms.ListBox.FindString%2A>, <xref:System.Windows.Forms.ListBox.FindStringExact%2A>, 및 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드 검색에서 일치 하는 값이 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="6a37a-469">This constant is returned by the <xref:System.Windows.Forms.ListBox.FindString%2A>, <xref:System.Windows.Forms.ListBox.FindStringExact%2A>, and <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> methods when no matching values are found in a search.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChangeUICues">
      <MemberSignature Language="C#" Value="protected override void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChangeUICues(class System.Windows.Forms.UICuesEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnChangeUICues (e As UICuesEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnChangeUICues(System::Windows::Forms::UICuesEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.UICuesEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a37a-470">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.UICuesEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-470">A <see cref="T:System.Windows.Forms.UICuesEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-471">
            <see cref="E:System.Windows.Forms.Control.ChangeUICues" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-471">Raises the <see cref="E:System.Windows.Forms.Control.ChangeUICues" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a37a-472">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-472">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-473">
            <see cref="E:System.Windows.Forms.ListControl.DataSourceChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-473">Raises the <see cref="E:System.Windows.Forms.ListControl.DataSourceChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayMemberChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDisplayMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDisplayMemberChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a37a-474">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-474">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-475">
            <see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-475">Raises the <see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a37a-476">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DrawItemEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-476">A <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-477">
            <see cref="E:System.Windows.Forms.ListBox.DrawItem" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-477">Raises the <see cref="E:System.Windows.Forms.ListBox.DrawItem" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-478">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-478">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6a37a-479">자세한 내용은 참조 [이벤트 처리 및 발생](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-479">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="6a37a-480"><xref:System.Windows.Forms.ListBox.OnDrawItem%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-480">The <xref:System.Windows.Forms.ListBox.OnDrawItem%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="6a37a-481">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-481">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-482">다음 코드 예제에는 소유자가 그린 만드는 방법을 보여 줍니다 <xref:System.Windows.Forms.ListBox> 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-482">The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items.</span></span> <span data-ttu-id="6a37a-483">코드를 사용 하 여는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 그리는 항목은 고정 되도록 지정 하는 속성 및 <xref:System.Windows.Forms.ListBox.DrawItem> 에 각 항목의 그리기를 수행 하는 이벤트는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-483">The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-484">예제 코드의 메서드와 속성을 사용 하는 <xref:System.Windows.Forms.DrawItemEventArgs> 클래스 항목을 그립니다 이벤트 처리기에 매개 변수로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-484">The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items.</span></span> <span data-ttu-id="6a37a-485">이 예제에서는 한 <xref:System.Windows.Forms.ListBox> 라는 컨트롤 `listBox1` 폼에 추가 되었습니다는 <xref:System.Windows.Forms.ListBox.DrawItem> 예제 코드에 정의 된 이벤트 처리기 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-485">This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code.</span></span> <span data-ttu-id="6a37a-486">항목이에 추가 것도 예제를 실행 하려면는 <xref:System.Windows.Forms.ListBox> 그 순서 대로 "Apple", "주황색" 및 "Plum" 텍스트를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-486">The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of "Apple", "Orange", and "Plum" in that order.</span></span>  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6a37a-487">파생 클래스에서 <see cref="M:System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6a37a-487">When overriding <see cref="M:System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListBox.DrawItem" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a37a-488">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-488">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-489">
            <see cref="E:System.Windows.Forms.Control.FontChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-489">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a37a-490">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-490">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-491">열 너비 및 다른 특성을 설정할 수 있도록 창 핸들을 만든 시기를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-491">Specifies when the window handle has been created so that column width and other characteristics can be set.</span>
          </span>
          <span data-ttu-id="6a37a-492">상속하는 클래스는 <see langword="base.OnHandleCreated" />를 호출해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-492">Inheriting classes should call <see langword="base.OnHandleCreated" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a37a-493">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-493">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-494">항목이 제대로 설정 및 삭제되도록 재정의됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-494">Overridden to be sure that items are set up and cleared out correctly.</span>
          </span>
          <span data-ttu-id="6a37a-495">상속하는 컨트롤은 <see langword="base.OnHandleDestroyed" />를 호출해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-495">Inheriting controls should call <see langword="base.OnHandleDestroyed" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMeasureItem">
      <MemberSignature Language="C#" Value="protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMeasureItem(class System.Windows.Forms.MeasureItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMeasureItem (e As MeasureItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMeasureItem(System::Windows::Forms::MeasureItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MeasureItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a37a-496">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MeasureItemEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-496">A <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-497">
            <see cref="E:System.Windows.Forms.ListBox.MeasureItem" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-497">Raises the <see cref="E:System.Windows.Forms.ListBox.MeasureItem" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-498">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-498">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6a37a-499">자세한 내용은 참조 [이벤트 처리 및 발생](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-499">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="6a37a-500"><xref:System.Windows.Forms.ListBox.OnMeasureItem%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-500">The <xref:System.Windows.Forms.ListBox.OnMeasureItem%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="6a37a-501">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-501">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6a37a-502">파생 클래스에서 <see cref="M:System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6a37a-502">When overriding <see cref="M:System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListBox.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a37a-503">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-503">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-504">
            <see cref="E:System.Windows.Forms.Control.ParentChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-504">Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a37a-505">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-505">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-506">
            <see cref="E:System.Windows.Forms.Control.Resize" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-506">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a37a-507">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-507">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-508">
            <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-508">Raises the <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedValueChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedValueChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedValueChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedValueChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6a37a-509">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-509">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-510">
            <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-510">Raises the <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-511">이 속성은 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-511">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-512">
            <see cref="T:System.Windows.Forms.Padding" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-512">A <see cref="T:System.Windows.Forms.Padding" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-513">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-513">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-514">
            <see cref="P:System.Windows.Forms.ListBox.Padding" /> 속성 값이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-514">Occurs when the value of the <see cref="P:System.Windows.Forms.ListBox.Padding" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-515">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-515">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-516">
            <see cref="T:System.Windows.Forms.ListBox" /> 컨트롤을 그릴 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-516">Occurs when the <see cref="T:System.Windows.Forms.ListBox" /> control is painted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-517">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-517">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-518">
            <see cref="T:System.Windows.Forms.ListBox" />에 있는 모든 항목의 전체 높이를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-518">Gets the combined height of all items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-519">컨트롤에 있는 항목의 높이를 합하여 픽셀로 나타낸 것입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-519">The combined height, in pixels, of all items in the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-520">이 속성을 사용 하면 높이 결정 하는 <xref:System.Windows.Forms.ListBox> 수, 사용 가능한 모든 항목 목록에 표시 하기 위해 및 세로 스크롤 막대를 표시 하지 않도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-520">This property enables you to determine the height that the <xref:System.Windows.Forms.ListBox> needs to be sized to, in order to display every available item in the list and to avoid displaying vertical scroll bars.</span></span> <span data-ttu-id="6a37a-521">경우에 있는 항목의 크기는 <xref:System.Windows.Forms.ListBox> 의 값을 사용 하 여 컨트롤 크기 조정 커서는 <xref:System.Windows.Forms.ListBox.PreferredHeight%2A> 속성 발생할 수 있습니다는 <xref:System.Windows.Forms.ListBox> 폼의 클라이언트 영역을 벗어날 수 또는 <xref:System.Windows.Forms.ListBox> 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-521">If the amount of items in the <xref:System.Windows.Forms.ListBox> is large, sizing the control using the value of the <xref:System.Windows.Forms.ListBox.PreferredHeight%2A> property might cause the <xref:System.Windows.Forms.ListBox> to be sized outside of the client area of the form or the <xref:System.Windows.Forms.ListBox> container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-522">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.Control.Size%2A> 속성은 <xref:System.Windows.Forms.ListBox> 의 값에 따라는 <xref:System.Windows.Forms.ListBox.PreferredHeight%2A> 속성에 있는 모든 항목을 표시 하기 위해는 <xref:System.Windows.Forms.ListBox> 스크롤 막대를 사용 하지 않고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-522">The following code example demonstrates how to set the <xref:System.Windows.Forms.Control.Size%2A> property of a <xref:System.Windows.Forms.ListBox> based on the value of the <xref:System.Windows.Forms.ListBox.PreferredHeight%2A> property in order to display all items in the <xref:System.Windows.Forms.ListBox> without use of scroll bars.</span></span> <span data-ttu-id="6a37a-523">이 예제에서는 한 <xref:System.Windows.Forms.ListBox> 라는 컨트롤 `listBox1`, 폼에 추가 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-523">This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.</span></span>  
  
 [!code-cpp[ListBox.PreferredHeight#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.PreferredHeight/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.PreferredHeight#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.PreferredHeight/CS/form1.cs#1)]
 [!code-vb[ListBox.PreferredHeight#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.PreferredHeight/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Height" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-524">컨트롤이 해당 컨트롤의 클라이언트 영역을 강제로 무효화하도록 하고 컨트롤 자체와 모든 자식 컨트롤을 즉시 다시 그리도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-524">Forces the control to invalidate its client area and immediately redraw itself and any child controls.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItem">
      <MemberSignature Language="C#" Value="protected override void RefreshItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.RefreshItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshItem(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="6a37a-525">새로 고칠 요소의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-525">The zero-based index of the element to refresh.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-526">지정한 인덱스에 있는 항목을 새로 고칩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-526">Refreshes the item contained at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-527">경우는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성이 설정 되어 속성에 할당 된 데이터 원본의 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 변경 내용을 사용 하 여는 <xref:System.Windows.Forms.ListBox.RefreshItem%2A> 의 값을 업데이트 하는 메서드는 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-527">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is set and the property in the data source that is assigned to <xref:System.Windows.Forms.ListControl.DisplayMember%2A> changes, use the <xref:System.Windows.Forms.ListBox.RefreshItem%2A> method to update the value in the <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItems">
      <MemberSignature Language="C#" Value="protected override void RefreshItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.RefreshItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-528">모든 <see cref="T:System.Windows.Forms.ListBox" /> 항목을 새로 고치고 이 항목에 대한 새 문자열을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-528">Refreshes all <see cref="T:System.Windows.Forms.ListBox" /> items and retrieves new strings for them.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RescaleConstantsForDpi">
      <MemberSignature Language="C#" Value="protected override void RescaleConstantsForDpi (int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RescaleConstantsForDpi(int32 deviceDpiOld, int32 deviceDpiNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.RescaleConstantsForDpi(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RescaleConstantsForDpi (deviceDpiOld As Integer, deviceDpiNew As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RescaleConstantsForDpi(int deviceDpiOld, int deviceDpiNew);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld">
          <span data-ttu-id="6a37a-529">변경 전의 DPI 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-529">The DPI value prior to the change.</span>
          </span>
        </param>
        <param name="deviceDpiNew">
          <span data-ttu-id="6a37a-530">변경 후의 DPI 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-530">The DPI value after the change.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-531">DPI가 변경될 때 컨트롤 크기를 재조정하기 위한 상수를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-531">Provides constants for rescaling the control when a DPI change occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public override void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ResetBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetBackColor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-532">
            <see cref="P:System.Windows.Forms.Control.BackColor" /> 속성을 기본값으로 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-532">Resets the <see cref="P:System.Windows.Forms.Control.BackColor" /> property to its default value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public override void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ResetForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetForeColor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-533">
            <see cref="P:System.Windows.Forms.Control.ForeColor" /> 속성을 기본값으로 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-533">Resets the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property to its default value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-534">컨트롤의 텍스트가 오른쪽에서 왼쪽으로 표시되는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-534">Gets or sets a value indicating whether text displayed by the control is displayed from right to left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-535">
            <see cref="T:System.Windows.Forms.RightToLeft" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-535">One of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-536">이 속성 메뉴 오른쪽에서 왼쪽으로 작성 된 언어를 지원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-536">This property enables your menus to support languages that are written from right to left.</span></span> <span data-ttu-id="6a37a-537">이 속성이로 설정 된 경우 `true`, 항목 텍스트가 오른쪽에서 왼쪽으로 기본값 대신 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-537">When this property is set to `true`, item text is displayed from right to left instead of the default left to right method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="factor">
          <span data-ttu-id="6a37a-538">컨트롤의 높이와 너비 크기를 조정하는 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-538">The factor by which the height and width of the control will be scaled.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="6a37a-539">컨트롤의 크기와 위치를 정의할 때 사용할 컨트롤 범위를 지정하는 <see cref="T:System.Windows.Forms.BoundsSpecified" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-539">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-540">컨트롤의 위치, 크기, 안쪽 여백 및 여백을 조정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-540">Scales a control's location, size, padding and margin.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollAlwaysVisible">
      <MemberSignature Language="C#" Value="public bool ScrollAlwaysVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollAlwaysVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ScrollAlwaysVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollAlwaysVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollAlwaysVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-541">항상 세로 스크롤 막대가 표시되는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-541">Gets or sets a value indicating whether the vertical scroll bar is shown at all times.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-542">세로 스크롤 막대를 항상 표시해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-542">
              <see langword="true" /> if the vertical scroll bar should always be displayed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a37a-543">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-543">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-544"><xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> 속성 세로 스크롤 막대에는 항상 표시 여부를 나타냅니다. 경우에의 항목 수는 <xref:System.Windows.Forms.ListBox> 세로 스크롤 막대를 표시 합니다. 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-544">The <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> property indicates whether a vertical scroll bar is always displayed, even if the number of items in the <xref:System.Windows.Forms.ListBox> does not require displaying the vertical scroll bar.</span></span> <span data-ttu-id="6a37a-545">기본적으로는 <xref:System.Windows.Forms.ListBox> 표시 충분 한 항목이 없으면 세로 스크롤 막대를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-545">By default, a <xref:System.Windows.Forms.ListBox> only shows a vertical scroll bar when there are enough items to warrant displaying.</span></span> <span data-ttu-id="6a37a-546">복수 열에 대 한 <xref:System.Windows.Forms.ListBox>, <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> 속성 가로 스크롤 막대가 표시 되는지 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-546">For a multicolumn <xref:System.Windows.Forms.ListBox>, the <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> property indicates that a horizontal scroll bar is displayed.</span></span> <span data-ttu-id="6a37a-547">세로 스크롤 막대를 복수 열에 대 한이 속성의 값에 관계 없이 표시 되지 않습니다 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-547">A vertical scroll bar is never displayed regardless of the value of this property for a multicolumn <xref:System.Windows.Forms.ListBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-548">다음 코드 예제에서는 소유자가 그린 <xref:System.Windows.Forms.ListBox> 설정 하 여는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 속성을는 `OwnerDrawVariable` 값 및 처리는 <xref:System.Windows.Forms.ListBox.DrawItem> 및 <xref:System.Windows.Forms.ListBox.MeasureItem> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-548">The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to the `OwnerDrawVariable` value and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and <xref:System.Windows.Forms.ListBox.MeasureItem> events.</span></span> <span data-ttu-id="6a37a-549">설정을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.BorderStyle%2A> 및 <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> 속성 및 사용 하 여 <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-549">It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.</span></span>  
  
 <span data-ttu-id="6a37a-550">이 예제를 실행 하려면 가져오는 빈 폼에 붙여넣습니다는 <xref:System.Drawing> 네임 스페이스 및 <xref:System.Windows.Forms> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-550">To run this example, paste it in an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace.</span></span> <span data-ttu-id="6a37a-551">호출 `InitializeOwnerDrawnListBox` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-551">Call `InitializeOwnerDrawnListBox` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.HorizontalScrollbar" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public override int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-552">
            <see cref="T:System.Windows.Forms.ListBox" />에서 현재 선택되어 있는 항목의 인덱스(0부터 시작)를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-552">Gets or sets the zero-based index of the currently selected item in a <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-553">현재 선택된 항목의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-553">A zero-based index of the currently selected item.</span>
          </span>
          <span data-ttu-id="6a37a-554">선택된 항목이 없으면 -1 값이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-554">A value of negative one (-1) is returned if no item is selected.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-555">표준에 대 한 <xref:System.Windows.Forms.ListBox>에서 선택한 항목의 인덱스를 확인 하려면이 속성을 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-555">For a standard <xref:System.Windows.Forms.ListBox>, you can use this property to determine the index of the item that is selected in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-556">경우는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A> 속성의는 <xref:System.Windows.Forms.ListBox> 로 설정 된 `SelectionMode.MultiSimple` 또는 `SelectionMode.MultiExtended` (다중 선택 나타냅니다 <xref:System.Windows.Forms.ListBox>) 및 여러 항목 목록에서 선택 된,이 속성을 선택한 항목 인덱스를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-556">If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property of the <xref:System.Windows.Forms.ListBox> is set to either `SelectionMode.MultiSimple` or `SelectionMode.MultiExtended` (which indicates a multiple-selection <xref:System.Windows.Forms.ListBox>) and multiple items are selected in the list, this property can return the index to any selected item.</span></span>  
  
 <span data-ttu-id="6a37a-557">다중 선택에서 선택한 항목의 모든 인덱스를 포함 하는 컬렉션을 검색 하려면 <xref:System.Windows.Forms.ListBox>를 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-557">To retrieve a collection containing the indexes of all selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property.</span></span> <span data-ttu-id="6a37a-558">현재 선택 된 항목을 가져오려면 원하는 경우는 <xref:System.Windows.Forms.ListBox>를 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedItem%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-558">If you want to obtain the item that is currently selected in the <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property.</span></span> <span data-ttu-id="6a37a-559">또한 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox.SelectedItems%2A> 속성을 다중 선택에서 선택한 항목을 모두 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-559">In addition, you can use the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property to obtain all the selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-560">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> 속성으로는 <xref:System.Windows.Forms.ListBox.TopIndex%2A> 속성을 현재 선택 된 항목의 표시 영역에 있는 항목의 목록 맨 위로 이동 하는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-560">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-561">이 예에서 좀더 나아가 사용 하 여 항목을 제거 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> 의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> 클래스 및 사용 하 여 모든 항목 선택의 선택을 취소 하는 방법의 <xref:System.Windows.Forms.ListBox.ClearSelected%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-561">The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method.</span></span> <span data-ttu-id="6a37a-562">코드 현재 선택 된 항목을 먼저 이동는 <xref:System.Windows.Forms.ListBox> 목록의 맨 위로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-562">The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list.</span></span> <span data-ttu-id="6a37a-563">현재 선택한 항목 앞의 모든 항목을 제거 및에서 모든 선택을 취소 한 다음 코드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-563">The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-564">이 예제에서는 한 <xref:System.Windows.Forms.ListBox> 항목을 포함 하는 폼에 추가 하 고 선택 하는 항목은 현재는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-564">This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-cpp[ListBox.SelectedIndex#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndex/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndex#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndex/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndex#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndex/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a37a-565">할당된 값이 -1보다 작거나 항목 수보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-565">The assigned value is less than -1 or greater than or equal to the item count.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a37a-566">
            <see cref="P:System.Windows.Forms.ListBox.SelectionMode" /> 속성은 <see langword="None" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-566">The <see cref="P:System.Windows.Forms.ListBox.SelectionMode" /> property is set to <see langword="None" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedIndices" />
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-567">
            <see cref="P:System.Windows.Forms.ListBox.SelectedIndex" /> 속성이나 <see cref="P:System.Windows.Forms.ListBox.SelectedIndices" /> 컬렉션이 변경될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-567">Occurs when the <see cref="P:System.Windows.Forms.ListBox.SelectedIndex" /> property or the <see cref="P:System.Windows.Forms.ListBox.SelectedIndices" /> collection has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-568">시기를 확인 하려면이 이벤트에 대 한 이벤트 처리기를 만들 수 있습니다에 선택한 인덱스의 <xref:System.Windows.Forms.ListBox> 변경 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-568">You can create an event handler for this event to determine when the selected index in the <xref:System.Windows.Forms.ListBox> has been changed.</span></span> <span data-ttu-id="6a37a-569">현재 선택한 내용에 따라 다른 컨트롤에서 정보를 표시 해야 할 때 유용할 수 있습니다는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-569">This can be useful when you need to display information in other controls based on the current selection in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-570">다른 컨트롤의 정보를 로드 하려면이 이벤트에 대 한 이벤트 처리기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-570">You can use the event handler for this event to load the information in the other controls.</span></span>  
  
 <span data-ttu-id="6a37a-571">경우는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A> 속성이 <xref:System.Windows.Forms.SelectionMode.MultiSimple?displayProperty=nameWithType> 또는 <xref:System.Windows.Forms.SelectionMode.MultiExtended?displayProperty=nameWithType>, 변경 된는 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> 선택 영역에서 항목을 제거 하는 등 컬렉션이이 이벤트를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-571">If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property is set to <xref:System.Windows.Forms.SelectionMode.MultiSimple?displayProperty=nameWithType> or <xref:System.Windows.Forms.SelectionMode.MultiExtended?displayProperty=nameWithType>, any change to the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> collection, including removing an item from the selection, will raise this event.</span></span>  
  
 <span data-ttu-id="6a37a-572">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-572">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-573">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> 이벤트를 검색 하는 다른 항목을 선택 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-573">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to search for and select an item in a different <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="6a37a-574">이 예제에서는 사용는 <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> 시점을 결정 하는 이벤트에서 선택한 항목은 <xref:System.Windows.Forms.ListBox> 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-574">The example uses the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to determine when the selected item in the <xref:System.Windows.Forms.ListBox> is changed.</span></span> <span data-ttu-id="6a37a-575">그런 다음 예제 코드를 읽어 사용 하 여 항목의 텍스트는 <xref:System.Windows.Forms.ListBox.SelectedItem%2A> 속성 및 호출은 <xref:System.Windows.Forms.ListBox.FindString%2A> 다른 메서드 <xref:System.Windows.Forms.ListBox> 에서 반환 된 텍스트를 사용 하 여 <xref:System.Windows.Forms.ListBox.SelectedItem%2A> 첫 번째 범위에서 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-575">The example code then reads the text of the item using the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property and calls the <xref:System.Windows.Forms.ListBox.FindString%2A> method on a different <xref:System.Windows.Forms.ListBox> using the text returned by <xref:System.Windows.Forms.ListBox.SelectedItem%2A> in the first <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-576">다른 항목이 경우 <xref:System.Windows.Forms.ListBox>, 항목을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-576">If an item is found in the other <xref:System.Windows.Forms.ListBox>, the item is selected.</span></span> <span data-ttu-id="6a37a-577">이 예제를 실행 하려면 <xref:System.Windows.Forms.ListBox> 라는 컨트롤 `listBox1` 및 `listBox2`, 폼에 추가 된 둘 다 <xref:System.Windows.Forms.ListBox> 컨트롤와 동일한 항목을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-577">This example requires that two <xref:System.Windows.Forms.ListBox> controls, named `listBox1` and `listBox2`, have been added to a form and that both <xref:System.Windows.Forms.ListBox> controls contain items that are identical.</span></span> <span data-ttu-id="6a37a-578">또한이 예제에 예제에 정의 된 이벤트 처리 메서드에 연결 되어 있는지는 <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> 이벤트의 `listBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-578">The example also requires that the event-handling method defined in the example is connected to the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event of `listBox1`.</span></span>  
  
 [!code-cpp[ListBox.SelectedIndexChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndexChanged/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndexChanged/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndexChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListBox.SelectedIndexCollection SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListBox/SelectedIndexCollection SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedIndices As ListBox.SelectedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListBox::SelectedIndexCollection ^ SelectedIndices { System::Windows::Forms::ListBox::SelectedIndexCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+SelectedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-579">
            <see cref="T:System.Windows.Forms.ListBox" />에서 현재 선택되어 있는 모든 항목의 인덱스(0부터 시작)가 들어 있는 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-579">Gets a collection that contains the zero-based indexes of all currently selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-580">현재 컨트롤에 선택되어 있는 항목의 인덱스가 들어 있는 <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-580">A <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> containing the indexes of the currently selected items in the control.</span>
          </span>
          <span data-ttu-id="6a37a-581">현재 선택된 항목이 없으면 비어 있는 <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-581">If no items are currently selected, an empty <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-582">다중 선택에 대 한 <xref:System.Windows.Forms.ListBox>에서 선택 된 모든 항목의 인덱스를 포함 하는 컬렉션을 반환 하는이 속성은 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-582">For a multiple-selection <xref:System.Windows.Forms.ListBox>, this property returns a collection containing the indexes to all items that are selected in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-583">단일 선택에 대 한 <xref:System.Windows.Forms.ListBox>에 있는 유일한 선택한 항목의 인덱스를 포함 하는 단일 요소를 포함 하는 컬렉션을 반환 하는이 속성은 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-583">For a single-selection <xref:System.Windows.Forms.ListBox>, this property returns a collection containing a single element containing the index of the only selected item in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-584">컬렉션의 항목을 조작 하는 방법에 대 한 자세한 내용은 참조 <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-584">For more information about how to manipulate the items of the collection, see <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>.</span></span>  
  
 <span data-ttu-id="6a37a-585"><xref:System.Windows.Forms.ListBox> 클래스는 다양 한 선택 된 항목을 참조 하는 방법 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-585">The <xref:System.Windows.Forms.ListBox> class provides a number of ways to reference selected items.</span></span> <span data-ttu-id="6a37a-586">사용 하는 대신는 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> 단일 선택에서 현재 선택 된 항목의 인덱스 위치를 가져오는 속성 <xref:System.Windows.Forms.ListBox>를 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-586">Instead of using the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property to obtain the index position of the currently selected item in a single-selection <xref:System.Windows.Forms.ListBox>, you can use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property.</span></span> <span data-ttu-id="6a37a-587">현재 선택 된 항목을 가져오려면 원하는 경우는 <xref:System.Windows.Forms.ListBox>, 항목의 인덱스 위치를 대신 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedItem%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-587">If you want to obtain the item that is currently selected in the <xref:System.Windows.Forms.ListBox>, instead of the index position of the item, use the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property.</span></span> <span data-ttu-id="6a37a-588">또한 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox.SelectedItems%2A> 속성을 다중 선택에서 선택한 항목을 모두 가져오려면 경우 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-588">In addition, you can use the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property if you want to obtain all the selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-589">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox.FindString%2A> 의 항목에서 검색 텍스트의 모든 인스턴스에 대 한 검색 메서드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-589">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for all instances of the search text in the items of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-590">버전을 사용 하 여의 예제는 <xref:System.Windows.Forms.ListBox.FindString%2A> 에 모든 항목의 연속 검색을 시작 하는 검색 인덱스를 지정할 수 있도록 하는 메서드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-590">The example uses the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-591">시기를 결정 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.FindString%2A> 메서드 재귀 검색을 방지 하기 위해 항목 목록의 아래쪽에 도달한 후 목록의 처음부터 검색 하기 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-591">The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindString%2A> method begins searching from the top of the list after it reaches the bottom of the list of items to prevent a recursive search.</span></span> <span data-ttu-id="6a37a-592">항목에서 발견 되 면는 <xref:System.Windows.Forms.ListBox>를 사용 하 여 선택 된 <xref:System.Windows.Forms.ListBox.SetSelected%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-592">Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span>  
  
 [!code-cpp[ListBox.FindString#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindString/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindString/CS/form1.cs#1)]
 [!code-vb[ListBox.FindString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindString/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedIndex" />
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedItem" />
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public object SelectedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedItem { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-593">
            <see cref="T:System.Windows.Forms.ListBox" />에서 현재 선택되어 있는 항목을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-593">Gets or sets the currently selected item in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-594">컨트롤의 현재 선택 항목을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-594">An object that represents the current selection in the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-595">표준에 대 한 <xref:System.Windows.Forms.ListBox>에서 선택한 항목을 확인 하려면이 속성을 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-595">For a standard <xref:System.Windows.Forms.ListBox>, you can use this property to determine which item is selected in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-596">경우는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A> 의 속성에서 <xref:System.Windows.Forms.ListBox> 로 설정 되어 `SelectionMode.MultiSimple` 또는 `SelectionMode.MultiExtended` (다중 선택 나타냅니다 <xref:System.Windows.Forms.ListBox>) 및 여러 항목 목록에서 선택 된,이 속성이 선택된 된 항목을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-596">If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property of the <xref:System.Windows.Forms.ListBox> is set to either `SelectionMode.MultiSimple` or `SelectionMode.MultiExtended` (which indicates a multiple-selection <xref:System.Windows.Forms.ListBox>) and multiple items are selected in the list, this property can return any selected item.</span></span>  
  
 <span data-ttu-id="6a37a-597">다중 선택 선택 된 모든 항목을 포함 하는 컬렉션을 검색 하려면 <xref:System.Windows.Forms.ListBox>를 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedItems%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-597">To retrieve a collection containing all selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property.</span></span> <span data-ttu-id="6a37a-598">현재 선택한 항목의 인덱스 위치를 가져올 것인지는 <xref:System.Windows.Forms.ListBox>를 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-598">If you want to obtain the index position of the currently selected item in the <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property.</span></span> <span data-ttu-id="6a37a-599">또한 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> 속성을 다중 선택에서 선택된 된 모든 인덱스 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-599">In addition, you can use the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property to obtain all the selected indexes in a multiple-selection <xref:System.Windows.Forms.ListBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-600">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> 이벤트를 검색 하는 다른 항목을 선택 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-600">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to search for and select an item in a different <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="6a37a-601">이 예제에서는 사용는 <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> 시점을 결정 하는 이벤트에서 선택한 항목은 <xref:System.Windows.Forms.ListBox> 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-601">The example uses the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to determine when the selected item in the <xref:System.Windows.Forms.ListBox> is changed.</span></span> <span data-ttu-id="6a37a-602">그런 다음 예제 코드를 읽어 사용 하 여 항목의 텍스트는 <xref:System.Windows.Forms.ListBox.SelectedItem%2A> 속성 및 호출은 <xref:System.Windows.Forms.ListBox.FindString%2A> 다른 메서드 <xref:System.Windows.Forms.ListBox> 에서 반환 된 텍스트를 사용 하 여 <xref:System.Windows.Forms.ListBox.SelectedItem%2A> 첫 번째 범위에서 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-602">The example code then reads the text of the item using the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property and calls the <xref:System.Windows.Forms.ListBox.FindString%2A> method on a different <xref:System.Windows.Forms.ListBox> using the text returned by <xref:System.Windows.Forms.ListBox.SelectedItem%2A> in the first <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-603">다른 항목이 경우 <xref:System.Windows.Forms.ListBox>, 항목을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-603">If an item is found in the other <xref:System.Windows.Forms.ListBox>, the item is selected.</span></span> <span data-ttu-id="6a37a-604">이 예제를 실행 하려면 <xref:System.Windows.Forms.ListBox> 라는 컨트롤 `listBox1` 및 `listBox2`, 폼에 추가 된 둘 다 <xref:System.Windows.Forms.ListBox> 컨트롤와 동일한 항목을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-604">This example requires that two <xref:System.Windows.Forms.ListBox> controls, named `listBox1` and `listBox2`, have been added to a form and that both <xref:System.Windows.Forms.ListBox> controls contain items that are identical.</span></span> <span data-ttu-id="6a37a-605">또한이 예제에 예제에 정의 된 이벤트 처리 메서드에 연결 되어 있는지는 <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> 이벤트의 `listBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-605">The example also requires that the event-handling method defined in the example is connected to the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event of `listBox1`.</span></span>  
  
 [!code-cpp[ListBox.SelectedIndexChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndexChanged/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndexChanged/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndexChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListBox.SelectedObjectCollection SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListBox/SelectedObjectCollection SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As ListBox.SelectedObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListBox::SelectedObjectCollection ^ SelectedItems { System::Windows::Forms::ListBox::SelectedObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+SelectedObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-606">
            <see cref="T:System.Windows.Forms.ListBox" />에서 현재 선택되어 있는 항목을 포함하는 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-606">Gets a collection containing the currently selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-607">현재 컨트롤에 선택되어 있는 항목을 포함하는 <see cref="T:System.Windows.Forms.ListBox.SelectedObjectCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-607">A <see cref="T:System.Windows.Forms.ListBox.SelectedObjectCollection" /> containing the currently selected items in the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-608">다중 선택에 대 한 <xref:System.Windows.Forms.ListBox>에서 선택 된 모든 항목이 포함 된 컬렉션을 반환 하는이 속성은 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-608">For a multiple-selection <xref:System.Windows.Forms.ListBox>, this property returns a collection containing all items that are selected in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-609">단일 선택에 대 한 <xref:System.Windows.Forms.ListBox>에서 선택한 항목만 포함 하는 단일 요소를 포함 하는 컬렉션을 반환 하는이 속성은 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-609">For a single-selection <xref:System.Windows.Forms.ListBox>, this property returns a collection containing a single element containing the only selected item in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-610">컬렉션의 항목을 조작 하는 방법에 대 한 자세한 내용은 참조 <xref:System.Windows.Forms.ListBox.SelectedObjectCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-610">For more information about how to manipulate the items of the collection, see <xref:System.Windows.Forms.ListBox.SelectedObjectCollection>.</span></span>  
  
 <span data-ttu-id="6a37a-611"><xref:System.Windows.Forms.ListBox> 클래스는 다양 한 선택 된 항목을 참조 하는 방법 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-611">The <xref:System.Windows.Forms.ListBox> class provides a number of ways to reference selected items.</span></span> <span data-ttu-id="6a37a-612">사용 하는 대신는 <xref:System.Windows.Forms.ListBox.SelectedItems%2A> 속성 단일 선택에서 현재 선택한 항목을 <xref:System.Windows.Forms.ListBox>를 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox.SelectedItem%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-612">Instead of using the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property to obtain the currently selected item in a single-selection <xref:System.Windows.Forms.ListBox>, you can use the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property.</span></span> <span data-ttu-id="6a37a-613">현재 선택 된 항목의 인덱스 위치를 가져오는 경우는 <xref:System.Windows.Forms.ListBox>을 항목 자체를 대신 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-613">If you want to obtain the index position of an item that is currently selected in the <xref:System.Windows.Forms.ListBox>, instead of the item itself, use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property.</span></span> <span data-ttu-id="6a37a-614">또한 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> 속성을 다중 선택에서 선택한 모든 항목의 인덱스 위치를 가져오는 경우 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-614">In addition, you can use the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property if you want to obtain the index positions of all selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.SelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectionMode As SelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::SelectionMode SelectionMode { System::Windows::Forms::SelectionMode get(); void set(System::Windows::Forms::SelectionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-615">
            <see cref="T:System.Windows.Forms.ListBox" />에서 항목을 선택하는 방법을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-615">Gets or sets the method in which items are selected in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-616">
            <see cref="T:System.Windows.Forms.SelectionMode" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-616">One of the <see cref="T:System.Windows.Forms.SelectionMode" /> values.</span>
          </span>
          <span data-ttu-id="6a37a-617">기본값은 <see langword="SelectionMode.One" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-617">The default is <see langword="SelectionMode.One" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-618"><xref:System.Windows.Forms.ListBox.SelectionMode%2A> 속성을 사용 하면 항목에 결정 하는 <xref:System.Windows.Forms.ListBox> 한 번에 선택할 수 있는 및 사용자가 다중 선택을 확인할 수 있는 방법은 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-618">The <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property enables you to determine how many items in the <xref:System.Windows.Forms.ListBox> a user can select at one time and how the user can make multiple-selections.</span></span> <span data-ttu-id="6a37a-619">경우는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A> 속성이 `SelectionMode.MultiExtended`, shift 및 마우스를 클릭 하거나 눌러 이동 및 현재 항목에 이전에 선택한 항목의 선택 영역을 확장 한 (위쪽 화살표, 아래쪽 화살표, 왼쪽 화살표 및 오른쪽 화살표) 화살표 키 .</span><span class="sxs-lookup"><span data-stu-id="6a37a-619">When the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property is set to `SelectionMode.MultiExtended`, pressing SHIFT and clicking the mouse or pressing SHIFT and one of the arrow keys (UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW) extends the selection from the previously selected item to the current item.</span></span> <span data-ttu-id="6a37a-620">CTRL 키를 누르고 마우스를 클릭 하면 목록에서 항목을 선택 취소 하거나 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-620">Pressing CTRL and clicking the mouse selects or deselects an item in the list.</span></span> <span data-ttu-id="6a37a-621">속성이로 설정 되 면 `SelectionMode.MultiSimple`, 마우스 클릭 또는 스페이스바를 누르면 선택 하거나 목록에서 항목을 선택 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-621">When the property is set to `SelectionMode.MultiSimple`, a mouse click or pressing the SPACEBAR selects or deselects an item in the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-622">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox.GetSelected%2A> 에 항목을 확인 하는 <xref:System.Windows.Forms.ListBox> 선택 되지 않은 항목을 선택 하 고 선택 된 항목은 선택 취소 하려면 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-622">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected.</span></span> <span data-ttu-id="6a37a-623">또한 예제에 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A> 속성을 사용 하는 <xref:System.Windows.Forms.ListBox> 둘 이상의 하려면 사용 하 여 항목을 선택는 <xref:System.Windows.Forms.ListBox.Sorted%2A> 속성에서 항목을 정렬 하는 방법을 보여 주기 위해는 <xref:System.Windows.Forms.ListBox> 자동으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-623">The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically.</span></span> <span data-ttu-id="6a37a-624">이 예제에서는 <xref:System.Windows.Forms.ListBox>명명 된 `listBox1`, 폼에 추가 되었습니다는 `InitializeMyListBox` 에서 호출 되는 예제에 정의 된 메서드는 <xref:System.Windows.Forms.Form.Load> 폼의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-624">This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.</span></span>  
  
 [!code-cpp[ListBox.GetSelected#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.GetSelected/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.GetSelected#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.GetSelected/CS/form1.cs#1)]
 [!code-vb[ListBox.GetSelected#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.GetSelected/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="6a37a-625">할당된 값이 <see cref="T:System.Windows.Forms.SelectionMode" /> 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-625">The assigned value is not one of the <see cref="T:System.Windows.Forms.SelectionMode" /> values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.SelectionMode" />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="6a37a-626">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Left" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-626">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="6a37a-627">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Top" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-627">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="6a37a-628">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Width" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-628">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="6a37a-629">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Height" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-629">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="6a37a-630">
            <see cref="T:System.Windows.Forms.BoundsSpecified" /> 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-630">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-631">
            <see cref="T:System.Windows.Forms.ListBox" /> 컨트롤의 지정된 범위를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-631">Sets the specified bounds of the <see cref="T:System.Windows.Forms.ListBox" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-632">높이 <xref:System.Windows.Forms.ListBox> 의 배수로 낮아지고 제어는 <xref:System.Windows.Forms.ListBox.ItemHeight%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-632">The height of the <xref:System.Windows.Forms.ListBox> control increases and decreases by a multiple of the <xref:System.Windows.Forms.ListBox.ItemHeight%2A> property.</span></span> <span data-ttu-id="6a37a-633">높이 숫자를의 배수가 아닌 경우 <xref:System.Windows.Forms.ListBox.ItemHeight%2A>의 높이 <xref:System.Windows.Forms.ListBox> 높이 보다 작으면 하는 여러 개의 가장 큰 값으로 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-633">If height is a number that is not a multiple of <xref:System.Windows.Forms.ListBox.ItemHeight%2A>, the height of the <xref:System.Windows.Forms.ListBox> will change by the largest multiple that is less than height.</span></span>  
  
 <span data-ttu-id="6a37a-634">일반적으로 지정된 된 매개 변수에서 제외 범위에 해당 하는 매개 변수는 현재 값과 함께 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-634">Typically, the parameters that correspond to the bounds not included in the specified parameter are passed in with their current values.</span></span> <span data-ttu-id="6a37a-635">예를 들어는 `height`, `width`, 또는 `x` 또는 `y` 의 속성은 <xref:System.Windows.Forms.Control.Location%2A> 속성 컨트롤의 현재 인스턴스에 대 한 참조를 사용 하 여 전달 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-635">For example, the `height`, `width`, or the `x` or `y` properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="6a37a-636">그러나에 전달 된 모든 값 유지 하 고 컨트롤에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-636">However, all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="6a37a-637">`specified` 매개 변수는 컨트롤의 요소를 나타냅니다 <xref:System.Windows.Forms.Control.Bounds%2A> 응용 프로그램에 의해 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-637">The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="6a37a-638">예를 들어, 변경 하는 경우는 <xref:System.Windows.Forms.Control.Size%2A> 컨트롤의는 `specified` 매개 변수 값이 <xref:System.Windows.Forms.BoundsSpecified.Size>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-638">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is <xref:System.Windows.Forms.BoundsSpecified.Size>.</span></span> <span data-ttu-id="6a37a-639">그러나 경우는 <xref:System.Windows.Forms.Control.Size%2A> 대 한 응답으로 조정 되는 <xref:System.Windows.Forms.Control.Dock%2A> 속성이 설정 되는 `specified` 매개 변수 값이 <xref:System.Windows.Forms.BoundsSpecified.None>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-639">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is <xref:System.Windows.Forms.BoundsSpecified.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6a37a-640">재정의 하는 경우 <see cref="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> 메서드를 변경 하려면 컨트롤의 범위입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6a37a-640">When overriding <see cref="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change.</span>
            </span>
            <span data-ttu-id="6a37a-641">파생된 클래스에는 크기 제한을 추가할 수는 <see cref="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6a37a-641">Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetItemCore">
      <MemberSignature Language="C#" Value="protected override void SetItemCore (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItemCore(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItemCore (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItemCore(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="6a37a-642">개체의 배열 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-642">The array index of the object.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6a37a-643">개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-643">The object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-644">파생 클래스에서 지정된 인덱스를 사용하여 개체를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-644">Sets the object with the specified index in the derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemsCore">
      <MemberSignature Language="C#" Value="protected override void SetItemsCore (System.Collections.IList value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItemsCore(class System.Collections.IList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItemsCore (value As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItemsCore(System::Collections::IList ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6a37a-645">컨트롤에 삽입할 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-645">An array of objects to insert into the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-646">
            <see cref="T:System.Windows.Forms.ListBox" />의 내용을 지우고 지정된 항목을 컨트롤에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-646">Clears the contents of the <see cref="T:System.Windows.Forms.ListBox" /> and adds the specified items to the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelected">
      <MemberSignature Language="C#" Value="public void SetSelected (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelected(int32 index, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelected (index As Integer, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelected(int index, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="6a37a-647">선택하거나 선택 취소할 <see cref="T:System.Windows.Forms.ListBox" /> 항목의 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-647">The zero-based index of the item in a <see cref="T:System.Windows.Forms.ListBox" /> to select or clear the selection for.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6a37a-648">지정된 항목을 선택하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-648">
              <see langword="true" /> to select the specified item; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-649">
            <see cref="T:System.Windows.Forms.ListBox" />의 지정된 항목을 선택하거나 선택 취소합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-649">Selects or clears the selection for the specified item in a <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-650">이 속성을 사용 하 여 다중 선택의 선택 항목의 설정 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-650">You can use this property to set the selection of items in a multiple-selection <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-651">단일 선택 항목을 선택 하려면 <xref:System.Windows.Forms.ListBox>를 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-651">To select an item in a single-selection <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-652">다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox> 컨트롤 열에 여러 항목을 표시 하는 컨트롤의 목록에서 선택한 항목을 여러 개 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-652">The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list.</span></span> <span data-ttu-id="6a37a-653">50 개의 항목을 추가 하는 예제 코드는 <xref:System.Windows.Forms.ListBox> 를 사용 하는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 사용 하 여 목록에서 세 개의 항목 클래스와 선택은 <xref:System.Windows.Forms.ListBox.SetSelected%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-653">The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span> <span data-ttu-id="6a37a-654">다음 코드에서 값이 표시는 <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> 컬렉션 (통해는 <xref:System.Windows.Forms.ListBox.SelectedItems%2A> 속성) 및 <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (통해는 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> 속성).</span><span class="sxs-lookup"><span data-stu-id="6a37a-654">The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property).</span></span> <span data-ttu-id="6a37a-655">이 예제 코드에서 호출에 위치 하는 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-655">This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a37a-656">지정된 인덱스가 유효한 값 범위를 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-656">The specified index was outside the range of valid values.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a37a-657">
            <see cref="P:System.Windows.Forms.ListBox.SelectionMode" /> 속성이 <see langword="None" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-657">The <see cref="P:System.Windows.Forms.ListBox.SelectionMode" /> property was set to <see langword="None" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.ListBox.SelectedIndex" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="protected virtual void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.Sort" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Sort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-658">
            <see cref="T:System.Windows.Forms.ListBox" />의 항목을 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-658">Sorts the items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-659"><xref:System.Windows.Forms.ListBox.Sort%2A> 컬렉션을 자신에 게 다시 각 항목에 추가 하는 경우는 <xref:System.Windows.Forms.ListBox.Sorted%2A> 속성은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-659"><xref:System.Windows.Forms.ListBox.Sort%2A> forces the collection to add each item back to itself if the <xref:System.Windows.Forms.ListBox.Sorted%2A> property is `true`.</span></span> <span data-ttu-id="6a37a-660">각 항목은 다음 올바른 위치에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-660">Each item is then inserted into the correct position.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-661">다음 코드 예제는 <xref:System.Windows.Forms.ListBox.Sort%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-661">The following code example demonstrates using the <xref:System.Windows.Forms.ListBox.Sort%2A> method.</span></span> <span data-ttu-id="6a37a-662">예제에서 상속 하는 <xref:System.Windows.Forms.ListBox> 클래스와 재정의 <xref:System.Windows.Forms.ListBox.Sort%2A> 사용자 지정 정렬을 수행 하려면 파생된 클래스에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-662">The example demonstrates inheriting from the <xref:System.Windows.Forms.ListBox> class and overriding the <xref:System.Windows.Forms.ListBox.Sort%2A> method in the derived class to perform a user-defined sort.</span></span> <span data-ttu-id="6a37a-663">이 예에서는 실행 하려면 빈 폼에 다음 코드를 붙여 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-663">To run this example paste the following code in an empty form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListBoxSort#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxSort/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxSort#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxSort/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxSort#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxSort/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6a37a-664">고유한 정렬 루틴을 제공 하려면 파생된 클래스에서이 메서드를 재정의할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6a37a-664">You can override this method in your derived class to provide your own sorting routine.</span>
            </span>
            <span data-ttu-id="6a37a-665">재정의 된 결과 액세스 <see cref="M:System.Windows.Forms.ListBox.Sort" /> 설정 하 여 메서드는 <see cref="P:System.Windows.Forms.ListBox.Sorted" /> 속성을 <see langword="true" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6a37a-665">Access the results of the overridden <see cref="M:System.Windows.Forms.ListBox.Sort" /> method by setting the <see cref="P:System.Windows.Forms.ListBox.Sorted" /> property to <see langword="true" />.</span>
            </span>
            <span data-ttu-id="6a37a-666">항목을 추가할 때는 <see cref="T:System.Windows.Forms.ListBox" />,이 항목을 먼저 정렬 한 다음 새 항목을 추가 하는 것이 효율적입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6a37a-666">When adding items to a <see cref="T:System.Windows.Forms.ListBox" />, it is more efficient to sort the items first and then add new items.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.ListBox.Sorted" />
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Sorted { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-667">
            <see cref="T:System.Windows.Forms.ListBox" />의 항목이 사전순으로 정렬되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-667">Gets or sets a value indicating whether the items in the <see cref="T:System.Windows.Forms.ListBox" /> are sorted alphabetically.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-668">컨트롤의 항목이 정렬되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-668">
              <see langword="true" /> if items in the control are sorted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a37a-669">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-669">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-670">사용 하 여는 <xref:System.Windows.Forms.ListBox.Sorted%2A> 에서 사전순으로 자동으로 정렬 속성 문자열을 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-670">Use the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to automatically sort strings alphabetically in a <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-671">항목이 추가 되는 정렬 된에 <xref:System.Windows.Forms.ListBox>, 항목이 정렬된 된 목록에서 적절 한 위치로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-671">As items are added to a sorted <xref:System.Windows.Forms.ListBox>, the items are moved to the appropriate location in the sorted list.</span></span> <span data-ttu-id="6a37a-672">항목을 추가할 때는 <xref:System.Windows.Forms.ListBox>,이 항목을 먼저 정렬 한 다음 새 항목을 추가 하는 것이 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-672">When adding items to a <xref:System.Windows.Forms.ListBox>, it is more efficient to sort the items first and then add new items.</span></span>  
  
 <span data-ttu-id="6a37a-673">A <xref:System.Windows.Forms.ListBox> 와 해당 <xref:System.Windows.Forms.ListBox.Sorted%2A> 로 설정 `true` 사용 하 여 데이터에 바인딩되지 않도록는 <xref:System.Windows.Forms.ListControl.DataSource%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-673">A <xref:System.Windows.Forms.ListBox> with its <xref:System.Windows.Forms.ListBox.Sorted%2A> set to `true` should not be bound to data using the <xref:System.Windows.Forms.ListControl.DataSource%2A> property.</span></span> <span data-ttu-id="6a37a-674">한계에 데이터 정렬 표시 하려면 <xref:System.Windows.Forms.ListBox>, 정렬을 지 원하는 데이터 소스에 바인딩해야 하 고 데이터 소스에서 정렬을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-674">To display sorted data in a bound <xref:System.Windows.Forms.ListBox>, you should bind to a data source that supports sorting and have the data source provide the sorting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-675">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox.GetSelected%2A> 에 항목을 확인 하는 <xref:System.Windows.Forms.ListBox> 선택 되지 않은 항목을 선택 하 고 선택 된 항목은 선택 취소 하려면 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-675">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected.</span></span> <span data-ttu-id="6a37a-676">또한 예제에 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A> 속성을 사용 하는 <xref:System.Windows.Forms.ListBox> 둘 이상의 하려면 사용 하 여 항목을 선택는 <xref:System.Windows.Forms.ListBox.Sorted%2A> 속성에서 항목을 정렬 하는 방법을 보여 주기 위해는 <xref:System.Windows.Forms.ListBox> 자동으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-676">The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically.</span></span> <span data-ttu-id="6a37a-677">이 예제에서는 <xref:System.Windows.Forms.ListBox>명명 된 `listBox1`, 폼에 추가 되었습니다는 `InitializeMyListBox` 에서 호출 되는 예제에 정의 된 메서드는 <xref:System.Windows.Forms.Form.Load> 폼의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-677">This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.</span></span>  
  
 [!code-cpp[ListBox.GetSelected#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.GetSelected/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.GetSelected#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.GetSelected/CS/form1.cs#1)]
 [!code-vb[ListBox.GetSelected#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.GetSelected/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-678">
            <see cref="T:System.Windows.Forms.ListBox" />에서 현재 선택되어 있는 항목의 텍스트를 가져오거나 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-678">Gets or searches for the text of the currently selected item in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-679">현재 컨트롤에 선택되어 있는 항목의 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-679">The text of the currently selected item in the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-680">이 속성의 값은 문자열 값으로 설정 된 경우는 <xref:System.Windows.Forms.ListBox> 내에서 항목에 대 한 검색에서 <xref:System.Windows.Forms.ListBox> 지정된 텍스트와 일치 하 고 항목을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-680">When the value of this property is set to a string value, the <xref:System.Windows.Forms.ListBox> searches for the item within the <xref:System.Windows.Forms.ListBox> that matches the specified text and selects the item.</span></span> <span data-ttu-id="6a37a-681">현재 선택 된 항목을 확인 하려면이 속성을 사용할 수도 있습니다는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-681">You can also use this property to determine which items are currently selected in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-682">경우는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A> 의 속성은 <xref:System.Windows.Forms.ListBox> 로 설정 되어 `SelectionMode.MultiExtended`,이 속성이 첫 번째 선택된 항목의 텍스트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-682">If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property of the <xref:System.Windows.Forms.ListBox> is set to `SelectionMode.MultiExtended`, this property returns the text of the first selected item.</span></span> <span data-ttu-id="6a37a-683">경우는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A> 속성의는 <xref:System.Windows.Forms.ListBox> 로 설정 되지 않은 `SelectionMode.None`,이 속성이 첫 번째 선택된 항목의 텍스트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-683">If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property of the <xref:System.Windows.Forms.ListBox> is not set to `SelectionMode.None`, this property returns the text of the first selected item.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListBox.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-684">
            <see cref="P:System.Windows.Forms.ListBox.Text" /> 속성이 변경될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-684">Occurs when the <see cref="P:System.Windows.Forms.ListBox.Text" /> property is changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopIndex">
      <MemberSignature Language="C#" Value="public int TopIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TopIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.TopIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TopIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TopIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-685">
            <see cref="T:System.Windows.Forms.ListBox" />에서 가장 먼저 표시되는 항목의 인덱스를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-685">Gets or sets the index of the first visible item in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-686">컨트롤에서 가장 먼저 표시되는 항목의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-686">The zero-based index of the first visible item in the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-687">처음에 인덱스 위치에 있는 항목 영 (0)는의 표시 영역 위쪽에는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-687">Initially, the item with the index position zero (0) is at the top of the visible region of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-688">하는 경우의 콘텐츠는 <xref:System.Windows.Forms.ListBox> 스크롤 된 컨트롤의 표시 영역 맨 위에 있는 다른 항목이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-688">If the contents of the <xref:System.Windows.Forms.ListBox> have been scrolled, another item might be at the top of the control's display area.</span></span> <span data-ttu-id="6a37a-689">이 속성을 사용 하 여 내에서 인덱스를 가져올 수 있습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 에 대 한는 <xref:System.Windows.Forms.ListBox> 현재 컨트롤의 표시 영역 위쪽에 배치 되어 있는 항목의 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-689">You can use this property to obtain the index within the <xref:System.Windows.Forms.ListBox.ObjectCollection> for the <xref:System.Windows.Forms.ListBox> of the item that is currently positioned at the top of the visible region of the control.</span></span> <span data-ttu-id="6a37a-690">또한 컨트롤의 표시 영역 맨 위에 있는 목록에서 항목을 이동 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-690">You can also use this property to position an item in the list at the top of the visible region of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a37a-691">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> 속성으로는 <xref:System.Windows.Forms.ListBox.TopIndex%2A> 속성을 현재 선택 된 항목의 표시 영역에 있는 항목의 목록 맨 위로 이동 하는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-691">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-692">이 예에서 좀더 나아가 사용 하 여 항목을 제거 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> 의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> 클래스 및 사용 하 여 모든 항목 선택의 선택을 취소 하는 방법의 <xref:System.Windows.Forms.ListBox.ClearSelected%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-692">The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method.</span></span> <span data-ttu-id="6a37a-693">코드 현재 선택 된 항목을 먼저 이동는 <xref:System.Windows.Forms.ListBox> 목록의 맨 위로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-693">The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list.</span></span> <span data-ttu-id="6a37a-694">현재 선택한 항목 앞의 모든 항목을 제거 및에서 모든 선택을 취소 한 다음 코드는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-694">The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="6a37a-695">이 예제에서는 한 <xref:System.Windows.Forms.ListBox> 항목을 포함 하는 폼에 추가 하 고 선택 하는 항목은 현재는 <xref:System.Windows.Forms.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-695">This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-cpp[ListBox.SelectedIndex#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndex/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndex#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndex/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndex#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndex/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-696">
            <see cref="T:System.Windows.Forms.ListBox" />의 문자열 표현을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-696">Returns a string representation of the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a37a-697">컨트롤 형식, <see cref="T:System.Windows.Forms.ListBox" /> 컨트롤에 있는 항목 수 및 <see cref="T:System.Windows.Forms.ListBox" />에 있는 첫 번째 항목의 Text 속성(항목 수가 0이 아닌 경우)을 설명하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-697">A string that states the control type, the count of items in the <see cref="T:System.Windows.Forms.ListBox" /> control, and the Text property of the first item in the <see cref="T:System.Windows.Forms.ListBox" />, if the count is not 0.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCustomTabOffsets">
      <MemberSignature Language="C#" Value="public bool UseCustomTabOffsets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCustomTabOffsets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.UseCustomTabOffsets" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCustomTabOffsets As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCustomTabOffsets { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-698">
            <see cref="T:System.Windows.Forms.ListBox" />가 <see cref="P:System.Windows.Forms.ListBox.CustomTabOffsets" /> 정수 배열을 사용하여 문자열을 그릴 때 탭 문자를 인식하고 확장하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-698">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.ListBox" /> recognizes and expands tab characters when it draws its strings by using the <see cref="P:System.Windows.Forms.ListBox.CustomTabOffsets" /> integer array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-699">
            <see cref="T:System.Windows.Forms.ListBox" />가 탭 문자를 인식하고 확장하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-699">
              <see langword="true" /> if the <see cref="T:System.Windows.Forms.ListBox" /> recognizes and expands tab characters; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a37a-700">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-700">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ListBox.CustomTabOffsets" />
      </Docs>
    </Member>
    <Member MemberName="UseTabStops">
      <MemberSignature Language="C#" Value="public bool UseTabStops { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseTabStops" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.UseTabStops" />
      <MemberSignature Language="VB.NET" Value="Public Property UseTabStops As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseTabStops { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a37a-701">
            <see cref="T:System.Windows.Forms.ListBox" />에서 해당 문자열을 그릴 때 탭 문자를 인식하고 확장할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-701">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.ListBox" /> can recognize and expand tab characters when drawing its strings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a37a-702">컨트롤에서 탭 문자를 확장할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-702">
              <see langword="true" /> if the control can expand tab characters; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6a37a-703">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-703">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6a37a-704">다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListBox> 탭 문자가 있는 항목을 표시 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a37a-704">The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> that displays items with tab characters.</span></span>  
  
 [!code-cpp[ListBox.UseTabStops#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.UseTabStops/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.UseTabStops#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.UseTabStops/CS/form1.cs#1)]
 [!code-vb[ListBox.UseTabStops#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.UseTabStops/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6a37a-705">에 비관리 코드와 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-705">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="6a37a-706">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-706">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WmReflectCommand">
      <MemberSignature Language="C#" Value="protected virtual void WmReflectCommand (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WmReflectCommand(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WmReflectCommand (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WmReflectCommand(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="6a37a-707">최상위 창에서 <see cref="T:System.Windows.Forms.Message" /> 컨트롤로 보낸 <see cref="T:System.Windows.Forms.ListBox" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-707">The <see cref="T:System.Windows.Forms.Message" /> the top-level window sent to the <see cref="T:System.Windows.Forms.ListBox" /> control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-708">
            <see cref="T:System.Windows.Forms.ListView" /> 컨트롤이 최상위 창에서 받는 명령 메시지를 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-708">Processes the command message the <see cref="T:System.Windows.Forms.ListView" /> control receives from the top-level window.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="6a37a-709">Windows 메시지 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-709">A Windows Message Object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a37a-710">목록 창 프로시저입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-710">The list's window procedure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a37a-711">추가 기능을 추가 하려면이 설정을 재정의할 수 있지만 호출 해야 클래스 상속의 <xref:System.Windows.Forms.ListBox.WndProc%2A> 목록 계속 제대로 작동 하려면 기본 클래스에 메서드.</span><span class="sxs-lookup"><span data-stu-id="6a37a-711">Inheriting classes can override this to add extra functionality, but should call the <xref:System.Windows.Forms.ListBox.WndProc%2A> method on the base class to ensure that the list continues to function properly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6a37a-712">에 비관리 코드와 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-712">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="6a37a-713">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6a37a-713">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>