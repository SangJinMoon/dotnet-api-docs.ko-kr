<Type Name="DataGridColumnStyle" FullName="System.Windows.Forms.DataGridColumnStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="badc63cf3e66ceec9ba9035c9b6138bcc2f2e0a2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640687" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataGridColumnStyle : System.ComponentModel.Component, System.Windows.Forms.IDataGridColumnStyleEditingNotificationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataGridColumnStyle extends System.ComponentModel.Component implements class System.Windows.Forms.IDataGridColumnStyleEditingNotificationService" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridColumnStyle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataGridColumnStyle&#xA;Inherits Component&#xA;Implements IDataGridColumnStyleEditingNotificationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridColumnStyle abstract : System::ComponentModel::Component, System::Windows::Forms::IDataGridColumnStyleEditingNotificationService" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataGridColumnStyleEditingNotificationService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Header")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Windows.Forms.DataGrid" /> 컨트롤 열의 모양, 텍스트 형식 및 동작을 지정합니다. 이 클래스는 추상 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컬렉션 <xref:System.Windows.Forms.DataGridColumnStyle> 개체 (의 <xref:System.Windows.Forms.GridColumnStylesCollection>) 통해 액세스 되는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 컨트롤의 <xref:System.Windows.Forms.DataGrid.TableStyles%2A> 속성입니다.  
  
 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 컨트롤의 컬렉션을 자동으로 만듭니다 <xref:System.Windows.Forms.DataGridColumnStyle> 설정 하면에 대 한 개체는 <xref:System.Windows.Forms.DataGrid.DataSource%2A> 속성을 적절 한 데이터 소스입니다. 만든 개체에서 상속 하는 다음 클래스 중 하나의 인스턴스를 실제로 <xref:System.Windows.Forms.DataGridColumnStyle>: <xref:System.Windows.Forms.DataGridBoolColumn> 또는 <xref:System.Windows.Forms.DataGridTextBoxColumn> 클래스입니다.  
  
 표시 되는 데이터에 서식을 지정 하려면 설정는 <xref:System.Windows.Forms.DataGridTextBoxColumn.Format%2A> 속성의는 <xref:System.Windows.Forms.DataGridTextBoxColumn> 서식 값 중 하나로 클래스입니다. 올바른 형식 지정 값에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
 사용자의 집합을 만들 수도 있습니다 <xref:System.Windows.Forms.DataGridColumnStyle> 개체에 추가 하는 <xref:System.Windows.Forms.GridColumnStylesCollection>합니다. 이렇게 하면 설정 해야 합니다는 <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> 의 각 열 스타일을는 <xref:System.Data.DataColumn.ColumnName%2A> 의 <xref:System.Data.DataColumn> 열 표시 실제 데이터와 동기화 합니다.  
  
> [!CAUTION]
>  항상 만들기 <xref:System.Windows.Forms.DataGridColumnStyle> 개체에 추가 하는 <xref:System.Windows.Forms.GridColumnStylesCollection> 추가 하기 전에 <xref:System.Windows.Forms.DataGridTableStyle> 개체를 <xref:System.Windows.Forms.GridTableStylesCollection>합니다. 빈을 추가 하는 경우 <xref:System.Windows.Forms.DataGridTableStyle> 유효한 <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> 를 컬렉션에 값 <xref:System.Windows.Forms.DataGridColumnStyle> 개체가 자동으로 생성 됩니다. 새로 추가 하려고 하면 예외가 throw 될 따라서 <xref:System.Windows.Forms.DataGridColumnStyle> 중복을 사용 하 여 개체 <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> 값에 <xref:System.Windows.Forms.GridColumnStylesCollection>합니다.  
  
 파생된 클래스 중 하나의 인스턴스가 만들어질 때 여는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 컨트롤을 만든 클래스에 따라 달라 집니다는 <xref:System.Data.DataColumn.DataType%2A> 의 <xref:System.Data.DataColumn> 연관는 <xref:System.Windows.Forms.DataGridColumnStyle> 개체입니다. 예를 들어 한 <xref:System.Data.DataColumn> 와 해당 <xref:System.Data.DataColumn.DataType%2A> 로 설정 `System.Boolean` 연관 될는 <xref:System.Windows.Forms.DataGridBoolColumn>합니다. 모든 유형의 확인 <xref:System.Windows.Forms.DataGridColumnStyle>를 사용 하 여는 <xref:System.Object.GetType%2A> 메서드.  
  
 사용자의 열 클래스를 만들려면에서 상속할 수 있습니다 <xref:System.Windows.Forms.DataGridColumnStyle>합니다. 여 예시 된 컨트롤을 호스트 하는 특수 열을 만들기 위해이 작업을 수행 하려는 경우도 <xref:System.Windows.Forms.DataGridTextBox> 클래스에 있는 호스트는 <xref:System.Windows.Forms.TextBox> 제어 합니다. 예를 들어 호스트할 수 있습니다는 <xref:System.Drawing.Image> 열 모두에 사진 표시를 제어 하거나 열에 있는 호스트에 사용자 정의 컨트롤을 만들 수 있습니다.  
  
 기능은 <xref:System.Windows.Forms.DataGridColumnStyle> 의와 혼동 해서는 안 된 <xref:System.Data.DataColumn>합니다. 반면는 <xref:System.Data.DataColumn> 속성 및 데이터 테이블의 스키마를 만드는 데 적절 한 메서드가 포함 되어는 <xref:System.Windows.Forms.DataGridColumnStyle> 화면에는 개별 열의 모양 메서드와 속성을 포함 합니다.  
  
 행에 포함 된 한 <xref:System.DBNull.Value?displayProperty=nameWithType>, 사용 된 열에 표시 되는 텍스트를 설정할 수 있습니다는 <xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A> 속성입니다.  
  
 <xref:System.Windows.Forms.DataGridColumnStyle> 클래스 또한 해당 데이터를 변경 하는 동안 열의 동작을 지정할 수 있습니다. <xref:System.Windows.Forms.DataGridColumnStyle.BeginUpdate%2A> 및 <xref:System.Windows.Forms.DataGridColumnStyle.EndUpdate%2A> 메서드 열 그리기를 대규모 업데이트 열의 데이터에 적용 되는 동안 일시적으로 일시 중단 합니다. 이 기능이 없으면 표의 모든 셀에 변경 될 때마다 즉시 그려지므로; 사용자와 성능 책임 산만 액세스할 수 있습니다.  
  
 몇 가지 메서드는 사용자가 편집 될 때 열의 모니터링 허용 포함 하는 <xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A> 및 <xref:System.Windows.Forms.DataGridColumnStyle.Commit%2A> 이벤트입니다.  
  
 대부분의 속성 및 클래스의 메서드는 열의 모양을 제어 하도록 조정 됩니다. 하지만 같은 정도 일부에서는 <xref:System.Windows.Forms.DataGridColumnStyle.GetColumnValueAtRow%2A> 및 <xref:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow%2A> 을 검토 하 고 지정된 된 셀의 값을 변경할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Windows.Forms.DataGridColumnStyle> 을 호스팅하는 <xref:System.Windows.Forms.DateTimePicker> 제어 합니다.  
  
 [!code-cpp[DataGridColumnStyle Overview#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle Overview/CPP/timecolumn.cpp#1)]
 [!code-csharp[DataGridColumnStyle Overview#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle Overview/CS/timecolumn.cs#1)]
 [!code-vb[DataGridColumnStyle Overview#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle Overview/VB/timecolumn.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>상속 하는 경우 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />, 멤버를 재정의 해야 합니다: <see cref="M:System.Windows.Forms.DataGridColumnStyle.Abort(System.Int32)" />, <see cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" />, <see cref="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean)" />, 및 <see cref="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32)" /> (두 번).</para>
    </block>
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Windows.Forms.DataGridBoolColumn" />
    <altmember cref="T:System.Windows.Forms.DataGridTextBox" />
    <altmember cref="P:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle" />
    <altmember cref="T:System.Data.DataView" />
    <altmember cref="T:System.Windows.Forms.GridColumnStylesCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridColumnStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridColumnStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스를 만드는 경우는 <xref:System.Windows.Forms.DataGridColumnStyle>, 다음 속성이 초기화 됩니다.  
  
|속성|기본값|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.DataGridColumnStyle.Alignment%2A>|`HorizontalAlignment.Left`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle%2A>|`null`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.FontHeight%2A>|-1|  
|<xref:System.Windows.Forms.DataGridColumnStyle.Invalidate%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A>|문자열 "(null)"|  
|<xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A>|`false`|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="T:System.Windows.Forms.DataGrid" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridColumnStyle (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.#ctor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (prop As PropertyDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridColumnStyle(System::ComponentModel::PropertyDescriptor ^ prop);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop">열의 특성을 제공하는 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />를 사용하여 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새로 만들려면 <xref:System.Windows.Forms.DataGridColumnStyle>을 먼저 가져와야는 <xref:System.Windows.Forms.CurrencyManager> 열 추가 될 테이블의 데이터 원본에 대 한 합니다. 참조는 `CurrencyManager` 및 `BindingManager` 대 한 특정 `CurrencyManager` 폼에 대 한 개체입니다.  
  
 <xref:System.Windows.Forms.CurrencyManager>를 얻을 수 있습니다는 <xref:System.ComponentModel.PropertyDescriptor> 에 대 한는 <xref:System.Data.DataColumn> 하는 열에 대 한 데이터를 제공 합니다.  
  
 인스턴스를 만드는 경우는 <xref:System.Windows.Forms.DataGridColumnStyle>, 다음 읽기/쓰기 속성이 초기화 됩니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.DataGridColumnStyle.Alignment%2A>|`HorizontalAlignment.Left`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle%2A>|`null`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.FontHeight%2A>|-1|  
|<xref:System.Windows.Forms.DataGridColumnStyle.Invalidate%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A>|"(null)"|  
|<xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A>|`false`|  
  
   
  
## Examples  
 다음 코드 예제에서는 새 <xref:System.Windows.Forms.DataGridTextBoxColumn> (에서 파생 된 <xref:System.Windows.Forms.DataGridColumnStyle>)에 추가 된 <xref:System.Windows.Forms.GridColumnStylesCollection> 의 <xref:System.Windows.Forms.DataGridTableStyle>합니다.  
  
 [!code-cpp[Classic DataGridColumnStyle.DataGridColumnStyle1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.DataGridColumnStyle1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.DataGridColumnStyle1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.DataGridColumnStyle1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.DataGridColumnStyle1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.DataGridColumnStyle1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected internal abstract void Abort (int rowNum);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Abort(int32 rowNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Abort(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Abort (rowNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Abort(int rowNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowNum">작업이 중단되는 행 번호입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 편집 프로시저를 중단하라는 요청을 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridColumnStyle.Abort%2A> 메서드를 사용 하 여는 <xref:System.Windows.Forms.DataGrid> 때는 <xref:System.Windows.Forms.DataGridColumnStyle.Commit%2A> 의 메서드는 <xref:System.Windows.Forms.DataGridColumnStyle> 메서드 반환 `false`합니다. 이 경우 열 값이 롤백됩니다은 이전 값입니다.  
  
 <xref:System.Windows.Forms.DataGridColumnStyle> 반환 하기 전에 모든 편집 작업을 종료 해야 합니다. 사용 된 <xref:System.Windows.Forms.DataGridColumnStyle.Abort%2A> 이를 위해 메서드.  
  
 <xref:System.Windows.Forms.DataGrid.EndEdit%2A> 의 메서드는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 컨트롤 간접적으로 호출 <xref:System.Windows.Forms.DataGridColumnStyle.Abort%2A> 경우 해당 `ShouldAbort` 로 설정 된 `true`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.Invalidate" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.HorizontalAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Alignment As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::HorizontalAlignment Alignment { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 텍스트 맞춤을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 값 중 하나입니다. 기본값은 <see langword="Left" />입니다. 올바른 옵션에는 <see langword="Left" />, <see langword="Center" /> 및 <see langword="Right" />가 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridColumnStyle.Alignment%2A> 의 각 열에 대 한 속성을 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 를 `HorizontalAlignment.Center` 데이터가 아닌 문자열 경우.  
  
 [!code-vb[Classic DataGridColumnStyle.Alignment Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.Alignment Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignmentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AlignmentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AlignmentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.AlignmentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AlignmentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AlignmentChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridColumnStyle.Alignment" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.  
  
 [!code-cpp[DataGridColumnStyle_AlignmentChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_AlignmentChanged/CPP/datagridcolumnstyle_alignmentchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_AlignmentChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_AlignmentChanged/CS/datagridcolumnstyle_alignmentchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_AlignmentChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_AlignmentChanged/VB/datagridcolumnstyle_alignmentchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="protected void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BeginUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Windows.Forms.DataGridColumnStyle.EndUpdate" /> 메서드가 호출될 때까지 열 그리기를 일시 중단합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 많은 변경 될 때의 모양에는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 컨트롤 (변경 내용에서에서 되는지 열 또는 컨트롤에 의해 표시 되는 데이터의 특성)를 호출 해야 합니다는 <xref:System.Windows.Forms.DataGridColumnStyle.BeginUpdate%2A> 메서드를 일시적으로 컨트롤의 그리기를 고정 합니다. 그러면 사용자, 성능 향상에 덜 산만 됩니다. 모든 업데이트가 적용 된 후 호출할는 <xref:System.Windows.Forms.DataGridColumnStyle.EndUpdate%2A> 메서드를 컨트롤의 그리기를 다시 시작 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.EndUpdate" />
      </Docs>
    </Member>
    <Member MemberName="CheckValidDataSource">
      <MemberSignature Language="C#" Value="protected void CheckValidDataSource (System.Windows.Forms.CurrencyManager value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckValidDataSource(class System.Windows.Forms.CurrencyManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.CheckValidDataSource(System.Windows.Forms.CurrencyManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckValidDataSource (value As CurrencyManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckValidDataSource(System::Windows::Forms::CurrencyManager ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.CurrencyManager" />
      </Parameters>
      <Docs>
        <param name="value">검사할 <see cref="T:System.Windows.Forms.CurrencyManager" />입니다.</param>
        <summary>
          <see cref="T:System.Windows.Forms.DataGrid" />의 데이터 소스가 올바르지 않거나 이 열이 데이터 소스의 올바른 속성에 매핑되지 않으면 예외가 throw됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Windows.Forms.CurrencyManager> 사용 하 여 데이터 원본에 대 한는 <xref:System.Windows.Forms.DataGridColumnStyle.CheckValidDataSource%2A> 여부를 확인 하는 <xref:System.Windows.Forms.CurrencyManager> 유효 합니다.  
  
 [!code-cpp[Classic DataGridColumnStyle.CheckValidDataSource Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.CheckValidDataSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.CheckValidDataSource Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.CheckValidDataSource Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.CheckValidDataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.CheckValidDataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ApplicationException">이 열에 대한 <see cref="T:System.ComponentModel.PropertyDescriptor" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ColumnStartedEditing">
      <MemberSignature Language="C#" Value="protected internal virtual void ColumnStartedEditing (System.Windows.Forms.Control editingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ColumnStartedEditing(class System.Windows.Forms.Control editingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.ColumnStartedEditing(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ColumnStartedEditing (editingControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ColumnStartedEditing(System::Windows::Forms::Control ^ editingControl);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing(System.Windows.Forms.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="editingControl">열에 의해 호스팅된 <see cref="T:System.Windows.Forms.Control" />입니다.</param>
        <summary>사용자가 열 편집을 시작했음을 <see cref="T:System.Windows.Forms.DataGrid" />에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 를 호출할 때는 <xref:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing%2A> 메서드를 사용 하면는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 컨트롤에 행을 나타내는 행 머리글의 연필 편집 하 고 표시 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="protected internal abstract bool Commit (System.Windows.Forms.CurrencyManager dataSource, int rowNum);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool Commit(class System.Windows.Forms.CurrencyManager dataSource, int32 rowNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function Commit (dataSource As CurrencyManager, rowNum As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool Commit(System::Windows::Forms::CurrencyManager ^ dataSource, int rowNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <see cref="T:System.Windows.Forms.CurrencyManager" />에 대한 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />입니다.</param>
        <param name="rowNum">편집하고 있는 행 번호입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 편집 프로시저를 완료하라는 요청을 시작합니다.</summary>
        <returns>
          편집 프로시저가 수행되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 가능한 재정의 보여 줍니다.는 <xref:System.Windows.Forms.DataGridColumnStyle.Commit%2A> 메서드. 코드 호출는 <xref:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow%2A> 방법 및 다른 함수는 열이 여전히 인지 확인할 수 있게 하는 변수 더 편집 설정입니다. 호출에서 <xref:System.Windows.Forms.DataGridColumnStyle.Invalidate%2A> 메서드 컨트롤을 다시 그리도록 합니다. 끝으로, 함수 반환 `true` 에서 변경이 수행 되었음을 나타냅니다.  
  
 [!code-vb[Classic DataGridColumnStyle.Commit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.Commit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" /> 에서 파생 클래스에서 메서드를 사용 해야는 <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> 조금씩 포커스를 사용 하는 경우, 예를 편집 상태로 다시 설정 하는 클래스는 <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> 편집 컨트롤입니다. 참조는 <see cref="M:System.Windows.Forms.DataGridColumnStyle.ConcedeFocus" /> 메서드.  
  
 호출 된 <see cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" /> 메서드 때는 <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> 편집을 완료 하는 요청을 수신 합니다. 오류 없이 호출할 수 없는 경우 반환할 <see langword="false" />합니다.  
  
 <see cref="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)" /> 메서드는 public 메서드에 의해 <see cref="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> 의 <see cref="T:System.Windows.Forms.DataGrid" /> 제어 합니다. 또한 메서드는 다른 전용 메서드 예를 들어 현재 행이 변경 될 때입니다.</para>
        </block>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConcedeFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void ConcedeFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ConcedeFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.ConcedeFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ConcedeFocus ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ConcedeFocus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>호스팅하고 있는 컨트롤에 포커스를 잃어야 하는 열을 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 파생된 클래스에서 추가 작업이 필요한 경우를 결정 합니다. 예를 들어이 메서드는 여는 <xref:System.Windows.Forms.DataGridTextBoxColumn> 를 숨기려면는 <xref:System.Windows.Forms.DataGridTextBox>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridColumnStyle.ConcedeFocus%2A> 메서드를 숨기려면는 <xref:System.Windows.Forms.TextBox> 에서 호스팅하는 <xref:System.Windows.Forms.DataGridTextBoxColumn>합니다.  
  
 [!code-cpp[Classic DataGridColumnStyle.ConcedeFocus Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.ConcedeFocus Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.ConcedeFocus Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.ConcedeFocus Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.ConcedeFocus Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.ConcedeFocus Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHeaderAccessibleObject">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateHeaderAccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateHeaderAccessibleObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.CreateHeaderAccessibleObject" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateHeaderAccessibleObject () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateHeaderAccessibleObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 열에 대한 <see cref="T:System.Windows.Forms.AccessibleObject" />를 가져옵니다.</summary>
        <returns>열에 대한 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 의해 호출 됩니다는 <xref:System.Windows.Forms.DataGridTableStyle> 때 해당 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 속성 변경 합니다. 이 속성은 모든 자식 컨트롤에서 호스트 되므로 필요는 <xref:System.Windows.Forms.DataGridColumnStyle> 에 추가 되어야 합니다는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 컨트롤의 `ControlCollection`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 의 <xref:System.Windows.Forms.DataGridColumnStyle>합니다.  
  
 [!code-cpp[Classic DataGridColumnStyle.CreateHeaderAccessibleObject Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.CreateHeaderAccessibleObject Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.CreateHeaderAccessibleObject Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.CreateHeaderAccessibleObject Example/CS/source.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGrid" />
        <altmember cref="T:System.Windows.Forms.DataGridTableStyle" />
      </Docs>
    </Member>
    <Member MemberName="DataGridTableStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridTableStyle DataGridTableStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridTableStyle DataGridTableStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataGridTableStyle As DataGridTableStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridTableStyle ^ DataGridTableStyle { System::Windows::Forms::DataGridTableStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridTableStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 열에 대한 <see cref="T:System.Windows.Forms.DataGridTableStyle" />를 가져옵니다.</summary>
        <value>현재 <see cref="P:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle" />이 포함된 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 인쇄는 <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> 의 <xref:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle%2A> 를 포함 하는 <xref:System.Windows.Forms.DataGridColumnStyle>합니다.  
  
 [!code-vb[Classic DataGridColumnStyle.DataGridTableStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.DataGridTableStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridTableStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Edit">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>값을 편집할 셀을 준비합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="protected internal virtual void Edit (System.Windows.Forms.CurrencyManager source, int rowNum, System.Drawing.Rectangle bounds, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Edit(class System.Windows.Forms.CurrencyManager source, int32 rowNum, valuetype System.Drawing.Rectangle bounds, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Edit (source As CurrencyManager, rowNum As Integer, bounds As Rectangle, readOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Edit(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Drawing::Rectangle bounds, bool readOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">
          <see cref="T:System.Windows.Forms.CurrencyManager" />에 대한 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />입니다.</param>
        <param name="rowNum">편집할 행 번호입니다.</param>
        <param name="bounds">컨트롤이 위치할 경계 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="readOnly">열이 읽기 전용인지 여부를 나타내는 값입니다. 값이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>편집할 셀을 준비합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 <xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A> 메서드 사이트 편집 중인 셀의 위치에 있는 표에서 컨트롤입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="protected internal virtual void Edit (System.Windows.Forms.CurrencyManager source, int rowNum, System.Drawing.Rectangle bounds, bool readOnly, string displayText);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Edit(class System.Windows.Forms.CurrencyManager source, int32 rowNum, valuetype System.Drawing.Rectangle bounds, bool readOnly, string displayText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Edit (source As CurrencyManager, rowNum As Integer, bounds As Rectangle, readOnly As Boolean, displayText As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Edit(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Drawing::Rectangle bounds, bool readOnly, System::String ^ displayText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="readOnly" Type="System.Boolean" />
        <Parameter Name="displayText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <see cref="T:System.Windows.Forms.CurrencyManager" />에 대한 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />입니다.</param>
        <param name="rowNum">편집되고 있는 이 열의 행 번호입니다.</param>
        <param name="bounds">컨트롤이 위치할 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="readOnly">열이 읽기 전용인지 여부를 나타내는 값입니다. 값이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="displayText">컨트롤에 표시할 텍스트입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Forms.CurrencyManager" />, 행 번호 및 <see cref="T:System.Drawing.Rectangle" /> 매개 변수를 사용하여 편집할 셀을 준비합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 <xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A> 메서드 사이트 편집 중인 셀의 위치에 있는 표에서 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A> 에서 클릭된 된 셀의 텍스트를 변경 하려면 메서드는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 제어 합니다.  
  
 [!code-cpp[Classic DataGridColumnStyle.Edit1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.Edit1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.Edit1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.Edit1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.Edit1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.Edit1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="protected internal abstract void Edit (System.Windows.Forms.CurrencyManager source, int rowNum, System.Drawing.Rectangle bounds, bool readOnly, string displayText, bool cellIsVisible);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Edit(class System.Windows.Forms.CurrencyManager source, int32 rowNum, valuetype System.Drawing.Rectangle bounds, bool readOnly, string displayText, bool cellIsVisible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Edit (source As CurrencyManager, rowNum As Integer, bounds As Rectangle, readOnly As Boolean, displayText As String, cellIsVisible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Edit(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Drawing::Rectangle bounds, bool readOnly, System::String ^ displayText, bool cellIsVisible);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="readOnly" Type="System.Boolean" />
        <Parameter Name="displayText" Type="System.String" />
        <Parameter Name="cellIsVisible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">
          <see cref="T:System.Windows.Forms.CurrencyManager" />에 대한 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />입니다.</param>
        <param name="rowNum">편집되고 있는 이 열의 행 번호입니다.</param>
        <param name="bounds">컨트롤이 위치할 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="readOnly">열이 읽기 전용인지 여부를 나타내는 값입니다. 값이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="displayText">컨트롤에 표시할 텍스트입니다.</param>
        <param name="cellIsVisible">셀을 표시할지 여부를 나타내는 값입니다. 셀이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>파생하는 클래스에서 재정의된 경우 편집할 셀을 준비합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 <xref:System.Windows.Forms.DataGridColumnStyle.Edit%2A> 메서드 사이트 편집 중인 셀의 위치에 있는 표에서 컨트롤입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="protected void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Windows.Forms.DataGridColumnStyle.BeginUpdate" /> 메서드를 호출하여 일시 중단된 열 그리기를 계속합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 많은 변경 될 때의 모양에는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 컨트롤 (변경 내용에서에서 되는지 열 또는 컨트롤에 의해 표시 되는 데이터의 특성)를 호출 해야 합니다는 <xref:System.Windows.Forms.DataGridColumnStyle.BeginUpdate%2A> 메서드를 일시적으로 컨트롤의 그리기를 고정 합니다. 그러면 사용자, 성능 향상에 덜 산만 됩니다. 모든 업데이트가 적용 된 후 호출할는 <xref:System.Windows.Forms.DataGridColumnStyle.EndUpdate%2A> 메서드를 컨트롤의 그리기를 다시 시작 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.BeginUpdate" />
      </Docs>
    </Member>
    <Member MemberName="EnterNullValue">
      <MemberSignature Language="C#" Value="protected internal virtual void EnterNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void EnterNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.EnterNullValue" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub EnterNullValue ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void EnterNullValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>열에 <see cref="F:System.DBNull.Value" />를 입력합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 사용자가 적절 한 null 값을 입력 열을 허용 하려면 ALT + 0을 누를 때 호출 됩니다. 예를 들어에서 호출 되는 <xref:System.Windows.Forms.DataGridTextBoxColumn>, 적절 한 <xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A> 값 열에 삽입 됩니다.  
  
 <xref:System.Windows.Forms.DataGridColumnStyle.EnterNullValue%2A> 는 기본 동작이 없습니다. 상속 된 경우 <xref:System.Windows.Forms.DataGridColumnStyle>, 입력 메서드를 재정의 `null` 열에 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 가능한 재정의 보여 줍니다.는 <xref:System.Windows.Forms.DataGridColumnStyle.EnterNullValue%2A> 메서드.  
  
 [!code-vb[Classic DataGridColumnStyle.EnterNullValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.EnterNullValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridColumnStyle.NullText" />
        <altmember cref="E:System.Windows.Forms.DataGridColumnStyle.NullTextChanged" />
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.FontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FontChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 글꼴이 변경되면 이 이벤트가 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontHeight">
      <MemberSignature Language="C#" Value="protected int FontHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FontHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.FontHeight" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FontHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int FontHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 글꼴의 높이를 가져옵니다.</summary>
        <value>글꼴 높이(픽셀)입니다. 글꼴 높이가 설정되지 않았으면 속성은 <see cref="T:System.Windows.Forms.DataGrid" /> 컨트롤의 글꼴 높이를 반환하고, 해당 속성이 설정되지 않았으면 <see cref="T:System.Windows.Forms.DataGrid" /> 컨트롤의 기본 글꼴 높이 값이 반환됩니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnValueAtRow">
      <MemberSignature Language="C#" Value="protected internal virtual object GetColumnValueAtRow (System.Windows.Forms.CurrencyManager source, int rowNum);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetColumnValueAtRow(class System.Windows.Forms.CurrencyManager source, int32 rowNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.GetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetColumnValueAtRow (source As CurrencyManager, rowNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ GetColumnValueAtRow(System::Windows::Forms::CurrencyManager ^ source, int rowNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">데이터를 포함하는 <see cref="T:System.Windows.Forms.CurrencyManager" />입니다.</param>
        <param name="rowNum">데이터를 포함하는 행 번호입니다.</param>
        <summary>지정한 <see cref="T:System.Windows.Forms.CurrencyManager" />에서 지정한 행의 값을 가져옵니다.</summary>
        <returns>값을 포함하는 <see cref="T:System.Object" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 원본 열이에 대 한는 <xref:System.Data.DataTable>를 사용 하 여는 <xref:System.Data.DataTable.ColumnChanging> 또는 <xref:System.Data.DataTable.RowChanging> 행 또는 열 값이 변경 확인 하는 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ApplicationException">이 <see cref="T:System.Data.DataColumn" />에 대한 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />이 아직 설정되지 않은 경우</exception>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetMinimumHeight">
      <MemberSignature Language="C#" Value="protected internal abstract int GetMinimumHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance int32 GetMinimumHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.GetMinimumHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetMinimumHeight () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract int GetMinimumHeight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 행의 최소 높이를 가져옵니다.</summary>
        <returns>행의 최소 높이입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 열의 최소 높이 가져옵니다.  
  
 [!code-cpp[Classic DataGridColumnStyle.GetMinimumHeight Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetMinimumHeight Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.GetMinimumHeight Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetMinimumHeight Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.GetMinimumHeight Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetMinimumHeight Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight(System.Drawing.Graphics,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize(System.Drawing.Graphics,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredHeight">
      <MemberSignature Language="C#" Value="protected internal abstract int GetPreferredHeight (System.Drawing.Graphics g, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance int32 GetPreferredHeight(class System.Drawing.Graphics g, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight(System.Drawing.Graphics,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetPreferredHeight (g As Graphics, value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract int GetPreferredHeight(System::Drawing::Graphics ^ g, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> 개체입니다.</param>
        <param name="value">화면 높이와 너비를 알고자 하는 개체 값입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 열을 자동으로 크기 조정하는 데 사용된 높이를 가져옵니다.</summary>
        <returns>셀을 자동으로 크기 조정하는 데 사용된 높이입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize%2A> 마우스 아래로 긴 문자열에 대 한 높이 열의 크기를 조정 하는 이벤트에서에서 일반적으로 호출 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight%2A> 메서드를 셀의 높이 반환 합니다.  
  
 [!code-cpp[Classic DataGridColumnStyle.GetPreferredHeight Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredHeight Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.GetPreferredHeight Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredHeight Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.GetPreferredHeight Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredHeight Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize(System.Drawing.Graphics,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetMinimumHeight" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="protected internal abstract System.Drawing.Size GetPreferredSize (System.Drawing.Graphics g, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Drawing.Size GetPreferredSize(class System.Drawing.Graphics g, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize(System.Drawing.Graphics,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetPreferredSize (g As Graphics, value As Object) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Drawing::Size GetPreferredSize(System::Drawing::Graphics ^ g, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> 개체입니다.</param>
        <param name="value">화면 높이와 너비를 알고자 하는 개체 값입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정한 값의 너비와 높이를 가져옵니다. 너비와 높이는 <see cref="T:System.Windows.Forms.DataGridTableStyle" />을 사용하여 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />로 이동할 때 사용됩니다.</summary>
        <returns>셀 크기를 포함하는 <see cref="T:System.Drawing.Size" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 <xref:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize%2A> 너비를 결정 하는 열 크기를 조정할지, 특정 문자열이 나 숫자가 지정 된 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize%2A> 메서드는 값에 대 한 최적의 크기를 반환 합니다.  
  
 [!code-cpp[Classic DataGridColumnStyle.GetPreferredSize Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.GetPreferredSize Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredSize Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.GetPreferredSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.GetPreferredSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight(System.Drawing.Graphics,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetMinimumHeight" />
      </Docs>
    </Member>
    <Member MemberName="HeaderAccessibleObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject HeaderAccessibleObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject HeaderAccessibleObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.HeaderAccessibleObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderAccessibleObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ HeaderAccessibleObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 열에 대한 <see cref="T:System.Windows.Forms.AccessibleObject" />를 가져옵니다.</summary>
        <value>열에 대한 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 머리글의 텍스트를 가져오거나 설정합니다.</summary>
        <value>열 머리글로 표시된 문자열입니다. <see cref="T:System.Windows.Forms.DataGrid" />에서 만들어졌으면 기본값은 열을 만드는 데 사용된 <see cref="T:System.ComponentModel.PropertyDescriptor" />의 이름입니다. 이와 달리 사용자가 만든 것이면 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A> 속성은 일반적으로 다른 캡션을 표시 하는 데 사용 됩니다는 <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> 경우이 값은 <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> 잘 이해할 수 없는 값입니다. 예를 들어, 변경할 수는 <xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A> "이름"을 때의 <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> 값은 "FName"입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A> 속성을 새 값입니다.  
  
 [!code-cpp[Classic DataGridColumnStyle.HeaderText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.HeaderText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.HeaderText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.HeaderText Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.HeaderText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.HeaderText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HeaderTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HeaderTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.HeaderTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HeaderTextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HeaderTextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.  
  
 [!code-cpp[DataGridColumnStyle_HeaderTextChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_HeaderTextChanged/CPP/datagridcolumnstyle_headertextchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_HeaderTextChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_HeaderTextChanged/CS/datagridcolumnstyle_headertextchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_HeaderTextChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_HeaderTextChanged/VB/datagridcolumnstyle_headertextchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="protected virtual void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Invalidate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>열을 다시 그리고 그리기 메시지를 컨트롤로 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridColumnStyle.Invalidate%2A> 메서드는 일반적으로 편집 작업이 중단 후 호출 됩니다. 예를 들어, 구현 하는 경우 메서드는 호출할 수 있습니다는 <xref:System.Windows.Forms.DataGridColumnStyle.Abort%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.Abort(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MappingName">
      <MemberSignature Language="C#" Value="public string MappingName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappingName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.MappingName" />
      <MemberSignature Language="VB.NET" Value="Public Property MappingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MappingName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridColumnStyleMappingNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 스타일을 매핑할 데이터 멤버의 이름을 가져오거나 설정합니다.</summary>
        <value>열 스타일을 매핑할 데이터 멤버의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일치 하는 데 사용 하는 비교는 <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> 데이터 멤버는 대/소문자 구분 합니다.  
  
 이 <xref:System.Windows.Forms.DataGridColumnStyle> 데이터 원본으로 표시 된 것과 일치 하는 때마다 표시 된 데이터 멤버의 데이터를 렌더링 하는 데 사용 된 <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> 속성은 <xref:System.Windows.Forms.DataGridTableStyle> 이 열 스타일을 포함 하 합니다.  
  
 <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A?displayProperty=nameWithType> 속성이로 설정 되어 일반적으로 <xref:System.Data.DataColumn.ColumnName%2A> 의 <xref:System.Data.DataColumn>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Windows.Forms.DataGridTableStyle>, 두 개 추가 <xref:System.Windows.Forms.DataGridColumnStyle> 개체는 <xref:System.Windows.Forms.GridColumnStylesCollection>합니다. <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> 각 <xref:System.Windows.Forms.DataGridColumnStyle> 로 설정 되는 <xref:System.Data.DataColumn.ColumnName%2A> 의 <xref:System.Data.DataColumn>합니다.  
  
 [!code-cpp[GridTableStylesCollectionExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/GridTableStylesCollectionExamples/CPP/gridtablestylescollectionexamples.cpp#4)]
 [!code-csharp[GridTableStylesCollectionExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/GridTableStylesCollectionExamples/CS/gridtablestylescollectionexamples.cs#4)]
 [!code-vb[GridTableStylesCollectionExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GridTableStylesCollectionExamples/VB/gridtablestylescollectionexamples.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MappingNameChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MappingNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MappingNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.MappingNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MappingNameChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MappingNameChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridColumnStyle.MappingName" /> 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.  
  
 [!code-cpp[DataGridColumnStyle_MappingNameChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_MappingNameChanged/CPP/datagridcolumnstyle_mappingnamechanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_MappingNameChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_MappingNameChanged/CS/datagridcolumnstyle_mappingnamechanged.cs#1)]
 [!code-vb[DataGridColumnStyle_MappingNameChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_MappingNameChanged/VB/datagridcolumnstyle_mappingnamechanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NullText">
      <MemberSignature Language="C#" Value="public virtual string NullText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.NullText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열에 <see langword="null" />이 들어 있을 때 표시되는 텍스트를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="F:System.DBNull.Value" />를 포함하는 열에 표시된 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataColumn> 클래스의 <xref:System.Data.DataColumn.AllowDBNull%2A> 속성 열에 null 값을 포함할 수는 경우를 결정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridColumnStyle.NullText%2A> 속성을 새 문자열입니다.  
  
 [!code-cpp[Classic DataGridColumnStyle.NullText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.NullText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.NullText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.NullText Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.NullText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.NullText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
      </Docs>
    </Member>
    <Member MemberName="NullTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler NullTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler NullTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.NullTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NullTextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ NullTextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridColumnStyle.NullText" /> 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.  
  
 [!code-cpp[DataGridColumnStyle_NullTextChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_NullTextChanged/CPP/datagridcolumnstyle_nulltextchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_NullTextChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_NullTextChanged/CS/datagridcolumnstyle_nulltextchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_NullTextChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_NullTextChanged/VB/datagridcolumnstyle_nulltextchanged.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.EnterNullValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Paint">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 <see cref="T:System.Windows.Forms.DataGrid" /> 컨트롤에 열을 그립니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected internal abstract void Paint (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.CurrencyManager source, int rowNum);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.CurrencyManager source, int32 rowNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Paint (g As Graphics, bounds As Rectangle, source As CurrencyManager, rowNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Paint(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::CurrencyManager ^ source, int rowNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="g">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="bounds">그릴 경계 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="source">열이 속하는 <see cref="T:System.Windows.Forms.CurrencyManager" /> 컨트롤의 <see cref="T:System.Windows.Forms.DataGrid" />입니다.</param>
        <param name="rowNum">참조 중인 내부 데이터의 행 번호입니다.</param>
        <summary>지정한 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />, <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" /> 및 행 번호를 사용하여 <see cref="T:System.Windows.Forms.CurrencyManager" />을 그립니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected internal abstract void Paint (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.CurrencyManager source, int rowNum, bool alignToRight);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.CurrencyManager source, int32 rowNum, bool alignToRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Paint (g As Graphics, bounds As Rectangle, source As CurrencyManager, rowNum As Integer, alignToRight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Paint(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::CurrencyManager ^ source, int rowNum, bool alignToRight);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="alignToRight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="g">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="bounds">그릴 경계 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="source">열이 속하는 <see cref="T:System.Windows.Forms.CurrencyManager" /> 컨트롤의 <see cref="T:System.Windows.Forms.DataGrid" />입니다.</param>
        <param name="rowNum">참조 중인 내부 데이터의 행 번호입니다.</param>
        <param name="alignToRight">열의 내용을 오른쪽에 맞출지 여부를 나타내는 값입니다. 내용을 오른쪽에 맞추면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정한 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />, <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" />, 행 번호 및 맞춤을 사용하여 <see cref="T:System.Windows.Forms.CurrencyManager" />을 그립니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected internal virtual void Paint (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.CurrencyManager source, int rowNum, System.Drawing.Brush backBrush, System.Drawing.Brush foreBrush, bool alignToRight);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.CurrencyManager source, int32 rowNum, class System.Drawing.Brush backBrush, class System.Drawing.Brush foreBrush, bool alignToRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Paint (g As Graphics, bounds As Rectangle, source As CurrencyManager, rowNum As Integer, backBrush As Brush, foreBrush As Brush, alignToRight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Paint(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Drawing::Brush ^ backBrush, System::Drawing::Brush ^ foreBrush, bool alignToRight);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="backBrush" Type="System.Drawing.Brush" />
        <Parameter Name="foreBrush" Type="System.Drawing.Brush" />
        <Parameter Name="alignToRight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="g">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="bounds">그릴 경계 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="source">열이 속하는 <see cref="T:System.Windows.Forms.CurrencyManager" /> 컨트롤의 <see cref="T:System.Windows.Forms.DataGrid" />입니다.</param>
        <param name="rowNum">참조 중인 내부 데이터 테이블의 행 번호입니다.</param>
        <param name="backBrush">배경색을 칠하는 데 사용된 <see cref="T:System.Drawing.Brush" />입니다.</param>
        <param name="foreBrush">전경색을 칠하는 데 사용된 <see cref="T:System.Drawing.Color" />입니다.</param>
        <param name="alignToRight">내용을 오른쪽에 맞출지 여부를 나타내는 값입니다. 내용을 오른쪽에 맞추면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정한 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />, <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" />, 행 번호, 배경색, 전경색 및 맞춤을 사용하여 <see cref="T:System.Windows.Forms.CurrencyManager" />을 그립니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.PropertyDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PropertyDescriptor As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ PropertyDescriptor { System::ComponentModel::PropertyDescriptor ^ get(); void set(System::ComponentModel::PropertyDescriptor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.PropertyDescriptor" />이 표시하는 데이터의 특성을 결정하는 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />를 가져오거나 설정합니다.</summary>
        <value>열의 특성에 대한 데이터가 들어 있는 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.PropertyDescriptor> 를 사용 하 여 설정 되는 열에 대 한는 <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> 의 메서드는 <xref:System.Windows.Forms.BindingManagerBase>합니다. 참조는 <xref:System.Windows.Forms.DataGridColumnStyle.%23ctor%2A> 사용 하는 예제에 대 한 생성자는 <xref:System.ComponentModel.PropertyDescriptor> 새로 만들려면 <xref:System.Windows.Forms.DataGridColumnStyle>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.ComponentModel.PropertyDescriptor> 에 있는 열의 <xref:System.Windows.Forms.GridColumnStylesCollection>합니다. 두 번째 예제에서는 새 <xref:System.Windows.Forms.DataGridColumnStyle> 와 <xref:System.ComponentModel.PropertyDescriptor>합니다.  
  
 [!code-cpp[Classic DataGridColumnStyle.PropertyDescriptor Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.PropertyDescriptor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.PropertyDescriptor Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.PropertyDescriptor Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.PropertyDescriptor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.PropertyDescriptor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PropertyDescriptorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PropertyDescriptorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.PropertyDescriptorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyDescriptorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PropertyDescriptorChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridColumnStyle.PropertyDescriptor" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.  
  
 [!code-cpp[DataGridColumnStyle_PropertyDescriptorChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_PropertyDescriptorChanged/CPP/propertydescriptorchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_PropertyDescriptorChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_PropertyDescriptorChanged/CS/propertydescriptorchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_PropertyDescriptorChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_PropertyDescriptorChanged/VB/propertydescriptorchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 데이터를 편집할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          데이터를 편집할 수 없으면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 키를 포함 하거나 해당 값이 자동으로 생성 하는 경우 읽기 전용으로 열 만들기 (때와 <xref:System.Data.DataColumn> 개체의 <xref:System.Data.DataColumn.AutoIncrement%2A> 속성이 `true`).  
  
 비슷한 읽기 전용 속성 다른 클래스에도, 각 수 있도록 데이터에 액세스를 제어 합니다. 예를 들어는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 컨트롤 사용 하 여 읽기 전용 모드로 설정할 수 있는 해당 <xref:System.Windows.Forms.DataGrid.ReadOnly%2A> 속성, <xref:System.Windows.Forms.DataGridTableStyle> 역시는 <xref:System.Windows.Forms.DataGridTableStyle.ReadOnly%2A> 속성, 및 <xref:System.Data.DataColumn> 클래스에는 <xref:System.Data.DataColumn.ReadOnly%2A> 데이터 업데이트를 제한 하는 것에 대 한 속성.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridColumnStyle> 개체의 <xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A> 속성을 같은 값으로는 <xref:System.Data.DataColumn> 개체의 <xref:System.Data.DataColumn.ReadOnly%2A> 속성입니다.  
  
 [!code-cpp[Classic DataGridColumnStyle.ReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.ReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridColumnStyle.ReadOnly" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.  
  
 [!code-cpp[DataGridColumnStyle_ReadOnlyChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_ReadOnlyChanged/CPP/datagridcolumnstyle_readonlychanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_ReadOnlyChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_ReadOnlyChanged/CS/datagridcolumnstyle_readonlychanged.cs#1)]
 [!code-vb[DataGridColumnStyle_ReadOnlyChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_ReadOnlyChanged/VB/datagridcolumnstyle_readonlychanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHostedControl">
      <MemberSignature Language="C#" Value="protected internal virtual void ReleaseHostedControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ReleaseHostedControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.ReleaseHostedControl" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ReleaseHostedControl ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ReleaseHostedControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>호스팅하는 컨트롤이 필요하지 않을 때 열에서 리소스를 해제할 수 있게 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 되는 클래스를 만들면 <xref:System.Windows.Forms.DataGridColumnStyle>, 데이터를 편집 하는 데 사용 되는 컨트롤을 호스트 하려면 파생된 클래스에 종종 사용 합니다. 재정의 해야 하는 <xref:System.Windows.Forms.DataGridColumnStyle.ReleaseHostedControl%2A> 시스템 리소스를 해제 하기 위해 컨트롤에 대 한 참조를 해제 하는 메서드. 예를 들어는 <xref:System.Windows.Forms.DataGridTextBoxColumn> 파생된 클래스에서이 메서드를 사용 하 여 호스트 된에 대 한 참조를 해제 하기 위해 <xref:System.Windows.Forms.DataGridTextBox>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetHeaderText">
      <MemberSignature Language="C#" Value="public void ResetHeaderText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetHeaderText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.ResetHeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetHeaderText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetHeaderText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" />를 기본값인 <see langword="null" />로 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 디자이너를 만들거나 하는 경우 일반적으로이 메서드를 사용는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>를 포함 하는 사용자 고유의 컨트롤을 만드는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.  
  
 [!code-cpp[DataGridColumnStyle_ResetHeaderText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_ResetHeaderText/CPP/datagridcolumnstyle_resetheadertext.cpp#1)]
 [!code-csharp[DataGridColumnStyle_ResetHeaderText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_ResetHeaderText/CS/datagridcolumnstyle_resetheadertext.cs#1)]
 [!code-vb[DataGridColumnStyle_ResetHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_ResetHeaderText/VB/datagridcolumnstyle_resetheadertext.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumnValueAtRow">
      <MemberSignature Language="C#" Value="protected internal virtual void SetColumnValueAtRow (System.Windows.Forms.CurrencyManager source, int rowNum, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetColumnValueAtRow(class System.Windows.Forms.CurrencyManager source, int32 rowNum, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetColumnValueAtRow (source As CurrencyManager, rowNum As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetColumnValueAtRow(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <see cref="T:System.Windows.Forms.CurrencyManager" />과 연결된 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />입니다.</param>
        <param name="rowNum">행 번호입니다.</param>
        <param name="value">설정할 값입니다.</param>
        <summary>지정한 행의 값을 지정한 <see cref="T:System.Windows.Forms.CurrencyManager" />의 값을 사용하여 설정합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Windows.Forms.CurrencyManager" /> 개체의 <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />이 <paramref name="rowNum" />과 일치하지 않는 경우</exception>
        <altmember cref="M:System.Windows.Forms.DataGridColumnStyle.GetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDataGrid">
      <MemberSignature Language="C#" Value="protected virtual void SetDataGrid (System.Windows.Forms.DataGrid value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDataGrid(class System.Windows.Forms.DataGrid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.SetDataGrid(System.Windows.Forms.DataGrid)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDataGrid (value As DataGrid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDataGrid(System::Windows::Forms::DataGrid ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.DataGrid" />
      </Parameters>
      <Docs>
        <param name="value">이 열이 속하는 <see cref="T:System.Windows.Forms.DataGrid" /> 컨트롤입니다.</param>
        <summary>이 열이 속하는 <see cref="T:System.Windows.Forms.DataGrid" /> 컨트롤을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 사용 해야는 <xref:System.Windows.Forms.DataGridColumnStyle.SetDataGridInColumn%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGrid" />
      </Docs>
    </Member>
    <Member MemberName="SetDataGridInColumn">
      <MemberSignature Language="C#" Value="protected virtual void SetDataGridInColumn (System.Windows.Forms.DataGrid value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDataGridInColumn(class System.Windows.Forms.DataGrid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.SetDataGridInColumn(System.Windows.Forms.DataGrid)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDataGridInColumn (value As DataGrid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDataGridInColumn(System::Windows::Forms::DataGrid ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.DataGrid" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.DataGrid" />
        </param>
        <summary>열의 <see cref="T:System.Windows.Forms.DataGrid" />를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 보통 될 때 특수 한 처리 작업을 수행 하는 파생된 클래스에서 재정의 되는 <xref:System.Windows.Forms.DataGridColumnStyle> 에 추가 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>합니다. 예를 들어는 <xref:System.Windows.Forms.DataGridTextBoxColumn> 이 메서드를 사용 하 여 추가 된 <xref:System.Windows.Forms.DataGridTextBox> 의 자식으로는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing">
      <MemberSignature Language="C#" Value="void IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing (System.Windows.Forms.Control editingControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing(class System.Windows.Forms.Control editingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.System#Windows#Forms#IDataGridColumnStyleEditingNotificationService#ColumnStartedEditing(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Sub ColumnStartedEditing (editingControl As Control) Implements IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing(System::Windows::Forms::Control ^ editingControl) = System::Windows::Forms::IDataGridColumnStyleEditingNotificationService::ColumnStartedEditing;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing(System.Windows.Forms.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="editingControl">열을 편집하는 <see cref="T:System.Windows.Forms.Control" />입니다.</param>
        <summary>사용자가 열 편집을 시작했음을 <see cref="T:System.Windows.Forms.DataGrid" /> 컨트롤에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 를 호출할 때는 <xref:System.Windows.Forms.DataGridColumnStyle.ColumnStartedEditing%2A> 메서드를 사용 하면는 <xref:System.Windows.Forms.DataGrid> 컨트롤에 행을 나타내는 행 머리글의 연필 편집 하 고 표시 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUI">
      <MemberSignature Language="C#" Value="protected internal virtual void UpdateUI (System.Windows.Forms.CurrencyManager source, int rowNum, string displayText);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void UpdateUI(class System.Windows.Forms.CurrencyManager source, int32 rowNum, string displayText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridColumnStyle.UpdateUI(System.Windows.Forms.CurrencyManager,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub UpdateUI (source As CurrencyManager, rowNum As Integer, displayText As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void UpdateUI(System::Windows::Forms::CurrencyManager ^ source, int rowNum, System::String ^ displayText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Forms.CurrencyManager" />
        <Parameter Name="rowNum" Type="System.Int32" />
        <Parameter Name="displayText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <see cref="T:System.Windows.Forms.CurrencyManager" />와 연결된 <see cref="T:System.Windows.Forms.DataGridColumnStyle" />입니다.</param>
        <param name="rowNum">업데이트할 행입니다.</param>
        <param name="displayText">새 값입니다.</param>
        <summary>지정한 행의 값을 지정한 텍스트로 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridColumnStyle.UpdateUI%2A> 새 값을 설정 합니다.  
  
 [!code-cpp[Classic DataGridColumnStyle.UpdateUI Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridColumnStyle.UpdateUI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridColumnStyle.UpdateUI Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridColumnStyle.UpdateUI Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnStyle.UpdateUI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.UpdateUI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridColumnStyle.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Width { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 너비를 가져오거나 설정합니다.</summary>
        <value>열의 너비(픽셀 단위)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 두께 설정 하는 다음 코드 예제는 <xref:System.Windows.Forms.DataGridColumnStyle> 를 새 값입니다.  
  
 [!code-vb[Classic DataGridColumnStyle.Width Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridColumnStyle.Width Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridColumnStyle.WidthChanged" />
      </Docs>
    </Member>
    <Member MemberName="WidthChanged">
      <MemberSignature Language="C#" Value="public event EventHandler WidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler WidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridColumnStyle.WidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WidthChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ WidthChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridColumnStyle.Width" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.  
  
 [!code-cpp[DataGridColumnStyle_WidthChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridColumnStyle_WidthChanged/CPP/datagridcolumnstyle_widthchanged.cpp#1)]
 [!code-csharp[DataGridColumnStyle_WidthChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridColumnStyle_WidthChanged/CS/datagridcolumnstyle_widthchanged.cs#1)]
 [!code-vb[DataGridColumnStyle_WidthChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridColumnStyle_WidthChanged/VB/datagridcolumnstyle_widthchanged.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>