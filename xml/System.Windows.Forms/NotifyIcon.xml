<Type Name="NotifyIcon" FullName="System.Windows.Forms.NotifyIcon">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="805c28afe15410a94664225cb66625ab56e3120b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650227" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NotifyIcon : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NotifyIcon extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NotifyIcon" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NotifyIcon&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class NotifyIcon sealed : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MouseDoubleClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.NotifyIconDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>알림 영역에서 아이콘을 만드는 구성 요소를 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 알림 영역의 아이콘 바이러스 방지 프로그램이 나 볼륨 컨트롤과 같은 컴퓨터의 백그라운드에서 실행 되는 프로세스의 바로 가기 됩니다. 이러한 프로세스 자체 사용자 인터페이스 함께 제공 되지 않습니다. <xref:System.Windows.Forms.NotifyIcon> 클래스는이 기능에서 프로그래밍 하는 방법을 제공 합니다. <xref:System.Windows.Forms.NotifyIcon.Icon%2A> 알림 영역에 표시 되는 아이콘 속성을 정의 합니다. 아이콘에 대 한 팝업 메뉴와 사항은 <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A> 속성입니다. <xref:System.Windows.Forms.NotifyIcon.Text%2A> 속성 도구 설명 텍스트를 할당 합니다. 알림 영역에 표시 아이콘에는 <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 속성으로 설정 되어 있어야 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.NotifyIcon> 클래스 알림 영역에 응용 프로그램에 대 한 아이콘을 표시 합니다. 예제 설정에는 <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, 및 <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 속성 및 처리는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트입니다. A <xref:System.Windows.Forms.ContextMenu> 와 **종료** 에 할당 된 항목에는 <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> 사용자 응용 프로그램을 닫을 수 있도록 합니다. 경우는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트가 발생 하면 호출 하 여 응용 프로그램 폼이 활성화는 <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> 메서드.  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">만들려는 <see cref="T:System.Windows.Forms.NotifyIcon" /> 구성 요소입니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.NotifyIcon" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotifyIcon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NotifyIcon.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotifyIcon();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.NotifyIcon" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 <xref:System.Windows.Forms.NotifyIcon> 만들어지면는 <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 속성이 `false`합니다. 설정 해야 합니다는 <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 속성을 `true` 사용 하려면는 <xref:System.Windows.Forms.NotifyIcon> 사용자가 만든 합니다. 이 인스턴스는 해당 컨테이너 가비지 수집을 해제할 때까지 존재 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotifyIcon (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NotifyIcon.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotifyIcon(System::ComponentModel::IContainer ^ container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.ComponentModel.IContainer" /> 컨트롤의 컨테이너를 나타내는 <see cref="T:System.Windows.Forms.NotifyIcon" />입니다.</param>
        <summary>지정된 컨테이너를 사용하여 <see cref="T:System.Windows.Forms.NotifyIcon" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 <xref:System.Windows.Forms.NotifyIcon> 만들어지면는 <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 속성이 `false`합니다. 설정 해야 합니다는 <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 속성을 `true` 사용 하려면는 <xref:System.Windows.Forms.NotifyIcon> 사용자가 만든 합니다. 이 인스턴스는 해당 컨테이너 가비지 수집을 해제할 때까지 존재 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.NotifyIcon> 클래스 알림 영역에 응용 프로그램에 대 한 아이콘을 표시 합니다. 예제 설정에는 <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, 및 <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 속성 및 처리는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트입니다. A <xref:System.Windows.Forms.ContextMenu> 와 **종료** 에 할당 된 항목에는 <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> 사용자 응용 프로그램을 닫을 수 있도록 합니다. 경우는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트가 발생 하면 호출 하 여 응용 프로그램 폼이 활성화는 <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> 메서드.  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BalloonTipClicked">
      <MemberSignature Language="C#" Value="public event EventHandler BalloonTipClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BalloonTipClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.BalloonTipClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BalloonTipClicked As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BalloonTipClicked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>풍선 설명을 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.NotifyIcon.BalloonTipClicked> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.NotifyIcon> 라는 `NotifyIcon1`합니다. 그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.NotifyIcon.BalloonTipClicked> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#505](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#505)]
 [!code-vb[System.Windows.Forms.EventExamples#505](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#505)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BalloonTipClosed">
      <MemberSignature Language="C#" Value="public event EventHandler BalloonTipClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BalloonTipClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.BalloonTipClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BalloonTipClosed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BalloonTipClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 풍선 설명을 닫을 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 처리 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.NotifyIcon.BalloonTipClosed> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.NotifyIconBalloonTip#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.NotifyIconBalloonTip#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BalloonTipIcon">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolTipIcon BalloonTipIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolTipIcon BalloonTipIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.BalloonTipIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property BalloonTipIcon As ToolTipIcon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolTipIcon BalloonTipIcon { System::Windows::Forms::ToolTipIcon get(); void set(System::Windows::Forms::ToolTipIcon value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolTipIcon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.NotifyIcon" />과 연결된 풍선 팁에 표시할 아이콘을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.NotifyIcon" />과 연결된 풍선 팁에 표시할 <see cref="T:System.Windows.Forms.ToolTipIcon" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.NotifyIcon.BalloonTipTitle%2A>, <xref:System.Windows.Forms.NotifyIcon.BalloonTipText%2A>, 및 <xref:System.Windows.Forms.NotifyIcon.BalloonTipIcon%2A> 속성입니다. 이 예제를 실행 하려면 예제 코드를 포함 하는 Windows Form에 붙여는 <xref:System.Windows.Forms.NotifyIcon> 라는 `notifyIcon1`합니다. 호출 `SetBalloonTip` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.  
  
 [!code-csharp[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">지정한 값이 <see cref="T:System.Windows.Forms.ToolTipIcon" />이 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="BalloonTipShown">
      <MemberSignature Language="C#" Value="public event EventHandler BalloonTipShown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BalloonTipShown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.BalloonTipShown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BalloonTipShown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BalloonTipShown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>풍선 설명이 화면에 표시되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.NotifyIcon.BalloonTipShown> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.NotifyIcon> 라는 `NotifyIcon1`합니다. 그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.NotifyIcon.BalloonTipShown> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#507](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#507)]
 [!code-vb[System.Windows.Forms.EventExamples#507](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#507)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BalloonTipText">
      <MemberSignature Language="C#" Value="public string BalloonTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BalloonTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.BalloonTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property BalloonTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BalloonTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.NotifyIcon" />과 연결된 풍선 팁에 표시할 텍스트를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.NotifyIcon" />과 연결된 풍선 팁에 표시할 텍스트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.NotifyIcon.BalloonTipTitle%2A>, <xref:System.Windows.Forms.NotifyIcon.BalloonTipText%2A>, 및 <xref:System.Windows.Forms.NotifyIcon.BalloonTipIcon%2A> 속성입니다. 이 예제를 실행 하려면 예제 코드를 포함 하는 Windows Form에 붙여는 <xref:System.Windows.Forms.NotifyIcon> 라는 `notifyIcon1`합니다. 호출 `SetBalloonTip` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.  
  
 [!code-csharp[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BalloonTipTitle">
      <MemberSignature Language="C#" Value="public string BalloonTipTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BalloonTipTitle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.BalloonTipTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property BalloonTipTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BalloonTipTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.NotifyIcon" />에 표시된 풍선 설명의 제목을 가져오거나 설정합니다.</summary>
        <value>풍선 설명의 제목으로 표시할 텍스트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제목 텍스트 풍선의 위쪽에 굵은 글꼴로 표시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.NotifyIcon.BalloonTipTitle%2A>, <xref:System.Windows.Forms.NotifyIcon.BalloonTipText%2A>, 및 <xref:System.Windows.Forms.NotifyIcon.BalloonTipIcon%2A> 속성입니다. 이 예제를 실행 하려면 예제 코드를 포함 하는 Windows Form에 붙여는 <xref:System.Windows.Forms.NotifyIcon> 라는 `notifyIcon1`합니다. 호출 `SetBalloonTip` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.  
  
 [!code-csharp[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>알림 영역에 있는 아이콘을 마우스 오른쪽 단추로 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 처리는 <xref:System.Windows.Forms.NotifyIcon.Click> 이벤트입니다. 이 예에서는 포함 된 폼에 코드를 추가 가정는 <xref:System.Windows.Forms.NotifyIcon> 라는 개체 `NotifyIcon1`합니다.  
  
 [!code-cpp[System.Windows.Forms.NotifyIconExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIconExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIconExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.NotifyIcon.DoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ContextMenu ^ ContextMenu { System::Windows::Forms::ContextMenu ^ get(); void set(System::Windows::Forms::ContextMenu ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>아이콘의 바로 가기 메뉴를 가져오거나 설정합니다.</summary>
        <value>아이콘에 대한 <see cref="T:System.Windows.Forms.ContextMenu" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업 표시줄의 알림 영역에서 아이콘을 마우스 오른쪽 단추로 클릭할 때 메뉴가 표시 됩니다. 또한 바로 가기 메뉴 팝업 메뉴도 알려져 있습니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.NotifyIcon> 클래스 알림 영역에 응용 프로그램에 대 한 아이콘을 표시 합니다. 예제 설정에는 <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, 및 <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 속성 및 처리는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트입니다. A <xref:System.Windows.Forms.ContextMenu> 와 **종료** 에 할당 된 항목에는 <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> 사용자 응용 프로그램을 닫을 수 있도록 합니다. 경우는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트가 발생 하면 호출 하 여 응용 프로그램 폼이 활성화는 <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> 메서드.  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.NotifyIcon" />과 연결된 바로 가기 메뉴를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.NotifyIcon" />과 연결된 <see cref="T:System.Windows.Forms.ContextMenuStrip" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NotifyIcon.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>작업 표시줄의 알림 영역에 있는 아이콘을 두 번 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.NotifyIcon> 클래스 알림 영역에 응용 프로그램에 대 한 아이콘을 표시 합니다. 예제 설정에는 <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, 및 <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 속성 및 처리는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트입니다. A <xref:System.Windows.Forms.ContextMenu> 와 **종료** 에 할당 된 항목에는 <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> 사용자 응용 프로그램을 닫을 수 있도록 합니다. 경우는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트가 발생 하면 호출 하 여 응용 프로그램 폼이 활성화는 <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> 메서드.  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.NotifyIcon.Click" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 아이콘을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Drawing.Icon" /> 구성 요소에 의해 표시되는 <see cref="T:System.Windows.Forms.NotifyIcon" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.NotifyIcon> 클래스 알림 영역에 응용 프로그램에 대 한 아이콘을 표시 합니다. 예제 설정에는 <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, 및 <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 속성 및 처리는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트입니다. A <xref:System.Windows.Forms.ContextMenu> 와 **종료** 에 할당 된 항목에는 <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> 사용자 응용 프로그램을 닫을 수 있도록 합니다. 경우는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트가 발생 하면 호출 하 여 응용 프로그램 폼이 활성화는 <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> 메서드.  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Icon" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 마우스로 <see cref="T:System.Windows.Forms.NotifyIcon" />를 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.NotifyIcon.MouseClick> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.NotifyIcon> 라는 `NotifyIcon1`합니다. 그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.NotifyIcon.MouseClick> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#510](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#510)]
 [!code-vb[System.Windows.Forms.EventExamples#510](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#510)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 마우스로 <see cref="T:System.Windows.Forms.NotifyIcon" />을 두 번 클릭하면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.NotifyIcon.MouseDoubleClick> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.NotifyIcon> 라는 `NotifyIcon1`합니다. 그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.NotifyIcon.MouseDoubleClick> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#511](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#511)]
 [!code-vb[System.Windows.Forms.EventExamples#511](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#511)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포인터가 작업 표시줄의 알림 영역에 있는 아이콘 위에 있는 동안 사용자가 마우스 단추를 누를 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.NotifyIcon.MouseDown> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.NotifyIcon> 라는 `NotifyIcon1`합니다. 그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.NotifyIcon.MouseDown> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#512](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#512)]
 [!code-vb[System.Windows.Forms.EventExamples#512](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#512)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseMove" />
        <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포인터가 작업 표시줄의 알림 영역에 있는 아이콘 위에 있는 동안 사용자가 마우스를 움직일 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.NotifyIcon.MouseMove> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.NotifyIcon> 라는 `NotifyIcon1`합니다. 그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.NotifyIcon.MouseMove> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#513](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#513)]
 [!code-vb[System.Windows.Forms.EventExamples#513](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#513)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseDown" />
        <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포인터가 작업 표시줄의 알림 영역에 있는 아이콘 위에 있는 동안 사용자가 마우스 단추를 뗄 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.NotifyIcon.MouseUp> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.NotifyIcon> 라는 `NotifyIcon1`합니다. 그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.NotifyIcon.MouseUp> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#514](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#514)]
 [!code-vb[System.Windows.Forms.EventExamples#514](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#514)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseDown" />
        <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseMove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowBalloonTip">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>작업 표시줄에 풍선 설명을 표시합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowBalloonTip">
      <MemberSignature Language="C#" Value="public void ShowBalloonTip (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowBalloonTip(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NotifyIcon.ShowBalloonTip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowBalloonTip (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowBalloonTip(int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">풍선 설명에 기간이 밀리초 단위로 표시되어야 합니다.  
  
 <block subset="none" type="note"><para>  
 이 매개 변수는 Windows Vista에서 사용되지 않습니다. 이제 알림 표시 시간은 시스템 내게 필요한 옵션 설정에 기반합니다.  
  
</para></block></param>
        <summary>작업 표시줄에 지정된 기간에 대한 풍선 설명을 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 최소 및 최대 시간 제한 값은 운영 체제에 의해 적용 되며 일반적으로 10-30 초 각각 운영 체제에 따라 달라질 수 있지만. 너무 크거나 너무 작은 시간 제한 값은 적절 한 최소값 또는 최대값 값으로 조정 됩니다. 또한 사용자는 컴퓨터 (키보드 또는 마우스 이벤트가 발생)를 사용 하는 표시 되지 않으면 다음 시스템 포함 되지 않는이 시간 제한 시간으로 합니다.  
  
 하나만 풍선 팁은 한 번에 작업 표시줄에 표시할 수 있습니다. 작업 표시줄 원인에 현재 표시 하나는 풍선 설명을 표시 하려고는 `timeout` 값이 무시 됩니다. 동작은 운영 체제 및 다른 풍선 팁 인지에 따라 크게 달라 또는 동일 하지만, 응용 프로그램입니다. 값에 관계 없이 두 번째 표시 될 때까지 최소 제한 시간 값은 첫 번째 풍선 팁 표시 됩니다 다른 응용 프로그램에서 두 번째 풍선 팁 이면 `timeout`합니다. 대부분의 경우에서 경우 풍선 팁은 첫 번째 풍선 팁에 즉시 동일한 응용 프로그램에서 종료 되는 다른 호출 하는 경우에 <xref:System.Windows.Forms.NotifyIcon.ShowBalloonTip%2A> 메서드 구성 됩니다. 경우에 따라 두 번째 풍선 첫 번째 풍선 위에 열립니다.  
  
 제목 텍스트 풍선의 위쪽에 굵은 글꼴로 표시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.NotifyIcon.ShowBalloonTip%2A> 메서드를 사용하는 방법을 보여 줍니다. 이 예제를 실행 하려면 예제 코드를 포함 하는 Windows Form에 붙여는 <xref:System.Windows.Forms.NotifyIcon> 라는 `notifyIcon1`합니다. 호출 `SetBalloonTip` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.  
  
 [!code-csharp[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShowBalloonTip">
      <MemberSignature Language="C#" Value="public void ShowBalloonTip (int timeout, string tipTitle, string tipText, System.Windows.Forms.ToolTipIcon tipIcon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowBalloonTip(int32 timeout, string tipTitle, string tipText, valuetype System.Windows.Forms.ToolTipIcon tipIcon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NotifyIcon.ShowBalloonTip(System.Int32,System.String,System.String,System.Windows.Forms.ToolTipIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowBalloonTip (timeout As Integer, tipTitle As String, tipText As String, tipIcon As ToolTipIcon)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowBalloonTip(int timeout, System::String ^ tipTitle, System::String ^ tipText, System::Windows::Forms::ToolTipIcon tipIcon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="tipTitle" Type="System.String" />
        <Parameter Name="tipText" Type="System.String" />
        <Parameter Name="tipIcon" Type="System.Windows.Forms.ToolTipIcon" />
      </Parameters>
      <Docs>
        <param name="timeout">풍선 설명에 기간이 밀리초 단위로 표시되어야 합니다.  
  
 <block subset="none" type="note"><para>  
 이 매개 변수는 Windows Vista에서 사용되지 않습니다. 이제 알림 표시 시간은 시스템 내게 필요한 옵션 설정에 기반합니다.  
  
</para></block></param>
        <param name="tipTitle">풍선 설명에 표시할 제목입니다.</param>
        <param name="tipText">풍선 설명에 표시할 텍스트입니다.</param>
        <param name="tipIcon">
          <see cref="T:System.Windows.Forms.ToolTipIcon" /> 값 중 하나입니다.</param>
        <summary>지정된 기간 동안 작업 표시줄에 지정된 제목, 텍스트 및 아이콘을 포함하는 풍선 설명을 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 최소 및 최대 시간 제한 값은 운영 체제에 의해 적용 되며 일반적으로 10-30 초 각각 운영 체제에 따라 달라질 수 있지만. 너무 크거나 너무 작은 시간 제한 값은 적절 한 최소값 또는 최대값 값으로 조정 됩니다. 또한 사용자는 컴퓨터 (키보드 또는 마우스 이벤트가 발생)를 사용 하는 표시 되지 않으면 다음 시스템 포함 되지 않는이 시간 제한 시간으로 합니다.  
  
 하나만 풍선 팁은 한 번에 작업 표시줄에 표시할 수 있습니다. 작업 표시줄 원인에 현재 표시 하나는 풍선 설명을 표시 하려고는 `timeout` 값이 무시 됩니다. 동작은 운영 체제 및 다른 풍선 팁 인지에 따라 크게 달라 또는 동일 하지만, 응용 프로그램입니다. 값에 관계 없이 두 번째 표시 될 때까지 최소 제한 시간 값은 첫 번째 풍선 팁 표시 됩니다 다른 응용 프로그램에서 두 번째 풍선 팁 이면 `timeout`합니다. 대부분의 경우에서 경우 풍선 팁은 첫 번째 풍선 팁에 즉시 동일한 응용 프로그램에서 종료 되는 다른 호출 하는 경우에 <xref:System.Windows.Forms.NotifyIcon.ShowBalloonTip%2A> 메서드 구성 됩니다. 경우에 따라 두 번째 풍선 첫 번째 풍선 위에 열립니다.  
  
 제목 텍스트 풍선의 위쪽에 굵은 글꼴로 표시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.NotifyIcon.ShowBalloonTip%2A> 메서드를 사용하는 방법을 보여 줍니다. 이 예제를 실행 하려면 예제 코드를 포함 하는 Windows Form에 붙여는 <xref:System.Windows.Forms.NotifyIcon> 라는 `notifyIcon1`합니다. 연결 된 `Form1_DoubleClick` 에서 폼을이 예제의 메서드 <xref:System.Windows.Forms.Control.DoubleClick> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.NotifyIconBalloonTip#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIconBalloonTip#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작습니다.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="tipText" />이 <see langword="null" /> 또는 빈 문자열인 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="tipIcon" />가 <see cref="T:System.Windows.Forms.ToolTipIcon" />의 멤버가 아닌 경우</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">응용 프로그램 창에 액세스 합니다. 연관 된 열거: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.NotifyIcon" />에 대한 데이터가 들어 있는 개체를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Object" />에 대한 데이터가 들어 있는 <see cref="T:System.Windows.Forms.NotifyIcon" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터를 알림 영역 아이콘에 놓을 때 표시되는 도구 설명 텍스트를 가져오거나 설정합니다.</summary>
        <value>마우스 포인터를 알림 영역 아이콘에 놓을 때 표시되는 도구 설명 텍스트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트가 있으면 `null`, 도구 설명이 표시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.NotifyIcon> 클래스 알림 영역에 응용 프로그램에 대 한 아이콘을 표시 합니다. 예제 설정에는 <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, 및 <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 속성 및 처리는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트입니다. A <xref:System.Windows.Forms.ContextMenu> 와 **종료** 에 할당 된 항목에는 <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> 사용자 응용 프로그램을 닫을 수 있도록 합니다. 경우는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트가 발생 하면 호출 하 여 응용 프로그램 폼이 활성화는 <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> 메서드.  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">도구 설명 텍스트가 63자보다 깁니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>아이콘이 작업 표시줄의 알림 영역에 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          알림 영역에서 아이콘을 볼 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값은 이후 `false`, 알림 영역에 표시 되는 아이콘 순서로 설정 해야 합니다는 <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 속성을 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.NotifyIcon> 클래스 알림 영역에 응용 프로그램에 대 한 아이콘을 표시 합니다. 예제 설정에는 <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, 및 <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 속성 및 처리는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트입니다. A <xref:System.Windows.Forms.ContextMenu> 와 **종료** 에 할당 된 항목에는 <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> 사용자 응용 프로그램을 닫을 수 있도록 합니다. 경우는 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 이벤트가 발생 하면 호출 하 여 응용 프로그램 폼이 활성화는 <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> 메서드.  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>