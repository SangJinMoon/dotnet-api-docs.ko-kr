<Type Name="ComboBox+ObjectCollection" FullName="System.Windows.Forms.ComboBox+ObjectCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bc759759c10a1e2366c36bfdaf5c18cf1e58f9e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30639897" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComboBox.ObjectCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ComboBox/ObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ComboBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox.ObjectCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ComboBox::ObjectCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3464e-101">
        <see cref="T:System.Windows.Forms.ComboBox" />에 포함된 항목의 컬렉션을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3464e-101">Represents the collection of items in a <see cref="T:System.Windows.Forms.ComboBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-102"><xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> 에 있는 항목을 캡슐화 하는 클래스는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-102">The <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> class encapsulates the items in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3464e-103">콤보 상자의 개체 컬렉션 다양 한 유형의 개체를 문자열, 이미지 및 사용자 지정 비즈니스 개체를 포함 하 여 관리 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-103">The object collection of a combo box can be used to manage many types of objects, including strings, images, and custom business objects.</span></span>  
  
 <span data-ttu-id="3464e-104">여러 가지 방법으로 컬렉션에 항목을 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-104">You can add items to the collection in several ways.</span></span> <span data-ttu-id="3464e-105"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> 메서드는 컬렉션에 하나의 개체를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-105">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method adds one object to the collection.</span></span> <span data-ttu-id="3464e-106">여러 개체를 컬렉션에 추가할 것이 가장 좋습니다 항목의 배열을 만들고으로 할당 하는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3464e-106">To add a number of objects to the collection, it is best to create an array of items and assign with the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="3464e-107">컬렉션 내의 특정 위치에 있는 개체를 삽입 하려면 사용할 수 있습니다는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3464e-107">To insert an object at a specific location within the collection, you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> method.</span></span> <span data-ttu-id="3464e-108">컬렉션에 알려진된 인덱스에 항목을 제거 하려면 사용할 수 있습니다는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> 메서드 또는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3464e-108">To remove items at a known index in the collection you can use either the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or the <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> method.</span></span> <span data-ttu-id="3464e-109"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A> 메서드 컬렉션에서 모든 항목을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-109">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A> method removes all the items from the collection.</span></span>  
  
 <span data-ttu-id="3464e-110">항목을 추가 및 제거 하기 위한 메서드와 속성 외에 <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> 컬렉션 내의 항목을 찾는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-110">In addition to methods and properties for adding and removing items, the <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> also provides methods to find items within the collection.</span></span> <span data-ttu-id="3464e-111"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> 메서드를 사용 하면 개체 컬렉션의 멤버 인지 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-111">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> method enables you to determine if an object is a member of the collection.</span></span> <span data-ttu-id="3464e-112">사용할 수는 항목은 컬렉션에 들어 있는 것을 알고 있다면는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> 메서드를 항목의 컬렉션 내 위치를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-112">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ComboBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ComboBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.#ctor(System.Windows.Forms.ComboBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ComboBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ComboBox ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ComboBox" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="3464e-113">이 컬렉션을 소유하는 <see cref="T:System.Windows.Forms.ComboBox" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-113">The <see cref="T:System.Windows.Forms.ComboBox" /> that owns this object collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3464e-114">
            <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-114">Initializes a new instance of <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-115">와 연결 되어 있지 않으면이 클래스의 인스턴스를 만들 수 없습니다는 <xref:System.Windows.Forms.ComboBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-115">An instance of this class cannot be created without associating it with a <xref:System.Windows.Forms.ComboBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3464e-116">컬렉션에 추가할 항목을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-116">An object representing the item to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3464e-117">
            <see cref="T:System.Windows.Forms.ComboBox" />의 항목 목록에 항목을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-117">Adds an item to the list of items for a <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3464e-118">컬렉션 항목의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-118">The zero-based index of the item in the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-119">이 메서드는 콤보 상자에 항목을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-119">This method adds an item to the combo box.</span></span> <span data-ttu-id="3464e-120">경우는 <xref:System.Windows.Forms.ComboBox.Sorted%2A> 의 속성은 <xref:System.Windows.Forms.ComboBox> 로 설정 된 `true`, 항목이 사전순으로 목록에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-120">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is set to `true`, the item is inserted into the list alphabetically.</span></span> <span data-ttu-id="3464e-121">그렇지 않으면 항목 목록의 끝에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-121">Otherwise, the item is inserted at the end of the list.</span></span>  
  
 <span data-ttu-id="3464e-122">항목의 시각적 표현 콤보 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-122">A visual representation of the item is displayed in the combo box.</span></span> <span data-ttu-id="3464e-123">이 콘텐츠 표현을 지정 된는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-123">This content representation is specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property.</span></span> <span data-ttu-id="3464e-124">경우는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성은 `null`, 해당 항목의 `ToString` 메서드는에 지정 된 대로 저장 된 개체의 속성은 콤보 상자에 표시 되 고, 그러지 않으면 하는 문자열을 가져올 수는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-124">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is `null`, the item's `ToString` method is called to obtain the string that is displayed in the combo box; otherwise, the property of the stored object as specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is displayed.</span></span> <span data-ttu-id="3464e-125">A <xref:System.SystemException> 새 항목을 저장할 수 있는 공간이 부족 한 경우에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-125">A <xref:System.SystemException> occurs if there is insufficient space available to store the new item.</span></span> <span data-ttu-id="3464e-126">사용 하는 것이 좋습니다 콤보 상자 항목의 집합을 추가 하려면는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3464e-126">To add a set of items to the combo box it is best to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="3464e-127">사용 하려는 경우는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> 메서드를 사용 하 여 콤보 상자에 항목의 수를 추가 하려면는 <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> 메서드를 추가 하는 동안 다시 그리기를 일시 중단 및 <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> 메서드를 다시 그리기를 다시 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-127">If you choose to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method to add a number of items to the combo box, use the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> method to suspend repainting during your add and the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method to resume repainting.</span></span> <span data-ttu-id="3464e-128">사용할 수는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> 목록 항목이 추가 될 위치를 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="3464e-128">You can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> method to specify the location in the list where an item is added.</span></span> <span data-ttu-id="3464e-129">개체를 컬렉션에 추가 될 때는 <xref:System.Windows.Forms.ComboBox> 개체의 호출 <xref:System.Object.ToString%2A> 메서드 목록에 표시할 문자열을 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-129">When an object is added to the collection, the <xref:System.Windows.Forms.ComboBox> calls the object's <xref:System.Object.ToString%2A> method to obtain the string to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3464e-130">
            <paramref name="item" /> 매개 변수가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-130">The <paramref name="item" /> parameter was <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (object[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(object[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.AddRange(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Object ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="3464e-131">목록에 추가할 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-131">An array of objects to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3464e-132">
            <see cref="T:System.Windows.Forms.ComboBox" />의 항목 목록에 항목 배열을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-132">Adds an array of items to the list of items for a <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-133">경우는 <xref:System.Windows.Forms.ComboBox.Sorted%2A> 의 속성은 <xref:System.Windows.Forms.ComboBox> 로 설정 된 true 이면 항목은 목록에 삽입 사전순으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-133">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is set to true, the items are inserted into the list alphabetically.</span></span> <span data-ttu-id="3464e-134">그렇지 않으면 항목 배열 내에서 발생 한 순서 대로 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-134">Otherwise, the items are inserted in the order they occur within the array.</span></span> <span data-ttu-id="3464e-135">이 메서드는 일반적으로 배열을 전달 <xref:System.String> 개체가 아니라 모든 종류의 개체의 배열을이 메서드에 전달 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-135">This method is typically passed an array of <xref:System.String> objects, but an array of any type of object can be passed to this method.</span></span> <span data-ttu-id="3464e-136">메서드 호출 개체의 개체를 컬렉션에 추가 되 면 <xref:System.Object.ToString%2A> 메서드 목록에 표시할 문자열을 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-136">When an object is added to the collection, the method calls the object's <xref:System.Object.ToString%2A> method to obtain the string to display in the list.</span></span> <span data-ttu-id="3464e-137">이 메서드를 사용 하 여 컬렉션에 항목 추가 필요가 없습니다 호출 하는 <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> 및 <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> 성능을 최적화 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="3464e-137">When using this method to add items to the collection, you do not need to call the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> methods to optimize performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3464e-138">다음 코드 예제에서는 초기화 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ComboBox> text 속성을 설정 하 고 사용 하 여 컨트롤의 <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> 를 채우는 메서드는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-138">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the text property and using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method to populate the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3464e-139">처리 하는 방법도 보여 줍니다는 <xref:System.Windows.Forms.ComboBox.DropDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-139">It also demonstrates handling the <xref:System.Windows.Forms.ComboBox.DropDown> event.</span></span> <span data-ttu-id="3464e-140">예제를 실행 하려면 다음 코드를 붙여 폼 호출에는 `InitializeComboBox` 폼의 생성자에서 메서드 또는 `Load` 메서드.</span><span class="sxs-lookup"><span data-stu-id="3464e-140">To run the example, paste the following code in a form and call the `InitializeComboBox` method from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3464e-141">
            <paramref name="items" /> 매개 변수의 항목이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-141">An item in the <paramref name="items" /> parameter was <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3464e-142">
            <see cref="T:System.Windows.Forms.ComboBox" />에서 항목을 모두 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-142">Removes all items from the <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-143">목록에서 항목을 제거할 때 삭제 된 항목에 대 한 모든 정보가 손실 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-143">When you remove items from the list, all information about the deleted items is lost.</span></span> <span data-ttu-id="3464e-144">단일 항목을 제거 하는 <xref:System.Windows.Forms.ComboBox>를 사용 하 여는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> 또는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3464e-144">To remove a single item from the <xref:System.Windows.Forms.ComboBox>, use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> or <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3464e-145">컬렉션에서 찾을 항목을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-145">An object representing the item to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3464e-146">지정된 항목이 컬렉션 안에 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-146">Determines if the specified item is located within the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3464e-147">항목이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-147">
              <see langword="true" /> if the item is located within the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-148"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> 메서드를 사용 하면 개체 컬렉션의 멤버 인지 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-148">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> method enables you to determine if an object is a member of the collection.</span></span> <span data-ttu-id="3464e-149">사용할 수는 항목은 컬렉션에 들어 있는 것을 알고 있다면는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> 메서드를 항목의 컬렉션 내 위치를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-149">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (object[] destination, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] destination, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.CopyTo(System.Object[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Object(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ destination, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Object[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="3464e-150">컬렉션을 복사할 대상인 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-150">The object array to copy the collection to.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="3464e-151">컬렉션을 복사할 대상 배열 내의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-151">The location in the destination array to copy the collection to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3464e-152">배열 내의 지정된 위치에 있는 개체의 기존 배열로 전체 컬렉션을 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-152">Copies the entire collection into an existing array of objects at a specified location within the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-153">단일 배열로 여러 컬렉션에서 항목을 결합 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-153">You can use this method to combine the items from multiple collections into a single array.</span></span> <span data-ttu-id="3464e-154">이 배열을 다른 형식의 콘텐츠를 채우는 데 사용할 수 있습니다 <xref:System.Windows.Forms.ComboBox> 를 사용 하 여 제어는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> 의 메서드는 <xref:System.Windows.Forms.ComboBox.ObjectCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-154">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ComboBox> control using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3464e-155">컬렉션의 항목 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-155">Gets the number of items in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3464e-156">컬렉션의 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-156">The number of items in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-157">이 속성을 사용 하면에 있는 항목의 수를 확인 하 고 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-157">This property enables you to determine the number of items in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3464e-158">컬렉션의 값을 반복 하는 경우이 값을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-158">You can use this value when looping through the values of the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3464e-159">항목 컬렉션 전체에서 반복하는 데 사용할 수 있는 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-159">Returns an enumerator that can be used to iterate through the item collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3464e-160">항목 컬렉션을 나타내는 <see cref="T:System.Collections.IEnumerator" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-160">An <see cref="T:System.Collections.IEnumerator" /> that represents the item collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3464e-161">컬렉션에서 찾을 항목을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-161">An object representing the item to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3464e-162">지정된 항목의 인덱스를 컬렉션 내에서 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-162">Retrieves the index within the collection of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3464e-163">컬렉션에서 항목이 위치한 곳의 인덱스(0부터 시작)를 반환하며, 항목이 컬렉션 내에 없는 경우 -1을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-163">The zero-based index where the item is located within the collection; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-164"><xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> 메서드를 사용 하면 항목의 컬렉션 내 위치를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-164">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method enables you to determine where an item is located within the collection.</span></span> <span data-ttu-id="3464e-165">이 메서드를 호출 하기 전에 컬렉션에 들어 있는 항목 인지를 확인 하려면 사용 하 여는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3464e-165">To determine if an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3464e-166">
            <paramref name="value" /> 매개 변수가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-166">The <paramref name="value" /> parameter was <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3464e-167">항목이 삽입되는 0부터 시작하는 인덱스 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-167">The zero-based index location where the item is inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="3464e-168">삽입할 항목을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-168">An object representing the item to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3464e-169">컬렉션 내의 지정한 인덱스에 항목을 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-169">Inserts an item into the collection at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-170">경우는 <xref:System.Windows.Forms.ComboBox.Sorted%2A> 의 속성은 <xref:System.Windows.Forms.ComboBox> 가 true 이면는 `index` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-170">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is true, the `index` parameter is ignored.</span></span> <span data-ttu-id="3464e-171">개체가 컬렉션에 추가 되는 경우는 <xref:System.Windows.Forms.ComboBox> 개체의 호출 <xref:System.Object.ToString%2A> 메서드는 목록에 표시할 문자열을 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-171">When an object is added to the collection, the <xref:System.Windows.Forms.ComboBox> calls the object's <xref:System.Object.ToString%2A> method is to obtain the string to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3464e-172">
            <paramref name="item" />가 <see langword="null" />이었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-172">The <paramref name="item" /> was <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3464e-173">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-173">The <paramref name="index" /> was less than zero.</span>
          </span>
          <span data-ttu-id="3464e-174">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-174">-or-</span>
          </span>
          <span data-ttu-id="3464e-175">
            <paramref name="index" />가 컬렉션에 들어 있는 항목 수보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-175">The <paramref name="index" /> was greater than the count of items in the collection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3464e-176">해당 컬렉션을 변경할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-176">Gets a value indicating whether this collection can be modified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3464e-177">항상 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-177">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3464e-178">컬렉션에서 검색할 항목의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-178">The index of the item in the collection to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3464e-179">지정한 인덱스에 위치한 항목을 컬렉션에서 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-179">Retrieves the item at the specified index within the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3464e-180">컬렉션 내의 지정된 인덱스에 있는 항목을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-180">An object representing the item located at the specified index within the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-181">컬렉션 내의 지정된 된 위치에 항목을 가져오려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-181">You can use this method to obtain the item at the specified location within the collection.</span></span> <span data-ttu-id="3464e-182">사용할 수 있습니다 <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> 반환 하는 인덱스를 사용할 수 있는 항목의 위치를 찾습니다는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3464e-182">You can use <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> to find the location of an item, or you can use the index return from the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3464e-183">인덱스가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-183">The index was less than zero.</span>
          </span>
          <span data-ttu-id="3464e-184">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-184">-or-</span>
          </span>
          <span data-ttu-id="3464e-185">
            <paramref name="index" />가 컬렉션에 들어 있는 항목 수보다 크거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-185">The <paramref name="index" /> was greater of equal to the count of items in the collection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3464e-186">목록에서 제거할 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-186">The <see cref="T:System.Object" /> to remove from the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3464e-187">지정된 항목을 <see cref="T:System.Windows.Forms.ComboBox" />에서 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-187">Removes the specified item from the <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-188">지정된 된 항목을 찾을 수 없는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-188">No exception is thrown if the specified item is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3464e-189">제거할 항목의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-189">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3464e-190">지정된 인덱스에 있는 <see cref="T:System.Windows.Forms.ComboBox" />에서 항목을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-190">Removes an item from the <see cref="T:System.Windows.Forms.ComboBox" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3464e-191">다음 코드 예제에서는 초기화 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ComboBox> 설정 하 여 컨트롤의 <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> 및 <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성을 사용 하 여는 <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> 검색 방법에서 <xref:System.Windows.Forms.ComboBox> 및 <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> 메서드 항목을 제거 하려면 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-191">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties, using the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods to search the <xref:System.Windows.Forms.ComboBox> and the <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> method to remove an item from the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3464e-192">또한 처리 표시는 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-192">It also shows handling the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3464e-193">
            <paramref name="value" /> 매개 변수가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-193">The <paramref name="value" /> parameter was less than zero.</span>
          </span>
          <span data-ttu-id="3464e-194">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-194">-or-</span>
          </span>
          <span data-ttu-id="3464e-195">
            <paramref name="value" /> 매개 변수가 컬렉션에 들어 있는 항목 수보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-195">The <paramref name="value" /> parameter was greater than or equal to the count of items in the collection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (destination As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ destination, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="3464e-196">컬렉션에서 복사한 요소의 대상인 1차원 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-196">The one-dimensional array that is the destination of the elements copied from the collection.</span>
          </span>
          <span data-ttu-id="3464e-197">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-197">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3464e-198">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-198">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3464e-199">이 멤버에 대한 설명은 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-199">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-200">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="3464e-200">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3464e-201"><xref:System.Windows.Forms.ComboBox.ObjectCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-201">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3464e-202">이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.IsSynchronized" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-202">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3464e-203">모든 경우에 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-203">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-204">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="3464e-204">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3464e-205"><xref:System.Windows.Forms.ComboBox.ObjectCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-205">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3464e-206">이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.SyncRoot" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-206">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3464e-207">
            <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-207">An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-208">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="3464e-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3464e-209"><xref:System.Windows.Forms.ComboBox.ObjectCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-209">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3464e-210">컬렉션에 추가할 항목을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-210">An object that represents the item to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3464e-211">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Add(System.Object)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-211">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3464e-212">컬렉션 항목의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-212">The zero-based index of the item in the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-213">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="3464e-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3464e-214"><xref:System.Windows.Forms.ComboBox.ObjectCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-214">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="3464e-215">이 메서드는 콤보 상자에 항목을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-215">This method adds an item to the combo box.</span></span> <span data-ttu-id="3464e-216">경우는 <xref:System.Windows.Forms.ComboBox.Sorted%2A> 의 속성은 <xref:System.Windows.Forms.ComboBox> 로 설정 된 `true`, 항목이 사전순으로 목록에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-216">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is set to `true`, the item is inserted into the list alphabetically.</span></span> <span data-ttu-id="3464e-217">그렇지 않으면 항목 목록의 끝에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-217">Otherwise, the item is inserted at the end of the list.</span></span>  
  
 <span data-ttu-id="3464e-218">항목의 시각적 표현 콤보 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-218">A visual representation of the item is displayed in the combo box.</span></span> <span data-ttu-id="3464e-219">이 콘텐츠 표현을 지정 된는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-219">This content representation is specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property.</span></span> <span data-ttu-id="3464e-220">경우는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성은 `null`, 해당 항목의 <xref:System.Object.ToString%2A> 메서드는에 지정 된 대로 저장 된 개체의 속성은 콤보 상자에 표시 되 고, 그러지 않으면 하는 문자열을 가져올 수는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-220">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is `null`, the item's <xref:System.Object.ToString%2A> method is called to obtain the string that is displayed in the combo box; otherwise, the property of the stored object as specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is displayed.</span></span> <span data-ttu-id="3464e-221">항목 집합에 콤보 상자를 추가 하려면 사용 하 여이 <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3464e-221">To add a set of items to the combo box, it is best to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="3464e-222">사용 하려는 경우는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> 을 콤보 상자에 일련의 항목을 추가 하려면 사용 하는 메서드는 <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> 메서드를 추가 하는 동안 다시 그리기를 일시 중단 및 <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> 다시 그리기를 다시 시작 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="3464e-222">If you choose to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method to add a set of items to the combo box, use the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> method to suspend repainting during your add and the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method to resume repainting.</span></span> <span data-ttu-id="3464e-223">사용할 수는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> 목록 항목이 추가 될 위치를 지정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="3464e-223">You can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> method to specify the location in the list where an item is added.</span></span> <span data-ttu-id="3464e-224">개체를 컬렉션에 추가 될 때는 <xref:System.Windows.Forms.ComboBox> 개체의 호출 <xref:System.Object.ToString%2A> 메서드 목록에 표시할 문자열을 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-224">When an object is added to the collection, the <xref:System.Windows.Forms.ComboBox> calls the object's <xref:System.Object.ToString%2A> method to obtain the string to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3464e-225">
            <paramref name="item" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-225">The <paramref name="item" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="3464e-226">새 항목을 저장하기 위한 공간이 부족합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-226">There is insufficient space available to store the new item.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3464e-227">이 멤버에 대한 설명은 <see cref="P:System.Collections.IList.IsFixedSize" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-227">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3464e-228">모든 경우에 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3464e-228">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3464e-229">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="3464e-229">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3464e-230"><xref:System.Windows.Forms.ComboBox.ObjectCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3464e-230">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
  </Members>
</Type>