<Type Name="DragEventArgs" FullName="System.Windows.Forms.DragEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36617700af2104e254aac0c99fbca2f634f0d425" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DragEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cc544-101">
        <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" /> 또는 <see cref="E:System.Windows.Forms.Control.DragOver" /> 이벤트에 대한 데이터를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc544-101">Provides data for the <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" />, or <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc544-102"><xref:System.Windows.Forms.Control.DragDrop> 사용자 개체를 컨트롤 위로 끌어 놓아 다음 컨트롤로 마우스 단추를 해제 하 여 끌어서 놓기 작업을 완료 하면 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-102">The <xref:System.Windows.Forms.Control.DragDrop> event occurs when the user completes a drag-and-drop operation by dragging an object over the control and then dropping it onto the control by releasing the mouse button.</span></span> <span data-ttu-id="cc544-103"><xref:System.Windows.Forms.Control.DragEnter> 이 이벤트는 개체를 마우스로 끄는 동안 마우스 포인터를 컨트롤을 이동할 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-103">The <xref:System.Windows.Forms.Control.DragEnter> event occurs when the user moves the mouse pointer onto the control while dragging an object with the mouse.</span></span> <span data-ttu-id="cc544-104"><xref:System.Windows.Forms.Control.DragOver> 이벤트 마우스로 개체를 끄는 동안 마우스 포인터를 컨트롤 위로 이동할 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-104">The <xref:System.Windows.Forms.Control.DragOver> event occurs when the user moves the mouse pointer over the control while dragging an object with the mouse.</span></span>  
  
 <span data-ttu-id="cc544-105">A <xref:System.Windows.Forms.DragEventArgs> 원본과 끌기 이벤트의 대상에서 허용 되는 끌어서 놓기 작업 및이 이벤트와 연결 된 모든 데이터가 SHIFT, CTRL 및 ALT 키의 현재 상태, 마우스 포인터의 위치를 지정 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-105">A <xref:System.Windows.Forms.DragEventArgs> object specifies any data associated with this event; the current state of the SHIFT, CTRL, and ALT keys; the location of the mouse pointer; and the drag-and-drop effects allowed by the source and target of the drag event.</span></span>  
  
 <span data-ttu-id="cc544-106">이벤트 모델에 대 한 정보를 참조 하십시오. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-106">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc544-107">다음 예제에서는 두 끌어서 놓기 작업 <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-107">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="cc544-108">예제에서는 호출은 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-108">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="cc544-109">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-109">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="cc544-110"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-110">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="cc544-111">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-111">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="cc544-112">이 예에서는 두 가정 커서 파일 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</span><span class="sxs-lookup"><span data-stu-id="cc544-112">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="cc544-113">사용자 지정 커서 사용 하는 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-113">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="cc544-114">에 설정 된 사용자 지정 커서는 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-114">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="cc544-115">키보드 상태에서 평가 됩니다는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-115">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="cc544-116">위치는 `ListBox` 삭제가 발생 중도 결정 됩니다는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-116">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="cc544-117">삭제할 데이터가 아닌 경우는 `String`, 하면 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-117">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc544-118">드롭다운 상태에 표시 되는 마지막으로,는 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-118">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="cc544-119">데이터를 오른쪽에 대 한 drop `ListBox` 에 따라 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 적절 한 위치에서 값이 추가 `ListBox`합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-119">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="cc544-120">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-120">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="cc544-121">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DragEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-121">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="cc544-122">참조는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-122">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 <span data-ttu-id="cc544-123">다음 예제에서는 어떻게 <xref:System.Windows.Forms.DragEventArgs> 원본 및 끌어서 놓기 작업의 대상 사이 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-123">The following example illustrates how <xref:System.Windows.Forms.DragEventArgs> are passed between the source and target of a drag-and-drop operation.</span></span> <span data-ttu-id="cc544-124">이 예제에서는 한 <xref:System.Windows.Forms.ListBox> 컨트롤은 데이터의 원본 및 <xref:System.Windows.Forms.RichTextBox> 컨트롤이 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-124">In this example, a <xref:System.Windows.Forms.ListBox> control is the source of the data, and the <xref:System.Windows.Forms.RichTextBox> control is the target.</span></span> <span data-ttu-id="cc544-125">이 예에서는 가정 하는 <xref:System.Windows.Forms.ListBox> 컨트롤 유효한 파일 이름 목록으로 구성 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-125">The example assumes that the <xref:System.Windows.Forms.ListBox> control has been populated with a list of valid filenames.</span></span> <span data-ttu-id="cc544-126">끌면에서 표시 된 파일 이름 중 하나는 <xref:System.Windows.Forms.ListBox> 컨트롤을 <xref:System.Windows.Forms.RichTextBox> 컨트롤, 파일 이름에서 참조 된 파일이 열립니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-126">When the user drags one of the displayed filenames from the <xref:System.Windows.Forms.ListBox> control onto the <xref:System.Windows.Forms.RichTextBox> control, the file referenced in the filename is opened.</span></span>  
  
 <span data-ttu-id="cc544-127">에 작업을 시작할는 <xref:System.Windows.Forms.ListBox> 컨트롤의 MouseDown 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-127">The operation is initiated in the <xref:System.Windows.Forms.ListBox> control's MouseDown event.</span></span> <span data-ttu-id="cc544-128">에 <xref:System.Windows.Forms.RichTextBox.DragEnter> 사용 하 여 이벤트 처리기는 예제는 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 메서드는 데이터 형식에서 인지 확인 하는 <xref:System.Windows.Forms.RichTextBox> 제어를 표시 하 고 다음 설정는 <xref:System.Windows.Forms.DragDropEffects> 소스 제어에서 해당 데이터를 지정 하는 속성을 복사 해야 대상 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-128">In the <xref:System.Windows.Forms.RichTextBox.DragEnter> event handler, the example uses the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to verify that the data is in a format that the <xref:System.Windows.Forms.RichTextBox> control can display and then sets the <xref:System.Windows.Forms.DragDropEffects> property to specify that data should be copied from the source control to the target control.</span></span> <span data-ttu-id="cc544-129">마지막으로 <xref:System.Windows.Forms.RichTextBox> 사용 하 여 컨트롤의 DragDrop 이벤트 처리기는 <xref:System.Windows.Forms.IDataObject.GetData%2A> 메서드를 열려는 파일 이름을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-129">Finally, the <xref:System.Windows.Forms.RichTextBox> control's DragDrop event handler uses the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the filename to open.</span></span>  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragDropEffects" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DragEventArgs (System.Windows.Forms.IDataObject data, int keyState, int x, int y, System.Windows.Forms.DragDropEffects allowedEffect, System.Windows.Forms.DragDropEffects effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.IDataObject data, int32 keyState, int32 x, int32 y, valuetype System.Windows.Forms.DragDropEffects allowedEffect, valuetype System.Windows.Forms.DragDropEffects effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataObject, keyState As Integer, x As Integer, y As Integer, allowedEffect As DragDropEffects, effect As DragDropEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DragEventArgs(System::Windows::Forms::IDataObject ^ data, int keyState, int x, int y, System::Windows::Forms::DragDropEffects allowedEffect, System::Windows::Forms::DragDropEffects effect);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.IDataObject" />
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="allowedEffect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="cc544-130">이 이벤트와 관련된 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-130">The data associated with this event.</span>
          </span>
        </param>
        <param name="keyState">
          <span data-ttu-id="cc544-131">Shift, Ctrl 및 Alt 키의 현재 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-131">The current state of the SHIFT, CTRL, and ALT keys.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="cc544-132">픽셀 단위로 나타낸 마우스 포인터의 x좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-132">The x-coordinate of the mouse cursor in pixels.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="cc544-133">픽셀 단위로 나타낸 마우스 포인터의 y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-133">The y-coordinate of the mouse cursor in pixels.</span>
          </span>
        </param>
        <param name="allowedEffect">
          <span data-ttu-id="cc544-134">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-134">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </param>
        <param name="effect">
          <span data-ttu-id="cc544-135">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-135">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc544-136">
            <see cref="T:System.Windows.Forms.DragEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-136">Initializes a new instance of the <see cref="T:System.Windows.Forms.DragEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="AllowedEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects AllowedEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects AllowedEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedEffect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects AllowedEffect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc544-137">끌기 이벤트의 작성기 또는 소스에서 허용하는 끌어서 놓기 작업을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-137">Gets which drag-and-drop operations are allowed by the originator (or source) of the drag event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc544-138">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-138">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc544-139">컨트롤을 호출 하 여 끌어서 놓기 작업을 시작 하는 경우는 <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> 메서드를 허용 되는 작업의 효과 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-139">When a control initiates a drag-and-drop operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> method, it specifies the permissible effects of the operation.</span></span> <span data-ttu-id="cc544-140">예를 들어 파일이 읽기 전용인 경우 소스에서 파일을 끌 때 또는 (예: CD 읽기 전용 저장 매체에서) 소스 파일 복사 수는 있지만 대상으로 하지 전송 수는 없음을 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-140">For example, when you drag a file from a source, if the file is read-only (or from a read-only storage medium such as a CD), the source will indicate that the file can be copied, but not transferred, to the target.</span></span>  
  
 <span data-ttu-id="cc544-141">끌어온된 데이터에 대 한 작업을 수행 하려면 먼저이 작업은 허용을 위해이 속성을 검사 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-141">Before attempting to perform an operation on the dragged data, you should examine this property to ensure that the operation is allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc544-142">다음 예제에서는 두 끌어서 놓기 작업 <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-142">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="cc544-143">예제에서는 호출은 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-143">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="cc544-144">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-144">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="cc544-145"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-145">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="cc544-146">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-146">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="cc544-147">이 예에서는 두 가정 커서 파일 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</span><span class="sxs-lookup"><span data-stu-id="cc544-147">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="cc544-148">사용자 지정 커서 사용 하는 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-148">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="cc544-149">에 설정 된 사용자 지정 커서는 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-149">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="cc544-150">키보드 상태에서 평가 됩니다는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-150">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="cc544-151">위치는 `ListBox` 삭제가 발생 중도 결정 됩니다는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-151">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="cc544-152">삭제할 데이터가 아닌 경우는 `String`, 하면 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-152">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc544-153">드롭다운 상태에 표시 되는 마지막으로,는 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-153">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="cc544-154">데이터를 오른쪽에 대 한 drop `ListBox` 에 따라 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 적절 한 위치에서 값이 추가 `ListBox`합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-154">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="cc544-155">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-155">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="cc544-156">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DragEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-156">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="cc544-157">참조는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-157">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IDataObject Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IDataObject ^ Data { System::Windows::Forms::IDataObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc544-158">이 이벤트와 관련된 데이터를 포함하는 <see cref="T:System.Windows.Forms.IDataObject" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-158">Gets the <see cref="T:System.Windows.Forms.IDataObject" /> that contains the data associated with this event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc544-159">이 이벤트와 관련된 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-159">The data associated with this event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc544-160">이벤트 처리기의 본문에 사용할 수 있습니다는 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 데이터는 데이터를 끄는 컨트롤의 형식 요구 사항 일치 하는지 여부를 결정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-160">In the body of your event handler, you can use the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether the data matches the format requirements of the control onto which the data is being dragged.</span></span> <span data-ttu-id="cc544-161">형식 요구 사항을 충족 하기 위해 데이터를 변환 하려고 것인지 여부를 지정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-161">You also can specify whether you want to attempt to convert the data to meet your format requirements.</span></span> <span data-ttu-id="cc544-162">형식 요구 사항을 충족 하는 끌어온된 데이터를 사용 하 여는 <xref:System.Windows.Forms.IDataObject.GetData%2A> 메서드 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-162">If the dragged data meets your format requirements, use the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc544-163">다음 예제에서는 두 끌어서 놓기 작업 <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-163">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="cc544-164">예제에서는 호출은 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-164">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="cc544-165">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-165">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="cc544-166"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-166">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="cc544-167">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-167">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="cc544-168">이 예에서는 두 가정 커서 파일 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</span><span class="sxs-lookup"><span data-stu-id="cc544-168">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="cc544-169">사용자 지정 커서 사용 하는 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-169">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="cc544-170">에 설정 된 사용자 지정 커서는 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-170">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="cc544-171">키보드 상태에서 평가 됩니다는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-171">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="cc544-172">위치는 `ListBox` 삭제가 발생 중도 결정 됩니다는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-172">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="cc544-173">삭제할 데이터가 아닌 경우는 `String`, 하면 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-173">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc544-174">드롭다운 상태에 표시 되는 마지막으로,는 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-174">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="cc544-175">데이터를 오른쪽에 대 한 drop `ListBox` 에 따라 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 적절 한 위치에서 값이 추가 `ListBox`합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-175">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="cc544-176">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-176">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="cc544-177">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DragEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-177">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="cc544-178">참조는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-178">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); void set(System::Windows::Forms::DragDropEffects value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc544-179">끌어서 놓기 작업에서 대상 놓기 결과를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-179">Gets or sets the target drop effect in a drag-and-drop operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc544-180">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-180">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc544-181">기본적으로 적용 되는 효과 끌어서 놓기 작업의 대상에 대 한 마우스 커서를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-181">By default, the effect applied determines the mouse cursor for the target of a drag-and-drop operation.</span></span> <span data-ttu-id="cc544-182">이 발생 하는 작업에서 사용자에 게 피드백을 제공 하는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-182">This is useful to provide feedback to the user on the operation that will occur.</span></span> <span data-ttu-id="cc544-183">소스에서 파일을 끌 때 CTRL 키를 누르면 지정 하는 예를 들어 <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> 를 나타내는 대상 복사 작업을 수행 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-183">For example, if you press the CTRL key when you drag a file from a source, specify <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> to indicate the target will try to perform a copy operation.</span></span>  
  
 <span data-ttu-id="cc544-184">끌기 작업에 대 한 사용자 지정 커서를 사용 하려면 참조 <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-184">To use custom cursors for a drag operation, see <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc544-185">다음 예제에서는 두 끌어서 놓기 작업 <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-185">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="cc544-186">예제에서는 호출은 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-186">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="cc544-187">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-187">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="cc544-188"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-188">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="cc544-189">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-189">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="cc544-190">이 예에서는 두 가정 커서 파일 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</span><span class="sxs-lookup"><span data-stu-id="cc544-190">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="cc544-191">사용자 지정 커서 사용 하는 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-191">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="cc544-192">에 설정 된 사용자 지정 커서는 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-192">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="cc544-193">키보드 상태에서 평가 됩니다는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-193">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="cc544-194">위치는 `ListBox` 삭제가 발생 중도 결정 됩니다는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-194">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="cc544-195">삭제할 데이터가 아닌 경우는 `String`, 하면 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-195">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc544-196">드롭다운 상태에 표시 되는 마지막으로,는 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-196">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="cc544-197">데이터를 오른쪽에 대 한 drop `ListBox` 에 따라 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 적절 한 위치에서 값이 추가 `ListBox`합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-197">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="cc544-198">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-198">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="cc544-199">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DragEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-199">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="cc544-200">참조는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-200">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc544-201">마우스 단추의 상태뿐 아니라 Shift, Ctrl 및 Alt 키의 현재 상태를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-201">Gets the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc544-202">Shift, Ctrl 및 Alt 키와 마우스 단추의 현재 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-202">The current state of the SHIFT, CTRL, and ALT keys and of the mouse buttons.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc544-203">특정 키의 상태에 따라 달라 지도록 끌어서 놓기 작업의 결과 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-203">You can make the effect of a drag-and-drop operation to depend on the state of a particular key.</span></span> <span data-ttu-id="cc544-204">예를 들어 복사 하거나 끌어서 놓기 작업 동안 CTRL 또는 SHIFT 키 누름에 따라 데이터를 이동 하려는 경우도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-204">For example, you may decide to copy or move data depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="cc544-205">에 설정 된 비트는 <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> 키 또는 마우스 단추를 누른 후 작업을 하는 동안 속성을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-205">The bits that are set in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property identify the keys or mouse buttons that were pressed during the operation.</span></span> <span data-ttu-id="cc544-206">예를 들어 마우스 왼쪽된 단추를 누르면 첫 번째 비트는 <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-206">For example, if the left mouse button is pressed, the first bit in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property is set.</span></span> <span data-ttu-id="cc544-207">지정된 된 키 상태에 대 한 테스트 하려면 비트 AND 연산자를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-207">You can use the bitwise AND operator to test for a given key state.</span></span>  
  
 <span data-ttu-id="cc544-208">다음 표에서 지정된 된 이벤트에 사용 되는 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-208">The following table lists the values that are used for a specified event.</span></span>  
  
|<span data-ttu-id="cc544-209">값</span><span class="sxs-lookup"><span data-stu-id="cc544-209">Value</span></span>|<span data-ttu-id="cc544-210">Key</span><span class="sxs-lookup"><span data-stu-id="cc544-210">Key</span></span>|  
|-----------|---------|  
|<span data-ttu-id="cc544-211">1 (비트 0)</span><span class="sxs-lookup"><span data-stu-id="cc544-211">1 (bit 0)</span></span>|<span data-ttu-id="cc544-212">마우스 왼쪽 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-212">The left mouse button.</span></span>|  
|<span data-ttu-id="cc544-213">2 (1 비트)</span><span class="sxs-lookup"><span data-stu-id="cc544-213">2 (bit 1)</span></span>|<span data-ttu-id="cc544-214">마우스 오른쪽 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-214">The right mouse button.</span></span>|  
|<span data-ttu-id="cc544-215">4 (비트 2)</span><span class="sxs-lookup"><span data-stu-id="cc544-215">4 (bit 2)</span></span>|<span data-ttu-id="cc544-216">Shift 키입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-216">The SHIFT key.</span></span>|  
|<span data-ttu-id="cc544-217">8 (비트 3)</span><span class="sxs-lookup"><span data-stu-id="cc544-217">8 (bit 3)</span></span>|<span data-ttu-id="cc544-218">CTRL 키입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-218">The CTRL key.</span></span>|  
|<span data-ttu-id="cc544-219">16 (비트 4)</span><span class="sxs-lookup"><span data-stu-id="cc544-219">16 (bit 4)</span></span>|<span data-ttu-id="cc544-220">마우스 가운데 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-220">The middle mouse button.</span></span>|  
|<span data-ttu-id="cc544-221">32 (5 비트)</span><span class="sxs-lookup"><span data-stu-id="cc544-221">32 (bit 5)</span></span>|<span data-ttu-id="cc544-222">Alt 키입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-222">The ALT key.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="cc544-223">다음 예제에서는 두 끌어서 놓기 작업 <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-223">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="cc544-224">예제에서는 호출은 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-224">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="cc544-225">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-225">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="cc544-226"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-226">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="cc544-227">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-227">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="cc544-228">이 예에서는 두 가정 커서 파일 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</span><span class="sxs-lookup"><span data-stu-id="cc544-228">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="cc544-229">사용자 지정 커서 사용 하는 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-229">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="cc544-230">에 설정 된 사용자 지정 커서는 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-230">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="cc544-231">키보드 상태에서 평가 됩니다는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-231">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="cc544-232">위치는 `ListBox` 삭제가 발생 중도 결정 됩니다는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-232">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="cc544-233">삭제할 데이터가 아닌 경우는 `String`, 하면 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-233">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc544-234">드롭다운 상태에 표시 되는 마지막으로,는 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-234">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="cc544-235">데이터를 오른쪽에 대 한 drop `ListBox` 에 따라 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 적절 한 위치에서 값이 추가 `ListBox`합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-235">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="cc544-236">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-236">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="cc544-237">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DragEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-237">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="cc544-238">참조는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-238">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc544-239">화면 좌표로 나타낸 마우스 포인터의 x좌표를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-239">Gets the x-coordinate of the mouse pointer, in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc544-240">픽셀 단위로 나타낸 마우스 포인터의 x좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-240">The x-coordinate of the mouse pointer in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc544-241">다음 예제에서는 두 끌어서 놓기 작업 <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-241">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="cc544-242">예제에서는 호출은 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-242">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="cc544-243">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-243">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="cc544-244"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-244">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="cc544-245">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-245">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="cc544-246">이 예에서는 두 가정 커서 파일 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</span><span class="sxs-lookup"><span data-stu-id="cc544-246">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="cc544-247">사용자 지정 커서 사용 하는 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-247">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="cc544-248">에 설정 된 사용자 지정 커서는 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-248">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="cc544-249">키보드 상태에서 평가 됩니다는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-249">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="cc544-250">위치는 `ListBox` 삭제가 발생 중도 결정 됩니다는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-250">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="cc544-251">삭제할 데이터가 아닌 경우는 `String`, 하면 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-251">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc544-252">드롭다운 상태에 표시 되는 마지막으로,는 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-252">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="cc544-253">데이터를 오른쪽에 대 한 drop `ListBox` 에 따라 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 적절 한 위치에서 값이 추가 `ListBox`합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-253">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="cc544-254">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-254">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="cc544-255">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DragEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-255">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="cc544-256">참조는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-256">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc544-257">화면 좌표로 나타낸 마우스 포인터의 y좌표를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-257">Gets the y-coordinate of the mouse pointer, in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc544-258">픽셀 단위로 나타낸 마우스 포인터의 y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc544-258">The y-coordinate of the mouse pointer in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc544-259">다음 예제에서는 두 끌어서 놓기 작업 <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-259">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="cc544-260">예제에서는 호출은 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-260">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="cc544-261">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-261">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="cc544-262"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-262">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="cc544-263">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-263">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="cc544-264">이 예에서는 두 가정 커서 파일 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</span><span class="sxs-lookup"><span data-stu-id="cc544-264">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="cc544-265">사용자 지정 커서 사용 하는 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-265">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="cc544-266">에 설정 된 사용자 지정 커서는 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-266">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="cc544-267">키보드 상태에서 평가 됩니다는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-267">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="cc544-268">위치는 `ListBox` 삭제가 발생 중도 결정 됩니다는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-268">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="cc544-269">삭제할 데이터가 아닌 경우는 `String`, 하면 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-269">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc544-270">드롭다운 상태에 표시 되는 마지막으로,는 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-270">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="cc544-271">데이터를 오른쪽에 대 한 drop `ListBox` 에 따라 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 적절 한 위치에서 값이 추가 `ListBox`합니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-271">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="cc544-272">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-272">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="cc544-273">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DragEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cc544-273">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="cc544-274">참조는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="cc544-274">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.X" />
      </Docs>
    </Member>
  </Members>
</Type>