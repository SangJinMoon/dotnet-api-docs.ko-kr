<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DragEventArgs.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac536617700af2104e254aac0c99fbca2f634f0d425.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36617700af2104e254aac0c99fbca2f634f0d425</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.DragEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph>, <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph>, or <ph id="ph3">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph>, <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph> 이벤트에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event occurs when the user completes a drag-and-drop operation by dragging an object over the control and then dropping it onto the control by releasing the mouse button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> 사용자 개체를 컨트롤 위로 끌어 놓아 다음 컨트롤로 마우스 단추를 해제 하 여 끌어서 놓기 작업을 완료 하면 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event occurs when the user moves the mouse pointer onto the control while dragging an object with the mouse.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> 이 이벤트는 개체를 마우스로 끄는 동안 마우스 포인터를 컨트롤을 이동할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event occurs when the user moves the mouse pointer over the control while dragging an object with the mouse.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 이벤트 마우스로 개체를 끄는 동안 마우스 포인터를 컨트롤 위로 이동할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> object specifies any data associated with this event; the current state of the SHIFT, CTRL, and ALT keys; the location of the mouse pointer; and the drag-and-drop effects allowed by the source and target of the drag event.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> 원본과 끌기 이벤트의 대상에서 허용 되는 끌어서 놓기 작업 및이 이벤트와 연결 된 모든 데이터가 SHIFT, CTRL 및 ALT 키의 현재 상태, 마우스 포인터의 위치를 지정 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>For information about the event model, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트 모델에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The following example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">다음 예제에서는 두 끌어서 놓기 작업 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">예제에서는 호출은 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 끌기 작업이 시작 될 때 메서드.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> 하는 동안 마우스 위치에서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 <ph id="ph2">`MouseDown`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The example assumes that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">이 예에서는 두 가정 커서 파일 <ph id="ph1">`3dwarro.cur`</ph> 및 <ph id="ph2">`3dwno.cur`</ph>, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">사용자 지정 커서 사용 하는 경우는 <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">에 설정 된 사용자 지정 커서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">키보드 상태에서 평가 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 오른쪽에 대 한 이벤트 처리기 <ph id="ph2">`ListBox`</ph>항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">위치는 <ph id="ph1">`ListBox`</ph> 삭제가 발생 중도 결정 됩니다는 <ph id="ph2">`DragOver`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">삭제할 데이터가 아닌 경우는 <ph id="ph1">`String`</ph>, 하면 <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">드롭다운 상태에 표시 되는 마지막으로,는 <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">데이터를 오른쪽에 대 한 drop <ph id="ph1">`ListBox`</ph> 에 따라 결정 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> 이벤트 처리기 및 <ph id="ph3">`String`</ph> 적절 한 위치에서 값이 추가 <ph id="ph4">`ListBox`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> class.</source>
          <target state="translated">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 전체 코드 예제에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The following example illustrates how <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are passed between the source and target of a drag-and-drop operation.</source>
          <target state="translated">다음 예제에서는 어떻게 <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> 원본 및 끌어서 놓기 작업의 대상 사이 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control is the source of the data, and the <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control is the target.</source>
          <target state="translated">이 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤은 데이터의 원본 및 <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> 컨트롤이 대상입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The example assumes that the <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control has been populated with a list of valid filenames.</source>
          <target state="translated">이 예에서는 가정 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤 유효한 파일 이름 목록으로 구성 되었습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>When the user drags one of the displayed filenames from the <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control onto the <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control, the file referenced in the filename is opened.</source>
          <target state="translated">끌면에서 표시 된 파일 이름 중 하나는 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤을 <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> 컨트롤, 파일 이름에서 참조 된 파일이 열립니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>The operation is initiated in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control's MouseDown event.</source>
          <target state="translated">에 작업을 시작할는 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤의 MouseDown 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.DragEnter&gt;</ph> event handler, the example uses the <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> method to verify that the data is in a format that the <ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control can display and then sets the <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> property to specify that data should be copied from the source control to the target control.</source>
          <target state="translated">에 <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.DragEnter&gt;</ph> 사용 하 여 이벤트 처리기는 예제는 <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> 메서드는 데이터 형식에서 인지 확인 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> 제어를 표시 하 고 다음 설정는 <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> 소스 제어에서 해당 데이터를 지정 하는 속성을 복사 해야 대상 제어 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.DragEventArgs">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control's DragDrop event handler uses the <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method to retrieve the filename to open.</source>
          <target state="translated">마지막으로 <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> 사용 하 여 컨트롤의 DragDrop 이벤트 처리기는 <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> 메서드를 열려는 파일 이름을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)">
          <source>The data associated with this event.</source>
          <target state="translated">이 이벤트와 관련된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)">
          <source>The current state of the SHIFT, CTRL, and ALT keys.</source>
          <target state="translated">Shift, Ctrl 및 Alt 키의 현재 상태입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)">
          <source>The x-coordinate of the mouse cursor in pixels.</source>
          <target state="translated">픽셀 단위로 나타낸 마우스 포인터의 x좌표입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)">
          <source>The y-coordinate of the mouse cursor in pixels.</source>
          <target state="translated">픽셀 단위로 나타낸 마우스 포인터의 y좌표입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>Gets which drag-and-drop operations are allowed by the originator (or source) of the drag event.</source>
          <target state="translated">끌기 이벤트의 작성기 또는 소스에서 허용하는 끌어서 놓기 작업을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>When a control initiates a drag-and-drop operation by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType&gt;</ph> method, it specifies the permissible effects of the operation.</source>
          <target state="translated">컨트롤을 호출 하 여 끌어서 놓기 작업을 시작 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType&gt;</ph> 메서드를 허용 되는 작업의 효과 지정 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>For example, when you drag a file from a source, if the file is read-only (or from a read-only storage medium such as a CD), the source will indicate that the file can be copied, but not transferred, to the target.</source>
          <target state="translated">예를 들어 파일이 읽기 전용인 경우 소스에서 파일을 끌 때 또는 (예: CD 읽기 전용 저장 매체에서) 소스 파일 복사 수는 있지만 대상으로 하지 전송 수는 없음을 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>Before attempting to perform an operation on the dragged data, you should examine this property to ensure that the operation is allowed.</source>
          <target state="translated">끌어온된 데이터에 대 한 작업을 수행 하려면 먼저이 작업은 허용을 위해이 속성을 검사 해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>The following example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">다음 예제에서는 두 끌어서 놓기 작업 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">예제에서는 호출은 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 끌기 작업이 시작 될 때 메서드.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> 하는 동안 마우스 위치에서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 <ph id="ph2">`MouseDown`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>The example assumes that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">이 예에서는 두 가정 커서 파일 <ph id="ph1">`3dwarro.cur`</ph> 및 <ph id="ph2">`3dwno.cur`</ph>, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">사용자 지정 커서 사용 하는 경우는 <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">에 설정 된 사용자 지정 커서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">키보드 상태에서 평가 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 오른쪽에 대 한 이벤트 처리기 <ph id="ph2">`ListBox`</ph>항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">위치는 <ph id="ph1">`ListBox`</ph> 삭제가 발생 중도 결정 됩니다는 <ph id="ph2">`DragOver`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">삭제할 데이터가 아닌 경우는 <ph id="ph1">`String`</ph>, 하면 <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">드롭다운 상태에 표시 되는 마지막으로,는 <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">데이터를 오른쪽에 대 한 drop <ph id="ph1">`ListBox`</ph> 에 따라 결정 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> 이벤트 처리기 및 <ph id="ph3">`String`</ph> 적절 한 위치에서 값이 추가 <ph id="ph4">`ListBox`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> class.</source>
          <target state="translated">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.AllowedEffect">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 전체 코드 예제에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IDataObject" /&gt;</ph> that contains the data associated with this event.</source>
          <target state="translated">이 이벤트와 관련된 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IDataObject" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>The data associated with this event.</source>
          <target state="translated">이 이벤트와 관련된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>In the body of your event handler, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> method to determine whether the data matches the format requirements of the control onto which the data is being dragged.</source>
          <target state="translated">이벤트 처리기의 본문에 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> 데이터는 데이터를 끄는 컨트롤의 형식 요구 사항 일치 하는지 여부를 결정 하는 메서드.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>You also can specify whether you want to attempt to convert the data to meet your format requirements.</source>
          <target state="translated">형식 요구 사항을 충족 하기 위해 데이터를 변환 하려고 것인지 여부를 지정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>If the dragged data meets your format requirements, use the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method to retrieve the data.</source>
          <target state="translated">형식 요구 사항을 충족 하는 끌어온된 데이터를 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> 메서드 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>The following example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">다음 예제에서는 두 끌어서 놓기 작업 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">예제에서는 호출은 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 끌기 작업이 시작 될 때 메서드.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> 하는 동안 마우스 위치에서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 <ph id="ph2">`MouseDown`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>The example assumes that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">이 예에서는 두 가정 커서 파일 <ph id="ph1">`3dwarro.cur`</ph> 및 <ph id="ph2">`3dwno.cur`</ph>, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">사용자 지정 커서 사용 하는 경우는 <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">에 설정 된 사용자 지정 커서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">키보드 상태에서 평가 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 오른쪽에 대 한 이벤트 처리기 <ph id="ph2">`ListBox`</ph>항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">위치는 <ph id="ph1">`ListBox`</ph> 삭제가 발생 중도 결정 됩니다는 <ph id="ph2">`DragOver`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">삭제할 데이터가 아닌 경우는 <ph id="ph1">`String`</ph>, 하면 <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">드롭다운 상태에 표시 되는 마지막으로,는 <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">데이터를 오른쪽에 대 한 drop <ph id="ph1">`ListBox`</ph> 에 따라 결정 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> 이벤트 처리기 및 <ph id="ph3">`String`</ph> 적절 한 위치에서 값이 추가 <ph id="ph4">`ListBox`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> class.</source>
          <target state="translated">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Data">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 전체 코드 예제에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>Gets or sets the target drop effect in a drag-and-drop operation.</source>
          <target state="translated">끌어서 놓기 작업에서 대상 놓기 결과를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>By default, the effect applied determines the mouse cursor for the target of a drag-and-drop operation.</source>
          <target state="translated">기본적으로 적용 되는 효과 끌어서 놓기 작업의 대상에 대 한 마우스 커서를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>This is useful to provide feedback to the user on the operation that will occur.</source>
          <target state="translated">이 발생 하는 작업에서 사용자에 게 피드백을 제공 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>For example, if you press the CTRL key when you drag a file from a source, specify <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType&gt;</ph> to indicate the target will try to perform a copy operation.</source>
          <target state="translated">소스에서 파일을 끌 때 CTRL 키를 누르면 지정 하는 예를 들어 <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType&gt;</ph> 를 나타내는 대상 복사 작업을 수행 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>To use custom cursors for a drag operation, see <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">끌기 작업에 대 한 사용자 지정 커서를 사용 하려면 참조 <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>The following example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">다음 예제에서는 두 끌어서 놓기 작업 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">예제에서는 호출은 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 끌기 작업이 시작 될 때 메서드.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> 하는 동안 마우스 위치에서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 <ph id="ph2">`MouseDown`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>The example assumes that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">이 예에서는 두 가정 커서 파일 <ph id="ph1">`3dwarro.cur`</ph> 및 <ph id="ph2">`3dwno.cur`</ph>, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">사용자 지정 커서 사용 하는 경우는 <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">에 설정 된 사용자 지정 커서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">키보드 상태에서 평가 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 오른쪽에 대 한 이벤트 처리기 <ph id="ph2">`ListBox`</ph>항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">위치는 <ph id="ph1">`ListBox`</ph> 삭제가 발생 중도 결정 됩니다는 <ph id="ph2">`DragOver`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">삭제할 데이터가 아닌 경우는 <ph id="ph1">`String`</ph>, 하면 <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">드롭다운 상태에 표시 되는 마지막으로,는 <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">데이터를 오른쪽에 대 한 drop <ph id="ph1">`ListBox`</ph> 에 따라 결정 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> 이벤트 처리기 및 <ph id="ph3">`String`</ph> 적절 한 위치에서 값이 추가 <ph id="ph4">`ListBox`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> class.</source>
          <target state="translated">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Effect">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 전체 코드 예제에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>Gets the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.</source>
          <target state="translated">마우스 단추의 상태뿐 아니라 Shift, Ctrl 및 Alt 키의 현재 상태를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The current state of the SHIFT, CTRL, and ALT keys and of the mouse buttons.</source>
          <target state="translated">Shift, Ctrl 및 Alt 키와 마우스 단추의 현재 상태입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>You can make the effect of a drag-and-drop operation to depend on the state of a particular key.</source>
          <target state="translated">특정 키의 상태에 따라 달라 지도록 끌어서 놓기 작업의 결과 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>For example, you may decide to copy or move data depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.</source>
          <target state="translated">예를 들어 복사 하거나 끌어서 놓기 작업 동안 CTRL 또는 SHIFT 키 누름에 따라 데이터를 이동 하려는 경우도 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The bits that are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.KeyState%2A&gt;</ph> property identify the keys or mouse buttons that were pressed during the operation.</source>
          <target state="translated">에 설정 된 비트는 <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.KeyState%2A&gt;</ph> 키 또는 마우스 단추를 누른 후 작업을 하는 동안 속성을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>For example, if the left mouse button is pressed, the first bit in the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.KeyState%2A&gt;</ph> property is set.</source>
          <target state="translated">예를 들어 마우스 왼쪽된 단추를 누르면 첫 번째 비트는 <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.KeyState%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>You can use the bitwise AND operator to test for a given key state.</source>
          <target state="translated">지정된 된 키 상태에 대 한 테스트 하려면 비트 AND 연산자를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The following table lists the values that are used for a specified event.</source>
          <target state="translated">다음 표에서 지정된 된 이벤트에 사용 되는 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>Key</source>
          <target state="translated">Key</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>1 (bit 0)</source>
          <target state="translated">1 (비트 0)</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The left mouse button.</source>
          <target state="translated">마우스 왼쪽 단추입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>2 (bit 1)</source>
          <target state="translated">2 (1 비트)</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The right mouse button.</source>
          <target state="translated">마우스 오른쪽 단추입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>4 (bit 2)</source>
          <target state="translated">4 (비트 2)</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The SHIFT key.</source>
          <target state="translated">Shift 키입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>8 (bit 3)</source>
          <target state="translated">8 (비트 3)</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The CTRL key.</source>
          <target state="translated">CTRL 키입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>16 (bit 4)</source>
          <target state="translated">16 (비트 4)</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The middle mouse button.</source>
          <target state="translated">마우스 가운데 단추입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>32 (bit 5)</source>
          <target state="translated">32 (5 비트)</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The ALT key.</source>
          <target state="translated">Alt 키입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The following example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">다음 예제에서는 두 끌어서 놓기 작업 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">예제에서는 호출은 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 끌기 작업이 시작 될 때 메서드.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> 하는 동안 마우스 위치에서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 <ph id="ph2">`MouseDown`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The example assumes that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">이 예에서는 두 가정 커서 파일 <ph id="ph1">`3dwarro.cur`</ph> 및 <ph id="ph2">`3dwno.cur`</ph>, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">사용자 지정 커서 사용 하는 경우는 <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">에 설정 된 사용자 지정 커서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">키보드 상태에서 평가 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 오른쪽에 대 한 이벤트 처리기 <ph id="ph2">`ListBox`</ph>항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">위치는 <ph id="ph1">`ListBox`</ph> 삭제가 발생 중도 결정 됩니다는 <ph id="ph2">`DragOver`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">삭제할 데이터가 아닌 경우는 <ph id="ph1">`String`</ph>, 하면 <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">드롭다운 상태에 표시 되는 마지막으로,는 <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">데이터를 오른쪽에 대 한 drop <ph id="ph1">`ListBox`</ph> 에 따라 결정 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> 이벤트 처리기 및 <ph id="ph3">`String`</ph> 적절 한 위치에서 값이 추가 <ph id="ph4">`ListBox`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> class.</source>
          <target state="translated">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.KeyState">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 전체 코드 예제에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>Gets the x-coordinate of the mouse pointer, in screen coordinates.</source>
          <target state="translated">화면 좌표로 나타낸 마우스 포인터의 x좌표를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>The x-coordinate of the mouse pointer in pixels.</source>
          <target state="translated">픽셀 단위로 나타낸 마우스 포인터의 x좌표입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>The following example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">다음 예제에서는 두 끌어서 놓기 작업 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">예제에서는 호출은 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 끌기 작업이 시작 될 때 메서드.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> 하는 동안 마우스 위치에서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 <ph id="ph2">`MouseDown`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>The example assumes that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">이 예에서는 두 가정 커서 파일 <ph id="ph1">`3dwarro.cur`</ph> 및 <ph id="ph2">`3dwno.cur`</ph>, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">사용자 지정 커서 사용 하는 경우는 <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">에 설정 된 사용자 지정 커서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">키보드 상태에서 평가 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 오른쪽에 대 한 이벤트 처리기 <ph id="ph2">`ListBox`</ph>항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">위치는 <ph id="ph1">`ListBox`</ph> 삭제가 발생 중도 결정 됩니다는 <ph id="ph2">`DragOver`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">삭제할 데이터가 아닌 경우는 <ph id="ph1">`String`</ph>, 하면 <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">드롭다운 상태에 표시 되는 마지막으로,는 <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">데이터를 오른쪽에 대 한 drop <ph id="ph1">`ListBox`</ph> 에 따라 결정 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> 이벤트 처리기 및 <ph id="ph3">`String`</ph> 적절 한 위치에서 값이 추가 <ph id="ph4">`ListBox`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> class.</source>
          <target state="translated">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.X">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 전체 코드 예제에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>Gets the y-coordinate of the mouse pointer, in screen coordinates.</source>
          <target state="translated">화면 좌표로 나타낸 마우스 포인터의 y좌표를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>The y-coordinate of the mouse pointer in pixels.</source>
          <target state="translated">픽셀 단위로 나타낸 마우스 포인터의 y좌표입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>The following example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">다음 예제에서는 두 끌어서 놓기 작업 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">예제에서는 호출은 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 끌기 작업이 시작 될 때 메서드.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> 하는 동안 마우스 위치에서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 <ph id="ph2">`MouseDown`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>The example assumes that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">이 예에서는 두 가정 커서 파일 <ph id="ph1">`3dwarro.cur`</ph> 및 <ph id="ph2">`3dwno.cur`</ph>, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">사용자 지정 커서 사용 하는 경우는 <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">에 설정 된 사용자 지정 커서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">키보드 상태에서 평가 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 오른쪽에 대 한 이벤트 처리기 <ph id="ph2">`ListBox`</ph>항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">위치는 <ph id="ph1">`ListBox`</ph> 삭제가 발생 중도 결정 됩니다는 <ph id="ph2">`DragOver`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">삭제할 데이터가 아닌 경우는 <ph id="ph1">`String`</ph>, 하면 <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">드롭다운 상태에 표시 되는 마지막으로,는 <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">데이터를 오른쪽에 대 한 drop <ph id="ph1">`ListBox`</ph> 에 따라 결정 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> 이벤트 처리기 및 <ph id="ph3">`String`</ph> 적절 한 위치에서 값이 추가 <ph id="ph4">`ListBox`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> class.</source>
          <target state="translated">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.DragEventArgs.Y">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 전체 코드 예제에 대 한 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>