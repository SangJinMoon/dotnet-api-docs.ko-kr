<Type Name="IDataGridViewEditingControl" FullName="System.Windows.Forms.IDataGridViewEditingControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dfa988300afd3b0a836c843dc7f090e8cde5752d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37568271" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataGridViewEditingControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataGridViewEditingControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataGridViewEditingControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataGridViewEditingControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataGridViewEditingControl" />
  <TypeSignature Language="F#" Value="type IDataGridViewEditingControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="851ff-101">
        <see cref="T:System.Windows.Forms.DataGridView" />의 셀 내에 호스팅되는 컨트롤의 일반적인 기능을 정의합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="851ff-101">Defines common functionality for controls that are hosted within cells of a <see cref="T:System.Windows.Forms.DataGridView" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851ff-102">이 인터페이스와 같은 컨트롤에 의해 구현 됩니다 <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> 및 <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>, 해당에서 호스팅되고 <xref:System.Windows.Forms.DataGridView> 같은 셀 <xref:System.Windows.Forms.DataGridViewComboBoxCell> 및 <xref:System.Windows.Forms.DataGridViewTextBoxCell>편집 모드에 있을 때.</span><span class="sxs-lookup"><span data-stu-id="851ff-102">This interface is implemented by controls, such as <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> and <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>, that are hosted by corresponding <xref:System.Windows.Forms.DataGridView> cells, such as <xref:System.Windows.Forms.DataGridViewComboBoxCell> and <xref:System.Windows.Forms.DataGridViewTextBoxCell>, when they are in edit mode.</span></span>  
  
 <span data-ttu-id="851ff-103">셀 편집 컨트롤 집합을 호스트할 수 있는 형식은 해당 <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> 속성을는 <xref:System.Type> 컨트롤 편집을 나타내는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-103">Cell types that can host editing controls set their <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> property to a <xref:System.Type> representing the editing control type.</span></span> <span data-ttu-id="851ff-104">셀이 편집 모드로 전환 하는 경우 다음 단계를 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-104">When the cell enters edit mode, the following steps are performed:</span></span>  
  
1.  <span data-ttu-id="851ff-105"><xref:System.Windows.Forms.DataGridView> 컨트롤의 편집 컨트롤 형식 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-105">The <xref:System.Windows.Forms.DataGridView> control creates an instance of the editing control type.</span></span>  
  
2.  <span data-ttu-id="851ff-106">합니다 <xref:System.Windows.Forms.DataGridView> 셀을 호출 하는 컨트롤 <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="851ff-106">The <xref:System.Windows.Forms.DataGridView> control calls the cell <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> method.</span></span> <span data-ttu-id="851ff-107">편집 컨트롤에 셀 값을 전송 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-107">You can override this method to transfer the cell value to the editing control.</span></span>  
  
3.  <span data-ttu-id="851ff-108">합니다 <xref:System.Windows.Forms.DataGridView> 편집 컨트롤을 호출 하는 컨트롤 <xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A> 메서드와 셀의 현재 스타일 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-108">The <xref:System.Windows.Forms.DataGridView> control calls the editing control <xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A> method and passes in the cell's current style.</span></span> <span data-ttu-id="851ff-109">셀의 모양을 일치 하도록 편집 컨트롤의 모양을 초기화 하려면이 메서드를 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-109">You can implement this method to initialize the appearance of the editing control so that it matches the appearance of the cell.</span></span>  
  
4.  <span data-ttu-id="851ff-110">합니다 <xref:System.Windows.Forms.DataGridView> 편집 컨트롤을 호출 하는 컨트롤 <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="851ff-110">The <xref:System.Windows.Forms.DataGridView> control calls the editing control <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> method.</span></span> <span data-ttu-id="851ff-111">편집 컨트롤에 컨트롤 값을 선택 하면 같은 최종적인 조정을이 메서드를 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-111">You can implement this method to make final adjustments to the editing control, such as selecting the control value.</span></span>  
  
 <span data-ttu-id="851ff-112">구현에 대 한 자세한 내용은 <xref:System.Windows.Forms.IDataGridViewEditingControl>를 참조 하세요 [방법: Windows Forms DataGridView 셀에서 컨트롤을 호스트](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-112">For more information about implementing <xref:System.Windows.Forms.IDataGridViewEditingControl>, see [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 <span data-ttu-id="851ff-113">와 같은 형식은 셀 <xref:System.Windows.Forms.DataGridViewCheckBoxCell> 호스팅하는 편집 컨트롤 구현 하지 않고 값을 지정 하기 위한 사용자 인터페이스 (UI)를 제공 하는 <xref:System.Windows.Forms.IDataGridViewEditingCell> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-113">Cell types such as <xref:System.Windows.Forms.DataGridViewCheckBoxCell> that provide a user interface (UI) for specifying values without hosting an editing control implement the <xref:System.Windows.Forms.IDataGridViewEditingCell> interface.</span></span> <span data-ttu-id="851ff-114">이 경우 UI 셀이 편집 모드에 있는지 여부에 관계 없이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-114">The UI in this case is displayed regardless of whether the cell is in edit mode.</span></span>  
  
 <span data-ttu-id="851ff-115">등의 다른 셀 형식은 <xref:System.Windows.Forms.DataGridViewButtonCell>, UI를 제공 하지만 사용자가 지정한 값을 저장 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-115">Other cell types, such as <xref:System.Windows.Forms.DataGridViewButtonCell>, provide a UI but do not store user-specified values.</span></span> <span data-ttu-id="851ff-116">이 경우 셀 유형을 구현 하지 않는 <xref:System.Windows.Forms.IDataGridViewEditingCell> 또는 편집 컨트롤을 호스트 합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-116">In this case, the cell type does not implement <xref:System.Windows.Forms.IDataGridViewEditingCell> or host an editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="851ff-117">다음 코드 예제에서 파생 되는이 인터페이스의 구현을 제공 <xref:System.Windows.Forms.DateTimePicker>합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-117">The following code example provides an implementation of this interface that derives from <xref:System.Windows.Forms.DateTimePicker>.</span></span> <span data-ttu-id="851ff-118">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 셀에서 컨트롤을 호스트](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-118">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#300)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#300)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.IDataGridViewEditingCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxCell" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
  </Docs>
  <Members>
    <Member MemberName="ApplyCellStyleToEditingControl">
      <MemberSignature Language="C#" Value="public void ApplyCellStyleToEditingControl (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCellStyleToEditingControl(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyCellStyleToEditingControl(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberSignature Language="F#" Value="abstract member ApplyCellStyleToEditingControl : System.Windows.Forms.DataGridViewCellStyle -&gt; unit" Usage="iDataGridViewEditingControl.ApplyCellStyleToEditingControl dataGridViewCellStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle">
          <span data-ttu-id="851ff-119">UI의 모델로 사용할 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-119">The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> to use as the model for the UI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="851ff-120">컨트롤의 UI(사용자 인터페이스)를 지정된 셀 스타일에 맞게 변경합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-120">Changes the control's user interface (UI) to be consistent with the specified cell style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851ff-121">일반적으로이 메서드를 구현와 같은 글꼴, 배경색 및 전경색을 편집 컨트롤에 대 한 UI 속성에서 해당 속성의 값에 설정 됩니다는 `dataGridViewCellStyle`를 호스트 하는 셀 스타일을 되는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-121">Typically, an implementation of this method will set UI properties for the editing control, such as font, background color, and foreground color, to the values of corresponding properties in the `dataGridViewCellStyle`, which is the style used for the cell hosting the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="851ff-122">다음 코드 예제에는이 멤버의 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-122">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="851ff-123">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 셀에서 컨트롤을 호스트](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-123">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#303)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlDataGridView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridView EditingControlDataGridView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridView EditingControlDataGridView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlDataGridView As DataGridView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridView ^ EditingControlDataGridView { System::Windows::Forms::DataGridView ^ get(); void set(System::Windows::Forms::DataGridView ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlDataGridView : System.Windows.Forms.DataGridView with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="851ff-124">셀이 들어 있는 <see cref="T:System.Windows.Forms.DataGridView" />를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-124">Gets or sets the <see cref="T:System.Windows.Forms.DataGridView" /> that contains the cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="851ff-125">편집 중인 <see cref="T:System.Windows.Forms.DataGridView" />이 들어 있는 <see cref="T:System.Windows.Forms.DataGridViewCell" />이거나, 연결된 <see cref="T:System.Windows.Forms.DataGridView" />가 없을 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-125">The <see cref="T:System.Windows.Forms.DataGridView" /> that contains the <see cref="T:System.Windows.Forms.DataGridViewCell" /> that is being edited; <see langword="null" /> if there is no associated <see cref="T:System.Windows.Forms.DataGridView" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object EditingControlFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingControlFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditingControlFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlFormattedValue : obj with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="851ff-126">편집기에서 수정할 셀의 형식이 지정된 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-126">Gets or sets the formatted value of the cell being modified by the editor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="851ff-127">형식이 지정된 셀 값을 나타내는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-127">An <see cref="T:System.Object" /> that represents the formatted value of the cell.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851ff-128">형식화 된 값을 컨트롤의 사용자 인터페이스에 표시 되는 값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-128">The formatted value represents the value as it is displayed in the control's user interface.</span></span> <span data-ttu-id="851ff-129">형식화 된 값을 컨트롤에 포함 된 실제 값에서 절대 값 및 데이터 형식과 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-129">The formatted value may be different in absolute value and even data type from the actual value contained in the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="851ff-130">다음 코드 예제에는이 멤버의 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-130">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="851ff-131">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 셀에서 컨트롤을 호스트](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-131">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#301)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#301)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlRowIndex">
      <MemberSignature Language="C#" Value="public int EditingControlRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditingControlRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditingControlRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlRowIndex : int with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="851ff-132">호스팅하는 셀의 부모 행 인덱스를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-132">Gets or sets the index of the hosting cell's parent row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="851ff-133">셀이 들어 있는 행의 인덱스이거나, 부모 행이 없으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-133">The index of the row that contains the cell, or –1 if there is no parent row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851ff-134">합니다 <xref:System.Windows.Forms.IDataGridViewEditingControl> 인터페이스는 해당 정의 하지 않습니다 `ColumnIndex` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-134">The <xref:System.Windows.Forms.IDataGridViewEditingControl> interface does not define a corresponding `ColumnIndex` property.</span></span> <span data-ttu-id="851ff-135">사용할 수는 <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A> 부모를 검색 하는 속성 <xref:System.Windows.Forms.DataGridView> 컨트롤을 사용 하 여는 <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType> 활성화 된 셀의 행 및 열 인덱스를 확인 하는 속성.</span><span class="sxs-lookup"><span data-stu-id="851ff-135">You can use the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A> property to retrieve the parent <xref:System.Windows.Forms.DataGridView> control and use the <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType> property to determine the row and column indexes of the active cell.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlValueChanged">
      <MemberSignature Language="C#" Value="public bool EditingControlValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingControlValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditingControlValueChanged { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlValueChanged : bool with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="851ff-136">편집 컨트롤의 값이 호스팅하는 셀의 값과 다른지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-136">Gets or sets a value indicating whether the value of the editing control differs from the value of the hosting cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="851ff-137">컨트롤의 값이 셀 값과 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-137">
              <see langword="true" /> if the value of the control differs from the cell value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851ff-138">합니다 <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A> 속성이 `true` 호스팅하는 셀의 상태가 변경 되 고 해당 사용자 인터페이스 (UI) 값에서이 변경 내용을 반영 하도록 업데이트 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-138">The <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A> property is set to `true` to indicate that the hosting cell's state has changed and its user interface (UI) needs to be updated to reflect this change in value.</span></span> <span data-ttu-id="851ff-139">소유 하는 셀 이나 테이블에이 속성을 다시 설정 됩니다 `false` 업데이트 후 합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-139">The owning cell or table will reset this property to `false` after an update.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="851ff-140">
            <para>반환 <see langword="true" /> 이 속성의 구현에서 자동으로 바뀌지 않으면 표시 된 값입니다. 알려야 값 편집 컨트롤에서 변경 되 면 합니다 <see cref="T:System.Windows.Forms.DataGridView" /> 전달 하 여 변경 <see langword="true" /> 에 <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> 메서드.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-140">
              <para>Returning <see langword="true" /> in your implementation of this property does not automatically change the displayed value. When the value changes in the editing control, you must notify the <see cref="T:System.Windows.Forms.DataGridView" /> of the change by passing <see langword="true" /> to the <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlWantsInputKey">
      <MemberSignature Language="C#" Value="public bool EditingControlWantsInputKey (System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EditingControlWantsInputKey(valuetype System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditingControlWantsInputKey (keyData As Keys, dataGridViewWantsInputKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EditingControlWantsInputKey(System::Windows::Forms::Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="F#" Value="abstract member EditingControlWantsInputKey : System.Windows.Forms.Keys * bool -&gt; bool" Usage="iDataGridViewEditingControl.EditingControlWantsInputKey (keyData, dataGridViewWantsInputKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="dataGridViewWantsInputKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="851ff-141">누른 키를 나타내는 <see cref="T:System.Windows.Forms.Keys" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-141">A <see cref="T:System.Windows.Forms.Keys" /> that represents the key that was pressed.</span>
          </span>
        </param>
        <param name="dataGridViewWantsInputKey">
          <span data-ttu-id="851ff-142">
            <see cref="T:System.Windows.Forms.DataGridView" />에서 <c>keyData</c>의 <see cref="T:System.Windows.Forms.Keys" />를 처리하려는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-142">
              <see langword="true" /> when the <see cref="T:System.Windows.Forms.DataGridView" /> wants to process the <see cref="T:System.Windows.Forms.Keys" /> in <c>keyData</c>; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="851ff-143">지정된 키가 편집 컨트롤에서 처리해야 하는 일반 입력 키인지 또는 <see cref="T:System.Windows.Forms.DataGridView" />에서 처리해야 하는 특수 키인지 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-143">Determines whether the specified key is a regular input key that the editing control should process or a special key that the <see cref="T:System.Windows.Forms.DataGridView" /> should process.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="851ff-144">지정된 키가 편집 컨트롤에서 처리되어야 하는 일반 입력 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-144">
              <see langword="true" /> if the specified key is a regular input key that should be handled by the editing control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851ff-145">편집 컨트롤을 컨트롤에 의해 입력된 키를 처리할지를 확인 하려면이 메서드를 구현 하 고 키를 입력 하 여 처리 되어야 하는 <xref:System.Windows.Forms.DataGridView>합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-145">An editing control implements this method to determine which input keys should be processed by the control, and which input keys should be processed by the <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
 <span data-ttu-id="851ff-146">합니다 <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> 메서드를 호출 합니다 <xref:System.Windows.Forms.DataGridView>합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-146">The <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> method is called by the <xref:System.Windows.Forms.DataGridView>.</span></span> <span data-ttu-id="851ff-147">합니다 <xref:System.Windows.Forms.DataGridView> 전달 `true` 에 대 한 `dataGridViewWantsInputKey` 처리할 수 있으면는 `keyData`합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-147">The <xref:System.Windows.Forms.DataGridView> will pass in `true` for `dataGridViewWantsInputKey` when it can process the `keyData`.</span></span> <span data-ttu-id="851ff-148">편집 컨트롤 수 하는 경우는 <xref:System.Windows.Forms.DataGridView> 처리는 `keyData`, <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> 반환할지 `false` 때 `dataGridViewWantsInputKey` 는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-148">If the editing control can let the <xref:System.Windows.Forms.DataGridView> handle the `keyData`, <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> should return `false` when `dataGridViewWantsInputKey` is `true`.</span></span> <span data-ttu-id="851ff-149">다른 구현과 <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> 무시 될 수 있습니다를 `dataGridViewWantsInputKey` 의 값 `true` 하 고 처리를 `keyData` 편집 컨트롤에서.</span><span class="sxs-lookup"><span data-stu-id="851ff-149">Other implementations of <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> may ignore a `dataGridViewWantsInputKey` value of `true` and handle the `keyData` in the editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="851ff-150">다음 코드 예제에는이 멤버의 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-150">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="851ff-151">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 셀에서 컨트롤을 호스트](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-151">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#305)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#305)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingPanelCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Cursor EditingPanelCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor EditingPanelCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingPanelCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Cursor ^ EditingPanelCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingPanelCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="851ff-152">마우스 포인터가 <see cref="P:System.Windows.Forms.DataGridView.EditingPanel" /> 위에 있지만 편집 컨트롤의 위에 있지 않을 때 사용되는 커서를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-152">Gets the cursor used when the mouse pointer is over the <see cref="P:System.Windows.Forms.DataGridView.EditingPanel" /> but not over the editing control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="851ff-153">편집 패널에 대해 사용되는 마우스 포인터를 나타내는 <see cref="T:System.Windows.Forms.Cursor" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-153">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the mouse pointer used for the editing panel.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851ff-154">편집 패널은는 <xref:System.Windows.Forms.Panel> 는 편집 컨트롤을 호스팅하는 경우는 <xref:System.Windows.Forms.DataGridView> 컨트롤은 편집 모드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-154">The editing panel is the <xref:System.Windows.Forms.Panel> that hosts the editing control when the <xref:System.Windows.Forms.DataGridView> control is in edit mode.</span></span> <span data-ttu-id="851ff-155">실제 편집 컨트롤이 편집 패널의 전체 영역을 다루지 않습니다 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-155">The actual editing control may not cover the entire area of the editing panel.</span></span> <span data-ttu-id="851ff-156">이 경우에 <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A> 구현은 마우스 포인터가 아니라 컨트롤 위 패널 위에 있을 때 사용할 커서를 반환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-156">In this case, the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A> implementation should return the cursor to use when the mouse pointer is over the panel but not over the control.</span></span> <span data-ttu-id="851ff-157">일반적으로 컨트롤을 사용 하는 같은 커서를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-157">Typically, you will want to return the same cursor that the control uses.</span></span> <span data-ttu-id="851ff-158">포인터가 컨트롤 위에 있을 때 나타나는 커서를 변경 하려는 경우 설정 해야 합니다 <xref:System.Windows.Forms.Control.Cursor%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-158">If you want to change the cursor that appears when the pointer is over the control, you must set the <xref:System.Windows.Forms.Control.Cursor%2A> property.</span></span> <span data-ttu-id="851ff-159">생성자에서이 설정할 수 있습니다 합니다 <xref:System.Windows.Forms.IDataGridViewEditingControl> 구현 하거나에서 설정할 수는 <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-159">You can set this in the constructor of the <xref:System.Windows.Forms.IDataGridViewEditingControl> implementation, or you can set it in the <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="851ff-160">다음 코드 예제에는이 멤버의 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-160">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="851ff-161">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 셀에서 컨트롤을 호스트](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-161">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#311)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#311)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.Panel" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetEditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditingControlFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingControlFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditingControlFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditingControlFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="abstract member GetEditingControlFormattedValue : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="iDataGridViewEditingControl.GetEditingControlFormattedValue context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="851ff-162">데이터에 필요한 컨텍스트를 지정하는 <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-162">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> values that specifies the context in which the data is needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="851ff-163">서식이 지정된 셀 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-163">Retrieves the formatted value of the cell.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="851ff-164">셀 내용에 대한 서식이 지정된 버전을 나타내는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-164">An <see cref="T:System.Object" /> that represents the formatted version of the cell contents.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851ff-165">형식화 된 값을 컨트롤의 사용자 인터페이스에 표시 되는 값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-165">The formatted value represents the value as it is displayed in the control's user interface.</span></span> <span data-ttu-id="851ff-166">형식화 된 값을 컨트롤에 포함 된 실제 값에서 절대 값 및 데이터 형식과 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-166">The formatted value may be different in absolute value and even data type from the actual value contained in the control.</span></span>  
  
 <span data-ttu-id="851ff-167">컨트롤의 서식이 지정 된 값을 설정 하려면 사용 된 <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-167">To set the formatted value of the control, use the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="851ff-168">
            <para>이 메서드의 구현에서 반환 값을 변경 표시 된 값이 자동으로 변경 되지 않습니다. 알려야 값 편집 컨트롤에서 변경 되 면 합니다 <see cref="T:System.Windows.Forms.DataGridView" /> 전달 하 여 변경 <see langword="true" /> 에 <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> 메서드.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-168">
              <para>Changing the return value in your implementation of this method does not automatically change the displayed value. When the value changes in the editing control, you must notify the <see cref="T:System.Windows.Forms.DataGridView" /> of the change by passing <see langword="true" /> to the <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingControlForEdit">
      <MemberSignature Language="C#" Value="public void PrepareEditingControlForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingControlForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrepareEditingControlForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrepareEditingControlForEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member PrepareEditingControlForEdit : bool -&gt; unit" Usage="iDataGridViewEditingControl.PrepareEditingControlForEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll">
          <span data-ttu-id="851ff-169">셀의 내용을 모두 선택하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-169">
              <see langword="true" /> to select all of the cell's content; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="851ff-170">현재 선택한 셀을 편집할 수 있도록 준비합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-170">Prepares the currently selected cell for editing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851ff-171">이 메서드의 용도 편집에 대 한 컨트롤 및 해당 콘텐츠를 준비 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-171">The purpose of this method is to prepare the control and its contents for editing.</span></span> <span data-ttu-id="851ff-172">예를 들어, 다음 내용 끝에 삽입 지점을 콘텐츠를 정렬 하는 방법을 변경 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-172">For example, you might want to put the insertion point at the end of the contents, or change how the contents are aligned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="RepositionEditingControlOnValueChange">
      <MemberSignature Language="C#" Value="public bool RepositionEditingControlOnValueChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RepositionEditingControlOnValueChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RepositionEditingControlOnValueChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RepositionEditingControlOnValueChange { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RepositionEditingControlOnValueChange : bool" Usage="System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="851ff-173">값이 변경될 때마다 셀 내용의 위치를 변경해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-173">Gets or sets a value indicating whether the cell contents need to be repositioned whenever the value changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="851ff-174">내용의 위치를 변경해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="851ff-174">
              <see langword="true" /> if the contents need to be repositioned; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851ff-175">상황에 따라 셀 내용을 위치 값이 변경 되는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-175">Some situations require that cell contents reposition when the value changes.</span></span> <span data-ttu-id="851ff-176">예를 들어 셀 내용 셀에 텍스트를 배치 하 고 내용을 커질수록 위치를 변경 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="851ff-176">For example, cell contents may need to reposition when a cell wraps text and the contents become larger.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>