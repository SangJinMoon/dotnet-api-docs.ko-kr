<Type Name="Form" FullName="System.Windows.Forms.Form">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="48bc560d7c6076cc9e6a5af0b2f178fcc73ae87b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39979926" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Form : System.Windows.Forms.ContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Form extends System.Windows.Forms.ContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Form" />
  <TypeSignature Language="VB.NET" Value="Public Class Form&#xA;Inherits ContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Form : System::Windows::Forms::ContainerControl" />
  <TypeSignature Language="F#" Value="type Form = class&#xA;    inherit ContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultEvent("Load")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FormDocumentDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DesignerCategory("Form")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.InitializationEvent("Load")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms.Control.TopLevel")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FormDocumentDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FormDocumentDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8bcbb-101">응용 프로그램의 사용자 인터페이스를 구성하는 창 또는 대화 상자를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8bcbb-101">Represents a window or dialog box that makes up an application's user interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-102"><xref:System.Windows.Forms.Form> 은 응용 프로그램에서 표시 하는 모든 창으로 표현한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-102">A <xref:System.Windows.Forms.Form> is a representation of any window displayed in your application.</span></span> <span data-ttu-id="8bcbb-103"><xref:System.Windows.Forms.Form> 클래스는 표준, 경계, 도구 및 부동 창을 만드는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-103">The <xref:System.Windows.Forms.Form> class can be used to create standard, tool, borderless, and floating windows.</span></span> <span data-ttu-id="8bcbb-104">사용할 수도 있습니다는 <xref:System.Windows.Forms.Form> 클래스 대화 상자와 같은 모달 창을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-104">You can also use the <xref:System.Windows.Forms.Form> class to create modal windows such as a dialog box.</span></span> <span data-ttu-id="8bcbb-105">특별 한 종류 (MDI) 다중 문서 인터페이스 폼, 폼의 MDI 자식 폼을 호출 하는 다른 폼을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-105">A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms.</span></span> <span data-ttu-id="8bcbb-106">설정 하 여 MDI 폼 만들어집니다 합니다 <xref:System.Windows.Forms.Form.IsMdiContainer%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-106">An MDI form is created by setting the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to `true`.</span></span> <span data-ttu-id="8bcbb-107">MDI 자식 폼을 설정 하 여 만든는 <xref:System.Windows.Forms.Form.MdiParent%2A> 자식 폼을 포함 하는 MDI 부모 폼에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-107">MDI child forms are created by setting the <xref:System.Windows.Forms.Form.MdiParent%2A> property to the MDI parent form that will contain the child form.</span></span>  
  
 <span data-ttu-id="8bcbb-108">사용할 수 있는 속성을 사용 하 여 <xref:System.Windows.Forms.Form> 클래스를 만들면 창 또는 대화 상자의 모양, 크기, 색 및 창 관리 기능을 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-108">Using the properties available in the <xref:System.Windows.Forms.Form> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating.</span></span> <span data-ttu-id="8bcbb-109"><xref:System.Windows.Forms.Control.Text%2A> 속성을 사용 하면 제목 표시줄에서 창의 캡션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-109">The <xref:System.Windows.Forms.Control.Text%2A> property allows you to specify the caption of the window in the title bar.</span></span> <span data-ttu-id="8bcbb-110">합니다 <xref:System.Windows.Forms.Form.Size%2A> 고 <xref:System.Windows.Forms.Form.DesktopLocation%2A> 속성을 사용 하면 표시 되는 크기와 창의 위치를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-110">The <xref:System.Windows.Forms.Form.Size%2A> and <xref:System.Windows.Forms.Form.DesktopLocation%2A> properties allow you to define the size and position of the window when it is displayed.</span></span> <span data-ttu-id="8bcbb-111">사용할 수는 <xref:System.Windows.Forms.Control.ForeColor%2A> 양식의 모든 컨트롤의 기본 전경색을 변경 하려면 색 속성에 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-111">You can use the <xref:System.Windows.Forms.Control.ForeColor%2A> color property to change the default foreground color of all controls placed on the form.</span></span> <span data-ttu-id="8bcbb-112">합니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, 및 <xref:System.Windows.Forms.Form.MaximizeBox%2A> 속성을 사용 하면 컨트롤을 폼 수 수 최소화, 최대화 또는 런타임 시 크기를 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-112">The <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties allow you to control whether the form can be minimized, maximized, or resized at run time.</span></span>  
  
 <span data-ttu-id="8bcbb-113">속성 외에 폼을 조작 하는 클래스의 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-113">In addition to properties, you can use the methods of the class to manipulate a form.</span></span> <span data-ttu-id="8bcbb-114">예를 들어 사용할 수 있습니다는 <xref:System.Windows.Forms.Form.ShowDialog%2A> 폼을 모달 대화 상자로 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-114">For example, you can use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to show a form as a modal dialog box.</span></span> <span data-ttu-id="8bcbb-115">사용할 수는 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> 데스크톱에서 폼을 배치 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-115">You can use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method to position the form on the desktop.</span></span>  
  
 <span data-ttu-id="8bcbb-116">이벤트는 <xref:System.Windows.Forms.Form> 클래스를 사용 하면 폼에서 수행 된 작업으로 응답 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-116">The events of the <xref:System.Windows.Forms.Form> class allow you to respond to actions performed on the form.</span></span> <span data-ttu-id="8bcbb-117">사용할 수는 <xref:System.Windows.Forms.Form.Activated> 폼이 활성화 되 면 폼의 컨트롤에 표시 되는 데이터를 업데이트 하는 등 작업을 수행 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-117">You can use the <xref:System.Windows.Forms.Form.Activated> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.</span></span>  
  
 <span data-ttu-id="8bcbb-118">라는 메서드를 배치 하 여 응용 프로그램에서 폼 시작 클래스로 사용할 수 `Main` 클래스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-118">You can use a form as the starting class in your application by placing a method called `Main` in the class.</span></span> <span data-ttu-id="8bcbb-119">에 `Main` 메서드 만들기 및 폼을 표시 하는 코드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-119">In the `Main` method add code to create and show the form.</span></span> <span data-ttu-id="8bcbb-120">추가 해야 합니다 `STAThread` 특성을 `Main` 폼을 실행 하기 위해 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-120">You will also need to add the `STAThread` attribute to the `Main` method in order for the form to run.</span></span> <span data-ttu-id="8bcbb-121">시작 폼을 닫으면 응용 프로그램이 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-121">When the starting form is closed, the application is also closed.</span></span>  
  
 <span data-ttu-id="8bcbb-122">설정 하는 경우를 <xref:System.Windows.Forms.Control.Enabled%2A> 속성을 `false` 하기 전에 <xref:System.Windows.Forms.Form> 표시 됩니다 (설정 예를 들어 <xref:System.Windows.Forms.Control.Enabled%2A> false로 [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)] 디자이너), 최소화, 최대화, 닫기 및 시스템 단추를 계속 사용 되도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-122">If you set the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` before the <xref:System.Windows.Forms.Form> is visible (for example, setting <xref:System.Windows.Forms.Control.Enabled%2A> to false in the [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)] designer), the minimize, maximize, close, and system buttons remain enabled.</span></span> <span data-ttu-id="8bcbb-123">설정 하는 경우 <xref:System.Windows.Forms.Control.Enabled%2A> 하 `false` 후는 <xref:System.Windows.Forms.Form> (예를 들어 부하 이벤트가 발생할 때)을 표시 단추가 비활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-123">If you set <xref:System.Windows.Forms.Control.Enabled%2A> to `false` after the <xref:System.Windows.Forms.Form> is visible (for example, when the Load event occurs), the buttons are disabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-124">다음 코드 예제에서는의 새 인스턴스를 만듭니다는 <xref:System.Windows.Forms.Form> 호출을 <xref:System.Windows.Forms.Form.ShowDialog%2A> 폼을 대화 상자로 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-124">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="8bcbb-125">예제에서는 합니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, 및 <xref:System.Windows.Forms.Form.StartPosition%2A> 대화 상자에 모양 및 폼의 기능을 변경 하려면 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-125">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="8bcbb-126">또한이 예제에서는 합니다 <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> 양식의 메서드의 <xref:System.Windows.Forms.Control.Controls%2A> 추가할 두 컬렉션 <xref:System.Windows.Forms.Button> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-126">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="8bcbb-127">이 예제에서는 사용 된 <xref:System.Windows.Forms.Form.HelpButton%2A> 속성 대화 상자 캡션 표시줄에 도움말 단추를 표시 하려면.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-127">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Form ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Form();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-128">
            <see cref="T:System.Windows.Forms.Form" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-128">Initializes a new instance of the <see cref="T:System.Windows.Forms.Form" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-129">기본 폼의 크기가 300 픽셀 높이 및 너비가 300 픽셀입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-129">The default size of a form is 300 pixels in height and 300 pixels in width.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-130">다음 코드 예제에서는의 새 인스턴스를 만듭니다는 <xref:System.Windows.Forms.Form> 호출을 <xref:System.Windows.Forms.Form.ShowDialog%2A> 폼을 대화 상자로 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-130">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="8bcbb-131">예제에서는 합니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, 및 <xref:System.Windows.Forms.Form.StartPosition%2A> 대화 상자에 모양 및 폼의 기능을 변경 하려면 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-131">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="8bcbb-132">또한 사용 하 여 설정 합니다 <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> 양식의 메서드 <xref:System.Windows.Forms.Control.Controls%2A> 추가할 두 개의 컬렉션 <xref:System.Windows.Forms.Button> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-132">The example also sets uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="8bcbb-133">이 예제에서는 사용 된 <xref:System.Windows.Forms.Form.HelpButton%2A> 속성 대화 상자 캡션 표시줄에 도움말 단추를 표시 하려면.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-133">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IButtonControl AcceptButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IButtonControl AcceptButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AcceptButton" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptButton As IButtonControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IButtonControl ^ AcceptButton { System::Windows::Forms::IButtonControl ^ get(); void set(System::Windows::Forms::IButtonControl ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptButton : System.Windows.Forms.IButtonControl with get, set" Usage="System.Windows.Forms.Form.AcceptButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IButtonControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-134">사용자가 Enter 키를 누를 때 클릭되는 폼의 단추를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-134">Gets or sets the button on the form that is clicked when the user presses the ENTER key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-135">폼의 적용 단추로 사용할 단추를 나타내는 <see cref="T:System.Windows.Forms.IButtonControl" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-135">An <see cref="T:System.Windows.Forms.IButtonControl" /> that represents the button to use as the accept button for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-136">이 속성을 사용 하면 사용자가 응용 프로그램에서 ENTER 키를 누를 때 발생 하는 기본 동작을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-136">This property enables you to designate a default action to occur when the user presses the ENTER key in your application.</span></span> <span data-ttu-id="8bcbb-137">이 속성에 할당 된 단추 해야는 <xref:System.Windows.Forms.IButtonControl> 되거나 현재 폼에는 현재 폼에 있는 컨테이너 내에 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-137">The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.</span></span>  
  
 <span data-ttu-id="8bcbb-138">사용자가 수동으로 마우스로 수락 단추를 클릭 하지 않고 완료 되 면 ENTER 키를 누르기만 하 여 간단한 폼을 신속 하 게 탐색할 수 있도록 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-138">You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.</span></span>  
  
 <span data-ttu-id="8bcbb-139">폼에서 현재 선택한 컨트롤 ENTER 키를 가로채 고 처리 하는 경우 accept 단추가 활성화 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-139">The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it.</span></span> <span data-ttu-id="8bcbb-140">예를 들어, 여러 줄 텍스트 상자 컨트롤을 누르는 컨트롤에서 줄 바꿈 문자를 삽입 하려면 선택 하면 ENTER 키를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-140">For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-141">다음 코드 예제에서는의 새 인스턴스를 만듭니다는 <xref:System.Windows.Forms.Form> 호출을 <xref:System.Windows.Forms.Form.ShowDialog%2A> 폼을 대화 상자로 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-141">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="8bcbb-142">예제에서는 합니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, 및 <xref:System.Windows.Forms.Form.StartPosition%2A> 대화 상자에 모양 및 폼의 기능을 변경 하려면 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-142">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="8bcbb-143">또한이 예제에서는 합니다 <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> 양식의 메서드의 <xref:System.Windows.Forms.Control.Controls%2A> 추가할 두 컬렉션 <xref:System.Windows.Forms.Button> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-143">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="8bcbb-144">이 예제에서는 사용 된 <xref:System.Windows.Forms.Form.HelpButton%2A> 속성 대화 상자 캡션 표시줄에 도움말 단추를 표시 하려면.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-144">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.CancelButton" />
        <altmember cref="T:System.Windows.Forms.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; unit" Usage="form.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-145">폼을 활성화하고 포커스를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-145">Activates the form and gives it focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-146">폼을 활성화 하 앞으로 보냅니다 활성 응용 프로그램 되었거나 활성 응용 프로그램이 없는 경우 창 캡션을 깜박입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-146">Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application.</span></span> <span data-ttu-id="8bcbb-147">형식 매개 변수가 적용이이 메서드에 대 한 표시 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-147">The form must be visible for this method to have any effect.</span></span> <span data-ttu-id="8bcbb-148">응용 프로그램에서 활성 폼을 확인 하려면 사용 합니다 <xref:System.Windows.Forms.Form.ActiveForm%2A> 속성 또는 <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> 양식은 다중 문서 MDI (인터페이스) 응용 프로그램의 경우 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-148">To determine the active form in an application, use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property or the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property if your forms are in a Multiple-document interface (MDI) application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-149">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> 및 <xref:System.Windows.Forms.Form.Activate%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-149">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="8bcbb-150">예제를 실행 하려면 이라는 폼에 다음 코드를 붙여 넣습니다 `Form1` 이라는 단추가 포함 된 `Button1` 두 개의 `Label` 컨트롤 이라는 `Label1` 및 `Label2`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-150">To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8bcbb-151">포커스를 변경 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-151">for changing focus.</span>
          </span>
          <span data-ttu-id="8bcbb-152">연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-152">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-153">폼이 코드에서 활성화되거나 사용자에 의해 활성화될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-153">Occurs when the form is activated in code or by the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-154">응용 프로그램은 활성 폼이 여러 개를 활성 폼이 입력된 포커스를 사용 하 여 폼입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-154">When the application is active and has multiple forms, the active form is the form with the input focus.</span></span> <span data-ttu-id="8bcbb-155">보이지 않는 폼 활성 폼을 일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-155">A form that is not visible cannot be the active form.</span></span> <span data-ttu-id="8bcbb-156">표시 폼을 활성화 하는 가장 간단한 방법은 클릭는 적절 한 키보드 조합을 사용 하는 경우</span><span class="sxs-lookup"><span data-stu-id="8bcbb-156">The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.</span></span>  
  
 <span data-ttu-id="8bcbb-157">호출 코드를 사용 하 여 런타임에 폼을 활성화 하는 <xref:System.Windows.Forms.Form.Activate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-157">To activate a form at run time using code, call the <xref:System.Windows.Forms.Form.Activate%2A> method.</span></span> <span data-ttu-id="8bcbb-158">폼이 활성화 되지 않은 경우 폼의 데이터에 대 한 변경 내용에 따라 폼의 콘텐츠를 업데이트 하는 등의 작업에 대 한이 이벤트를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-158">You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.</span></span>  
  
 <span data-ttu-id="8bcbb-159">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-159">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-160">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>를 <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, 및 <xref:System.Windows.Forms.Form.Activate%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-160">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="8bcbb-161">예제를 실행 하려면 이라는 Form1 포함 된 폼에 다음 코드를 붙여 넣습니다를 <xref:System.Windows.Forms.Button> 호출 `Button1` 두 개의 <xref:System.Windows.Forms.Label> 컨트롤 이라는 `Label1` 및 `Label2`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-161">To run the example, paste the following code in a form called Form1 containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActivateMdiChild">
      <MemberSignature Language="C#" Value="protected void ActivateMdiChild (System.Windows.Forms.Form form);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ActivateMdiChild(class System.Windows.Forms.Form form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ActivateMdiChild(System::Windows::Forms::Form ^ form);" />
      <MemberSignature Language="F#" Value="member this.ActivateMdiChild : System.Windows.Forms.Form -&gt; unit" Usage="form.ActivateMdiChild form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="form">
          <span data-ttu-id="8bcbb-162">활성화할 자식 폼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-162">The child form to activate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-163">폼의 MDI 자식을 활성화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-163">Activates the MDI child of a form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-164">경우는 `form` 매개 변수는 활성 MDI 자식 폼을 이미 해당 <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> 메서드를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-164">If the `form` parameter is already the active MDI child form, then the <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> method simply returns.</span></span> <span data-ttu-id="8bcbb-165">하는 경우 `form` 아닙니다 `null`, 활성 MDI 자식 폼 되도록 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-165">If `form` is not `null`, then it is set to be the active MDI child form.</span></span>  
  
 <span data-ttu-id="8bcbb-166">여부를 `form` 매개 변수는 `null` 여부 <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> 발생 시킵니다는 <xref:System.Windows.Forms.Form.MdiChildActivate> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-166">Whether the `form` parameter is `null` or not, <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> raises the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
        <altmember cref="E:System.Windows.Forms.Form.MdiChildActivate" />
      </Docs>
    </Member>
    <Member MemberName="ActiveForm">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Form ActiveForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.Form ActiveForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ActiveForm" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActiveForm As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::Form ^ ActiveForm { System::Windows::Forms::Form ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveForm : System.Windows.Forms.Form" Usage="System.Windows.Forms.Form.ActiveForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-167">이 응용 프로그램의 현재 활성 폼을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-167">Gets the currently active form for this application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-168">현재 활성 폼을 나타내는 <see cref="T:System.Windows.Forms.Form" />이고 활성 폼이 없는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-168">A <see cref="T:System.Windows.Forms.Form" /> that represents the currently active form, or <see langword="null" /> if there is no active form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-169">폼 이나 컨트롤에서 작업을 수행 하려면 현재 활성 폼에 대 한 참조를 가져오려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-169">You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.</span></span>  
  
 <span data-ttu-id="8bcbb-170">응용 프로그램은 (MDI) 다중 문서 인터페이스 응용 프로그램을 사용 하 여는 <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> 속성을 현재 활성 상태인 MDI 자식 폼을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-170">If your application is a multiple-document interface (MDI) application, use the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property to obtain the currently active MDI child form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-171">다음 코드 예제에서는 활성 폼을 가져오고 양식의 모든 컨트롤을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-171">The following code example gets the active form and disables all the controls on the form.</span></span> <span data-ttu-id="8bcbb-172">이 예제에서는 사용은 <xref:System.Windows.Forms.Control.Controls%2A> 양식의 각 컨트롤을 통해 반복 하 고 컨트롤을 사용 하지 않도록 설정 하려면 폼의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-172">The example uses the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form to iterate through each control on the form and disable the controls.</span></span>  
  
 [!code-cpp[Classic Form.ActiveForm Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ActiveForm Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ActiveForm Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveForm Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8bcbb-173">폼을 요청 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-173">for requesting a form.</span>
          </span>
          <span data-ttu-id="8bcbb-174">연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-174">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
      </Docs>
    </Member>
    <Member MemberName="ActiveMdiChild">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form ActiveMdiChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form ActiveMdiChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ActiveMdiChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMdiChild As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ ActiveMdiChild { System::Windows::Forms::Form ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveMdiChild : System.Windows.Forms.Form" Usage="System.Windows.Forms.Form.ActiveMdiChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-175">현재 활성 상태인 MDI(다중 문서 인터페이스) 자식 창을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-175">Gets the currently active multiple-document interface (MDI) child window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-176">현재 활성 상태인 MDI 자식 창을 나타내는 <see cref="T:System.Windows.Forms.Form" />을(를) 반환하고 현재 자식 창이 없는 경우 <see langword="null" />을(를) 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-176">Returns a <see cref="T:System.Windows.Forms.Form" /> that represents the currently active MDI child window, or <see langword="null" /> if there are currently no child windows present.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-177">MDI 응용 프로그램에서 열려 있는 MDI 자식 폼 있는지 확인 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-177">You can use this method to determine whether there are any MDI child forms open in your MDI application.</span></span> <span data-ttu-id="8bcbb-178">또한 응용 프로그램에 표시 되는 또 다른 형태 또는 MDI 부모 폼에서 MDI 자식 창에 대 한 작업을 수행 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-178">You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.</span></span>  
  
 <span data-ttu-id="8bcbb-179">현재 활성 폼 MDI 자식 폼인 경우 사용할 수는 <xref:System.Windows.Forms.Form.ActiveForm%2A> 속성에 대 한 참조를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-179">If the currently active form is not an MDI child form, you can use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property to obtain a reference to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-180">다음 코드 예제에서는 활성 MDI 자식 폼 및 모든 반복에 대 한 참조를 가져옵니다 <xref:System.Windows.Forms.TextBox> 양식에서 컨트롤 다시 설정 하면 해당 <xref:System.Windows.Forms.TextBoxBase.Text%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-180">The following code example obtains a reference to the active MDI child form and loops through all <xref:System.Windows.Forms.TextBox> controls on the form, resetting their <xref:System.Windows.Forms.TextBoxBase.Text%2A> properties.</span></span> <span data-ttu-id="8bcbb-181">이 예제에서는 MDI 부모 폼이 만들어졌는지 및 MDI 부모 폼에서이 메서드 호출이 수행 되는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-181">This example requires that an MDI parent form has been created and that this method call is being made from the MDI parent form.</span></span>  
  
 [!code-cpp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
      </Docs>
    </Member>
    <Member MemberName="AddOwnedForm">
      <MemberSignature Language="C#" Value="public void AddOwnedForm (System.Windows.Forms.Form ownedForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOwnedForm(class System.Windows.Forms.Form ownedForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOwnedForm (ownedForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOwnedForm(System::Windows::Forms::Form ^ ownedForm);" />
      <MemberSignature Language="F#" Value="member this.AddOwnedForm : System.Windows.Forms.Form -&gt; unit" Usage="form.AddOwnedForm ownedForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="ownedForm">
          <span data-ttu-id="8bcbb-182">이 폼이 소유하게 될 <see cref="T:System.Windows.Forms.Form" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-182">The <see cref="T:System.Windows.Forms.Form" /> that this form will own.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-183">소유된 폼을 이 폼에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-183">Adds an owned form to this form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-184">될 때까지 소유 된 소유자 형식에 할당 된 상태로 유지 된 <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-184">The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="8bcbb-185">설정 하 여 다른 소유 된 폼을 만들 수도 있습니다는 <xref:System.Windows.Forms.Form.Owner%2A> 소유자 폼에 대 한 참조를 사용 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-185">You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.</span></span>  
  
 <span data-ttu-id="8bcbb-186">폼 다른 폼에서 소유 하는 것을 닫거나 숨길 소유자 폼을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-186">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="8bcbb-187">예를 들어 이라는 폼 `Form2` 라는 폼이 소유 하 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-187">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="8bcbb-188">하는 경우 `Form1` 닫히거나 최소화 `Form2` 또한 닫히거나 숨겨집니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-188">If `Form1` is closed or minimized, `Form2` is also closed or hidden.</span></span> <span data-ttu-id="8bcbb-189">소유 된 폼의 소유자 폼 뒤 필요도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-189">Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="8bcbb-190">찾기 등 windows에 대 한 소유 된 폼을 사용할 수 있으며 기존 소유자 폼을 선택한 경우 소유자 폼의 숨김 표시 되지 않아야 하는 windows 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-190">You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-191">형식은 다중 문서 MDI (인터페이스) 부모 폼을이 속성은 현재 있는 모든 MDI 자식 폼을 제외 하 고 표시 되는 모든 양식이 열립니다 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-191">If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open.</span></span> <span data-ttu-id="8bcbb-192">MDI 부모 폼에서 열려 있는 MDI 자식 폼을 가져오려면는 <xref:System.Windows.Forms.Form.MdiChildren%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-192">To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-193">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Form.AddOwnedForm%2A> 다른 형식의 소유 된 폼으로 폼을 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-193">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method to display a form as an owned form of another form.</span></span> <span data-ttu-id="8bcbb-194">소유 된 폼이 표시 되 면 소유자 폼을 최소화할 수 있습니다 및 함께 소유 된 폼이 최소화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-194">Once the owned form is shown, you can minimize its owner form and the owned form will minimize with it.</span></span> <span data-ttu-id="8bcbb-195">이 예제는 예제 코드에서는 폼의 다른 메서드나 이벤트에서 호출 되도록 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-195">The example requires that the code in the example is called from another event or method of a form.</span></span>  
  
 [!code-cpp[Form.AddOwnedForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AddOwnedForm/CPP/form1.cpp#1)]
 [!code-csharp[Form.AddOwnedForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AddOwnedForm/CS/form1.cs#1)]
 [!code-vb[Form.AddOwnedForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AddOwnedForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="AdjustFormScrollbars">
      <MemberSignature Language="C#" Value="protected override void AdjustFormScrollbars (bool displayScrollbars);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AdjustFormScrollbars(bool displayScrollbars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AdjustFormScrollbars (displayScrollbars As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AdjustFormScrollbars(bool displayScrollbars);" />
      <MemberSignature Language="F#" Value="override this.AdjustFormScrollbars : bool -&gt; unit" Usage="form.AdjustFormScrollbars displayScrollbars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayScrollbars" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="displayScrollbars">
          <span data-ttu-id="8bcbb-196">스크롤 막대를 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-196">
              <see langword="true" /> to show the scroll bars; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-197">현재 컨트롤 위치 및 현재 선택된 컨트롤에 따라 컨테이너의 스크롤 막대를 조정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-197">Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowTransparency">
      <MemberSignature Language="C#" Value="public bool AllowTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AllowTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowTransparency : bool with get, set" Usage="System.Windows.Forms.Form.AllowTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-198">폼의 불투명도를 조정할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-198">Gets or sets a value indicating whether the opacity of the form can be adjusted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-199">폼의 불투명도를 변경할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-199">
              <see langword="true" /> if the opacity of the form can be changed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-200">이 속성은 자동으로 설정 됩니다 `true` 경우는 `Opacity` 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-200">This property is automatically set to `true` if the `Opacity` is changed.</span></span> <span data-ttu-id="8bcbb-201">폼의 불투명도 사용 하 여 설정 된 경우는 `Opacity` 속성을 폼에는 폼에서 개체 계층화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-201">When the opacity of a form is set using the `Opacity` property, the form will layer objects on the form.</span></span> <span data-ttu-id="8bcbb-202">설정한 경우에 <xref:System.Windows.Forms.Form.AllowTransparency%2A> 속성을 `false` 폼 폼의 디스플레이 성능을 개선 하는 계층화 된 모드에 있지 않게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-202">If you set the <xref:System.Windows.Forms.Form.AllowTransparency%2A> property to `false` the form will not be in layered mode which will improve the display performance of the form.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAutoScaling">
      <MemberSignature Language="C#" Value="protected void ApplyAutoScaling ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ApplyAutoScaling() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ApplyAutoScaling" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ApplyAutoScaling ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ApplyAutoScaling();" />
      <MemberSignature Language="F#" Value="member this.ApplyAutoScaling : unit -&gt; unit" Usage="form.ApplyAutoScaling " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This method has been deprecated. Use the ApplyAutoScaling method instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-203">현재 <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /> 속성 값과 현재 글꼴 크기에 따라 폼의 크기를 조정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-203">Resizes the form according to the current value of the <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /> property and the size of the current font.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-204">이 메서드는 값을 사용 하 여 폼 크기를 결정 합니다 <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> 속성 및 <xref:System.Windows.Forms.Form.Size%2A> 에서 반환 된 값을 <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-204">This method determines the form size using the value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property and the <xref:System.Windows.Forms.Form.Size%2A> value returned by the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScale">
      <MemberSignature Language="C#" Value="public bool AutoScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScale" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScale As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScale { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScale : bool with get, set" Usage="System.Windows.Forms.Form.AutoScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This property has been deprecated. Use the AutoScaleMode property instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-205">폼의 크기가 해당 폼에 사용된 글꼴의 높이와 컨트롤의 크기에 맞게 조정되는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-205">Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-206">폼에 사용된 현재 글꼴에 따라 해당 폼의 크기 및 컨트롤이 자동으로 조정되는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-206">
              <see langword="true" /> if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-207">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-207">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8bcbb-208"><xref:System.Windows.Forms.Form.AutoScale%2A> 는 사용 되지 않으며 이전 버전과 호환성을 위해 유지 되었습니다 했습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-208">The <xref:System.Windows.Forms.Form.AutoScale%2A> is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="8bcbb-209">사용되는 대체 항목은 <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-209">The non-obsolete alternative is <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8bcbb-210">자동 크기 조정 하는 방법에 대 한 자세한 내용은 참조 하세요. [Windows Forms의 자동 크기 조정을](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-210">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="8bcbb-211">폼을 허용 하려면이 속성을 사용할 수 있습니다 및 글꼴 변경 내용에 따라 해당 컨트롤이 자동으로 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-211">You can use this property to allow your form and its controls to automatically adjust based on changes in the font.</span></span> <span data-ttu-id="8bcbb-212">이 글꼴 커질 수 있는 응용 프로그램 또는 Windows에서 사용 하기 위해 지정 된 언어에 따라 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-212">This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.</span></span>  
  
 <span data-ttu-id="8bcbb-213">폼이 자동 크기를 사용 하도록 눈금을 가져오는 <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-213">To obtain the size the form will auto scale to, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.</span></span> <span data-ttu-id="8bcbb-214">크기를 결정 하려는 경우 양식을 자동으로 조정 특정 글꼴을 사용 하 여에 기반을 <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-214">If you want to determine the size the form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaleBaseSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size AutoScaleBaseSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size AutoScaleBaseSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoScaleBaseSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size AutoScaleBaseSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScaleBaseSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.AutoScaleBaseSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-215">폼의 자동 크기 조정에 사용되는 기본 크기를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-215">Gets or sets the base size used for autoscaling of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-216">이 폼에서 자동 크기 조정을 위해 사용하는 기본 크기를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-216">A <see cref="T:System.Drawing.Size" /> that represents the base size that this form uses for autoscaling.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8bcbb-217">이 멤버는 이전 버전과 호환성을 위해 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-217">This member has been retained for backward compatibility.</span></span> <span data-ttu-id="8bcbb-218">자동 크기 조정 하는 방법에 대 한 자세한 내용은 참조 하세요. [Windows Forms의 자동 크기 조정을](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-218">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="8bcbb-219">값을 <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> 속성은 데 폼 표시 형식에 대 한 배율 인수를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-219">The value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property is used at form-display time to compute the scaling factor for the form.</span></span> <span data-ttu-id="8bcbb-220">기본 크기를 자동 크기 조정 되 폼 기준으로 시스템의 글꼴 크기를 비교에 대 한 자동 크기 조정을 사용 하는 경우 폼의 크기 조정을를 결정 하기.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-220">The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used.</span></span> <span data-ttu-id="8bcbb-221">크기를 결정 하려는 경우 양식을 자동으로 조정 특정 글꼴을 사용 하 여에 기반을 <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-221">If you want to determine the size a form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-222">이 속성의 값에는 폼을 처음으로 만들어질 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-222">The value of this property is used when the form is initially created.</span></span> <span data-ttu-id="8bcbb-223">속성이 설정 되 면 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-223">Once the property is set, it cannot be changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AutoScale" />
        <altmember cref="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)" />
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public override bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScroll : bool with get, set" Usage="System.Windows.Forms.Form.AutoScroll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-224">폼에서 자동 스크롤 기능을 사용할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-224">Gets or sets a value indicating whether the form enables autoscrolling.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-225">폼에서 자동 스크롤 기능을 사용하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-225">
              <see langword="true" /> to enable autoscrolling on the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-226">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-226">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-227">이 속성 설정 된 경우 `true`, 컨트롤이 폼의 클라이언트 영역 밖에 있는 경우 폼에 스크롤 막대가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-227">If this property is set to `true`, scroll bars are displayed on the form if any controls are located outside the form's client region.</span></span> <span data-ttu-id="8bcbb-228">또한 자동 스크롤의 경우 폼의 클라이언트 영역 자동 스크롤됩니다 입력된 포커스가 있는 컨트롤로 표시 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-228">Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.</span></span>  
  
 <span data-ttu-id="8bcbb-229">사용자가 해당 비디오 해상도 설정이 낮은 해상도로 설정 된 경우 컨트롤을 보는 기능을 손실 하지 못하도록 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-229">You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-230">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Form.AutoScroll%2A> 속성을 폼의 클라이언트 영역 보다 큰 컨트롤을 표시 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-230">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.AutoScroll%2A> property to enable the display of controls that are outsize the client area of a form.</span></span> <span data-ttu-id="8bcbb-231">이 예제에서는 새 폼을 만들고 추가 <xref:System.Windows.Forms.Button> 컨트롤을 폼입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-231">The example creates a new form and adds a <xref:System.Windows.Forms.Button> control to the form.</span></span> <span data-ttu-id="8bcbb-232"><xref:System.Windows.Forms.Button> 컨트롤은 초과 하 여 배치 새 폼의 클라이언트 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-232">The <xref:System.Windows.Forms.Button> control is positioned outsize the client area of the new form.</span></span> <span data-ttu-id="8bcbb-233"><xref:System.Windows.Forms.Form.AutoScroll%2A> 스크롤 막대 컨트롤을 스크롤할 수 있도록 폼에 표시 하려면 true로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-233">The <xref:System.Windows.Forms.Form.AutoScroll%2A> property is set to true to display scroll bars on the form to enable the user to scroll to the control.</span></span> <span data-ttu-id="8bcbb-234">이 예제는이 예제에서 정의 된 메서드는 이벤트 처리기 또는 기타 방법에 대 한 다른 폼에서 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-234">This example requires that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.AutoScroll#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AutoScroll/CPP/form1.cpp#1)]
 [!code-csharp[Form.AutoScroll#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoScroll/CS/form1.cs#1)]
 [!code-vb[Form.AutoScroll#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoScroll/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.Form.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-235">
            <see cref="P:System.Windows.Forms.Form.AutoSizeMode" />의 설정에 따라 폼의 크기를 조정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-235">Resize the form according to the setting of <see cref="P:System.Windows.Forms.Form.AutoSizeMode" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-236">폼의 크기가 자동으로 조정되면 <see langword="true" />이고, 폼의 크기를 수동으로 조정해야 하면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-236">
              <see langword="true" /> if the form will automatically resize; <see langword="false" /> if it must be manually resized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-237">사용 하 여 <xref:System.Windows.Forms.Form.AutoSize%2A> 폼 크기를 내용에 맞게 조정 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-237">Use <xref:System.Windows.Forms.Form.AutoSize%2A> to force a form to resize to fit its contents.</span></span>  
  
 <span data-ttu-id="8bcbb-238">폼 값에 관계 없이 Visual Studio 폼 디자이너에서 자동으로 크기가 조정 되지 않습니다 합니다 <xref:System.Windows.Forms.Form.AutoSize%2A> 고 <xref:System.Windows.Forms.Form.AutoSizeMode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-238">A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties.</span></span> <span data-ttu-id="8bcbb-239">양식을 올바르게 크기 조정 자체 런타임에 이러한 두 속성의 값에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-239">The form correctly resizes itself at run time according to the values of these two properties.</span></span> <span data-ttu-id="8bcbb-240">반대로, 사용자 지정 <xref:System.Windows.Forms.UserControl> 디자인 타임 및 런타임에 모두 자체 자동으로 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-240">By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.</span></span>  
  
 <span data-ttu-id="8bcbb-241">사용 하는 경우 <xref:System.Windows.Forms.Form.AutoSize%2A>의 <xref:System.Windows.Forms.Control.MinimumSize%2A> 하 고 <xref:System.Windows.Forms.Control.MaximumSize%2A> 속성은 적용 되지만 현재 값을 <xref:System.Windows.Forms.Control.Size%2A> 속성은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-241">When using <xref:System.Windows.Forms.Form.AutoSize%2A>, the <xref:System.Windows.Forms.Control.MinimumSize%2A> and <xref:System.Windows.Forms.Control.MaximumSize%2A> properties are respected, but the current value of the <xref:System.Windows.Forms.Control.Size%2A> property is ignored.</span></span> <span data-ttu-id="8bcbb-242">사용 하 여 <xref:System.Windows.Forms.Form.AutoSize%2A> 및 <xref:System.Windows.Forms.Form.AutoSizeMode%2A> 렌더링는 <xref:System.Windows.Forms.Form.AutoScroll%2A> 속성 보기에서 해당 포함 된 컨트롤을 숨기는 폼을 축소할 수 없습니다는 불필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-242">Using <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> also renders the <xref:System.Windows.Forms.Form.AutoScroll%2A> property superfluous, as there is no way to shrink the form to hide its contained controls from view.</span></span>  
  
 <span data-ttu-id="8bcbb-243">참조 된 <xref:System.Windows.Forms.AutoSizeMode> 폼 때 동작 하는 방법에 대 한 정보에 대 한 열거형 <xref:System.Windows.Forms.Form.AutoSize%2A> 는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-243">See the <xref:System.Windows.Forms.AutoSizeMode> enumeration for information on how a form behaves when <xref:System.Windows.Forms.Form.AutoSize%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-244">다음 코드 예제에서는 내용에 맞게 자동으로 크기를 조정 하는 코드를 사용 하 여 만든 폼을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-244">The following code example shows a form created using code that automatically resizes to fit its contents.</span></span> <span data-ttu-id="8bcbb-245">를 실행 하는 경우 표시 되는 <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.TextBox> URL을 입력 하는 것에 대 한 및 <xref:System.Windows.Forms.Button> 사용자의 기본 웹 브라우저 내에서 해당 URL을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-245">When run, the form displays a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser.</span></span> <span data-ttu-id="8bcbb-246">사용 하 여 코드 예제는 <xref:System.Windows.Forms.FlowLayoutPanel> 포함 된 레이아웃을 하나씩 차례를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-246">The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other.</span></span> <span data-ttu-id="8bcbb-247">또한 설정 합니다 <xref:System.Windows.Forms.Control.AutoSize%2A> 및 <xref:System.Windows.Forms.AutoSizeMode> 성장 시키고 해당 폼의 내용에 맞게 축소 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-247">It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.</span></span>  
  
 [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]
 [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-248">
            <see cref="P:System.Windows.Forms.Form.AutoSize" /> 속성이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-248">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoSize" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoSizeMode AutoSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeMode As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoSizeMode AutoSizeMode { System::Windows::Forms::AutoSizeMode get(); void set(System::Windows::Forms::AutoSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeMode : System.Windows.Forms.AutoSizeMode with get, set" Usage="System.Windows.Forms.Form.AutoSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-249">폼에서 자신의 크기를 자동 조정하는 모드를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-249">Gets or sets the mode by which the form automatically resizes itself.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-250">
            <see cref="T:System.Windows.Forms.AutoSizeMode" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-250">An <see cref="T:System.Windows.Forms.AutoSizeMode" /> enumerated value.</span>
          </span>
          <span data-ttu-id="8bcbb-251">기본값은 <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-251">The default is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-252">설정 된 <xref:System.Windows.Forms.Form.AutoSizeMode%2A> 속성을 새 값으로 하면 폼이 다시 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-252">Setting the <xref:System.Windows.Forms.Form.AutoSizeMode%2A> property to a new value causes the form to be laid out again.</span></span>  
  
 <span data-ttu-id="8bcbb-253">폼 값에 관계 없이 Visual Studio 폼 디자이너에서 자동으로 크기가 조정 되지 않습니다 합니다 <xref:System.Windows.Forms.Form.AutoSize%2A> 고 <xref:System.Windows.Forms.Form.AutoSizeMode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-253">A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties.</span></span> <span data-ttu-id="8bcbb-254">양식을 올바르게 크기 조정 자체 런타임에 이러한 두 속성의 값에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-254">The form correctly resizes itself at run time according to the values of these two properties.</span></span> <span data-ttu-id="8bcbb-255">반대로, 사용자 지정 <xref:System.Windows.Forms.UserControl> 디자인 타임 및 런타임에 모두 자체 자동으로 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-255">By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-256">다음 코드 예제에서는 내용에 맞게 자동으로 크기를 조정 하는 코드를 사용 하 여 만든 폼을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-256">The following code example shows a form created using code that automatically resizes to fit its contents.</span></span> <span data-ttu-id="8bcbb-257">실행 시 코드를 <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.TextBox> URL을 입력 하는 것에 대 한 및 <xref:System.Windows.Forms.Button> 사용자의 기본 웹 브라우저 내에서 해당 URL을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-257">When run, the form displaya a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser.</span></span> <span data-ttu-id="8bcbb-258">사용 하 여 코드 예제는 <xref:System.Windows.Forms.FlowLayoutPanel> 포함 된 레이아웃을 하나씩 차례를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-258">The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other.</span></span> <span data-ttu-id="8bcbb-259">또한 설정 합니다 <xref:System.Windows.Forms.Control.AutoSize%2A> 및 <xref:System.Windows.Forms.AutoSizeMode> 성장 시키고 해당 폼의 내용에 맞게 축소 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-259">It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.</span></span>  
  
 [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]
 [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="8bcbb-260">값이 유효한 <see cref="T:System.Windows.Forms.AutoSizeMode" /> 값이 아닐 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-260">The value is not a valid <see cref="T:System.Windows.Forms.AutoSizeMode" /> value.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.AutoSizeMode" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AutoValidate">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.AutoValidate AutoValidate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoValidate AutoValidate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoValidate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoValidate As AutoValidate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AutoValidate AutoValidate { System::Windows::Forms::AutoValidate get(); void set(System::Windows::Forms::AutoValidate value); };" />
      <MemberSignature Language="F#" Value="member this.AutoValidate : System.Windows.Forms.AutoValidate with get, set" Usage="System.Windows.Forms.Form.AutoValidate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoValidate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-261">포커스가 변경될 때 이 컨테이너의 컨트롤에 대한 유효성 검사가 자동으로 수행되는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-261">Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-262">포커스가 변경될 때 암시적으로 포함된 컨트롤의 유효성을 검사할지 여부를 나타내는 <see cref="T:System.Windows.Forms.AutoValidate" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-262">An <see cref="T:System.Windows.Forms.AutoValidate" /> enumerated value that indicates whether contained controls are implicitly validated on focus change.</span>
          </span>
          <span data-ttu-id="8bcbb-263">기본값은 Inherit입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-263">The default is Inherit.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.AutoValidate" />
      </Docs>
    </Member>
    <Member MemberName="AutoValidateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoValidateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoValidateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.AutoValidateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoValidateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoValidateChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoValidateChanged : EventHandler " Usage="member this.AutoValidateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-264">
            <see cref="P:System.Windows.Forms.Form.AutoValidate" /> 속성이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-264">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoValidate" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Form.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-265">컨트롤의 배경색을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-265">Gets or sets the background color for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-266">컨트롤의 배경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-266">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span>
          </span>
          <span data-ttu-id="8bcbb-267">기본값은 <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-267">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="CancelButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IButtonControl CancelButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IButtonControl CancelButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.CancelButton" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelButton As IButtonControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IButtonControl ^ CancelButton { System::Windows::Forms::IButtonControl ^ get(); void set(System::Windows::Forms::IButtonControl ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CancelButton : System.Windows.Forms.IButtonControl with get, set" Usage="System.Windows.Forms.Form.CancelButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IButtonControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-268">사용자가 ESC 키를 누를 때 클릭되는 Button 컨트롤을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-268">Gets or sets the button control that is clicked when the user presses the ESC key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-269">폼의 취소 단추를 나타내는 <see cref="T:System.Windows.Forms.IButtonControl" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-269">An <see cref="T:System.Windows.Forms.IButtonControl" /> that represents the cancel button for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-270">폼의 취소 단추에는 ESC 키를 누를 때마다 클릭 되는 단추 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-270">The cancel button for a form is the button control that is clicked whenever the user presses the ESC key.</span></span> <span data-ttu-id="8bcbb-271">이 속성에 할당 된 단추 해야는 <xref:System.Windows.Forms.IButtonControl> 되거나 현재 폼에는 현재 폼에 있는 컨테이너 내에 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-271">The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.</span></span>  
  
 <span data-ttu-id="8bcbb-272">이 속성을 사용 하면 사용자가 응용 프로그램에서 ESC 키를 누를 때 발생 하는 기본 동작을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-272">This property allows you to designate a default action to occur when the user presses the ESC key in your application.</span></span> <span data-ttu-id="8bcbb-273">수동으로 마우스로 취소 단추를 클릭 하지 않고 변경 내용을 커밋하지 않고 창을 닫으려면 ESC 키를 누르기만 하 여 간단한 양식을 빠르게 탐색할 수 있도록이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-273">You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.</span></span>  
  
 <span data-ttu-id="8bcbb-274"><xref:System.Windows.Forms.Form.CancelButton%2A> 폼에서 다른 컨트롤 ESC 키를 가로채는 경우 작동 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-274"><xref:System.Windows.Forms.Form.CancelButton%2A> may not work if another control on the form intercepts the ESC key.</span></span> <span data-ttu-id="8bcbb-275">예를 들어 있는 경우는 <xref:System.Windows.Forms.ComboBox> 폼에서 열려 ESC 닫힙니다는 <xref:System.Windows.Forms.ComboBox> 폼을 닫는 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-275">For example, if you have a <xref:System.Windows.Forms.ComboBox> open on your form, ESC will close the <xref:System.Windows.Forms.ComboBox> instead of closing the Form.</span></span>  
  
 <span data-ttu-id="8bcbb-276">합니다 <xref:System.Windows.Forms.IButtonControl> 개체에 할당 된 <xref:System.Windows.Forms.Form.CancelButton%2A> 폼에 표시 되어야 합니다. 그러지 않으면는 ESC 키를 눌러 키 영향을 주지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-276">The <xref:System.Windows.Forms.IButtonControl> object assigned to <xref:System.Windows.Forms.Form.CancelButton%2A> must be visible on the form, or else pressing the ESC key will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-277">다음 코드 예제에서는의 새 인스턴스를 만듭니다는 <xref:System.Windows.Forms.Form> 호출을 <xref:System.Windows.Forms.Form.ShowDialog%2A> 폼을 대화 상자로 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-277">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="8bcbb-278">예제에서는 합니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, 및 <xref:System.Windows.Forms.Form.StartPosition%2A> 대화 상자에 모양 및 폼의 기능을 변경 하려면 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-278">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="8bcbb-279">또한이 예제에서는 합니다 <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> 양식의 메서드의 <xref:System.Windows.Forms.Control.Controls%2A> 추가할 두 컬렉션 <xref:System.Windows.Forms.Button> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-279">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="8bcbb-280">이 예제에서는 사용 된 <xref:System.Windows.Forms.Form.HelpButton%2A> 속성 대화 상자 캡션 표시줄에 도움말 단추를 표시 하려면.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-280">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
        <altmember cref="T:System.Windows.Forms.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="CenterToParent">
      <MemberSignature Language="C#" Value="protected void CenterToParent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CenterToParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CenterToParent" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CenterToParent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CenterToParent();" />
      <MemberSignature Language="F#" Value="member this.CenterToParent : unit -&gt; unit" Usage="form.CenterToParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-281">부모 폼의 경계 안에서 폼의 위치를 가운데로 맞춥니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-281">Centers the position of the form within the bounds of the parent form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-282">호출 하지 마십시오는 <xref:System.Windows.Forms.Form.CenterToParent%2A> 사용자 코드에서 직접 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-282">Do not call the <xref:System.Windows.Forms.Form.CenterToParent%2A> method directly from your code.</span></span> <span data-ttu-id="8bcbb-283">대신, 설정 된 <xref:System.Windows.Forms.Form.StartPosition%2A> 속성을 <xref:System.Windows.Forms.FormStartPosition.CenterParent>입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-283">Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterParent>.</span></span>  
  
 <span data-ttu-id="8bcbb-284">양식 또는 대화 최상위 수준인 경우, 다음 <xref:System.Windows.Forms.Form.CenterToParent%2A> 화면이 나 바탕 화면에 대해 폼 가운데에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-284">If the form or dialog is top-level, then <xref:System.Windows.Forms.Form.CenterToParent%2A> centers the form with respect to the screen or desktop.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.FormStartPosition.CenterParent" />
        <altmember cref="M:System.Windows.Forms.Form.CenterToScreen" />
      </Docs>
    </Member>
    <Member MemberName="CenterToScreen">
      <MemberSignature Language="C#" Value="protected void CenterToScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CenterToScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CenterToScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CenterToScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CenterToScreen();" />
      <MemberSignature Language="F#" Value="member this.CenterToScreen : unit -&gt; unit" Usage="form.CenterToScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-285">폼을 현재 화면의 가운데로 맞춥니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-285">Centers the form on the current screen.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-286">이 코드에서 직접 호출 하지 마세요.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-286">Do not call this directly from your code.</span></span> <span data-ttu-id="8bcbb-287">대신, 설정 된 <xref:System.Windows.Forms.Form.StartPosition%2A> 속성을 <xref:System.Windows.Forms.FormStartPosition.CenterScreen>입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-287">Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterScreen>.</span></span>  
  
 <span data-ttu-id="8bcbb-288"><xref:System.Windows.Forms.Form.CenterToScreen%2A> 메서드 다음과 같은 우선 순위를 사용 하 여 폼을 가운데에 사용 되는 화면을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-288">The <xref:System.Windows.Forms.Form.CenterToScreen%2A> method uses the following priority list to determine the screen used to center the form:</span></span>  
  
1.  <span data-ttu-id="8bcbb-289"><xref:System.Windows.Forms.Form.Owner%2A> 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-289">The <xref:System.Windows.Forms.Form.Owner%2A> property of the form.</span></span>  
  
2.  <span data-ttu-id="8bcbb-290">폼의 HWND 소유자입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-290">The HWND owner of the form.</span></span>  
  
3.  <span data-ttu-id="8bcbb-291">현재 마우스 커서를가지고 있는 화면입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-291">The screen that currently has the mouse cursor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.FormStartPosition.CenterScreen" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="ClientSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ClientSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ClientSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ClientSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ClientSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.ClientSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.ClientSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-292">폼의 클라이언트 영역 크기를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-292">Gets or sets the size of the client area of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-293">폼의 클라이언트 영역 크기를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-293">A <see cref="T:System.Drawing.Size" /> that represents the size of the form's client area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-294">폼의 클라이언트 영역 크기에 테두리 및 제목 표시줄을 제외한 폼의 크기가입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-294">The size of the client area of the form is the size of the form excluding the borders and the title bar.</span></span> <span data-ttu-id="8bcbb-295">폼의 클라이언트 영역에는 컨트롤을 배치할 수 있는 폼 내에서 영역이입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-295">The client area of a form is the area within a form where controls can be placed.</span></span> <span data-ttu-id="8bcbb-296">이 속성을 사용 하 여 그래픽 작업을 수행할 때 또는 크기 조정 및 폼의 컨트롤을 배치 하는 경우 적절 한 크기를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-296">You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form.</span></span> <span data-ttu-id="8bcbb-297">전체 폼의 크기를 사용 합니다 <xref:System.Windows.Forms.Form.Size%2A> 속성 또는 개별 속성을 사용 하 여 <xref:System.Windows.Forms.Control.Height%2A> 및 <xref:System.Windows.Forms.Control.Width%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-297">To get the size of the entire form, use the <xref:System.Windows.Forms.Form.Size%2A> property or use the individual properties <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-298">현재 응용 프로그램 설정을 사용 하 여이 속성에 바인딩할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-298">You cannot currently bind to this property using application settings.</span></span> <span data-ttu-id="8bcbb-299">응용 프로그램 설정에 대 한 자세한 내용은 참조 하세요. [응용 프로그램 설정 개요](~/docs/framework/winforms/advanced/application-settings-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-299">For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-300">다음 코드 예제에 대 한 이벤트 처리기를 만듭니다는 <xref:System.Windows.Forms.Control.Resize> 폼의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-300">The following code example creates an event handler for the <xref:System.Windows.Forms.Control.Resize> event of a form.</span></span> <span data-ttu-id="8bcbb-301">이벤트 처리기에서 사용 합니다 <xref:System.Windows.Forms.Form.ClientSize%2A> 있도록 폼의 속성을 <xref:System.Windows.Forms.Button> 라는 컨트롤 `button1` 폼의 전체 클라이언트 영역을 채우는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-301">The event handler uses the <xref:System.Windows.Forms.Form.ClientSize%2A> property of the form to make a <xref:System.Windows.Forms.Button> control named `button1` fill the entire client area of the form.</span></span>  
  
 [!code-cpp[Classic Form.ClientSize Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ClientSize Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ClientSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ClientSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="form.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-302">폼을 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-302">Closes the form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-303">폼이 닫히면 개체 내에서 만든 리소스를 모두 닫혀 있고 폼은 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-303">When a form is closed, all resources created within the object are closed and the form is disposed.</span></span> <span data-ttu-id="8bcbb-304">처리 하 여 런타임에 폼의 닫는 방지할 수 있습니다는 <xref:System.Windows.Forms.Form.Closing> 이벤트 및 설정 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.ComponentModel.CancelEventArgs> 이벤트 처리기에 매개 변수로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-304">You can prevent the closing of a form at run time by handling the <xref:System.Windows.Forms.Form.Closing> event and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed as a parameter to your event handler.</span></span> <span data-ttu-id="8bcbb-305">폼 닫기는 응용 프로그램의 시작 폼 이면 프로그램이 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-305">If the form you are closing is the startup form of your application, your application ends.</span></span>  
  
 <span data-ttu-id="8bcbb-306">두 가지 경우 중 폼에서 삭제 되지 않습니다 `Close` 때 (1)의 일부인 응용 프로그램을 다중 문서 인터페이스 (MDI) 및 폼은 보이지 않습니다; 및 (2)을 표시 한 양식 사용 <xref:System.Windows.Forms.Form.ShowDialog%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-306">The two conditions when a form is not disposed on `Close` is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span></span> <span data-ttu-id="8bcbb-307">이러한 경우에 호출 해야 <xref:System.Windows.Forms.Form.Dispose%2A> 수동으로 가비지 수집에 대 한 폼의 컨트롤의 모든 표시를 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-307">In these cases, you will need to call <xref:System.Windows.Forms.Form.Dispose%2A> manually to mark all of the form's controls for garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-308">경우는 <xref:System.Windows.Forms.Form.Close%2A> 메서드를 호출을 <xref:System.Windows.Forms.Form> 모덜리스 창으로 표시를 호출할 수 없습니다는 <xref:System.Windows.Forms.Control.Show%2A> 양식의 리소스가 이미 해제 되었으므로 때문에 폼을 표시 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-308">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="8bcbb-309">폼을 숨기고 표시를 사용 하 여 확인 된 <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-309">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8bcbb-310">이전에 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0를 <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> 및 <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> 이벤트는 때 발생는 <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> 메서드를 호출 하 여 응용 프로그램을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-310">Prior to the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0, the <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="8bcbb-311">유효성 검사 코드를 실행 해야 하는 이러한 이벤트 중 하나가 있는 경우 호출 해야 합니다 <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> 메서드를 호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한는 <xref:System.Windows.Forms.Application.Exit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-311">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bcbb-312">핸들이 만들어지는 동안 폼이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-312">The form was closed while a handle was being created.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bcbb-313">
            <see cref="E:System.Windows.Forms.Form.Activated" />가 <see cref="P:System.Windows.Forms.Form.WindowState" />로 설정된 경우에는 <see cref="F:System.Windows.Forms.FormWindowState.Maximized" /> 이벤트에서 이 메서드를 호출할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-313">You cannot call this method from the <see cref="E:System.Windows.Forms.Form.Activated" /> event when <see cref="P:System.Windows.Forms.Form.WindowState" /> is set to <see cref="F:System.Windows.Forms.FormWindowState.Maximized" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="E:System.Windows.Forms.Form.Closing" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-314">폼이 닫힐 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-314">Occurs when the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="8bcbb-315">합니다 <xref:System.Windows.Forms.Form.Closed> 이벤트는.NET Framework 버전 2.0에서에서 사용 되지 않으므로 사용 된 <xref:System.Windows.Forms.Form.FormClosed> 이벤트 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-315">The <xref:System.Windows.Forms.Form.Closed> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosed> event instead.</span></span>  
  
 <span data-ttu-id="8bcbb-316">이 이벤트는 사용자가 또는 폼이 닫힌 후 발생 합니다 <xref:System.Windows.Forms.Form.Close%2A> 형식의 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-316">This event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method of the form.</span></span> <span data-ttu-id="8bcbb-317">처리할 폼을 닫는 하지 않도록 하려면를 <xref:System.Windows.Forms.Form.Closing> 이벤트 집합과 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.ComponentModel.CancelEventArgs> 이벤트 처리기에 전달 `true`.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-317">To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.Closing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="8bcbb-318">폼에 사용 된 리소스를 해제 하는 등 작업을 수행 하 및 양식에 입력 된 정보를 저장 또는 해당 부모 폼을 업데이트 하려면이 이벤트를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-318">You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8bcbb-319"><xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> 및 <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> 이벤트는 발생 하는 경우를 <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> 메서드를 호출 하 여 응용 프로그램을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-319">The <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="8bcbb-320">유효성 검사 코드를 실행 해야 하는 이러한 이벤트 중 하나가 있는 경우 호출 해야 합니다 <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> 메서드를 호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한는 <xref:System.Windows.Forms.Application.Exit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-320">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 <span data-ttu-id="8bcbb-321">폼이 MDI 부모 폼에는 <xref:System.Windows.Forms.Form.Closing> MDI 부모 폼의 하기 전에 모든 MDI 자식 폼의 이벤트는 발생 <xref:System.Windows.Forms.Form.Closing> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-321">If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="8bcbb-322">또한 합니다 <xref:System.Windows.Forms.Form.Closed> 모든 MDI 자식 폼의 이벤트 발생 하기 전에 <xref:System.Windows.Forms.Form.Closed> MDI 부모 폼의 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-322">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span>  
  
 <span data-ttu-id="8bcbb-323">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-323">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-324">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>를 <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, 및 <xref:System.Windows.Forms.Form.Activate%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-324">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="8bcbb-325">예제를 실행 하려면 이라는 폼에 다음 코드를 붙여 넣습니다 `Form1` 포함 하는 <xref:System.Windows.Forms.Button> 호출 `Button1` 두 개의 <xref:System.Windows.Forms.Label> 이라는 컨트롤 `Label1` 및 `Label2`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-325">To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : System.ComponentModel.CancelEventHandler " Usage="member this.Closing : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-326">폼이 닫히는 동안 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-326">Occurs when the form is closing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="8bcbb-327">합니다 <xref:System.Windows.Forms.Form.Closing> 이벤트는.NET Framework 버전 2.0에서에서 사용 되지 않으므로 사용 된 <xref:System.Windows.Forms.Form.FormClosing> 이벤트 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-327">The <xref:System.Windows.Forms.Form.Closing> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosing> event instead.</span></span>  
  
 <span data-ttu-id="8bcbb-328"><xref:System.Windows.Forms.Form.Closing> 는 폼이 닫히는 이벤트 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-328">The <xref:System.Windows.Forms.Form.Closing> event occurs as the form is being closed.</span></span> <span data-ttu-id="8bcbb-329">폼이 닫히면 개체 내에서 만든 리소스를 모두 해제 되 고 폼은 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-329">When a form is closed, all resources created within the object are released and the form is disposed.</span></span> <span data-ttu-id="8bcbb-330">이 이벤트를 취소 하면 폼 열린 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-330">If you cancel this event, the form remains opened.</span></span> <span data-ttu-id="8bcbb-331">폼의 클로저에 취소 하려면를 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.ComponentModel.CancelEventArgs> 이벤트 처리기에 전달 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-331">To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="8bcbb-332">폼을 모달 대화 상자로 표시 되 면 클릭 하는 **닫기** 단추 (폼의 오른쪽 위 모서리에 있는 x 단추) 하면 폼이 표시 되지 않도록 하며 <xref:System.Windows.Forms.Form.DialogResult%2A> 속성을 설정할 `DialogResult.Cancel`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-332">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="8bcbb-333">에 할당 된 값을 재정의할 수 있습니다는 <xref:System.Windows.Forms.Form.DialogResult%2A> 클릭할 때 속성을 **닫기** 설정 하 여 단추를 <xref:System.Windows.Forms.Form.DialogResult%2A> 속성에 대 한 이벤트 처리기에서는 <xref:System.Windows.Forms.Form.Closing> 폼의 이벤트.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-333">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-334">경우는 <xref:System.Windows.Forms.Form.Close%2A> 메서드를 호출을 <xref:System.Windows.Forms.Form> 모덜리스 창으로 표시를 호출할 수 없습니다는 <xref:System.Windows.Forms.Control.Show%2A> 양식의 리소스가 이미 해제 되었으므로 때문에 폼을 표시 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-334">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="8bcbb-335">폼을 숨기고 표시를 사용 하 여 확인 된 <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-335">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8bcbb-336"><xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> 및 <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> 이벤트는 발생 하는 경우를 <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> 메서드를 호출 하 여 응용 프로그램을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-336">The <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="8bcbb-337">유효성 검사 코드를 실행 해야 하는 이러한 이벤트 중 하나가 있는 경우 호출 해야 합니다 <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> 메서드를 호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한는 <xref:System.Windows.Forms.Application.Exit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-337">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 <span data-ttu-id="8bcbb-338">폼이 MDI 부모 폼에는 <xref:System.Windows.Forms.Form.Closing> MDI 부모 폼의 하기 전에 모든 MDI 자식 폼의 이벤트는 발생 <xref:System.Windows.Forms.Form.Closing> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-338">If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="8bcbb-339">또한 합니다 <xref:System.Windows.Forms.Form.Closed> 모든 MDI 자식 폼의 이벤트 발생 하기 전에 <xref:System.Windows.Forms.Form.Closed> MDI 부모 폼의 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-339">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span> <span data-ttu-id="8bcbb-340">취소는 <xref:System.Windows.Forms.Form.Closing> MDI 자식 폼의 이벤트 해도 <xref:System.Windows.Forms.Form.Closing> 발생 하지 MDI 부모 폼의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-340">Canceling the <xref:System.Windows.Forms.Form.Closing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.Closing> event of the MDI parent form from being raised.</span></span> <span data-ttu-id="8bcbb-341">그러나로 설정 됩니다 이벤트를 취소 `true` 는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.ComponentModel.CancelEventArgs> 부모 폼에 매개 변수로 전달 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-341">However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> that is passed as a parameter to the parent form.</span></span> <span data-ttu-id="8bcbb-342">모든 MDI 부모 및 자식 폼을 닫습니다, 설정 된 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `false` 를 mdi 부모 폼입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-342">To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.</span></span>  
  
 <span data-ttu-id="8bcbb-343">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-343">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-344">다음 코드 예제에서는 <xref:System.Windows.Forms.Form.Closing> 테스트에서 텍스트를 <xref:System.Windows.Forms.TextBox> 변경 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-344">The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed.</span></span> <span data-ttu-id="8bcbb-345">가 있는 경우 사용자는 것인지 묻는 메시지가 나타나면 파일에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-345">If it has, the user is asked whether to save the changes to a file.</span></span>  
  
 [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]
 [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]
 [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ControlBox">
      <MemberSignature Language="C#" Value="public bool ControlBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ControlBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlBox { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ControlBox : bool with get, set" Usage="System.Windows.Forms.Form.ControlBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-346">폼의 캡션 표시줄에 컨트롤 상자가 표시되는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-346">Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-347">
            <see langword="true" /> 폼의 오른쪽 위 모퉁이에 컨트롤 상자가 표시 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-347">
              <see langword="true" /> if the form displays a control box in the upper-right corner of the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-348">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-348">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-349">경우는 <xref:System.Windows.Forms.Form.ControlBox%2A> 속성이 `true`, 캡션 표시줄의 오른쪽 위 모퉁이에 컨트롤 상자가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-349">If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is set to `true`, the control box is displayed in the upper-right corner of the caption bar.</span></span> <span data-ttu-id="8bcbb-350">컨트롤 상자는 최소화, 최대화 및 닫기 단추에 단추는 또한 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-350">The control box can include minimize, maximize, and help buttons in addition to a close button.</span></span> <span data-ttu-id="8bcbb-351">에 대 한 합니다 `ControlBox` 속성을 적용 합니다 양식의 설정 해야 <xref:System.Windows.Forms.Form.FormBorderStyle%2A> 속성을 <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>를 <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, 또는 <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-351">For the `ControlBox` property to have any effect, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8bcbb-352">설정 하는 경우 <xref:System.Windows.Forms.Form.ControlBox%2A> 를 `false` 설정 합니다 <xref:System.Windows.Forms.Form.Location%2A> 속성인을 <xref:System.Windows.Forms.Form.Size%2A> 폼의 속성에서 비클라이언트 영역의 폼에 숨겨진 반영 하도록 업데이트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-352">If you set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and also set the <xref:System.Windows.Forms.Form.Location%2A> property, the <xref:System.Windows.Forms.Form.Size%2A> property of the form is not updated to reflect that the non-client area of the form has been hidden.</span></span> <span data-ttu-id="8bcbb-353">이 문제를 해결 하려면 변경 하는 코드를 추가 합니다 <xref:System.Windows.Forms.Form.Location%2A> 속성에는 <xref:System.Windows.Forms.Control.HandleCreated> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-353">To fix this problem, put the code that alters the <xref:System.Windows.Forms.Form.Location%2A> property in the <xref:System.Windows.Forms.Control.HandleCreated> event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-354">로 설정 하면 `false`, <xref:System.Windows.Forms.Form.ControlBox%2A> 속성이 생성 시 최대화 표시 되는 다중 문서 MDI (인터페이스) 자식 폼에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-354">When set to `false`, the <xref:System.Windows.Forms.Form.ControlBox%2A> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-355">다음 코드 예제에서는 합니다 <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.FormBorderStyle%2A>를 <xref:System.Windows.Forms.Form.MaximizeBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, 및 <xref:System.Windows.Forms.Form.StartPosition%2A> 모든 테두리 또는 캡션 상자 있지 않은 폼을 만들기 위한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-355">The following code example uses the <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to create a form that does not have any border or caption box.</span></span> <span data-ttu-id="8bcbb-356">이 예제에서 만든 양식 응용 프로그램에 대 한 시작 화면을 만들려면 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-356">The form created in this example could be used to create a splash screen for an application.</span></span> <span data-ttu-id="8bcbb-357">이 예제에서는 메서드가 폼 클래스에 정의 되며 라는 폼이 초기화 되는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-357">The example requires that the example's method is defined in a form class and called when the form is being initialized.</span></span>  
  
 [!code-cpp[Classic Form.ControlBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ControlBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ControlBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ControlBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ShowIcon" />
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="form.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-358">컨트롤에 대한 컨트롤 컬렉션의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-358">Creates a new instance of the control collection for the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-359">컨트롤에 할당된 <see cref="T:System.Windows.Forms.Control.ControlCollection" />의 새 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-359">A new instance of <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assigned to the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControlsInstance" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="form.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-360">폼에 대한 핸들을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-360">Creates the handle for the form.</span>
          </span>
          <span data-ttu-id="8bcbb-361">파생된 클래스가 이 함수를 재정의하려면 기본 구현을 호출해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-361">If a derived class overrides this function, it must call the base implementation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bcbb-362">이 <see cref="T:System.Windows.Forms.Form" />에 대한 핸들은 이미 만들어졌습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-362">A handle for this <see cref="T:System.Windows.Forms.Form" /> has already been created.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.Form.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-363">컨트롤 핸들이 만들어지는 경우 필요한 작성 매개 변수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-363">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-364">컨트롤 핸들을 만들 때 필요한 작성 매개 변수가 포함된 <see cref="T:System.Windows.Forms.CreateParams" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-364">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivate;" />
      <MemberSignature Language="F#" Value="member this.Deactivate : EventHandler " Usage="member this.Deactivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-365">폼이 포커스를 잃고 비활성 상태가 될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-365">Occurs when the form loses focus and is no longer the active form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-366">비활성화 된 폼에서 데이터를 사용 하 여 응용 프로그램의 다른 창을 업데이트 하는 등의 작업을 수행 하려면이 이벤트를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-366">You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.</span></span>  
  
 <span data-ttu-id="8bcbb-367">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-367">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-368">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-368">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-369">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.Deactivate> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-369">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Deactivate> event.</span></span> <span data-ttu-id="8bcbb-370">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-370">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-371">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-371">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-372">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-372">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-373">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.Deactivate> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-373">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Deactivate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#393](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#393)]
 [!code-vb[System.Windows.Forms.EventExamples#393](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#393)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
        <altmember cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.Form.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-374">컨트롤에서 지원하는 기본 IME(입력기) 모드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-374">Gets the default Input Method Editor (IME) mode supported by the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-375">
            <see cref="T:System.Windows.Forms.ImeMode" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-375">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-376">입력된 방법 편집기 IME ()는 표준 키보드를 사용 하 여 복잡 한 예: 일본어 간지 문자 기호를 입력할 수 있게 해 주는 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-376">An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</span></span>  
  
 <span data-ttu-id="8bcbb-377">구현 되는 <xref:System.Windows.Forms.Form> 클래스에서이 속성은 항상 반환는 <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-377">As implemented in the <xref:System.Windows.Forms.Form> class, this property always returns the <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="8bcbb-378">이 속성의 값에 할당 되는 <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-378">The value of this property is assigned to the <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.Form.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-379">컨트롤의 기본 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-379">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-380">컨트롤의 기본 <see cref="T:System.Drawing.Size" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-380">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected override void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.DefWndProc :  -&gt; unit" Usage="form.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="8bcbb-381">처리할 Windows <see cref="T:System.Windows.Forms.Message" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-381">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-382">지정된 메시지를 기본 창 프로시저로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-382">Sends the specified message to the default window procedure.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DesktopBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle DesktopBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DesktopBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DesktopBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property DesktopBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle DesktopBounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.DesktopBounds : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.Form.DesktopBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-383">Windows 데스크톱에서 폼의 크기 및 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-383">Gets or sets the size and location of the form on the Windows desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-384">데스크톱 좌표를 사용하여 Windows 데스크톱에서 폼의 경계를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-384">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the form on the Windows desktop using desktop coordinates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-385">데스크톱 좌표는 화면 작업 표시줄을 제외 하는 작업 영역을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-385">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="8bcbb-386">데스크톱의 좌표계는 픽셀 기반입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-386">The coordinate system of the desktop is pixel-based.</span></span> <span data-ttu-id="8bcbb-387">응용 프로그램은 다중 모니터 시스템에서 실행 하는 경우 폼의 좌표가 결합 된 바탕 화면 좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-387">If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.</span></span>  
  
 <span data-ttu-id="8bcbb-388">이 속성은 크기와 다른 폼 이나 응용 프로그램을 기준으로 폼을 Windows 바탕 화면에서 위치를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-388">You can use this property to size and position a form relative to other forms or applications on the Windows desktop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-389">다음 코드 예제에서는 폼은 바탕 화면의 위쪽에서 데스크톱 자에서 50 픽셀의 왼쪽된 테두리에서 50 픽셀 위치 지정된 있도록 폼의 위치와 크기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-389">The following code example sets the size and position of a form so that the form is positioned 50 pixels from the left border of the desktop and 50 pixels from the top of the desktop.</span></span> <span data-ttu-id="8bcbb-390">이 예제에서는 메서드를 폼 클래스 내에서 정의 되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-390">This example requires that the method is defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.DesktopBounds Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DesktopBounds Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DesktopBounds Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.DesktopLocation" />
      </Docs>
    </Member>
    <Member MemberName="DesktopLocation">
      <MemberSignature Language="C#" Value="public System.Drawing.Point DesktopLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point DesktopLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DesktopLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property DesktopLocation As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point DesktopLocation { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.DesktopLocation : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Form.DesktopLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-391">Windows 데스크톱에서 폼의 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-391">Gets or sets the location of the form on the Windows desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-392">데스크톱에서 폼의 위치를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-392">A <see cref="T:System.Drawing.Point" /> that represents the location of the form on the desktop.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-393">데스크톱 좌표는 화면 작업 표시줄을 제외 하는 작업 영역을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-393">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="8bcbb-394">데스크톱 좌표 시스템은 픽셀 기반입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-394">The coordinate system of the desktop is pixel based.</span></span> <span data-ttu-id="8bcbb-395">응용 프로그램은 다중 모니터 시스템에서 실행 하는 경우 폼의 좌표가 결합 된 바탕 화면 좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-395">If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.</span></span>  
  
 <span data-ttu-id="8bcbb-396">Windows 바탕 화면에서 다른 폼과 응용 프로그램을 기준으로 폼을 배치 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-396">You can use this property to position your form relative to other forms and applications on the Windows desktop.</span></span>  
  
 <span data-ttu-id="8bcbb-397">호출 하는 경우는 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> 메서드를 호출 하기 전에 <xref:System.Windows.Forms.Form.Show%2A> 메서드를 폼에 운영 체제에 의해 결정 되는 기본 위치에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-397">If you call the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method before calling the <xref:System.Windows.Forms.Form.Show%2A> method, your form will be positioned at its default location, which is determined by the operating system.</span></span> <span data-ttu-id="8bcbb-398">창 위치를 지정 하는 방법에 대 한 자세한 내용은 MSDN library의 "창 기능" 문서 "창 크기 및 위치" 섹션을 참조 하세요. http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-398">For more information about window positioning, see the "Window Size and Position" section of the "Window Features" document in the MSDN library at http://msdn.microsoft.com/library.</span></span>  
  
 <span data-ttu-id="8bcbb-399">호출 하는 경우 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> 호출한 후 <xref:System.Windows.Forms.Form.Show%2A>, 폼 지정한 위치에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-399">If you call <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> after calling <xref:System.Windows.Forms.Form.Show%2A>, your form will be positioned at the location you specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-400">다음 코드 예제는 바탕 화면의 위쪽에서 데스크톱 및 100 픽셀의 왼쪽된 테두리에서 위치 지정된 100 픽셀 형식은 있도록 폼의 위치를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-400">The following code example sets the position of a form so that the form is positioned 100 pixels from the left border of the desktop and 100 pixels from the top of the desktop.</span></span> <span data-ttu-id="8bcbb-401">이 예제에서는 폼 클래스 내에 메서드가 정의 되어 있는지 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-401">This example requires that method has been defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.DesktopLocation Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DesktopLocation Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DesktopLocation Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : System.Windows.Forms.DialogResult with get, set" Usage="System.Windows.Forms.Form.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-402">폼의 대화 상자 결과를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-402">Gets or sets the dialog result for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-403">폼이 대화 상자로 사용되는 경우 해당 폼의 결과를 나타내는 <see cref="T:System.Windows.Forms.DialogResult" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-403">A <see cref="T:System.Windows.Forms.DialogResult" /> that represents the result of the form when used as a dialog box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-404">폼의 대화 상자 결과는 모달 대화 상자로 표시 되 면 폼에서 반환 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-404">The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box.</span></span> <span data-ttu-id="8bcbb-405">폼이 대화 상자로 표시를 하는 경우이 속성의 값으로 설정 합니다 <xref:System.Windows.Forms.DialogResult> 열거형 형식에 대 한 대화 상자의 결과 값을 설정, 모달 대화 상자를 숨기고 호출 폼에 컨트롤을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-405">If the form is displayed as a dialog box, setting this property with a value from the <xref:System.Windows.Forms.DialogResult> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form.</span></span> <span data-ttu-id="8bcbb-406">이 속성은 일반적으로으로 설정 합니다 <xref:System.Windows.Forms.Button.DialogResult%2A> 의 속성을 <xref:System.Windows.Forms.Button> 폼에서 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-406">This property is typically set by the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> control on the form.</span></span> <span data-ttu-id="8bcbb-407">클릭할 때를 <xref:System.Windows.Forms.Button> 컨트롤에 할당 된 값을 <xref:System.Windows.Forms.Button.DialogResult%2A> 의 속성을 <xref:System.Windows.Forms.Button> 에 할당 된는 <xref:System.Windows.Forms.Form.DialogResult%2A> 폼의 속성.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-407">When the user clicks the <xref:System.Windows.Forms.Button> control, the value assigned to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of the <xref:System.Windows.Forms.Button> is assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.</span></span>  
  
 <span data-ttu-id="8bcbb-408">폼을 모달 대화 상자로 표시 되 면 클릭 하는 **닫기** 단추 (폼의 오른쪽 위 모서리에 있는 x 단추) 하면 폼이 표시 되지 않도록 하며 <xref:System.Windows.Forms.Form.DialogResult%2A> 속성을 설정할 `DialogResult.Cancel`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-408">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="8bcbb-409"><xref:System.Windows.Forms.Form.Close%2A> 메서드를 클릭할 때 자동으로 호출 하지 않으면를 **닫기** 대화 상자의 단추의 값을 가져오거나는 <xref:System.Windows.Forms.Form.DialogResult%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-409">The <xref:System.Windows.Forms.Form.Close%2A> method is not automatically called when the user clicks the **Close** button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="8bcbb-410">대신 폼 숨겨져 있고 대화 상자의 새 인스턴스를 만들지 않고 다시 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-410">Instead, the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="8bcbb-411">이 동작으로 인해 호출 해야 합니다는 <xref:System.Windows.Forms.Control.Dispose%2A> 폼은 더 이상 필요 없는 응용 프로그램에서 폼의 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-411">Because of this behavior, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="8bcbb-412">이 속성을 사용 하 여 대화 상자에서 수행 된 작업을 제대로 처리 하기 위해 대화 상자를 닫은 하는 방법을 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-412">You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-413">에 할당 된 값을 재정의할 수 있습니다는 <xref:System.Windows.Forms.Form.DialogResult%2A> 클릭할 때 속성을 **닫기** 설정 하 여 단추를 <xref:System.Windows.Forms.Form.DialogResult%2A> 속성에 대 한 이벤트 처리기에서는 <xref:System.Windows.Forms.Form.Closing> 폼의 이벤트.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-413">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-414">경우는 <xref:System.Windows.Forms.Form> 모덜리스 창에서 반환 된 값으로 표시 되는 <xref:System.Windows.Forms.Form.DialogResult%2A> 속성 폼이 닫힐 때 폼의 리소스가 자동으로 해제 하기 때문에 폼에 사용 된 값을 반환 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-414">If a <xref:System.Windows.Forms.Form> is displayed as a modeless window, the value returned by the <xref:System.Windows.Forms.Form.DialogResult%2A> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-415">다음 코드 예제에서는 폼을 대화 상자로 표시 하 고 참조 하 여 폼의 확인 또는 취소 단추를 클릭 한 여부를 나타내는 메시지 상자를 표시 합니다 <xref:System.Windows.Forms.Form.DialogResult%2A> 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-415">The following code example displays a form as a dialog box and displays a message box indicating whether the OK or Cancel button of the form was clicked by referencing the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.</span></span>  
  
 [!code-cpp[Classic Form.DialogResult Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DialogResult Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DialogResult Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DialogResult Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="8bcbb-416">지정된 값이 유효한 값 범위를 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-416">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.DialogResult" />
        <altmember cref="P:System.Windows.Forms.Button.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="form.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8bcbb-417">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-417">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-418">
            <see cref="T:System.Windows.Forms.Form" />에서 사용하는 리소스(메모리 제외)를 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-418">Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-419">이 메서드는 공용 `Dispose` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-419">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="8bcbb-420">`Dispose` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-420">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="8bcbb-421"><xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-421"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="8bcbb-422">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Windows.Forms.Form>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-422">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Form> references.</span></span> <span data-ttu-id="8bcbb-423">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-423">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 <span data-ttu-id="8bcbb-424"><xref:System.Windows.Forms.Form.Dispose%2A> 사용 하 여 폼이 표시 하는 경우 자동으로 호출할 수는 <xref:System.Windows.Forms.Form.Show%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-424"><xref:System.Windows.Forms.Form.Dispose%2A> will be called automatically if the form is shown using the <xref:System.Windows.Forms.Form.Show%2A> method.</span></span> <span data-ttu-id="8bcbb-425">경우 같은 다른 메서드 <xref:System.Windows.Forms.Form.ShowDialog%2A> 를 사용 하거나 폼이 전혀 표시 되지 않는 호출 해야 합니다 <xref:System.Windows.Forms.Form.Dispose%2A> 응용 프로그램 내에서 직접.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-425">If another method such as <xref:System.Windows.Forms.Form.ShowDialog%2A> is used, or the form is never shown at all, you must call <xref:System.Windows.Forms.Form.Dispose%2A> yourself within your application.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-426">
            <para>
              <see langword="Dispose" /> 다른 개체에서 여러 번 호출할 수 있습니다. <see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-426">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.Forms.DpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.Forms.DpiChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-427">양식이 현재 표시되어 있는 디스플레이 장치에서 DPI 설정이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-427">Occurs when the DPI setting changes on the display device where the form is currently displayed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormBorderStyle FormBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormBorderStyle FormBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.FormBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FormBorderStyle As FormBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormBorderStyle FormBorderStyle { System::Windows::Forms::FormBorderStyle get(); void set(System::Windows::Forms::FormBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FormBorderStyle : System.Windows.Forms.FormBorderStyle with get, set" Usage="System.Windows.Forms.Form.FormBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-428">폼의 테두리 스타일을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-428">Gets or sets the border style of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-429">폼에 표시되는 테두리의 스타일을 나타내는 <see cref="T:System.Windows.Forms.FormBorderStyle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-429">A <see cref="T:System.Windows.Forms.FormBorderStyle" /> that represents the style of border to display for the form.</span>
          </span>
          <span data-ttu-id="8bcbb-430">기본값은 <see langword="FormBorderStyle.Sizable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-430">The default is <see langword="FormBorderStyle.Sizable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-431">폼의 테두리 스타일 폼의 바깥쪽 가장자리에 표시 되는 방식을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-431">The border style of the form determines how the outer edge of the form appears.</span></span> <span data-ttu-id="8bcbb-432">폼에 대 한 테두리 표시를 변경 하는 것 외에도 특정 테두리 스타일의 크기도 조정할 폼을 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-432">In addition to changing the border display for a form, certain border styles prevent the form from being sized.</span></span> <span data-ttu-id="8bcbb-433">예를 들어를 `FormBorderStyle.FixedDialog` 테두리 스타일입니다. 대화 상자를 폼의 테두리를 변경 하 고 폼 크기를 조정 하는 것을 금지 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-433">For example, the `FormBorderStyle.FixedDialog` border style changes the border of the form to that of a dialog box and prevents the form from being resized.</span></span> <span data-ttu-id="8bcbb-434">테두리 스타일 크기 또는 폼의 캡션 표시줄 섹션의 가용성에도 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-434">The border style can also affect the size or availability of the caption bar section of a form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-435">사용 하 여는 <xref:System.Windows.Forms.FormBorderStyle.Sizable> 스타일 수 없는 특정 최소 값 이하로 창의 크기를 조정 하려면 설정한 경우에 <xref:System.Windows.Forms.Form.ControlBox%2A> 하 `false` 길이가 0 인 문자열을 할당 하 고 <xref:System.Windows.Forms.Form.Text%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-435">With the <xref:System.Windows.Forms.FormBorderStyle.Sizable> style, it is impossible to resize the window below a certain minimum value, even if you have set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and assigned a zero-length string to <xref:System.Windows.Forms.Form.Text%2A>.</span></span> <span data-ttu-id="8bcbb-436">사용 하 여이 문제를 해결 하는 작업을 고려 합니다 <xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> 대신 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-436">Consider working around this by using the <xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-437">다음 코드 예제에서는의 새 인스턴스를 만듭니다는 <xref:System.Windows.Forms.Form> 호출을 <xref:System.Windows.Forms.Form.ShowDialog%2A> 폼을 대화 상자로 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-437">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="8bcbb-438">예제에서는 합니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, 및 <xref:System.Windows.Forms.Form.StartPosition%2A> 대화 상자에 모양 및 폼의 기능을 변경 하려면 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-438">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="8bcbb-439">또한이 예제에서는 합니다 <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> 양식의 메서드의 <xref:System.Windows.Forms.Control.Controls%2A> 추가할 두 컬렉션 <xref:System.Windows.Forms.Button> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-439">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="8bcbb-440">이 예제에서는 사용 된 <xref:System.Windows.Forms.Form.HelpButton%2A> 속성 대화 상자 캡션 표시줄에 도움말 단추를 표시 하려면.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-440">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="8bcbb-441">지정된 값이 유효한 값 범위를 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-441">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="FormClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.FormClosedEventHandler FormClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.FormClosedEventHandler FormClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.FormClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormClosed As FormClosedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::FormClosedEventHandler ^ FormClosed;" />
      <MemberSignature Language="F#" Value="member this.FormClosed : System.Windows.Forms.FormClosedEventHandler " Usage="member this.FormClosed : System.Windows.Forms.FormClosedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-442">폼이 닫힌 후 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-442">Occurs after the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-443"><xref:System.Windows.Forms.Form.FormClosed> 이벤트 또는 사용자가 폼이 닫힌 후 발생 합니다 <xref:System.Windows.Forms.Form.Close%2A> 메서드 또는 <xref:System.Windows.Forms.Application.Exit%2A> 메서드를 <xref:System.Windows.Forms.Application> 클래스.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-443">The <xref:System.Windows.Forms.Form.FormClosed> event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method or the <xref:System.Windows.Forms.Application.Exit%2A> method of the <xref:System.Windows.Forms.Application> class.</span></span> <span data-ttu-id="8bcbb-444">처리할 폼을 닫는 하지 않도록 하려면를 <xref:System.Windows.Forms.Form.FormClosing> 이벤트 집합과 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.ComponentModel.CancelEventArgs> 이벤트 처리기에 전달 `true`.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-444">To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.FormClosing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="8bcbb-445">폼에 사용 된 리소스를 해제 하는 등 작업을 수행 하 및 양식에 입력 된 정보를 저장 또는 해당 부모 폼을 업데이트 하려면이 이벤트를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-445">You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</span></span>  
  
 <span data-ttu-id="8bcbb-446">폼이 (MDI) 다중 문서 인터페이스 부모 폼 이면 합니다 <xref:System.Windows.Forms.Form.FormClosing> 모든 MDI 자식 폼의 MDI 부모 폼의 하기 전에 발생 <xref:System.Windows.Forms.Form.FormClosing> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-446">If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised.</span></span> <span data-ttu-id="8bcbb-447">마찬가지로 합니다 <xref:System.Windows.Forms.Form.FormClosed> 모든 MDI 자식 폼의 이벤트 발생 하기 전에 <xref:System.Windows.Forms.Form.FormClosed> MDI 부모 폼의 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-447">Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.</span></span>  
  
 <span data-ttu-id="8bcbb-448">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-448">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-449">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-449">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-450">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.FormClosed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-450">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosed> event.</span></span> <span data-ttu-id="8bcbb-451">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-451">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-452">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-452">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-453">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-453">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-454">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.FormClosed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-454">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosed> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#395](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#395)]
 [!code-vb[System.Windows.Forms.EventExamples#395](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#395)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="FormClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.FormClosingEventHandler FormClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.FormClosingEventHandler FormClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.FormClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormClosing As FormClosingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::FormClosingEventHandler ^ FormClosing;" />
      <MemberSignature Language="F#" Value="member this.FormClosing : System.Windows.Forms.FormClosingEventHandler " Usage="member this.FormClosing : System.Windows.Forms.FormClosingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormClosingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-455">폼이 닫히기 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-455">Occurs before the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-456"><xref:System.Windows.Forms.Form.FormClosing> 는 폼이 닫히는 이벤트 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-456">The <xref:System.Windows.Forms.Form.FormClosing> event occurs as the form is being closed.</span></span> <span data-ttu-id="8bcbb-457">폼이 닫히면 삭제 되 고 폼을 사용 하 여 연결 된 모든 리소스를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-457">When a form is closed, it is disposed, releasing all resources associated with the form.</span></span> <span data-ttu-id="8bcbb-458">이 이벤트를 취소 하면 폼 열린 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-458">If you cancel this event, the form remains opened.</span></span> <span data-ttu-id="8bcbb-459">폼의 클로저에 취소 하려면를 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Windows.Forms.FormClosingEventArgs> 이벤트 처리기에 전달 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-459">To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="8bcbb-460">폼을 모달 대화 상자로 표시 되 면 클릭 하는 **닫기** 단추 (폼의 오른쪽 위 모서리에 있는 x 단추) 하면 폼이 표시 되지 않도록 하며 <xref:System.Windows.Forms.Form.DialogResult%2A> 속성을 설정할 `DialogResult.Cancel`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-460">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="8bcbb-461">에 할당 된 값을 재정의할 수 있습니다는 <xref:System.Windows.Forms.Form.DialogResult%2A> 클릭할 때 속성을 **닫기** 설정 하 여 단추를 <xref:System.Windows.Forms.Form.DialogResult%2A> 속성에 대 한 이벤트 처리기에서는 <xref:System.Windows.Forms.Form.FormClosing> 폼의 이벤트.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-461">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.FormClosing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-462">경우는 <xref:System.Windows.Forms.Form.Close%2A> 메서드를 호출을 <xref:System.Windows.Forms.Form> 모덜리스 창으로 표시를 호출할 수 없습니다는 <xref:System.Windows.Forms.Control.Show%2A> 양식의 리소스가 이미 해제 되었으므로 때문에 폼을 표시 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-462">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="8bcbb-463">폼을 숨기고 표시를 사용 하 여 확인 된 <xref:System.Windows.Forms.Control.Hide%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-463">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A> method.</span></span>  
  
 <span data-ttu-id="8bcbb-464">폼이 (MDI) 다중 문서 인터페이스 부모 폼 이면 합니다 <xref:System.Windows.Forms.Form.FormClosing> 모든 MDI 자식 폼의 MDI 부모 폼의 하기 전에 발생 <xref:System.Windows.Forms.Form.FormClosing> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-464">If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised.</span></span> <span data-ttu-id="8bcbb-465">마찬가지로 합니다 <xref:System.Windows.Forms.Form.FormClosed> 모든 MDI 자식 폼의 이벤트 발생 하기 전에 <xref:System.Windows.Forms.Form.FormClosed> MDI 부모 폼의 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-465">Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.</span></span> <span data-ttu-id="8bcbb-466">취소는 <xref:System.Windows.Forms.Form.FormClosing> MDI 자식 폼의 이벤트 해도 <xref:System.Windows.Forms.Form.FormClosing> 발생 하지 MDI 부모 폼의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-466">Canceling the <xref:System.Windows.Forms.Form.FormClosing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.FormClosing> event of the MDI parent form from being raised.</span></span> <span data-ttu-id="8bcbb-467">그러나로 설정 됩니다 이벤트를 취소 `true` 는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Windows.Forms.FormClosingEventArgs> 부모 폼에 매개 변수로 전달 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-467">However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> class that is passed as a parameter to the parent form.</span></span> <span data-ttu-id="8bcbb-468">모든 MDI 부모 및 자식 폼을 닫습니다, 설정 된 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `false` 를 mdi 부모 폼입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-468">To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.</span></span>  
  
 <span data-ttu-id="8bcbb-469">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-469">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-470">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-470">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-471">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.FormClosing> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-471">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosing> event.</span></span> <span data-ttu-id="8bcbb-472">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-472">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-473">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-473">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-474">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-474">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-475">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.FormClosing> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-475">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosing> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#394](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#394)]
 [!code-vb[System.Windows.Forms.EventExamples#394](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#394)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="GetAutoScaleSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.SizeF GetAutoScaleSize (System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF GetAutoScaleSize(class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::SizeF GetAutoScaleSize(System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member GetAutoScaleSize : System.Drawing.Font -&gt; System.Drawing.SizeF" Usage="System.Windows.Forms.Form.GetAutoScaleSize font" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This method has been deprecated. Use the AutoScaleDimensions property instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="font">
          <span data-ttu-id="8bcbb-476">자동 조정되는 폼의 기본 크기를 결정하기 위한 글꼴을 나타내는 <see cref="T:System.Drawing.Font" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-476">A <see cref="T:System.Drawing.Font" /> representing the font to determine the autoscaled base size of the form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-477">지정된 글꼴에 따라 폼의 크기를 자동으로 조정하는 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-477">Gets the size when autoscaling the form based on a specified font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-478">자동으로 조정되는 폼의 크기를 나타내는 <see cref="T:System.Drawing.SizeF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-478">A <see cref="T:System.Drawing.SizeF" /> representing the autoscaled size of the form.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8bcbb-479"><xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> 메서드는 사용 되지 않는.net Framework 버전 2.0입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-479">The <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method is obsolete in.NET Framework version 2.0.</span></span> <span data-ttu-id="8bcbb-480">이 멤버는 이전 버전과 호환성을 위해 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-480">This member has been retained for backward compatibility.</span></span> <span data-ttu-id="8bcbb-481">자동 크기 조정 하는 방법에 대 한 자세한 내용은 참조 하세요. [Windows Forms의 자동 크기 조정을](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-481">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="8bcbb-482">폼에 글꼴 폼을 적용 하기 전에 자동 크기 조정을 특정 글꼴에는 크기를 확인 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-482">You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form.</span></span> <span data-ttu-id="8bcbb-483">크기를 결정 하려는 경우는 특정 폼이를 폼에 사용 된 현재 글꼴에 따라, 사용 된 <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-483">If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetScaledBounds(valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetScaledBounds (bounds As Rectangle, factor As SizeF, specified As BoundsSpecified) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetScaledBounds(System::Drawing::Rectangle bounds, System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.GetScaledBounds : System.Drawing.Rectangle * System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; System.Drawing.Rectangle" Usage="form.GetScaledBounds (bounds, factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="bounds">
          <span data-ttu-id="8bcbb-484">디스플레이 범위를 검색할 영역을 지정하는 <see cref="T:System.Drawing.Rectangle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-484">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span>
          </span>
        </param>
        <param name="factor">
          <span data-ttu-id="8bcbb-485">컨트롤 범위의 높이 및 너비입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-485">The height and width of the control's bounds.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="8bcbb-486">크기 및 위치를 정의하는 데 사용할 컨트롤 범위를 지정하는 <see cref="T:System.Windows.Forms.BoundsSpecified" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-486">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-487">컨트롤의 배율이 조정되는 범위를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-487">Retrieves the bounds within which the control is scaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-488">컨트롤의 크기가 조정되는 범위를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-488">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="HelpButton">
      <MemberSignature Language="C#" Value="public bool HelpButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HelpButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.HelpButton" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HelpButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HelpButton : bool with get, set" Usage="System.Windows.Forms.Form.HelpButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-489">폼의 캡션 상자에 도움말 단추를 표시해야 하는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-489">Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-490">폼의 캡션 표시줄에 도움말 단추를 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-490">
              <see langword="true" /> to display a Help button in the form's caption bar; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-491">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-491">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-492">이 속성 설정 된 경우 `true`, 왼쪽의 캡션 표시줄에 물음표를 사용 하 여 작은 단추가 표시 합니다 **닫기** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-492">When this property is set to `true`, a small button with a question mark appears in the caption bar to the left of the **Close** button.</span></span> <span data-ttu-id="8bcbb-493">응용 프로그램에 대 한 도움말을 표시 하려면이 단추를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-493">You can use this button to display help for your application.</span></span> <span data-ttu-id="8bcbb-494">에 대 한 이벤트 처리기를 만들 수는 <xref:System.Windows.Forms.Control.HelpRequested> 폼의 도움말 단추를 클릭할 때 사용자에 게 도움말 정보를 표시 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-494">You can create an event handler for the <xref:System.Windows.Forms.Control.HelpRequested> event to display Help information to the user when the Help button of the form is clicked.</span></span>  

<span data-ttu-id="8bcbb-495">도움말 단추를 폼의 값을 표시할 <xref:System.Windows.Forms.Form.ControlBox> 속성 이어야 `true`를 기본값으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-495">To display a Help button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span> <span data-ttu-id="8bcbb-496"><xref:System.Windows.Forms.Form.ControlBox> 속성의 캡션 표시줄의 오른쪽 위 모퉁이 최대화 단추 최소화 단추, 도움말 단추를와 닫기 단추 컨트롤에 포함 되는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-496">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="8bcbb-497">또한 양식의 설정 해야 합니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A> 속성을 <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>를 <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>합니다 <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, 또는 <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-497">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  


> [!IMPORTANT]
>  <span data-ttu-id="8bcbb-498">값을 <xref:System.Windows.Forms.Form.HelpButton%2A> 속성은 무시 됩니다 합니다 **최대화** 또는 **최소화** 단추가 표시 되.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-498">The value of the <xref:System.Windows.Forms.Form.HelpButton%2A> property is ignored if the **Maximize** or **Minimize** buttons are shown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-499">다음 코드 예제에서는의 새 인스턴스를 만듭니다는 <xref:System.Windows.Forms.Form> 호출을 <xref:System.Windows.Forms.Form.ShowDialog%2A> 폼을 대화 상자로 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-499">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="8bcbb-500">예제에서는 합니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, 및 <xref:System.Windows.Forms.Form.StartPosition%2A> 대화 상자에 모양 및 폼의 기능을 변경 하려면 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-500">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="8bcbb-501">또한이 예제에서는 합니다 <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> 양식의 메서드의 <xref:System.Windows.Forms.Control.Controls%2A> 추가할 두 컬렉션 <xref:System.Windows.Forms.Button> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-501">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="8bcbb-502">이 예제에서는 사용 된 <xref:System.Windows.Forms.Form.HelpButton%2A> 속성 대화 상자 캡션 표시줄에 도움말 단추를 표시 하려면.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-502">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a Help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
        <altmember cref="E:System.Windows.Forms.Form.HelpButtonClicked" />
      </Docs>
    </Member>
    <Member MemberName="HelpButtonClicked">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler HelpButtonClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler HelpButtonClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.HelpButtonClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpButtonClicked As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ HelpButtonClicked;" />
      <MemberSignature Language="F#" Value="member this.HelpButtonClicked : System.ComponentModel.CancelEventHandler " Usage="member this.HelpButtonClicked : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-503">**도움말** 단추를 클릭하면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-503">Occurs when the **Help** button is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-504"><xref:System.Windows.Forms.Form.HelpButtonClicked> 이벤트가 발생할 때를 **도움말** 폼의 캡션 표시줄에 단추를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-504">The <xref:System.Windows.Forms.Form.HelpButtonClicked> event occurs when the **Help** button in the form's caption bar is clicked.</span></span> <span data-ttu-id="8bcbb-505">**도움말** 단추가 표시 됩니다 때 합니다 <xref:System.Windows.Forms.Form.HelpButton%2A> 속성이 `true`.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-505">The **Help** button is displayed when the <xref:System.Windows.Forms.Form.HelpButton%2A> property is set to `true`.</span></span> <span data-ttu-id="8bcbb-506"><xref:System.Windows.Forms.Form.HelpButtonClicked> 취소할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-506"><xref:System.Windows.Forms.Form.HelpButtonClicked> can be canceled.</span></span>  
  
 <span data-ttu-id="8bcbb-507">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-507">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-508">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-508">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-509">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.HelpButtonClicked> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-509">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.HelpButtonClicked> event.</span></span> <span data-ttu-id="8bcbb-510">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-510">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-511">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-511">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-512">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-512">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-513">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.HelpButtonClicked> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-513">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.HelpButtonClicked> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#388](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#388)]
 [!code-vb[System.Windows.Forms.EventExamples#388](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#388)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.HelpButton" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
        <altmember cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.HelpRequested" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Drawing.Icon with get, set" Usage="System.Windows.Forms.Form.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-514">폼의 아이콘을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-514">Gets or sets the icon for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-515">폼의 아이콘을 나타내는 <see cref="T:System.Drawing.Icon" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-515">An <see cref="T:System.Drawing.Icon" /> that represents the icon for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-516">폼의 컨트롤 상자에 표시 되는 아이콘 뿐 아니라 작업 표시줄에서 폼을 나타내는 그림을 지정 하는 폼의 아이콘입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-516">A form's icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.</span></span>  
  
 <span data-ttu-id="8bcbb-517">이 속성은 영향을 주지 않습니다 경우 <xref:System.Windows.Forms.Form.FormBorderStyle%2A> 로 설정 된 <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-517">This property will have no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span></span> <span data-ttu-id="8bcbb-518">이 경우 폼 아이콘을 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-518">In that case, the form will not display an icon.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguageChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.InputLanguageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InputLanguageChanged As InputLanguageChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InputLanguageChangedEventHandler ^ InputLanguageChanged;" />
      <MemberSignature Language="F#" Value="member this.InputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventHandler " Usage="member this.InputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguageChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-519">폼의 입력 언어가 변경된 후에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-519">Occurs after the input language of the form has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-520">폼의 모양 및 폼의 입력된 언어에 대 한 변경 내용을 기반으로 하는 텍스트를 변경 하려면이 이벤트를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-520">You can use this event to make changes to your form's appearance and text based on changes made to the input language of the form.</span></span>  
  
 <span data-ttu-id="8bcbb-521">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-521">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-522">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-522">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-523">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.InputLanguageChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-523">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.</span></span> <span data-ttu-id="8bcbb-524">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-524">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-525">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-525">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-526">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-526">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-527">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.InputLanguageChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-527">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <altmember cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguageChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.InputLanguageChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InputLanguageChanging As InputLanguageChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InputLanguageChangingEventHandler ^ InputLanguageChanging;" />
      <MemberSignature Language="F#" Value="member this.InputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventHandler " Usage="member this.InputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguageChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-528">폼의 입력 언어를 변경하려고 하면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-528">Occurs when the user attempts to change the input language for the form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-529">이 이벤트는 폼에 대 한 입력된 언어 변경 되기 전에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-529">This event occurs before the change of input language is made for the form.</span></span> <span data-ttu-id="8bcbb-530">설정 하 여 언어 변경 내용을 취소할 수 있습니다는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Windows.Forms.InputLanguageChangingEventArgs> 이벤트 처리기에 전달 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-530">You can cancel the language change by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.InputLanguageChangingEventArgs> passed to your event handler to `false`.</span></span> <span data-ttu-id="8bcbb-531">이벤트가 취소 되 면 입력된 언어 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-531">If the event is canceled, the input language is not changed.</span></span> <span data-ttu-id="8bcbb-532">이 이벤트를 사용 하 여 요청한 입력된 언어 변경 응용 프로그램에 적합 한지 여부를 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-532">You can use this event to determine whether the requested input language change is appropriate for your application.</span></span>  
  
 <span data-ttu-id="8bcbb-533">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-533">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-534">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-534">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-535">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.InputLanguageChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-535">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanging> event.</span></span> <span data-ttu-id="8bcbb-536">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-536">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-537">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-537">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-538">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-538">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-539">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.InputLanguageChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-539">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanging> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#401](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#401)]
 [!code-vb[System.Windows.Forms.EventExamples#401](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#401)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <altmember cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="IsMdiChild">
      <MemberSignature Language="C#" Value="public bool IsMdiChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMdiChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsMdiChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMdiChild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMdiChild { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMdiChild : bool" Usage="System.Windows.Forms.Form.IsMdiChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-540">폼이 MDI(다중 문서 인터페이스) 자식 폼인지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-540">Gets a value indicating whether the form is a multiple-document interface (MDI) child form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-541">폼이 MDI 자식 폼인 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-541">
              <see langword="true" /> if the form is an MDI child form; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-542">런타임에 MDI 자식 폼은 MDI 부모 폼의 클라이언트 영역 내에서 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-542">At run time, MDI child forms are displayed inside the client area of an MDI parent form.</span></span> <span data-ttu-id="8bcbb-543">MDI 자식 폼을 최대화, 최소화, 고 MDI 부모 폼 내에서 이동 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-543">An MDI child form can be maximized, minimized, and moved within the MDI parent form.</span></span> <span data-ttu-id="8bcbb-544">MDI 자식 폼을 만들려면 할당 합니다 <xref:System.Windows.Forms.Form> MDI 부모 폼 될를 <xref:System.Windows.Forms.Form.MdiParent%2A> 자식 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-544">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span> <span data-ttu-id="8bcbb-545">사용할 수는 <xref:System.Windows.Forms.Form.IsMdiContainer%2A> 속성을 폼이 MDI 부모 폼입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-545">You can use the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to determine whether a form is an MDI parent form.</span></span>  
  
 <span data-ttu-id="8bcbb-546">사용할 수는 <xref:System.Windows.Forms.Form.IsMdiChild%2A> 메서드 또는 속성에 의해 반환 된 폼 MDI 자식 폼 또는 대화 상자와 같은 응용 프로그램에서 표준 형식 인지 확인 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-546">You can use the <xref:System.Windows.Forms.Form.IsMdiChild%2A> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-547">모든 MDI 자식 폼 있고 많은 테두리, 컨트롤 메뉴 상자를 최소화 하 고 **최대화** 의 설정에 관계 없이 단추를 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, 및 <xref:System.Windows.Forms.Form.MaximizeBox%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-547">All MDI child forms have sizable borders, a control-menu box, and Minimize and **Maximize** buttons, regardless of the settings of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
      </Docs>
    </Member>
    <Member MemberName="IsMdiContainer">
      <MemberSignature Language="C#" Value="public bool IsMdiContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMdiContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsMdiContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMdiContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMdiContainer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMdiContainer : bool with get, set" Usage="System.Windows.Forms.Form.IsMdiContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-548">폼이 MDI(다중 문서 인터페이스) 자식 폼의 컨테이너인지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-548">Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-549">폼이 MDI 자식 폼의 컨테이너인 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-549">
              <see langword="true" /> if the form is a container for MDI child forms; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-550">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-550">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-551">이 속성에 MDI 부모 폼을 표시 및 폼의 동작을 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-551">This property changes the display and behavior of the form to an MDI parent form.</span></span> <span data-ttu-id="8bcbb-552">이 속성 설정 된 경우 `true`, 볼록된 테두리를 사용 하 여 오목 클라이언트 영역을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-552">When this property is set to `true`, the form displays a sunken client area with a raised border.</span></span> <span data-ttu-id="8bcbb-553">부모 폼에 사용 된 모든 MDI 자식 폼의 클라이언트 영역 내에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-553">All MDI child forms assigned to the parent form are displayed within its client area.</span></span>  
  
 <span data-ttu-id="8bcbb-554">MDI 부모 폼이 닫히면 합니다 <xref:System.Windows.Forms.Form.Closing> MDI 부모 폼의 하기 전에 모든 MDI 자식 폼의 이벤트는 발생 <xref:System.Windows.Forms.Form.Closing> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-554">When an MDI parent form is closed, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="8bcbb-555">또한 합니다 <xref:System.Windows.Forms.Form.Closed> 모든 MDI 자식 폼의 이벤트 발생 하기 전에 <xref:System.Windows.Forms.Form.Closed> MDI 부모 폼의 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-555">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-556">두 개 있는 경우 <xref:System.Windows.Forms.MenuStrip> 설정 하는 MDI 자식 폼의 컨트롤 <xref:System.Windows.Forms.Form.IsMdiContainer%2A> 하 `true` 부모 폼 병합 중 하나만 내용의 <xref:System.Windows.Forms.MenuStrip> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-556">If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls.</span></span> <span data-ttu-id="8bcbb-557">사용 하 여 <xref:System.Windows.Forms.ToolStripManager.Merge%2A> 내용을 병합 하 여 추가 자식 <xref:System.Windows.Forms.MenuStrip> MDI 부모 폼의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-557">Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-558">다음 코드 예제에서는 합니다 <xref:System.Windows.Forms.Form.IsMdiContainer%2A> 변경할 뿐 아니라 속성은 `BackColor` MDI 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-558">The following code example demonstrates using the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property as well as changing the `BackColor` property of an MDI Form.</span></span> <span data-ttu-id="8bcbb-559">이 예제를 실행 하려면 새 폼에 다음 코드를 붙여 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-559">To run this example, paste the following code in a new form.</span></span>  
  
 [!code-csharp[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
      </Docs>
    </Member>
    <Member MemberName="IsRestrictedWindow">
      <MemberSignature Language="C#" Value="public bool IsRestrictedWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRestrictedWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsRestrictedWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRestrictedWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRestrictedWindow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRestrictedWindow : bool" Usage="System.Windows.Forms.Form.IsRestrictedWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-560">폼에서 제한 없이 모든 창과 사용자 입력 이벤트를 사용할 수 있는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-560">Gets a value indicating whether the form can use all windows and user input events without restriction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-561">폼에 제한이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-561">
              <see langword="true" /> if the form has restrictions; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-562">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-562">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-563">합니다 <xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> 속성에 따라 결정 하는지 여부를 <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> 권한이 부여 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-563">The <xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> property determines whether the <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> permission is granted.</span></span> <span data-ttu-id="8bcbb-564">이 속성이 런타임에 폼의 생성자에서 설정 되 고 폼의 수명 동안 캐시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-564">This property is set at run time in the form's constructor, and is cached for the lifetime of the form.</span></span> <span data-ttu-id="8bcbb-565">부분 신뢰에서 실행 되는 Windows Forms 응용 프로그램 공용 언어 런타임 부모 생성자는 부분 신뢰 환경에서 항상 라고 보장이 검사를 피할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-565">Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPreview">
      <MemberSignature Language="C#" Value="public bool KeyPreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeyPreview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.KeyPreview" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeyPreview { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPreview : bool with get, set" Usage="System.Windows.Forms.Form.KeyPreview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-566">포커스가 있는 컨트롤에 이벤트가 전달되기 전에 폼이 키 이벤트를 받을지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-566">Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-567">폼이 모든 키 이벤트를 받는 경우 <see langword="true" />이고, 폼에서 현재 선택되어 있는 컨트롤이 키 이벤트를 받는 경우 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-567">
              <see langword="true" /> if the form will receive all key events; <see langword="false" /> if the currently selected control on the form receives key events.</span>
          </span>
          <span data-ttu-id="8bcbb-568">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-568">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-569">이 속성 설정 된 경우 `true`, 폼이 모든 받는 <xref:System.Windows.Forms.Control.KeyPress>를 <xref:System.Windows.Forms.Control.KeyDown>, 및 <xref:System.Windows.Forms.Control.KeyUp> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-569">When this property is set to `true`, the form will receive all <xref:System.Windows.Forms.Control.KeyPress>, <xref:System.Windows.Forms.Control.KeyDown>, and <xref:System.Windows.Forms.Control.KeyUp> events.</span></span> <span data-ttu-id="8bcbb-570">폼의 이벤트 처리기에서 키 입력을 처리를 완료 했으면 포커스가 있는 컨트롤에 할당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-570">After the form's event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus.</span></span> <span data-ttu-id="8bcbb-571">예를 들어 경우는 <xref:System.Windows.Forms.Form.KeyPreview%2A> 속성이로 설정 되어 `true` 현재 선택 된 컨트롤은을 <xref:System.Windows.Forms.TextBox>키 입력은 폼의 이벤트 처리기에서 처리 한 후는 <xref:System.Windows.Forms.TextBox> 컨트롤이 누른 키를 받게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-571">For example, if the <xref:System.Windows.Forms.Form.KeyPreview%2A> property is set to `true` and the currently selected control is a <xref:System.Windows.Forms.TextBox>, after the keystroke is handled by the event handlers of the form the <xref:System.Windows.Forms.TextBox> control will receive the key that was pressed.</span></span> <span data-ttu-id="8bcbb-572">만 폼 수준에서 키보드 이벤트를 처리 하 고 컨트롤이 키보드 이벤트를 수신할 수 없도록 설정 합니다 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> 폼의 속성 <xref:System.Windows.Forms.Control.KeyPress> 이벤트 처리기를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-572">To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event handler to `true`.</span></span>  
  
 <span data-ttu-id="8bcbb-573">이 속성을 사용 하 여 처리 하거나 응용 프로그램의 대부분의 키 입력을 처리 하거나 키 입력을 처리 하는 적절 한 컨트롤을 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-573">You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke.</span></span> <span data-ttu-id="8bcbb-574">예를 들어, 응용 프로그램 함수 키를 사용 하는 경우 키 입력 이벤트를 받을 수 있는 각 컨트롤에 대 한 코드를 작성 하는 대신 폼 수준에서 키 입력을 처리 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-574">For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-575">폼에 표시 되거나 설정 된 컨트롤이 없는 경우 자동으로 모든 키보드 이벤트를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-575">If a form has no visible or enabled controls, it automatically receives all keyboard events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-576">폼에서 컨트롤을 받는 모든 키 입력을 취소 하려면 프로그래밍할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-576">A control on a form may be programmed to cancel any keystrokes it receives.</span></span> <span data-ttu-id="8bcbb-577">컨트롤이 폼에 이러한 키를 전송 하지, 이므로 폼을 볼 수 없습니다 하의 설정에 관계 없이 <xref:System.Windows.Forms.Form.KeyPreview%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-577">Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <xref:System.Windows.Forms.Form.KeyPreview%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-578">다음 코드 예제는 폼을 설정 하는 방법을 보여 줍니다 <xref:System.Windows.Forms.Form.KeyPreview%2A> 속성을 true로 폼 수준에서 주요 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-578">The following code example demonstrates setting a form's <xref:System.Windows.Forms.Form.KeyPreview%2A> property to true and handling the key events at the form level.</span></span> <span data-ttu-id="8bcbb-579">예제를 실행 하려면 빈 폼에 다음 코드를 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-579">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="LayoutMdi">
      <MemberSignature Language="C#" Value="public void LayoutMdi (System.Windows.Forms.MdiLayout value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LayoutMdi(valuetype System.Windows.Forms.MdiLayout value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LayoutMdi (value As MdiLayout)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LayoutMdi(System::Windows::Forms::MdiLayout value);" />
      <MemberSignature Language="F#" Value="member this.LayoutMdi : System.Windows.Forms.MdiLayout -&gt; unit" Usage="form.LayoutMdi value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.MdiLayout" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8bcbb-580">MDI 자식 폼의 레이아웃을 정의하는 <see cref="T:System.Windows.Forms.MdiLayout" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-580">One of the <see cref="T:System.Windows.Forms.MdiLayout" /> values that defines the layout of MDI child forms.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-581">MDI(다중 문서 인터페이스) 부모 폼 내에 MDI 자식 폼을 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-581">Arranges the multiple-document interface (MDI) child forms within the MDI parent form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-582">보다 쉽게 탐색 하 고 MDI 자식 폼의 조작을 허용 하 여 MDI 부모 폼의 MDI 자식 폼을 정렬 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-582">You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms.</span></span> <span data-ttu-id="8bcbb-583">MDI 자식 폼 연계, 또는 MDI 부모 폼 내에서 아이콘으로 가로 또는 세로로 바둑판식 수 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-583">MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-584">다음 코드 예제에서는 MDI 응용 프로그램의 부모 폼의 창 메뉴의 메뉴 항목에 대 한 이벤트 처리기를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-584">The following code example shows the event handlers for the menu items of a Window menu in an MDI application's parent form.</span></span> <span data-ttu-id="8bcbb-585">각 이벤트 처리기를 호출 하는 <xref:System.Windows.Forms.Form.LayoutMdi%2A> 자식 폼 정렬 하는 방법은 응용 프로그램에서 현재 열려 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-585">Each event handler makes calls to the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to arrange any child forms that are currently open in the application.</span></span>  
  
 [!code-cpp[Classic Form.LayoutMdi Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.LayoutMdi Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CS/source.cs#1)]
 [!code-vb[Classic Form.LayoutMdi Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MdiLayout" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public event EventHandler Load;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Load" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Load" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Load As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Load;" />
      <MemberSignature Language="F#" Value="member this.Load : EventHandler " Usage="member this.Load : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-586">폼이 처음으로 표시되기 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-586">Occurs before a form is displayed for the first time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-587">폼에 사용 된 리소스를 할당 하는 등의 작업을 수행 하려면이 이벤트를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-587">You can use this event to perform tasks such as allocating resources used by the form.</span></span>  
  
 <span data-ttu-id="8bcbb-588">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-588">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-589">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load>를 <xref:System.Windows.Forms.Form.Activated>, 및 <xref:System.Windows.Forms.Form.Activate%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-589">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="8bcbb-590">예제를 실행 하려면 이라는 폼에 다음 코드를 붙여 넣습니다 `Form1` 포함 하는 <xref:System.Windows.Forms.Button> 호출 `Button1` 두 개의 <xref:System.Windows.Forms.Label> 이라는 컨트롤 `Label1` 및 `Label2`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-590">To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Form.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-591">화면 좌표에서 <see cref="T:System.Windows.Forms.Form" />의 왼쪽 위 모퉁이를 나타내는 <see cref="T:System.Drawing.Point" />을(를) 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-591">Gets or sets the <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-592">화면 좌표에서 <see cref="T:System.Windows.Forms.Form" />의 왼쪽 위 모퉁이를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-592">The <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-593"><xref:System.Drawing.Point> 값 형식 인지 즉 구조가입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-593"><xref:System.Drawing.Point> is a structure, which means that it is a value type.</span></span> <span data-ttu-id="8bcbb-594">속성에 액세스 하는 경우 <xref:System.Drawing.Point>, 속성의 복사본이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-594">If you access a property in <xref:System.Drawing.Point>, a copy of the property is returned.</span></span> <span data-ttu-id="8bcbb-595">따라서 변경를 <xref:System.Drawing.Point.X%2A> 또는 <xref:System.Drawing.Point.Y%2A> 의 속성을 <xref:System.Drawing.Point> 에서 반환 된를 <xref:System.Windows.Forms.Control.Location%2A> 속성에 영향을 주지 것입니다를 <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, 또는 <xref:System.Windows.Forms.Control.Bottom%2A> 의 속성 값은 <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-595">Therefore, changing the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from the <xref:System.Windows.Forms.Control.Location%2A> property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="8bcbb-596">이러한 속성을 조정 하려면 각 속성 값을 개별적으로 설정 하거나 설정 합니다 <xref:System.Windows.Forms.Form.Location%2A> 속성을 새 <xref:System.Drawing.Point>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-596">To adjust these properties, set each property value individually, or set the <xref:System.Windows.Forms.Form.Location%2A> property with a new <xref:System.Drawing.Point>.</span></span>  
  
 <span data-ttu-id="8bcbb-597"><xref:System.Windows.Forms.Form.Location%2A> 속성을 가져오거나 설정 합니다 <xref:System.Windows.Forms.Control.Location%2A> 의 속성을 <xref:System.Windows.Forms.Control> 집합과 기본 클래스를 <xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> 속성을 `true`.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-597">The <xref:System.Windows.Forms.Form.Location%2A> property gets or sets the <xref:System.Windows.Forms.Control.Location%2A> property of the <xref:System.Windows.Forms.Control> base class, and sets the <xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="MainMenuStrip">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuStrip MainMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MenuStrip MainMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MainMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Property MainMenuStrip As MenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuStrip ^ MainMenuStrip { System::Windows::Forms::MenuStrip ^ get(); void set(System::Windows::Forms::MenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MainMenuStrip : System.Windows.Forms.MenuStrip with get, set" Usage="System.Windows.Forms.Form.MainMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-598">폼의 기본 메뉴 컨테이너를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-598">Gets or sets the primary menu container for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-599">폼의 메뉴 구조에 대한 컨테이너를 나타내는 <see cref="T:System.Windows.Forms.MenuStrip" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-599">A <see cref="T:System.Windows.Forms.MenuStrip" /> that represents the container for the menu structure of the form.</span>
          </span>
          <span data-ttu-id="8bcbb-600">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-600">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-601">설정 외에도 <xref:System.Windows.Forms.Form.MainMenuStrip%2A> 해야 속성인 <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> 는 <xref:System.Windows.Forms.MenuStrip> 컨트롤을 <xref:System.Windows.Forms.Control.Controls%2A> 폼의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-601">In addition to setting the <xref:System.Windows.Forms.Form.MainMenuStrip%2A> property, you must <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> the <xref:System.Windows.Forms.MenuStrip> control to the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form.</span></span>  
  
 <span data-ttu-id="8bcbb-602">합니다 <xref:System.Windows.Forms.MenuStrip> 클래스 대체를 <xref:System.Windows.Forms.MainMenu> 이전 버전의.NET Framework의 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-602">The <xref:System.Windows.Forms.MenuStrip> class supersedes the <xref:System.Windows.Forms.MainMenu> class in previous versions of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuStrip" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Margin { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.Form.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-603">컨트롤 사이의 공백을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-603">Gets or sets the space between controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-604">컨트롤 사이의 공백을 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-604">A value that represents the space between controls.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MarginChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MarginChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MarginChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MarginChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MarginChanged;" />
      <MemberSignature Language="F#" Value="member this.MarginChanged : EventHandler " Usage="member this.MarginChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-605">
            <see cref="P:System.Windows.Forms.Form.Margin" /> 속성이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-605">Occurs when the <see cref="P:System.Windows.Forms.Form.Margin" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximizeBox">
      <MemberSignature Language="C#" Value="public bool MaximizeBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaximizeBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximizeBox" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximizeBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaximizeBox { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MaximizeBox : bool with get, set" Usage="System.Windows.Forms.Form.MaximizeBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-606">폼의 캡션 표시줄에 **최대화** 단추가 표시되는지 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-606">Gets or sets a value indicating whether the **Maximize** button is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-607">
            <see langword="true" /> 표시 하는 **최대화** 폼에 단추가 고, 그렇지 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-607">
              <see langword="true" /> to display a **Maximize** button for the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-608">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-608">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="8bcbb-609">A **최대화** 단추를 사용 하면 사용자가 창을 전체 화면 크기로 확대 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-609">A **Maximize** button enables users to enlarge a window to full-screen size.</span></span> <span data-ttu-id="8bcbb-610">표시 하는 **최대화** 단추를 폼의 값 <xref:System.Windows.Forms.Form.ControlBox> 속성 이어야 합니다 `true`를 기본값으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-610">To display a **Maximize** button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span>  <span data-ttu-id="8bcbb-611"><xref:System.Windows.Forms.Form.ControlBox> 속성의 캡션 표시줄의 오른쪽 위 모퉁이 최대화 단추 최소화 단추, 도움말 단추를와 닫기 단추 컨트롤에 포함 되는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-611">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="8bcbb-612">또한 양식의 설정 해야 합니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A> 속성을 <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>를 <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>합니다 <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, 또는 <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-612">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8bcbb-613">A **최대화** 창이 최대화 되 면 자동으로 단추 복원 단추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-613">A **Maximize** button automatically becomes a restore button when a window is maximized.</span></span> <span data-ttu-id="8bcbb-614">최소화 하거나 창을 자동으로 복원 하면 복원 단추 변경으로 **최대화** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-614">Minimizing or restoring a window automatically changes the restore button back to a **Maximize** button.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-615">런타임에 폼을 최대화 생성을 <xref:System.Windows.Forms.Control.Resize> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-615">Maximizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event.</span></span> <span data-ttu-id="8bcbb-616"><xref:System.Windows.Forms.Form.WindowState%2A> 속성 창의 현재 상태를 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-616">The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window.</span></span> <span data-ttu-id="8bcbb-617">설정 하는 경우는 <xref:System.Windows.Forms.Form.WindowState%2A> 속성을 `FormWindowState.Maximized`에 게 적용 되는 모든 설정을 독립적으로 폼이 최대화 합니다 <xref:System.Windows.Forms.Form.MaximizeBox%2A> 및 <xref:System.Windows.Forms.Form.FormBorderStyle%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-617">If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Maximized`, the form is maximized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MaximizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-618">다음 코드 예제에서는의 새 인스턴스를 만듭니다는 <xref:System.Windows.Forms.Form> 호출을 <xref:System.Windows.Forms.Form.ShowDialog%2A> 폼을 대화 상자로 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-618">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="8bcbb-619">예제에서는 합니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, 및 <xref:System.Windows.Forms.Form.StartPosition%2A> 대화 상자에 모양 및 폼의 기능을 변경 하려면 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-619">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="8bcbb-620">또한이 예제에서는 합니다 <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> 양식의 메서드의 <xref:System.Windows.Forms.Control.Controls%2A> 추가할 두 컬렉션 <xref:System.Windows.Forms.Button> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-620">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="8bcbb-621">이 예제에서는 사용 된 <xref:System.Windows.Forms.Form.HelpButton%2A> 속성 대화 상자 캡션 표시줄에 도움말 단추를 표시 하려면.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-621">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="MaximizedBounds">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle MaximizedBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle MaximizedBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximizedBounds" />
      <MemberSignature Language="VB.NET" Value="Protected Property MaximizedBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Drawing::Rectangle MaximizedBounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.MaximizedBounds : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.Form.MaximizedBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-622">폼이 최대화될 때의 크기를 가져오고 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-622">Gets and sets the size of the form when it is maximized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-623">폼이 최대화될 때 폼의 경계를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-623">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the form when it is maximized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bcbb-624">
            <see cref="P:System.Drawing.Rectangle.Top" /> 속성 값이 폼의 높이보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-624">The value of the <see cref="P:System.Drawing.Rectangle.Top" /> property is greater than the height of the form.</span>
          </span>
          <span data-ttu-id="8bcbb-625">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-625">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-626">
            <see cref="P:System.Drawing.Rectangle.Left" /> 속성 값이 폼의 너비보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-626">The value of the <see cref="P:System.Drawing.Rectangle.Left" /> property is greater than the width of the form.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-627">
            <para>상속한 클래스 <see cref="T:System.Windows.Forms.Form" /> 최대화 되었을 때 폼의 새 경계를 제공 하려면이 메서드를 재정의할 수 있습니다. 클래스는이 속성을 설정 내부적으로 경우 양식의 **최대화** 단추를 클릭 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-627">
              <para>Classes that inherit from <see cref="T:System.Windows.Forms.Form" /> can override this method to provide new bounds for the form when it is maximized. The class sets this property internally when the form's **Maximize** button is clicked.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximizedBoundsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaximizedBoundsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaximizedBoundsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaximizedBoundsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaximizedBoundsChanged;" />
      <MemberSignature Language="F#" Value="member this.MaximizedBoundsChanged : EventHandler " Usage="member this.MaximizedBoundsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-628">
            <see cref="P:System.Windows.Forms.Form.MaximizedBounds" /> 속성 값이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-628">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximizedBounds" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-629">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-629">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-630">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-630">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-631">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-631">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event.</span></span> <span data-ttu-id="8bcbb-632">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-632">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-633">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-633">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-634">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-634">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-635">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-635">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#389](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#389)]
 [!code-vb[System.Windows.Forms.EventExamples#389](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#389)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MaximumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.MaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "0, 0")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-636">폼을 조정할 수 있는 최대 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-636">Gets the maximum size the form can be resized to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-637">폼의 최대 크기를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-637">A <see cref="T:System.Drawing.Size" /> that represents the maximum size for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-638">이 속성을 사용 하면 지정된 된 최대 크기는 양식의 크기를 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-638">This property enables you to limit the size of a form to a specified maximum size.</span></span> <span data-ttu-id="8bcbb-639">단일 창이 표시 되지 않도록 다른 windows 해도 되도록이 기능을 동시에 여러 창을 표시할 때 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-639">You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden.</span></span> <span data-ttu-id="8bcbb-640">이 속성 설정 된 경우는 <xref:System.Drawing.Size> 높이 및 너비를 폼에는 0 개체 Windows 설정한 제한 초과 최대 크기를 갖게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-640">If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-641">다음 코드 예제에서는 설정 된 <xref:System.Windows.Forms.Form.MaximumSize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-641">The following code example demonstrates setting the <xref:System.Windows.Forms.Form.MaximumSize%2A> property.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.FormExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.FormExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bcbb-642">
            <see cref="T:System.Drawing.Size" /> 개체 내의 높이 또는 너비 값이 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-642">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.SystemInformation.MaxWindowTrackSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximumSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaximumSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaximumSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MaximumSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaximumSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaximumSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.MaximumSizeChanged : EventHandler " Usage="member this.MaximumSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-643">
            <see cref="P:System.Windows.Forms.Form.MaximumSize" /> 속성 값이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-643">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximumSize" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-644">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-644">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-645">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-645">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-646">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.MaximumSizeChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-646">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event.</span></span> <span data-ttu-id="8bcbb-647">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-647">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-648">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-648">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-649">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-649">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-650">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.MaximumSizeChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-650">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#390](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#390)]
 [!code-vb[System.Windows.Forms.EventExamples#390](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#390)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MdiChildActivate">
      <MemberSignature Language="C#" Value="public event EventHandler MdiChildActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MdiChildActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MdiChildActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MdiChildActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MdiChildActivate;" />
      <MemberSignature Language="F#" Value="member this.MdiChildActivate : EventHandler " Usage="member this.MdiChildActivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-651">MDI 응용 프로그램 내에서 MDI(다중 문서 인터페이스) 자식 폼이 활성화되었거나 닫힌 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-651">Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-652">이 이벤트를 사용 하 여 MDI 자식 폼의 콘텐츠를 업데이트 하는 등의 작업을 수행할 수 있습니다 및 활성화 되는 MDI 자식 폼의 상태에 따라 MDI 부모 폼에서 사용할 수 있는 메뉴 옵션을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-652">You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.</span></span>  
  
 <span data-ttu-id="8bcbb-653">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-653">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-654">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-654">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-655">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.MdiChildActivate> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-655">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span> <span data-ttu-id="8bcbb-656">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-656">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-657">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-657">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-658">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-658">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-659">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.MdiChildActivate> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-659">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#397](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#397)]
 [!code-vb[System.Windows.Forms.EventExamples#397](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#397)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MdiChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form[] MdiChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form[] MdiChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MdiChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MdiChildren As Form()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Windows::Forms::Form ^&gt; ^ MdiChildren { cli::array &lt;System::Windows::Forms::Form ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MdiChildren : System.Windows.Forms.Form[]" Usage="System.Windows.Forms.Form.MdiChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-660">이 폼의 하위 폼이 되는 MDI(다중 문서 인터페이스) 자식 폼을 나타내는 폼 배열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-660">Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-661">각각 이 폼의 MDI 자식 폼 중 하나를 나타내는 <see cref="T:System.Windows.Forms.Form" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-661">An array of <see cref="T:System.Windows.Forms.Form" /> objects, each of which identifies one of this form's MDI child forms.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-662">이 속성을 사용 하면 현재 MDI 부모 폼에서 열려 있는 모든 MDI 자식 폼에 대 한 참조를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-662">This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form.</span></span> <span data-ttu-id="8bcbb-663">MDI 자식 폼을 만들려면 할당 합니다 <xref:System.Windows.Forms.Form> MDI 부모 폼 될를 <xref:System.Windows.Forms.Form.MdiParent%2A> 자식 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-663">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span>  
  
 <span data-ttu-id="8bcbb-664">모든 MDI 자식 폼 MDI 부모 폼이 닫힐 때 데이터베이스에 데이터를 저장 하는 등의 작업을 수행 하거나 응용 프로그램에서 수행 된 작업에 따라 자식 폼의 필드를 업데이트할 때까지 반복이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-664">You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-665">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Form.MdiChildren%2A> MDI 자식 폼의 목록을 반복 하 여 추가 속성을 <xref:System.Windows.Forms.Button> 각 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-665">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property to iterate through the list of MDI child forms and add a <xref:System.Windows.Forms.Button> control to each.</span></span>  
  
 [!code-cpp[Form.MDIChildren#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIChildren/CPP/form1.cpp#1)]
 [!code-csharp[Form.MDIChildren#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIChildren/CS/form1.cs#1)]
 [!code-vb[Form.MDIChildren#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIChildren/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
      </Docs>
    </Member>
    <Member MemberName="MdiParent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form MdiParent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MdiParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MdiParent" />
      <MemberSignature Language="VB.NET" Value="Public Property MdiParent As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ MdiParent { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MdiParent : System.Windows.Forms.Form with get, set" Usage="System.Windows.Forms.Form.MdiParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-666">이 폼의 현재 MDI(다중 문서 인터페이스) 부모 폼을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-666">Gets or sets the current multiple-document interface (MDI) parent form of this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-667">MDI 부모 폼을 나타내는 <see cref="T:System.Windows.Forms.Form" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-667">A <see cref="T:System.Windows.Forms.Form" /> that represents the MDI parent form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-668">MDI 자식 폼을 만들려면 할당 합니다 <xref:System.Windows.Forms.Form> MDI 부모 폼 될를 <xref:System.Windows.Forms.Form.MdiParent%2A> 자식 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-668">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span> <span data-ttu-id="8bcbb-669">모든 자식 폼이 해야 하는 전역 정보를 얻을 수 또는 모든 자식 폼 작업을 수행 하는 메서드를 호출 하는 MDI 자식 폼에서이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-669">You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-670">두 개 있는 경우 <xref:System.Windows.Forms.MenuStrip> 설정 하는 MDI 자식 폼의 컨트롤 <xref:System.Windows.Forms.Form.IsMdiContainer%2A> 하 `true` 부모 폼 병합 중 하나만 내용의 <xref:System.Windows.Forms.MenuStrip> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-670">If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls.</span></span> <span data-ttu-id="8bcbb-671">사용 하 여 <xref:System.Windows.Forms.ToolStripManager.Merge%2A> 내용을 병합 하 여 추가 자식 <xref:System.Windows.Forms.MenuStrip> MDI 부모 폼의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-671">Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-672">다음 코드 예제에서는 MDI 응용 프로그램에서 자식 폼을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-672">The following code example demonstrates how to create child forms in an MDI application.</span></span> <span data-ttu-id="8bcbb-673">예제 코드는 자식 폼을 식별 하는 고유한 텍스트를 사용 하 여 폼을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-673">The example code creates a form with unique text to identify the child form.</span></span> <span data-ttu-id="8bcbb-674">이 예제에서는 사용 된 <xref:System.Windows.Forms.Form.MdiParent%2A> 폼 자식 폼을 지정 하려면 속성.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-674">The example uses the <xref:System.Windows.Forms.Form.MdiParent%2A> property to specify that a form is a child form.</span></span> <span data-ttu-id="8bcbb-675">이 예제에서는 예제에서 코드에는 양식에서 호출 되도록 해당 <xref:System.Windows.Forms.Form.IsMdiContainer%2A> 속성이로 설정 `true` 있고 폼 private 클래스 수준 정수 변수에 `childCount`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-675">This example requires that the code in the example is called from a form that has its <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property set to `true` and that the form has a private class level integer variable named `childCount`.</span></span>  
  
 [!code-cpp[Form.MDIParent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIParent/CPP/form1.cpp#1)]
 [!code-csharp[Form.MDIParent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIParent/CS/form1.cs#1)]
 [!code-vb[Form.MDIParent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIParent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="8bcbb-676">이 속성에 할당된 <see cref="T:System.Windows.Forms.Form" />이 MDI 컨테이너로 표시되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-676">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is not marked as an MDI container.</span>
          </span>
          <span data-ttu-id="8bcbb-677">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-677">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-678">이 속성에 할당된 <see cref="T:System.Windows.Forms.Form" />이 자식 폼이면서 MDI 컨테이너 폼인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-678">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is both a child and an MDI container form.</span>
          </span>
          <span data-ttu-id="8bcbb-679">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-679">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-680">이 속성에 할당된 <see cref="T:System.Windows.Forms.Form" />이 다른 스레드에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-680">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is located on a different thread.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8bcbb-681">폼을 요청 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-681">for requesting a form.</span>
          </span>
          <span data-ttu-id="8bcbb-682">연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-682">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
      </Docs>
    </Member>
    <Member MemberName="Menu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu Menu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MainMenu Menu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Menu" />
      <MemberSignature Language="VB.NET" Value="Public Property Menu As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MainMenu ^ Menu { System::Windows::Forms::MainMenu ^ get(); void set(System::Windows::Forms::MainMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Menu : System.Windows.Forms.MainMenu with get, set" Usage="System.Windows.Forms.Form.Menu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-683">폼에 표시되는 <see cref="T:System.Windows.Forms.MainMenu" />을(를) 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-683">Gets or sets the <see cref="T:System.Windows.Forms.MainMenu" /> that is displayed in the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-684">폼에 표시할 메뉴를 나타내는 <see cref="T:System.Windows.Forms.MainMenu" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-684">A <see cref="T:System.Windows.Forms.MainMenu" /> that represents the menu to display in the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-685">런타임 시 완전 한 메뉴 집합 간에 전환 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-685">You can use this property to switch between complete menu sets at run time.</span></span> <span data-ttu-id="8bcbb-686">예를 들어 하나 정의할 수 있습니다 <xref:System.Windows.Forms.MainMenu> 활성 MDI 자식 폼 및 다른 (MDI) 다중 문서 인터페이스 폼에 표시할 <xref:System.Windows.Forms.MainMenu> 을 자식 창에 표시 되 면 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-686">For example, you can define one <xref:System.Windows.Forms.MainMenu> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <xref:System.Windows.Forms.MainMenu> to display when a child window is displayed.</span></span> <span data-ttu-id="8bcbb-687">다른 이용할 수 있습니다 <xref:System.Windows.Forms.MainMenu> 다른 메뉴 집합을 표시 해야 하는 응용 프로그램에서 특정 조건이 존재 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-687">You can also use a different <xref:System.Windows.Forms.MainMenu> when specific conditions exist in your application that require displaying a different menu set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-688">다음 코드 예제에서는 <xref:System.Windows.Forms.MainMenu>, 두 할당 <xref:System.Windows.Forms.MenuItem> 개체는 <xref:System.Windows.Forms.MainMenu> 폼에 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-688">The following code example creates a <xref:System.Windows.Forms.MainMenu>, assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> and binds it to a form.</span></span> <span data-ttu-id="8bcbb-689">이 예제를 실행 하려면를 <xref:System.Windows.Forms.Form> 라는 만든 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-689">This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.</span></span>  
  
 [!code-cpp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CS/source.cs#1)]
 [!code-vb[Classic MainMenu.MainMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.Menu" />
      </Docs>
    </Member>
    <Member MemberName="MenuComplete">
      <MemberSignature Language="C#" Value="public event EventHandler MenuComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MenuComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuComplete;" />
      <MemberSignature Language="F#" Value="member this.MenuComplete : EventHandler " Usage="member this.MenuComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-690">폼의 메뉴가 포커스를 잃으면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-690">Occurs when the menu of a form loses focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-691">이 이벤트는 클릭 메뉴에 있는 메뉴 항목에서 수행 되는 명령에서 발생 하는 메뉴가 포커스를 잃으면 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-691">This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus.</span></span> <span data-ttu-id="8bcbb-692">이 이벤트를 사용 하 여 텍스트를 업데이트 하는 등 작업을 수행 하는 <xref:System.Windows.Forms.StatusBar> 컨트롤 또는 활성화 및에서 단추 비활성화를 <xref:System.Windows.Forms.ToolBar>입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-692">You can use this event to perform tasks such as updating the text of a <xref:System.Windows.Forms.StatusBar> control or enabling and disabling buttons on a <xref:System.Windows.Forms.ToolBar>.</span></span>  
  
 <span data-ttu-id="8bcbb-693">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-693">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-694">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-694">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-695">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.MenuComplete> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-695">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuComplete> event.</span></span> <span data-ttu-id="8bcbb-696">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-696">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-697">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-697">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-698">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-698">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-699">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.MenuComplete> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-699">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuComplete> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#398](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#398)]
 [!code-vb[System.Windows.Forms.EventExamples#398](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#398)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuStart">
      <MemberSignature Language="C#" Value="public event EventHandler MenuStart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuStart" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MenuStart" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuStart As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuStart;" />
      <MemberSignature Language="F#" Value="member this.MenuStart : EventHandler " Usage="member this.MenuStart : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-700">폼의 메뉴가 포커스를 받으면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-700">Occurs when the menu of a form receives focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-701">이 이벤트는 사용자가 메뉴에서 모든 메뉴 항목을 클릭할 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-701">This event is raised when any menu item in the menu is clicked by the user.</span></span> <span data-ttu-id="8bcbb-702">활성화 메뉴가 액세스 하는 경우 사용자가 액세스할 수 해야 하는 폼에서 컨트롤을 사용 하지 않도록 설정 등의 작업을 수행 하려면이 이벤트를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-702">You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.</span></span>  
  
 <span data-ttu-id="8bcbb-703">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-703">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-704">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-704">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-705">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.MenuStart> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-705">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuStart> event.</span></span> <span data-ttu-id="8bcbb-706">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-706">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-707">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-707">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-708">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-708">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-709">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.MenuStart> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-709">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuStart> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#399](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#399)]
 [!code-vb[System.Windows.Forms.EventExamples#399](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#399)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MergedMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu MergedMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MainMenu MergedMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MergedMenu" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergedMenu As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MainMenu ^ MergedMenu { System::Windows::Forms::MainMenu ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MergedMenu : System.Windows.Forms.MainMenu" Usage="System.Windows.Forms.Form.MergedMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-710">폼의 병합된 메뉴를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-710">Gets the merged menu for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-711">폼의 병합된 메뉴를 나타내는 <see cref="T:System.Windows.Forms.MainMenu" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-711">A <see cref="T:System.Windows.Forms.MainMenu" /> that represents the merged menu of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-712">이 속성은 폼이 해당 부모 폼의 메뉴를 사용 하 여 해당 메뉴 병합 다중 문서 MDI (인터페이스) 자식 폼을 주로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-712">This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu.</span></span> <span data-ttu-id="8bcbb-713">이 속성을 사용 하 여 변경 하거나 추가 메뉴를 MDI 응용 프로그램에서 현재 메뉴 구조를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-713">You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure.</span></span> <span data-ttu-id="8bcbb-714">된 병합 되지 않은 <xref:System.Windows.Forms.MainMenu> 사용 하 여 폼에 할당 된 <xref:System.Windows.Forms.Form.Menu%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-714">To obtain the nonmerged <xref:System.Windows.Forms.MainMenu> assigned to a form, use the <xref:System.Windows.Forms.Form.Menu%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="P:System.Windows.Forms.Form.Menu" />
      </Docs>
    </Member>
    <Member MemberName="MinimizeBox">
      <MemberSignature Language="C#" Value="public bool MinimizeBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MinimizeBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MinimizeBox" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimizeBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MinimizeBox { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MinimizeBox : bool with get, set" Usage="System.Windows.Forms.Form.MinimizeBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-715">폼의 캡션 표시줄에 **최소화** 단추가 표시되는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-715">Gets or sets a value indicating whether the **Minimize** button is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-716">
            <see langword="true" /> 표시 하는 **최소화** 폼에 단추가 고, 그렇지 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-716">
              <see langword="true" /> to display a **Minimize** button for the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-717">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-717">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-718">A **최소화** 단추를 사용 하면 사용자가 아이콘에 대 한 창을 최소화 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-718">A **Minimize** button enables users to minimize a window to an icon.</span></span> <span data-ttu-id="8bcbb-719">표시 하는 **최소화** 단추를 폼의 값 <xref:System.Windows.Forms.Form.ControlBox> 속성 이어야 합니다 `true`를 기본값으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-719">To display a **Minimize** button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span>  <span data-ttu-id="8bcbb-720"><xref:System.Windows.Forms.Form.ControlBox> 속성의 캡션 표시줄의 오른쪽 위 모퉁이 최대화 단추 최소화 단추, 도움말 단추를와 닫기 단추 컨트롤에 포함 되는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-720">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="8bcbb-721">또한 양식의 설정 해야 합니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A> 속성을 <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>를 <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>합니다 <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, 또는 <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-721">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-722">런타임에 폼을 최소화 생성을 <xref:System.Windows.Forms.Control.Resize> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-722">Minimizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event.</span></span> <span data-ttu-id="8bcbb-723"><xref:System.Windows.Forms.Form.WindowState%2A> 속성 창의 현재 상태를 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-723">The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window.</span></span> <span data-ttu-id="8bcbb-724">설정 하는 경우는 <xref:System.Windows.Forms.Form.WindowState%2A> 속성을 `FormWindowState.Minimized`에 게 적용 되는 모든 설정을 독립적으로 폼이 최소화 합니다 <xref:System.Windows.Forms.Form.MinimizeBox%2A> 및 <xref:System.Windows.Forms.Form.FormBorderStyle%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-724">If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Minimized`, the form is minimized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MinimizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-725">다음 코드 예제에서는의 새 인스턴스를 만듭니다는 <xref:System.Windows.Forms.Form> 호출을 <xref:System.Windows.Forms.Form.ShowDialog%2A> 폼을 대화 상자로 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-725">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="8bcbb-726">예제에서는 합니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, 및 <xref:System.Windows.Forms.Form.StartPosition%2A> 대화 상자에 모양 및 폼의 기능을 변경 하려면 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-726">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="8bcbb-727">또한이 예제에서는 합니다 <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> 양식의 메서드의 <xref:System.Windows.Forms.Control.Controls%2A> 추가할 두 컬렉션 <xref:System.Windows.Forms.Button> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-727">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="8bcbb-728">이 예제에서는 사용 된 <xref:System.Windows.Forms.Form.HelpButton%2A> 속성 대화 상자 캡션 표시줄에 도움말 단추를 표시 하려면.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-728">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MinimumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "0, 0")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-729">폼을 조정할 수 있는 최소 크기를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-729">Gets or sets the minimum size the form can be resized to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-730">폼의 최소 크기를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-730">A <see cref="T:System.Drawing.Size" /> that represents the minimum size for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-731">이 속성을 사용 하면 지정된 된 최소 크기는 양식의 크기를 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-731">This property enables you to limit the size of a form to a specified minimum size.</span></span> <span data-ttu-id="8bcbb-732">원하지 않는 크기로 창 크기 조정에서 사용자를 방지 하기 위해이 기능을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-732">You can use this feature to prevent a user from sizing a window to an undesirable size.</span></span> <span data-ttu-id="8bcbb-733">이 속성 설정 된 경우는 <xref:System.Drawing.Size> 높이 및 너비를 폼에는 0 개체 Windows 설정한 제한 초과 최소 크기를 갖게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-733">If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bcbb-734">
            <see cref="T:System.Drawing.Size" /> 개체 내의 높이 또는 너비 값이 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-734">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MinimumSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MinimumSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MinimumSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MinimumSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MinimumSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MinimumSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.MinimumSizeChanged : EventHandler " Usage="member this.MinimumSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-735">
            <see cref="P:System.Windows.Forms.Form.MinimumSize" /> 속성 값이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-735">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MinimumSize" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-736">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-736">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-737">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-737">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-738">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.MinimumSizeChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-738">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event.</span></span> <span data-ttu-id="8bcbb-739">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-739">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-740">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-740">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-741">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-741">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-742">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.MinimumSizeChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-742">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#391](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#391)]
 [!code-vb[System.Windows.Forms.EventExamples#391](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#391)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="Modal">
      <MemberSignature Language="C#" Value="public bool Modal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Modal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Modal : bool" Usage="System.Windows.Forms.Form.Modal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-743">이 폼이 모달 형식으로 표시되는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-743">Gets a value indicating whether this form is displayed modally.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-744">폼이 모달 형식으로 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-744">
              <see langword="true" /> if the form is displayed modally; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-745">폼이 모달 형식으로 표시 되 면 (키보드나 마우스 클릭)을 입력 하지 않고 모달 폼에 개체를 제외 하 고 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-745">When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form.</span></span> <span data-ttu-id="8bcbb-746">프로그램을 숨기 거 나 닫기 모달 폼 (일반적으로 일부 사용자 작업에 대 한 응답) 다른 폼에 입력 하기 전에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-746">The program must hide or close a modal form (usually in response to some user action) before input to another form can occur.</span></span> <span data-ttu-id="8bcbb-747">폼이 모달 형식으로 표시 되는 대화 상자 응용 프로그램에서 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-747">Forms that are displayed modally are typically used as dialog boxes in an application.</span></span>  
  
 <span data-ttu-id="8bcbb-748">이 속성을 사용 하 여 메서드 또는 속성에서 가져올 수 있는 폼 모달 형식으로 표시 되었는지 여부를 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-748">You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.</span></span>  
  
 <span data-ttu-id="8bcbb-749">표시할 폼을 모달 형식으로 사용 된 <xref:System.Windows.Forms.Form.ShowDialog%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-749">To display a form modally use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-750">다음 코드 예제에서는 <xref:System.Windows.Forms.Form.Modal%2A> 폼이 모달 형식으로 표시 하는 경우를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-750">The following code example uses the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form.</span></span> <span data-ttu-id="8bcbb-751">없는 경우는 <xref:System.Windows.Forms.Form.FormBorderStyle%2A> 및 <xref:System.Windows.Forms.Form.TopLevel%2A> 속성 폼 도구 창 테두리를 사용 하 여 하위 수준의 폼 되도록 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-751">If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form a non-top-level form with a tool window border.</span></span>  
  
 [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]
 [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]
 [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.ShowDialog" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivated : EventArgs -&gt; unit&#xA;override this.OnActivated : EventArgs -&gt; unit" Usage="form.OnActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-752">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-752">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-753">
            <see cref="E:System.Windows.Forms.Form.Activated" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-753">Raises the <see cref="E:System.Windows.Forms.Form.Activated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-754">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-754">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-755">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-755">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-756">또한 <xref:System.Windows.Forms.Form.OnActivated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-756">The <xref:System.Windows.Forms.Form.OnActivated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-757">이 메서드를 재정의 하는 것은 파생된 클래스에서 이벤트를 처리 하는 것에 대 한 기본 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-757">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-758">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-758">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="form.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-759">데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-759">An <see cref="T:System.EventArgs" /> that contains the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-760">
            <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-760">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-761">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-761">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-762">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-762">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-763">또한 <xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-763">The <xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-764">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-764">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-765">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-765">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageLayoutChanged : EventArgs -&gt; unit" Usage="form.OnBackgroundImageLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-766">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-766">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-767">
            <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-767">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-768">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-768">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-769">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-769">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-770">또한 <xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-770">The <xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-771">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-771">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-772">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-772">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : EventArgs -&gt; unit&#xA;override this.OnClosed : EventArgs -&gt; unit" Usage="form.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-773">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-773">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-774">
            <see cref="E:System.Windows.Forms.Form.Closed" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-774">Raises the <see cref="E:System.Windows.Forms.Form.Closed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="8bcbb-775"><xref:System.Windows.Forms.Form.OnClosed%2A> 메서드는.NET Framework 버전 2.0에서에서 사용 되지 않으므로 사용 된 <xref:System.Windows.Forms.Form.OnFormClosed%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-775">The <xref:System.Windows.Forms.Form.OnClosed%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosed%2A> method instead.</span></span>  
  
 <span data-ttu-id="8bcbb-776">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-776">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-777">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-777">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-778">또한 <xref:System.Windows.Forms.Form.OnFormClosed%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-778">The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-779">이 메서드를 재정의 하는 것은 파생된 클래스에서 이벤트를 처리 하는 것에 대 한 기본 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-779">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8bcbb-780"><xref:System.Windows.Forms.Form.OnClosed%2A> 하 고 <xref:System.Windows.Forms.Form.OnClosing%2A> 메서드 호출 되지 않습니다는 <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> 메서드를 호출 하 여 응용 프로그램을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-780">The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="8bcbb-781">유효성 검사 코드를 실행 해야 하는 이러한 방법 중 하나에 있는 경우 호출 해야 합니다 <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> 메서드를 호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한는 <xref:System.Windows.Forms.Application.Exit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-781">If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-782">다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Form.OnClosed%2A> 에서 파생 된 클래스에서 메서드가 <xref:System.Windows.Forms.Form> 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-782">The following code example demonstrates how to override the <xref:System.Windows.Forms.Form.OnClosed%2A> method in a class derived from <xref:System.Windows.Forms.Form> .</span></span>  
  
 [!code-cpp[System.Drawing.PointsAndSizes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.PointsAndSizes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.PointsAndSizes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-783">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-783">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Closed" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="form.OnClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-784">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CancelEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-784">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-785">
            <see cref="E:System.Windows.Forms.Form.Closing" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-785">Raises the <see cref="E:System.Windows.Forms.Form.Closing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="8bcbb-786"><xref:System.Windows.Forms.Form.OnClosing%2A> 메서드는.NET Framework 버전 2.0에서에서 사용 되지 않으므로 사용 된 <xref:System.Windows.Forms.Form.OnFormClosing%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-786">The <xref:System.Windows.Forms.Form.OnClosing%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosing%2A> method instead.</span></span>  
  
 <span data-ttu-id="8bcbb-787">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-787">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-788">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-788">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-789">또한 <xref:System.Windows.Forms.Form.OnClosing%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-789">The <xref:System.Windows.Forms.Form.OnClosing%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-790">이 메서드를 재정의 하는 것은 파생된 클래스에서 이벤트를 처리 하는 것에 대 한 기본 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-790">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8bcbb-791"><xref:System.Windows.Forms.Form.OnClosed%2A> 하 고 <xref:System.Windows.Forms.Form.OnClosing%2A> 메서드 호출 되지 않습니다는 <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> 메서드를 호출 하 여 응용 프로그램을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-791">The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="8bcbb-792">유효성 검사 코드를 실행 해야 하는 이러한 방법 중 하나에 있는 경우 호출 해야 합니다 <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> 메서드를 호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한는 <xref:System.Windows.Forms.Application.Exit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-792">If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-793">다음 코드 예제에서는 <xref:System.Windows.Forms.Form.Closing> 테스트에서 텍스트를 <xref:System.Windows.Forms.TextBox> 변경 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-793">The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed.</span></span> <span data-ttu-id="8bcbb-794">가 있는 경우 사용자는 것인지 묻는 메시지가 나타나면 파일에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-794">If it has, the user is asked whether to save the changes to a file.</span></span>  
  
 [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]
 [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]
 [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-795">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-795">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Closing" />
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateControl">
      <MemberSignature Language="C#" Value="protected override void OnCreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnCreateControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateControl();" />
      <MemberSignature Language="F#" Value="override this.OnCreateControl : unit -&gt; unit" Usage="form.OnCreateControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-796">
            <see langword="CreateControl" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-796">Raises the <see langword="CreateControl" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-797">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-797">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-798">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-798">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-799">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> 메서드.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-799">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivate">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeactivate : EventArgs -&gt; unit&#xA;override this.OnDeactivate : EventArgs -&gt; unit" Usage="form.OnDeactivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-800">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-800">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-801">
            <see cref="E:System.Windows.Forms.Form.Deactivate" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-801">Raises the <see cref="E:System.Windows.Forms.Form.Deactivate" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-802">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-802">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-803">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-803">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-804">또한 <xref:System.Windows.Forms.Form.OnDeactivate%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-804">The <xref:System.Windows.Forms.Form.OnDeactivate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-805">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-805">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-806">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-806">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Deactivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.Forms.DpiChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(class System.Windows.Forms.DpiChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (e As DpiChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::Forms::DpiChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.Forms.DpiChangedEventArgs -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.Forms.DpiChangedEventArgs -&gt; unit" Usage="form.OnDpiChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DpiChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-807">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DpiChangedEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-807">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-808">
            <see cref="E:System.Windows.Forms.Form.DpiChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-808">Raises the <see cref="E:System.Windows.Forms.Form.DpiChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="form.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-809">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-809">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-810">
            <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-810">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnter : EventArgs -&gt; unit" Usage="form.OnEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-811">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-811">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-812">
            <see cref="E:System.Windows.Forms.Control.Enter" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-812">Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-813">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-813">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-814">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-814">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-815">또한 <xref:System.Windows.Forms.Form.OnEnter%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-815">The <xref:System.Windows.Forms.Form.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-816">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-816">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-817">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-817">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="form.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-818">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-818">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-819">
            <see cref="E:System.Windows.Forms.Control.FontChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-819">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFormClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnFormClosed (System.Windows.Forms.FormClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormClosed(class System.Windows.Forms.FormClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormClosed (e As FormClosedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormClosed(System::Windows::Forms::FormClosedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormClosed : System.Windows.Forms.FormClosedEventArgs -&gt; unit&#xA;override this.OnFormClosed : System.Windows.Forms.FormClosedEventArgs -&gt; unit" Usage="form.OnFormClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.FormClosedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-820">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.FormClosedEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-820">A <see cref="T:System.Windows.Forms.FormClosedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-821">
            <see cref="E:System.Windows.Forms.Form.FormClosed" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-821">Raises the <see cref="E:System.Windows.Forms.Form.FormClosed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-822"><xref:System.Windows.Forms.Form.OnFormClosing%2A> 메서드는 현재 폼을 제거 합니다 <xref:System.Windows.Forms.Application.OpenForms%2A> 연결 된 컬렉션 <xref:System.Windows.Forms.Application>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-822">The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method removes the current form from the <xref:System.Windows.Forms.Application.OpenForms%2A> collection of the associated <xref:System.Windows.Forms.Application>.</span></span>  
  
 <span data-ttu-id="8bcbb-823">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-823">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-824">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-824">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-825">또한 <xref:System.Windows.Forms.Form.OnFormClosed%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-825">The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-826">이 메서드를 재정의 하는 것은 파생된 클래스에서 이벤트를 처리 하는 것에 대 한 기본 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-826">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-827">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-827">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFormClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnFormClosing (System.Windows.Forms.FormClosingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormClosing(class System.Windows.Forms.FormClosingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormClosing (e As FormClosingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormClosing(System::Windows::Forms::FormClosingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormClosing : System.Windows.Forms.FormClosingEventArgs -&gt; unit&#xA;override this.OnFormClosing : System.Windows.Forms.FormClosingEventArgs -&gt; unit" Usage="form.OnFormClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.FormClosingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-828">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.FormClosingEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-828">A <see cref="T:System.Windows.Forms.FormClosingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-829">
            <see cref="E:System.Windows.Forms.Form.FormClosing" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-829">Raises the <see cref="E:System.Windows.Forms.Form.FormClosing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-830">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-830">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-831">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-831">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-832">또한 <xref:System.Windows.Forms.Form.OnFormClosing%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-832">The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-833">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-833">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-834">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-834">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGetDpiScaledSize">
      <MemberSignature Language="C#" Value="protected virtual bool OnGetDpiScaledSize (int deviceDpiOld, int deviceDpiNew, ref System.Drawing.Size desiredSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnGetDpiScaledSize(int32 deviceDpiOld, int32 deviceDpiNew, valuetype System.Drawing.Size&amp; desiredSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetDpiScaledSize (deviceDpiOld As Integer, deviceDpiNew As Integer, ByRef desiredSize As Size) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnGetDpiScaledSize(int deviceDpiOld, int deviceDpiNew, System::Drawing::Size % desiredSize);" />
      <MemberSignature Language="F#" Value="abstract member OnGetDpiScaledSize : int * int *  -&gt; bool&#xA;override this.OnGetDpiScaledSize : int * int *  -&gt; bool" Usage="form.OnGetDpiScaledSize (deviceDpiOld, deviceDpiNew, desiredSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" />
        <Parameter Name="desiredSize" Type="System.Drawing.Size" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld">
          <span data-ttu-id="8bcbb-835">양식을 이전에 표시했던 디스플레이 장치의 DPI 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-835">The DPI value for the display device where the form was previously displayed.</span>
          </span>
        </param>
        <param name="deviceDpiNew">
          <span data-ttu-id="8bcbb-836">양식을 표시할 디스플레이 장치의 DPI 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-836">The DPI value for the display device where the form will be displayed.</span>
          </span>
        </param>
        <param name="desiredSize">
          <span data-ttu-id="8bcbb-837">새 DPI 값에 따른 양식의 새 크기를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-837">A <see cref="T:System.Drawing.Size" /> representing the new size of the form based on the new DPI value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-838">GetDpiScaledSize 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-838">Raises the GetDpiScaledSize event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-839">성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-839">
              <see langword="true" /> if successful; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="form.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-840">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-840">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-841">
            <see cref="E:System.Windows.Forms.Control.HandleCreated" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-841">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="form.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-842">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-842">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-843">
            <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-843">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHelpButtonClicked">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpButtonClicked (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpButtonClicked(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpButtonClicked (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpButtonClicked(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHelpButtonClicked : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnHelpButtonClicked : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="form.OnHelpButtonClicked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-844">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CancelEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-844">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-845">
            <see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-845">Raises the <see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-846">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-846">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-847">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-847">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-848">또한 <xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-848">The <xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-849">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-849">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-850">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-850">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.HelpButtonClicked" />
        <altmember cref="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <altmember cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInputLanguageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnInputLanguageChanged (System.Windows.Forms.InputLanguageChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInputLanguageChanged(class System.Windows.Forms.InputLanguageChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInputLanguageChanged (e As InputLanguageChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInputLanguageChanged(System::Windows::Forms::InputLanguageChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventArgs -&gt; unit&#xA;override this.OnInputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventArgs -&gt; unit" Usage="form.OnInputLanguageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InputLanguageChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-851">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-851">The <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-852">
            <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-852">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-853">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-853">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-854">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-854">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-855">또한 <xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-855">The <xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-856">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-856">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-857">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-857">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <altmember cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInputLanguageChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnInputLanguageChanging (System.Windows.Forms.InputLanguageChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInputLanguageChanging(class System.Windows.Forms.InputLanguageChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInputLanguageChanging (e As InputLanguageChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInputLanguageChanging(System::Windows::Forms::InputLanguageChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventArgs -&gt; unit&#xA;override this.OnInputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventArgs -&gt; unit" Usage="form.OnInputLanguageChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InputLanguageChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-858">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-858">The <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-859">
            <see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-859">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-860">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-860">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-861">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-861">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-862">또한 <xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-862">The <xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-863">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-863">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-864">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-864">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <altmember cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="form.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent">
          <span data-ttu-id="8bcbb-865">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-865">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-866">
            <see cref="E:System.Windows.Forms.Control.Layout" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-866">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="form.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-867">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-867">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-868">
            <see cref="E:System.Windows.Forms.Form.Load" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-868">Raises the <see cref="E:System.Windows.Forms.Form.Load" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-869">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-869">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-870">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-870">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-871">또한 <xref:System.Windows.Forms.Form.OnLoad%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-871">The <xref:System.Windows.Forms.Form.OnLoad%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-872">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-872">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-873">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-873">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMaximizedBoundsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximizedBoundsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximizedBoundsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaximizedBoundsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaximizedBoundsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMaximizedBoundsChanged : EventArgs -&gt; unit&#xA;override this.OnMaximizedBoundsChanged : EventArgs -&gt; unit" Usage="form.OnMaximizedBoundsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-874">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-874">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-875">
            <see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-875">Raises the <see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-876">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-876">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-877">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-877">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-878">또한 <xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-878">The <xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-879">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-879">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-880">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-880">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMaximumSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximumSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximumSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaximumSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaximumSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMaximumSizeChanged : EventArgs -&gt; unit&#xA;override this.OnMaximumSizeChanged : EventArgs -&gt; unit" Usage="form.OnMaximumSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-881">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-881">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-882">
            <see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-882">Raises the <see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-883">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-883">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-884">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-884">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-885">또한 <xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-885">The <xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-886">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-886">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-887">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-887">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="E:System.Windows.Forms.Form.MaximumSizeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMdiChildActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnMdiChildActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMdiChildActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMdiChildActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMdiChildActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMdiChildActivate : EventArgs -&gt; unit&#xA;override this.OnMdiChildActivate : EventArgs -&gt; unit" Usage="form.OnMdiChildActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-888">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-888">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-889">
            <see cref="E:System.Windows.Forms.Form.MdiChildActivate" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-889">Raises the <see cref="E:System.Windows.Forms.Form.MdiChildActivate" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-890">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-890">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-891">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-891">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-892">또한 <xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-892">The <xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-893">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-893">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-894">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-894">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MdiChildActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuComplete(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuComplete : EventArgs -&gt; unit&#xA;override this.OnMenuComplete : EventArgs -&gt; unit" Usage="form.OnMenuComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-895">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-895">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-896">
            <see cref="E:System.Windows.Forms.Form.MenuComplete" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-896">Raises the <see cref="E:System.Windows.Forms.Form.MenuComplete" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-897">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-897">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-898">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-898">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-899">또한 <xref:System.Windows.Forms.Form.OnMenuComplete%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-899">The <xref:System.Windows.Forms.Form.OnMenuComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-900">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-900">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-901">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-901">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MenuComplete" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuStart">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuStart (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuStart(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuStart (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuStart(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuStart : EventArgs -&gt; unit&#xA;override this.OnMenuStart : EventArgs -&gt; unit" Usage="form.OnMenuStart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-902">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-902">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-903">
            <see cref="E:System.Windows.Forms.Form.MenuStart" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-903">Raises the <see cref="E:System.Windows.Forms.Form.MenuStart" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-904">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-904">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-905">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-905">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-906">또한 <xref:System.Windows.Forms.Form.OnMenuStart%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-906">The <xref:System.Windows.Forms.Form.OnMenuStart%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-907">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-907">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-908">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-908">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MenuStart" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMinimumSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMinimumSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMinimumSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMinimumSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMinimumSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMinimumSizeChanged : EventArgs -&gt; unit&#xA;override this.OnMinimumSizeChanged : EventArgs -&gt; unit" Usage="form.OnMinimumSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-909">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-909">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-910">
            <see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-910">Raises the <see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-911">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-911">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-912">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-912">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-913">또한 <xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-913">The <xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-914">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-914">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-915">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-915">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MinimumSizeChanged" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="form.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-916">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-916">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-917">
            <see cref="E:System.Windows.Forms.Control.Paint" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-917">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="form.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-918">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-918">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-919">
            <see cref="E:System.Windows.Forms.Control.Resize" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-919">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResizeBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnResizeBegin (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizeBegin(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizeBegin (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizeBegin(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResizeBegin : EventArgs -&gt; unit&#xA;override this.OnResizeBegin : EventArgs -&gt; unit" Usage="form.OnResizeBegin e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-920">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-920">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-921">
            <see cref="E:System.Windows.Forms.Form.ResizeBegin" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-921">Raises the <see cref="E:System.Windows.Forms.Form.ResizeBegin" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-922">합니다 <xref:System.Windows.Forms.Form.ResizeBegin> 만 이벤트가 발생 하는 경우 양식의 <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-922">The <xref:System.Windows.Forms.Form.ResizeBegin> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="8bcbb-923">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-923">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-924">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-924">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-925">또한 <xref:System.Windows.Forms.Form.OnResizeBegin%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-925">The <xref:System.Windows.Forms.Form.OnResizeBegin%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-926">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-926">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-927">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-927">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.ResizeBegin" />
        <altmember cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResizeEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnResizeEnd (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizeEnd(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizeEnd (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizeEnd(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResizeEnd : EventArgs -&gt; unit&#xA;override this.OnResizeEnd : EventArgs -&gt; unit" Usage="form.OnResizeEnd e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-928">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-928">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-929">
            <see cref="E:System.Windows.Forms.Form.ResizeEnd" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-929">Raises the <see cref="E:System.Windows.Forms.Form.ResizeEnd" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-930">합니다 <xref:System.Windows.Forms.Form.ResizeEnd> 만 이벤트가 발생 하는 경우 양식의 <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-930">The <xref:System.Windows.Forms.Form.ResizeEnd> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="8bcbb-931">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-931">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-932">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-932">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-933">또한 <xref:System.Windows.Forms.Form.OnResizeEnd%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-933">The <xref:System.Windows.Forms.Form.OnResizeEnd%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-934">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-934">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-935">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-935">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.ResizeEnd" />
        <altmember cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftLayoutChanged : EventArgs -&gt; unit" Usage="form.OnRightToLeftLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-936">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-936">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-937">
            <see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-937">Raises the <see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-938">현재 폼 또는 부모 중 하나는 리소스를 삭제 하는 경우는 <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> 메서드 작업을 수행 하지 않고 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-938">If the current form or one of its parents is disposing of resources, the <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method will return without performing any action.</span></span> <span data-ttu-id="8bcbb-939">경우는 <xref:System.Windows.Forms.Control.RightToLeft%2A> 폼의 속성의 값이 <xref:System.Windows.Forms.RightToLeft.Yes>, 다음 호출을 통해 폼과 해당 자식 컨트롤의 핸들을 재생성 됩니다는 <xref:System.Windows.Forms.Control.RecreateHandle%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-939">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the form has a value of <xref:System.Windows.Forms.RightToLeft.Yes>, then the handles of the form and its child controls will be recreated through calls to the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 <span data-ttu-id="8bcbb-940">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-940">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-941">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-941">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-942">또한 <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-942">The <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-943">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-943">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-944">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-944">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
        <altmember cref="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="Overload:System.Windows.Forms.Form.Dispose" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="OnShown">
      <MemberSignature Language="C#" Value="protected virtual void OnShown (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShown(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShown (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShown(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnShown : EventArgs -&gt; unit&#xA;override this.OnShown : EventArgs -&gt; unit" Usage="form.OnShown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-945">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-945">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-946">
            <see cref="E:System.Windows.Forms.Form.Shown" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-946">Raises the <see cref="E:System.Windows.Forms.Form.Shown" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-947"><xref:System.Windows.Forms.Form.Shown> 이벤트는 폼이 처음 표시 될 때마다 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-947">The <xref:System.Windows.Forms.Form.Shown> event occurs whenever the form is first shown.</span></span>  
  
 <span data-ttu-id="8bcbb-948">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-948">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-949">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-949">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-950">또한 <xref:System.Windows.Forms.Form.OnShown%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-950">The <xref:System.Windows.Forms.Form.OnShown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-951">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-951">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-952">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-952">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected override void OnStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnStyleChanged : EventArgs -&gt; unit" Usage="form.OnStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-953">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-953">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-954">
            <see cref="E:System.Windows.Forms.Control.StyleChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-954">Raises the <see cref="E:System.Windows.Forms.Control.StyleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="form.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-955">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-955">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-956">
            <see cref="E:System.Windows.Forms.Control.TextChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-956">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected override void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="form.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8bcbb-957">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-957">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-958">
            <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-958">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-959">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-959">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8bcbb-960">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-960">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8bcbb-961">또한 <xref:System.Windows.Forms.Form.OnVisibleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-961">The <xref:System.Windows.Forms.Form.OnVisibleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8bcbb-962">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-962">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bcbb-963">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-963">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Opacity : double with get, set" Usage="System.Windows.Forms.Form.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.OpacityConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-964">폼의 불투명도를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-964">Gets or sets the opacity level of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-965">폼의 불투명도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-965">The level of opacity for the form.</span>
          </span>
          <span data-ttu-id="8bcbb-966">기본값은 1.00입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-966">The default is 1.00.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-967"><xref:System.Windows.Forms.Form.Opacity%2A> 속성 형식 및 해당 컨트롤에 대 한 투명도 수준을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-967">The <xref:System.Windows.Forms.Form.Opacity%2A> property enables you to specify a level of transparency for the form and its controls.</span></span> <span data-ttu-id="8bcbb-968">이 속성은 (1.00) 100% 보다 작은 값으로, 전체 폼 테두리를 비롯 한 더 투명 하 게 작성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-968">When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent.</span></span> <span data-ttu-id="8bcbb-969">이 속성 값을 0% (0.00)으로 설정 하면 폼 완전히 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-969">Setting this property to a value of 0 percent (0.00) makes the form completely invisible.</span></span> <span data-ttu-id="8bcbb-970">서로 다른 수준의 투명도 제공 합니다. 또는 뷰 안팎에서 폼으로 중단 같은 효과 제공 합니다.이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-970">You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view.</span></span> <span data-ttu-id="8bcbb-971">예를 들어, 있습니다 수 단계 폼 보기에 설정 하 여는 <xref:System.Windows.Forms.Form.Opacity%2A> 속성 값 (0.00) 0% 및 100% (1.00)에 도달할 때까지 값을 서서히 늘려봅니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-971">For example, you can phase a form into view by setting the <xref:System.Windows.Forms.Form.Opacity%2A> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).</span></span>  
  
 <span data-ttu-id="8bcbb-972"><xref:System.Windows.Forms.Form.Opacity%2A> 제공한 투명도에서 다른 합니다 <xref:System.Windows.Forms.Form.TransparencyKey%2A>, 폼만 그러면 되며 해당 컨트롤 완전히 투명 한 경우 같은 색의 지정 된 값으로는 <xref:System.Windows.Forms.Form.TransparencyKey%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-972"><xref:System.Windows.Forms.Form.Opacity%2A> differs from the transparency provided by the <xref:System.Windows.Forms.Form.TransparencyKey%2A>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property.</span></span>  
  
 <span data-ttu-id="8bcbb-973">이 속성은 실행할 <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> 는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-973">This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.</span></span>  
  
 <span data-ttu-id="8bcbb-974"><xref:System.Windows.Forms.Form.Opacity%2A> 계층화 된 Windows API에 도입 된 Windows 2000을 사용 하 여 속성에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-974">The <xref:System.Windows.Forms.Form.Opacity%2A> property depends on the Layered Windows API that was introduced with Windows 2000.</span></span> <span data-ttu-id="8bcbb-975">자세한 내용은 "계층화 된 Windows::는 새 방식으로를 사용 하 여 반투명도 및 투명도 효과의 Windows" 응용 프로그램 참조의 Platform SDK 설명서에서 [ http://msdn.microsoft.com ](http://msdn.microsoft.com/)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-975">For more information, see the "Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications" in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-976">다음 코드 예제에서는 75% 불투명도로 표시 되는 양식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-976">The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</span></span> <span data-ttu-id="8bcbb-977">코드 예제는 화면 가운데에 배치 되는 새 폼을 만듭니다는 <xref:System.Windows.Forms.Form.Opacity%2A> 폼의 불투명도 변경 하려면 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-977">The code example creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form.</span></span> <span data-ttu-id="8bcbb-978">코드 예제에서는 또한 설정는 <xref:System.Windows.Forms.Form.Size%2A> 속성을 더 큰 크기 폼의 기본 크기 보다 폼입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-978">The code example also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form.</span></span> <span data-ttu-id="8bcbb-979">이 코드 예제는이 예제에서 정의 된 메서드는 이벤트 처리기 또는 기타 방법에 대 한 다른 폼에서 가정 아래 작성 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-979">This code example was written under the assumption that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]
 [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]
 [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.TransparencyKey" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="OwnedForms">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form[] OwnedForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form[] OwnedForms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.OwnedForms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnedForms As Form()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Windows::Forms::Form ^&gt; ^ OwnedForms { cli::array &lt;System::Windows::Forms::Form ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnedForms : System.Windows.Forms.Form[]" Usage="System.Windows.Forms.Form.OwnedForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-980">이 폼에 소유된 모든 폼을 나타내는 <see cref="T:System.Windows.Forms.Form" /> 개체의 배열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-980">Gets an array of <see cref="T:System.Windows.Forms.Form" /> objects that represent all forms that are owned by this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-981">이 폼에 대해 소유된 폼을 나타내는 <see cref="T:System.Windows.Forms.Form" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-981">A <see cref="T:System.Windows.Forms.Form" /> array that represents the owned forms for this form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-982">이 속성에는이 폼에 소유 된 폼을 모두 포함 된 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-982">This property returns an array that contains all forms that are owned by this form.</span></span> <span data-ttu-id="8bcbb-983">다른 폼에 소유 된 폼 되도록 호출을 <xref:System.Windows.Forms.Form.AddOwnedForm%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-983">To make a form owned by another form, call the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method.</span></span> <span data-ttu-id="8bcbb-984">소유자 폼에 할당 된 폼까지 소유 남아는 <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-984">The form assigned to the owner form will remain owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="8bcbb-985">설정 하 여 다른 소유 된 폼을 만들 수도 있습니다는 <xref:System.Windows.Forms.Form.Owner%2A> 소유자 폼에 대 한 참조를 사용 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-985">You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.</span></span>  
  
 <span data-ttu-id="8bcbb-986">폼 다른 폼에서 소유 하는 것을 닫거나 숨길 소유자 폼을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-986">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="8bcbb-987">예를 들어 이라는 폼 `Form2` 라는 폼이 소유 하 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-987">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="8bcbb-988">하는 경우 `Form1` 닫히거나 최소화 `Form2` 또한 닫히거나 숨겨집니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-988">If `Form1` is closed or minimized, `Form2` is also closed or hidden.</span></span> <span data-ttu-id="8bcbb-989">소유 된 폼의 소유자 폼 뒤 필요도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-989">Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="8bcbb-990">찾기 등 windows에 대 한 소유 된 폼을 사용할 수 있으며 기존 소유자 폼을 선택한 경우 소유자 폼의 숨김 표시 되지 않아야 하는 windows 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-990">You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-991">형식은 다중 문서 MDI (인터페이스) 부모 폼을이 속성은 열려 있는 현재 모든 MDI 자식 폼을 제외 하 고 표시 되는 모든 폼을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-991">If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open.</span></span> <span data-ttu-id="8bcbb-992">MDI 부모 폼에서 열려 있는 MDI 자식 폼을 가져오려면는 <xref:System.Windows.Forms.Form.MdiChildren%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-992">To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-993">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Form.OwnedForms%2A> 소유자 폼에 소유 하는 모든 폼을 수정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-993">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property to modify all forms owned by the owner form.</span></span> <span data-ttu-id="8bcbb-994">예제에서 첫 번째 메서드는 소유 된 폼을 사용 하 여 연결 된 소유 된 폼의 배열에 폼을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-994">The first method in the example adds forms to the array of owned forms associated with the owned form.</span></span> <span data-ttu-id="8bcbb-995">두 번째 방법은 모든 소유 된 폼과 캡션을 변경 하는입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-995">The second method loops through all owned forms and changes the caption.</span></span> <span data-ttu-id="8bcbb-996">이 예제는 두 메서드 모두가 이벤트 또는 폼의 다른 메서드에서 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-996">This example requires that both methods are called by an event or other method of a form.</span></span>  
  
 [!code-cpp[Form.OwnedForms#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.OwnedForms/CPP/form1.cpp#1)]
 [!code-csharp[Form.OwnedForms#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.OwnedForms/CS/form1.cs#1)]
 [!code-vb[Form.OwnedForms#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.OwnedForms/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ Owner { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Forms.Form with get, set" Usage="System.Windows.Forms.Form.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-997">이 폼을 소유하는 폼을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-997">Gets or sets the form that owns this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-998">이 폼의 소유자 폼을 나타내는 <see cref="T:System.Windows.Forms.Form" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-998">A <see cref="T:System.Windows.Forms.Form" /> that represents the form that is the owner of this form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-999">다른 폼에 소유 된 폼 되도록 할당할 해당 <xref:System.Windows.Forms.Form.Owner%2A> 속성 소유자 수 있는 형식에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-999">To make a form owned by another form, assign its <xref:System.Windows.Forms.Form.Owner%2A> property a reference to the form that will be the owner.</span></span>  
  
 <span data-ttu-id="8bcbb-1000">폼 다른 폼에서 소유 하는 것을 닫거나 숨길 소유자 폼을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1000">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="8bcbb-1001">예를 들어 이라는 폼 `Form2` 라는 폼이 소유 하 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1001">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="8bcbb-1002">하는 경우 `Form1` 닫히거나 최소화 `Form2` 또한 닫히거나 숨겨집니다. 소유 된 폼의 소유자 폼 뒤 필요도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1002">If `Form1` is closed or minimized, `Form2` is also closed or hidden.Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="8bcbb-1003">찾기 등 windows에 대 한 소유 된 폼을 사용할 수 있으며 기존 소유자 폼을 선택한 경우 표시 되어야 하는 windows 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1003">You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected.</span></span> <span data-ttu-id="8bcbb-1004">부모 폼에서 소유 하는 형태를 확인 하려면 사용 된 <xref:System.Windows.Forms.Form.OwnedForms%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1004">To determine the forms that are owned by a parent form, use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="8bcbb-1005">최상위 창은 소유자를 가질 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1005">A top-level window cannot have an owner.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="form.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="8bcbb-1006">처리할 Win32 메시지를 나타내며 참조에 의해 전달되는 <see cref="T:System.Windows.Forms.Message" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1006">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the Win32 message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="8bcbb-1007">처리할 키를 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1007">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1008">명령 키를 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1008">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-1009">컨트롤에서 키 입력을 처리하고 사용했으면 <see langword="true" />이고, 추가 처리를 허용하면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1009">
              <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1010"><xref:System.Windows.Forms.Form.ProcessCmdKey%2A> 메서드 재정의 기준</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1010">The <xref:System.Windows.Forms.Form.ProcessCmdKey%2A> method overrides the base</span></span>  
  
 <span data-ttu-id="8bcbb-1011"><xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType> 주 메뉴 명령 키 및 MDI 가속기의 추가 처리를 제공 하는 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1011"><xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType> implementation to provide additional handling of main menu command keys and MDI accelerators.</span></span>  
  
 <span data-ttu-id="8bcbb-1012">트래핑 키 입력에 대 한 내용은 "Visual C#을 사용 하 여 컨트롤에서 키 입력을 트래핑 하는 방법"을 참조 하 고 ".NET에서 키 입력을 트래핑 하는 방법을 제어 Visual Basic.NET을 사용 하 여"에서 Microsoft 기술 자료에서 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1012">For information about trapping keystrokes, see "How to trap keystrokes in controls by using Visual C#" and "How to trap keystrokes in .NET controls by using Visual Basic .NET" in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogChar">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogChar(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogChar : char -&gt; bool" Usage="form.ProcessDialogChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="8bcbb-1013">처리할 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1013">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1014">대화 상자 문자를 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1014">Processes a dialog character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-1015">컨트롤이 문자를 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1015">
              <see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="form.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="8bcbb-1016">처리할 키를 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1016">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1017">대화 상자 키를 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1017">Processes a dialog box key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-1018">컨트롤에서 키 입력을 처리하고 사용했으면 <see langword="true" />이고, 추가 처리를 허용하면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1018">
              <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1019">합니다 <xref:System.Windows.Forms.Form.ProcessDialogKey%2A> 메서드 재정의 기본 <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType> 구현을 반환 하 고 이스케이프 키 대화 상자에서 추가 처리를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1019">The <xref:System.Windows.Forms.Form.ProcessDialogKey%2A> method overrides the base <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes.</span></span> <span data-ttu-id="8bcbb-1020">ALT 또는 컨트롤 한정자를 포함 하는 키 입력에 없는 처리를 수행 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1020">The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyPreview :  -&gt; bool" Usage="form.ProcessKeyPreview m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="8bcbb-1021">처리할 창 메시지를 나타내며 참조에 의해 전달되는 <see cref="T:System.Windows.Forms.Message" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1021">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1022">키보드 메시지를 미리 봅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1022">Previews a keyboard message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-1023">컨트롤이 메시지를 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1023">
              <see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessMnemonic : char -&gt; bool" Usage="form.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="8bcbb-1024">처리할 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1024">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1025">니모닉 문자를 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1025">Processes a mnemonic character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-1026">컨트롤이 문자를 니모닉으로 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1026">
              <see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTabKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessTabKey (bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessTabKey(bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessTabKey (forward As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessTabKey(bool forward);" />
      <MemberSignature Language="F#" Value="override this.ProcessTabKey : bool -&gt; bool" Usage="form.ProcessTabKey forward" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forward">
          <span data-ttu-id="8bcbb-1027">ContainerControl의 컨트롤 전체를 순환하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1027">
              <see langword="true" /> to cycle forward through the controls in the ContainerControl; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1028">사용 가능한 다음 컨트롤을 선택하여 활성 컨트롤로 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1028">Selects the next available control and makes it the active control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-1029">컨트롤이 선택되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1029">
              <see langword="true" /> if a control is selected; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessTabKey(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOwnedForm">
      <MemberSignature Language="C#" Value="public void RemoveOwnedForm (System.Windows.Forms.Form ownedForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveOwnedForm(class System.Windows.Forms.Form ownedForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveOwnedForm (ownedForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveOwnedForm(System::Windows::Forms::Form ^ ownedForm);" />
      <MemberSignature Language="F#" Value="member this.RemoveOwnedForm : System.Windows.Forms.Form -&gt; unit" Usage="form.RemoveOwnedForm ownedForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="ownedForm">
          <span data-ttu-id="8bcbb-1030">이 폼에 대한 소유된 폼 목록에서 제거할 폼을 나타내는 <see cref="T:System.Windows.Forms.Form" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1030">A <see cref="T:System.Windows.Forms.Form" /> representing the form to remove from the list of owned forms for this form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1031">이 폼에서 소유된 폼을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1031">Removes an owned form from this form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1032">될 때까지 소유 된 소유자 형식에 할당 된 상태로 유지 된 <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1032">The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="8bcbb-1033">소유 된 폼을 소유 된 폼 목록에서 제거 하는 것 외에도이 메서드 설정 소유자 폼 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1033">In addition to removing the owned form from the list of owned form, this method also sets the owner form to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
      </Docs>
    </Member>
    <Member MemberName="ResizeBegin">
      <MemberSignature Language="C#" Value="public event EventHandler ResizeBegin;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResizeBegin" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.ResizeBegin" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResizeBegin As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResizeBegin;" />
      <MemberSignature Language="F#" Value="member this.ResizeBegin : EventHandler " Usage="member this.ResizeBegin : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1034">폼이 크기 조정 모드로 들어가면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1034">Occurs when a form enters resizing mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1035"><xref:System.Windows.Forms.Form.ResizeBegin> 는 사용자가 일반적으로 클릭 하 고 끌어서 테두리 또는 폼의 오른쪽 아래 모퉁이 크기 조정 그립 중 하나는 폼 크기를 조정 하기 시작할 때 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1035">The <xref:System.Windows.Forms.Form.ResizeBegin> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form.</span></span> <span data-ttu-id="8bcbb-1036">이 작업 크기 조정 작업이 완료 될 때까지 크기 조정 모달 루프에 폼을 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1036">This action puts the form into a modal sizing loop until the resize operation is completed.</span></span> <span data-ttu-id="8bcbb-1037">일반적으로 다음 이벤트 집합을 크기 조정 작업 중에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1037">Typically, the following set of events occurs during a resize operation:</span></span>  
  
1.  <span data-ttu-id="8bcbb-1038">단일 <xref:System.Windows.Forms.Form.ResizeBegin> 이벤트 폼 크기 조정 모드로 들어가면 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1038">A single <xref:System.Windows.Forms.Form.ResizeBegin> event occurs as the form enters resizing mode.</span></span>  
  
2.  <span data-ttu-id="8bcbb-1039">0 개 이상의 쌍 <xref:System.Windows.Forms.Control.Resize> 하 고 <xref:System.Windows.Forms.Control.SizeChanged> 폼의 이벤트가 발생할 <xref:System.Windows.Forms.Form.Size%2A> 수정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1039">Zero or more pairs of <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> events occur as the form's <xref:System.Windows.Forms.Form.Size%2A> is modified.</span></span>  
  
3.  <span data-ttu-id="8bcbb-1040">단일 <xref:System.Windows.Forms.Form.ResizeEnd> 폼 크기 조정 모드를 종료 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1040">A single <xref:System.Windows.Forms.Form.ResizeEnd> event occurs as the form exits resizing mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-1041">테두리 없이 크기 조정 그립을 클릭 하면 발생 합니다 <xref:System.Windows.Forms.Form.ResizeBegin> 및 <xref:System.Windows.Forms.Form.ResizeEnd> 모든 중간 없이 이벤트 <xref:System.Windows.Forms.Control.Resize> 및 <xref:System.Windows.Forms.Control.SizeChanged> 이벤트 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1041">Just clicking without dragging on a border or resizing grip will generate the <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> events without any intermediate <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> event pairs.</span></span>  
  
 <span data-ttu-id="8bcbb-1042">합니다 <xref:System.Windows.Forms.Form.ResizeBegin> 및 <xref:System.Windows.Forms.Form.ResizeEnd> 이벤트 쌍은 사용자가 클릭 하 고 캡션 표시줄을 끌어 폼을 이동 하는 경우에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1042">The <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar.</span></span> <span data-ttu-id="8bcbb-1043">이러한 이벤트가 생성 되지 않습니다 폼의 프로그래밍 방식으로 조작 하 여 예를 들어 변경 하 여 합니다 <xref:System.Windows.Forms.Form.Size%2A> 또는 <xref:System.Windows.Forms.Control.Location%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1043">These events are not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.</span></span>  
  
 <span data-ttu-id="8bcbb-1044">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1044">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1045">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1045">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-1046">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.ResizeBegin> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1046">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span> <span data-ttu-id="8bcbb-1047">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1047">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-1048">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1048">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-1049">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1049">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-1050">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.ResizeBegin> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1050">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#404](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#404)]
 [!code-vb[System.Windows.Forms.EventExamples#404](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#404)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.Control.PreferredSize" />
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Form.SizeGripStyle" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
        <altmember cref="E:System.Windows.Forms.Form.ResizeEnd" />
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResizeEnd">
      <MemberSignature Language="C#" Value="public event EventHandler ResizeEnd;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResizeEnd" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.ResizeEnd" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResizeEnd As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResizeEnd;" />
      <MemberSignature Language="F#" Value="member this.ResizeEnd : EventHandler " Usage="member this.ResizeEnd : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1051">폼이 크기 조정 모드를 벗어나면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1051">Occurs when a form exits resizing mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1052"><xref:System.Windows.Forms.Form.ResizeEnd> 테두리의 크기 조정 그립은 폼의 오른쪽 아래 모서리에 있는 하나를 끌어서 놓는 일반적으로 폼의 크기 조정을 마쳤을 때 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1052">The <xref:System.Windows.Forms.Form.ResizeEnd> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it.</span></span> <span data-ttu-id="8bcbb-1053">크기 조정 작업에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.Form.ResizeBegin> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1053">For more information about the resizing operation, see the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span>  
  
 <span data-ttu-id="8bcbb-1054"><xref:System.Windows.Forms.Form.ResizeEnd> 이벤트는 사용자가 클릭 하 고 캡션 표시줄을 끌어 폼을 이동한 후에 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1054">The <xref:System.Windows.Forms.Form.ResizeEnd> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar.</span></span> <span data-ttu-id="8bcbb-1055">이 이벤트가 생성 되지 않습니다 폼의 프로그래밍 방식으로 조작 하 여 예를 들어 변경 하 여 합니다 <xref:System.Windows.Forms.Form.Size%2A> 또는 <xref:System.Windows.Forms.Control.Location%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1055">This event is not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.</span></span>  
  
 <span data-ttu-id="8bcbb-1056">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1056">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1057">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1057">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-1058">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.ResizeEnd> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1058">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeEnd> event.</span></span> <span data-ttu-id="8bcbb-1059">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1059">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-1060">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1060">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-1061">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1061">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-1062">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.ResizeEnd> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1062">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeEnd> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#405](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#405)]
 [!code-vb[System.Windows.Forms.EventExamples#405](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#405)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.Control.PreferredSize" />
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Form.SizeGripStyle" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
        <altmember cref="E:System.Windows.Forms.Form.ResizeBegin" />
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="RestoreBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RestoreBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle RestoreBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.RestoreBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle RestoreBounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreBounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.Form.RestoreBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1063">표준 창 상태의 폼 위치 및 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1063">Gets the location and size of the form in its normal window state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1064">표준 창 상태의 폼 위치 및 크기를 포함하는 <see cref="T:System.Drawing.Rectangle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1064">A <see cref="T:System.Drawing.Rectangle" /> that contains the location and size of the form in the normal window state.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1065">일반적으로 사용 된 <xref:System.Windows.Forms.Form.RestoreBounds%2A> 속성을 사용자의 창 크기를 추적 하 고 표준 창 상태의 폼의 기본 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1065">Typically, you use the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property to track the user's window size and position preferences for the form in its normal window state.</span></span> <span data-ttu-id="8bcbb-1066">두 값을 추적 해야 합니다 <xref:System.Windows.Forms.Form.WindowState%2A> 및 <xref:System.Windows.Forms.Form.RestoreBounds%2A> 사용자의 창 기본 설정을 추적 하는 경우 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1066">You should track both the value of the <xref:System.Windows.Forms.Form.WindowState%2A> and <xref:System.Windows.Forms.Form.RestoreBounds%2A> properties when tracking the user's window preferences.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-1067">값을 <xref:System.Windows.Forms.Form.RestoreBounds%2A> 속성은 경우에만 유효는 <xref:System.Windows.Forms.Form.WindowState%2A> 의 속성을 <xref:System.Windows.Forms.Form> 클래스와 같지 않습니다. <xref:System.Windows.Forms.FormWindowState.Normal>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1067">The value of the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property is valid only when the <xref:System.Windows.Forms.Form.WindowState%2A> property of the <xref:System.Windows.Forms.Form> class is not equal to <xref:System.Windows.Forms.FormWindowState.Normal>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.Form.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1068">오른쪽에서 왼쪽 방향의 미러 배치가 설정되어 있는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1068">Gets or sets a value indicating whether right-to-left mirror placement is turned on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1069">오른쪽에서 왼쪽 방향의 미러 배치가 설정되어 있으면 <see langword="true" />이고, 표준 자식 컨트롤 배치에 대해서는 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1069">
              <see langword="true" /> if right-to-left mirror placement is turned on; otherwise, <see langword="false" /> for standard child control placement.</span>
          </span>
          <span data-ttu-id="8bcbb-1070">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1070">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1071"><xref:System.Windows.Forms.Form.RightToLeftLayout%2A> 속성은 전 세계 대상을 위한 세계 시장에 폼을 개발 하는 데 매우 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1071">The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is primarily useful for developing world-ready forms for worldwide audiences.</span></span> <span data-ttu-id="8bcbb-1072">다양 한 형태는 왼쪽에서 오른쪽으로 양식의 컨트롤이 배치 되어 있도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1072">Many forms are designed so that controls are laid out on a form in a left-to-right fashion.</span></span> <span data-ttu-id="8bcbb-1073">이러한 폼이 쓰기 방향에 따라 언어와 호환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1073">These forms are compatible with languages that follow this writing direction.</span></span> <span data-ttu-id="8bcbb-1074">그러나 오른쪽에서 왼쪽 언어의 사용자에 게 동일한 폼을 표시할 때 것이 좋습니다 폼에서 컨트롤의 순서를 반대로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1074">However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form.</span></span> <span data-ttu-id="8bcbb-1075">두 경우는 <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> 하 고 <xref:System.Windows.Forms.Control.RightToLeft%2A> 속성은 `true`, 미러링 켜 집니다 폼 및 컨트롤 배치 및 텍스트 방향에는 오른쪽에서 왼쪽 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1075">If both the <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties are `true`, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.</span></span>  
  
 <span data-ttu-id="8bcbb-1076">와 달리 <xref:System.Windows.Forms.Control.RightToLeft%2A>, <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> 상속 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1076">Unlike <xref:System.Windows.Forms.Control.RightToLeft%2A>, <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> does not inherit.</span></span> <span data-ttu-id="8bcbb-1077">자식 컨트롤에 적용 되도록 하려는 경우 원하는 미러된 각 자식 컨트롤에 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1077">If you want it to take effect for child controls, you must set it on each child control that you want mirrored.</span></span>  
  
 <span data-ttu-id="8bcbb-1078">소유자 그리기 없는 경우 지원 <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> 로 설정 된 `Yes`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1078">Owner draw is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `Yes`.</span></span> <span data-ttu-id="8bcbb-1079">소유자 그리기 이벤트가 계속 발생 하지만 이러한 이벤트에서 만든 모든 코드의 동작은 정의 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1079">The owner draw events will still occur, but the behavior of any code you author in these events is not defined.</span></span> <span data-ttu-id="8bcbb-1080">또한 <xref:System.Windows.Forms.Control.BackgroundImage%2A>, <xref:System.Windows.Forms.Form.Opacity%2A>, <xref:System.Windows.Forms.Form.TransparencyKey%2A>, 그리기 이벤트 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1080">Additionally, <xref:System.Windows.Forms.Control.BackgroundImage%2A>, <xref:System.Windows.Forms.Form.Opacity%2A>, <xref:System.Windows.Forms.Form.TransparencyKey%2A>, and the painting events are not supported.</span></span>  
  
 <span data-ttu-id="8bcbb-1081">합니다 <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> 및 <xref:System.Windows.Forms.Control.RightToLeft%2A> 속성 인해 다음 Win32 API 창 스타일을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1081">The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties cause the following Win32 API window styles to be set:</span></span>  
  
-   <span data-ttu-id="8bcbb-1082">때 <xref:System.Windows.Forms.Control.RightToLeft%2A> 로 설정 됩니다 `Yes` 및 <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> 로 설정 되어 `true`를 설정 하는 Windows Forms는 `WS_EX_LAYOUTRTL` 창 스타일 및 제거를 `WS_EX_RIGHT` 및 `WS_EX_RTLREADING` 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1082">When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `true`, Windows Forms sets the `WS_EX_LAYOUTRTL` window style, and removes the `WS_EX_RIGHT` and `WS_EX_RTLREADING` styles.</span></span>  
  
-   <span data-ttu-id="8bcbb-1083">때 <xref:System.Windows.Forms.Control.RightToLeft%2A> 로 설정 됩니다 `Yes` 있지만 <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> 로 설정 되어 `No`를 설정 하는 Windows Forms는 `WS_EX_RIGHT` 및 `WS_EX_RTLREADING` 창 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1083">When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` but <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `No`, Windows Forms sets the `WS_EX_RIGHT` and `WS_EX_RTLREADING` window styles.</span></span>  
  
 <span data-ttu-id="8bcbb-1084">발생이 속성의 값을 변경 합니다 <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1084">Changing the value of this property raises the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span>  
  
 <span data-ttu-id="8bcbb-1085">세계화 문제에 대 한 자세한 내용은 참조 하세요. [세계 시장 대응 응용 프로그램 개발에 대 한 모범 사례](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1085">For more information about globalization issues, see [Best Practices for Developing World-Ready Applications](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="Overload:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayoutChanged : EventHandler " Usage="member this.RightToLeftLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1086">
            <see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /> 속성 값이 변경된 후 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1086">Occurs after the value of the <see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1087">합니다 <xref:System.Windows.Forms.Control.RightToLeft%2A> 고 <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> 속성 세계 시장 대응 응용 프로그램 개발에 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1087">The <xref:System.Windows.Forms.Control.RightToLeft%2A> and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> properties are typically used in developing World-Ready applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1088">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1088">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-1089">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1089">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span> <span data-ttu-id="8bcbb-1090">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1090">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-1091">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1091">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-1092">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1092">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-1093">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1093">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#402](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#402)]
 [!code-vb[System.Windows.Forms.EventExamples#402](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#402)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <altmember cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="form.ScaleControl (factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="factor">
          <span data-ttu-id="8bcbb-1094">컨트롤의 높이와 너비 크기를 조정하는 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1094">The factor by which the height and width of the control are scaled.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="8bcbb-1095">컨트롤의 크기와 위치를 정의할 때 사용할 컨트롤 범위를 지정하는 <see cref="T:System.Windows.Forms.BoundsSpecified" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1095">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1096">컨트롤의 위치, 크기, 안쪽 여백 및 여백을 조정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1096">Scales the location, size, padding, and margin of a control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleCore">
      <MemberSignature Language="C#" Value="protected override void ScaleCore (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleCore(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleCore (x As Single, y As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleCore(float x, float y);" />
      <MemberSignature Language="F#" Value="override this.ScaleCore : single * single -&gt; unit" Usage="form.ScaleCore (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8bcbb-1097">가로로 폼의 크기를 조정할 백분율입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1097">Percentage to scale the form horizontally</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8bcbb-1098">세로로 폼의 크기를 조정할 백분율입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1098">Percentage to scale the form vertically</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1099">폼의 크기를 조정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1099">Performs scaling of the form.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected override void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Select(bool directed, bool forward);" />
      <MemberSignature Language="F#" Value="override this.Select : bool * bool -&gt; unit" Usage="form.Select (directed, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed">
          <span data-ttu-id="8bcbb-1100">true로 설정하면 활성 컨트롤이 변경됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1100">If set to true that the active control is changed</span>
          </span>
        </param>
        <param name="forward">
          <span data-ttu-id="8bcbb-1101">directed가 true이면 포커스가 이동하는 방향이 조절됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1101">If directed is true, then this controls the direction in which focus is moved.</span>
          </span>
          <span data-ttu-id="8bcbb-1102">이 값이 <see langword="true" />이면 다음 컨트롤이 선택되고, 그렇지 않으면 이전 컨트롤이 선택됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1102">If this is <see langword="true" />, then the next control is selected; otherwise, the previous control is selected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1103">이 폼을 선택하고, 선택적으로 다음 또는 이전 컨트롤을 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1103">Selects this form, and optionally selects the next or previous control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8bcbb-1104">포커스를 변경 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1104">For changing focus.</span>
          </span>
          <span data-ttu-id="8bcbb-1105">연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1105">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="form.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8bcbb-1106">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Left" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1106">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8bcbb-1107">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Top" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1107">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="8bcbb-1108">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Width" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1108">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="8bcbb-1109">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Height" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1109">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="8bcbb-1110">
            <see cref="T:System.Windows.Forms.BoundsSpecified" /> 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1110">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1111">이 컨트롤의 지정된 범위를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1111">Performs the work of setting the specified bounds of this control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="SetClientSizeCore">
      <MemberSignature Language="C#" Value="protected override void SetClientSizeCore (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetClientSizeCore(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetClientSizeCore (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetClientSizeCore(int x, int y);" />
      <MemberSignature Language="F#" Value="override this.SetClientSizeCore : int * int -&gt; unit" Usage="form.SetClientSizeCore (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8bcbb-1112">클라이언트 영역의 요청된 너비입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1112">Requested width of the client region.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8bcbb-1113">클라이언트 영역의 요청된 높이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1113">Requested height of the client region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1114">폼의 클라이언트 크기를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1114">Sets the client size of the form.</span>
          </span>
          <span data-ttu-id="8bcbb-1115">폼의 경계를 조정하여 클라이언트 크기를 요청한 크기로 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1115">This will adjust the bounds of the form to make the client size the requested size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
      </Docs>
    </Member>
    <Member MemberName="SetDesktopBounds">
      <MemberSignature Language="C#" Value="public void SetDesktopBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDesktopBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDesktopBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDesktopBounds(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.SetDesktopBounds : int * int * int * int -&gt; unit" Usage="form.SetDesktopBounds (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8bcbb-1116">폼 위치의 x 좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1116">The x-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8bcbb-1117">폼 위치의 y 좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1117">The y-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="8bcbb-1118">폼의 너비입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1118">The width of the form.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="8bcbb-1119">폼의 높이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1119">The height of the form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1120">폼의 경계를 데스크톱 좌표로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1120">Sets the bounds of the form in desktop coordinates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1121">데스크톱 좌표는 화면 작업 표시줄을 제외 하는 작업 영역을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1121">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="8bcbb-1122">데스크톱에서 폼의 크기와 위치를 설정 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1122">You can use this method to set the position and size of your form on the desktop.</span></span> <span data-ttu-id="8bcbb-1123">데스크톱 좌표를 폼의 작업 영역을 기반으로 하므로 폼 바탕 화면에서 완전히 표시 되도록이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1123">Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1124">다음 코드 예제는 <xref:System.Windows.Forms.Form.SetDesktopBounds%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1124">The following code example demonstrates using the <xref:System.Windows.Forms.Form.SetDesktopBounds%2A> method.</span></span> <span data-ttu-id="8bcbb-1125">이 예제를 실행 하려면 라는 단추가 포함 된 폼에서 다음 코드를 붙여 넣습니다 `Button2`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1125">To run this example, paste the following code in a form that contains a button named `Button2`.</span></span> <span data-ttu-id="8bcbb-1126">모든 이벤트가 해당 이벤트 처리기와 연결 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1126">Ensure all events are associated with their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.FormExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.FormExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDesktopLocation">
      <MemberSignature Language="C#" Value="public void SetDesktopLocation (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDesktopLocation(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDesktopLocation (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDesktopLocation(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.SetDesktopLocation : int * int -&gt; unit" Usage="form.SetDesktopLocation (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8bcbb-1127">폼 위치의 x 좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1127">The x-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8bcbb-1128">폼 위치의 y 좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1128">The y-coordinate of the form's location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1129">폼의 위치를 데스크톱 좌표로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1129">Sets the location of the form in desktop coordinates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1130">데스크톱 좌표는 화면 작업 표시줄을 제외 하는 작업 영역을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1130">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="8bcbb-1131">데스크톱에서 폼을 배치 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1131">You can use this method to position your form on the desktop.</span></span> <span data-ttu-id="8bcbb-1132">데스크톱 좌표를 폼의 작업 영역을 기반으로 하므로 폼 바탕 화면에서 완전히 표시 되도록이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1132">Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</span></span> <span data-ttu-id="8bcbb-1133">최상위 폼;에 주로 사용 되는이 메서드는 사용 된 <xref:System.Windows.Forms.Form.LayoutMdi%2A> 다중 문서 MDI (인터페이스) 자식 폼을 배치 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1133">This method is intended to be used primarily for top-level forms; use the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to position multiple-document interface (MDI) child forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1134">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> 및 <xref:System.Windows.Forms.Form.Activate%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1134">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="8bcbb-1135">예제를 실행 하려면 이라는 폼에 다음 코드를 붙여 넣습니다 `Form1` 이라는 단추가 포함 된 `Button1` 두 개의 `Label` 컨트롤 이라는 `Label1` 및 `Label2`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1135">To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected override void SetVisibleCore (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetVisibleCore(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetVisibleCore (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetVisibleCore(bool value);" />
      <MemberSignature Language="F#" Value="override this.SetVisibleCore : bool -&gt; unit" Usage="form.SetVisibleCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8bcbb-1136">컨트롤을 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1136">
              <see langword="true" /> to make the control visible; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1137">컨트롤을 지정된 표시 상태로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1137">Sets the control to the specified visible state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (owner As IWin32Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberSignature Language="F#" Value="override this.Show : System.Windows.Forms.IWin32Window -&gt; unit" Usage="form.Show owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="8bcbb-1138">
            <see cref="T:System.Windows.Forms.IWin32Window" />을(를) 구현하고 이 폼을 소유할 최상위 창을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1138">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> and represents the top-level window that will own this form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1139">사용자에게 소유자가 지정된 폼을 보여 줍니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1139">Shows the form with the specified owner to the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1140">비 모달 폼을 표시 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1140">You can use this method to display a non-modal form.</span></span> <span data-ttu-id="8bcbb-1141">이 메서드를 사용 하는 경우는 <xref:System.Windows.Forms.Form.Owner%2A> 폼의 속성이 `owner`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1141">When you use this method, the <xref:System.Windows.Forms.Form.Owner%2A> property of the form is set to `owner`.</span></span> <span data-ttu-id="8bcbb-1142">비 모달 폼에서 사용할 수는 <xref:System.Windows.Forms.Form.Owner%2A> 소유 형식에 대 한 정보를 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1142">The non-modal form can use the <xref:System.Windows.Forms.Form.Owner%2A> property to get information about the owning form.</span></span>  <span data-ttu-id="8bcbb-1143">이 메서드를 호출 하는 것은 동일 설정에는 <xref:System.Windows.Forms.Form.Owner%2A> 비 모달의 속성 및 호출 된 <xref:System.Windows.Forms.Control.Show> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1143">Calling this method is identical to setting the <xref:System.Windows.Forms.Form.Owner%2A> property of the non-modal and then calling the <xref:System.Windows.Forms.Control.Show> method.</span></span>  
  
 <span data-ttu-id="8bcbb-1144">설정에 해당 하는 폼을 표시 합니다 <xref:System.Windows.Forms.Control.Visible%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1144">Showing the form is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`.</span></span> <span data-ttu-id="8bcbb-1145">후는 <xref:System.Windows.Forms.Form.Show%2A> 메서드를 호출 합니다 <xref:System.Windows.Forms.Control.Visible%2A> 속성의 값을 반환 `true` 될 때까지 <xref:System.Windows.Forms.Control.Hide%2A> 메서드는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1145">After the <xref:System.Windows.Forms.Form.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bcbb-1146">표시될 폼이 이미 표시되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1146">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="8bcbb-1147">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1147">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-1148">
            <paramref name="owner" /> 매개 변수에 지정된 폼이 표시된 폼과 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1148">The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          </span>
          <span data-ttu-id="8bcbb-1149">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1149">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-1150">표시될 폼을 사용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1150">The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="8bcbb-1151">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1151">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-1152">표시될 폼이 최상위 창이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1152">The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="8bcbb-1153">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1153">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-1154">대화 상자로 표시될 폼이 이미 모달 폼인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1154">The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="8bcbb-1155">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1155">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-1156">현재 프로세스가 사용자 대화형 모드에서 실행되고 있지 않은 경우. 자세한 내용은 <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1156">The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Forms.Form.ShowDialog" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
        <altmember cref="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <altmember cref="P:System.Windows.Forms.Form.ShowIcon" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowDialog">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1157">폼을 모달 대화 상자로 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1157">Shows the form as a modal dialog box.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; System.Windows.Forms.DialogResult" Usage="form.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1158">폼을 모달 대화 상자로 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1158">Shows the form as a modal dialog box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-1159">
            <see cref="T:System.Windows.Forms.DialogResult" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1159">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1160">응용 프로그램에서 모달 대화 상자를 표시 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1160">You can use this method to display a modal dialog box in your application.</span></span> <span data-ttu-id="8bcbb-1161">이 메서드를 호출 하는 경우 대화 상자를 닫은 후 다음 코드를 때까지 실행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1161">When this method is called, the code following it is not executed until after the dialog box is closed.</span></span> <span data-ttu-id="8bcbb-1162">값 중 하나는 대화 상자를 할당할 수 있습니다는 <xref:System.Windows.Forms.DialogResult> 할당 하 여 열거형을 <xref:System.Windows.Forms.Button.DialogResult%2A> 의 속성을 <xref:System.Windows.Forms.Button> 양식의 하거나 설정 하 여는 <xref:System.Windows.Forms.Form.DialogResult%2A> 코드에서 폼의 속성.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1162">The dialog box can be assigned one of the values of the <xref:System.Windows.Forms.DialogResult> enumeration by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code.</span></span> <span data-ttu-id="8bcbb-1163">그런 다음이 값은이 메서드에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1163">This value is then returned by this method.</span></span> <span data-ttu-id="8bcbb-1164">대화 상자에서 발생 한 작업을 처리 하는 방법을 결정이 반환 값을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1164">You can use this return value to determine how to process the actions that occurred in the dialog box.</span></span> <span data-ttu-id="8bcbb-1165">예를 들어, 대화 상자를 종료 하 고 반환 되었으면 합니다 `DialogResult.Cancel` 값이이 메서드를 통해 호출 다음에 코드를 방지할 수 있습니다 <xref:System.Windows.Forms.Form.ShowDialog%2A> 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1165">For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.</span></span>  
  
 <span data-ttu-id="8bcbb-1166">폼을 모달 대화 상자로 표시 되 면 클릭 하는 **닫기** 단추 (폼의 오른쪽 위 모서리에 있는 x 단추) 하면 폼이 표시 되지 않도록 하며 <xref:System.Windows.Forms.Form.DialogResult%2A> 속성을 설정할 `DialogResult.Cancel`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1166">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="8bcbb-1167">비 모달 폼 달리 합니다 <xref:System.Windows.Forms.Form.Close%2A> 대화 상자 폼 닫기 단추를 클릭 하거나 값을 설정 하는 경우.NET Framework에서 메서드가 호출 되지 않습니다는 <xref:System.Windows.Forms.Form.DialogResult%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1167">Unlike non-modal forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="8bcbb-1168">대신 폼 숨겨져 있고 대화 상자의 새 인스턴스를 만들지 않고 다시 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1168">Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="8bcbb-1169">호출 해야 양식 대신 닫힌 하는 대화 상자는 숨겨진 것으로 표시 된 <xref:System.Windows.Forms.Control.Dispose%2A> 폼은 더 이상 필요 없는 응용 프로그램에서 폼의 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1169">Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="8bcbb-1170">이 버전의는 <xref:System.Windows.Forms.Form.ShowDialog%2A> 메서드로 지정 하지 않습니다 양식이 나 컨트롤의 소유자입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1170">This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method does not specify a form or control as its owner.</span></span> <span data-ttu-id="8bcbb-1171">이 버전 호출 될 때 현재 활성 창 대화 상자의 소유자가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1171">When this version is called, the currently active window is made the owner of the dialog box.</span></span> <span data-ttu-id="8bcbb-1172">특정 소유자를 지정 하려는 경우이 메서드의 다른 버전을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1172">If you want to specify a specific owner, use the other version of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1173">다음 코드 예제에서는 폼을 모달 대화 상자로 표시 하 고 대화 상자의 반환 값의 값을 읽어올 지 여부를 결정 하기 전에 평가 <xref:System.Windows.Forms.TextBox> 대화 상자 폼에서 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1173">The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form.</span></span> <span data-ttu-id="8bcbb-1174">이 예제에서는 <xref:System.Windows.Forms.Form> 라는 `testDialog` 만들어집니다 및 포함 된를 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `TextBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1174">This example requires that a <xref:System.Windows.Forms.Form> named `testDialog` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`.</span></span> <span data-ttu-id="8bcbb-1175">이 예제의 코드에에서 포함 된 이며 다른 호출 예제에 필요 게다가 <xref:System.Windows.Forms.Form> 표시 하기 위해 `testDialog` 모달 대화 상자로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1175">Furthermore, the example requires that code in this example is contained and called from a different <xref:System.Windows.Forms.Form> in order to display `testDialog` as a modal dialog box.</span></span> <span data-ttu-id="8bcbb-1176">버전을 사용 하는 예제 <xref:System.Windows.Forms.Form.ShowDialog%2A> 대화 상자에 대 한 소유자를 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1176">The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bcbb-1177">표시될 폼이 이미 표시되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1177">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="8bcbb-1178">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1178">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-1179">표시될 폼을 사용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1179">The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="8bcbb-1180">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1180">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-1181">표시될 폼이 최상위 창이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1181">The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="8bcbb-1182">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1182">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-1183">대화 상자로 표시될 폼이 이미 모달 폼인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1183">The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="8bcbb-1184">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1184">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-1185">현재 프로세스가 사용자 대화형 모드에서 실행되고 있지 않은 경우. 자세한 내용은 <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1185">The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog (owner As IWin32Window) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : System.Windows.Forms.IWin32Window -&gt; System.Windows.Forms.DialogResult" Usage="form.ShowDialog owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="8bcbb-1186">모달 대화 상자를 소유할 최상위 창을 나타내는 <see cref="T:System.Windows.Forms.IWin32Window" />을(를) 구현하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1186">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the top-level window that will own the modal dialog box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1187">폼을 지정된 소유자가 있는 모달 대화 상자로 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1187">Shows the form as a modal dialog box with the specified owner.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-1188">
            <see cref="T:System.Windows.Forms.DialogResult" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1188">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1189">응용 프로그램에서 모달 대화 상자를 표시 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1189">You can use this method to display a modal dialog box in your application.</span></span> <span data-ttu-id="8bcbb-1190">이 메서드를 호출 하는 경우 대화 상자를 닫은 후 다음 코드를 때까지 실행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1190">When this method is called, the code following it is not executed until after the dialog box is closed.</span></span> <span data-ttu-id="8bcbb-1191">값 중 하나는 대화 상자를 할당할 수 있습니다 <xref:System.Windows.Forms.DialogResult> 할당 하 여는 <xref:System.Windows.Forms.Button.DialogResult%2A> 의 속성을 <xref:System.Windows.Forms.Button> 양식의 하거나 설정 하 여를 <xref:System.Windows.Forms.Form.DialogResult%2A> 코드에서 폼의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1191">The dialog box can be assigned one of the values of <xref:System.Windows.Forms.DialogResult> by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code.</span></span> <span data-ttu-id="8bcbb-1192">그런 다음이 값은이 메서드에서 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1192">This value is then returned by this method.</span></span> <span data-ttu-id="8bcbb-1193">대화 상자에서 발생 한 작업을 처리 하는 방법을 결정이 반환 값을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1193">You can use this return value to determine how to process the actions that occurred in the dialog box.</span></span> <span data-ttu-id="8bcbb-1194">예를 들어, 대화 상자를 종료 하 고 반환 되었으면 합니다 `DialogResult.Cancel` 값이이 메서드를 통해 호출 다음에 코드를 방지할 수 있습니다 <xref:System.Windows.Forms.Form.ShowDialog%2A> 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1194">For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.</span></span>  
  
 <span data-ttu-id="8bcbb-1195">폼을 모달 대화 상자로 표시 되 면 클릭 하는 **닫기** 단추 (폼의 오른쪽 위 모서리에 있는 x 단추) 하면 폼이 표시 되지 않도록 하며 <xref:System.Windows.Forms.Form.DialogResult%2A> 속성을 설정할 `DialogResult.Cancel`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1195">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="8bcbb-1196">모덜리스 폼과 달리 합니다 <xref:System.Windows.Forms.Form.Close%2A> 대화 상자 폼 닫기 단추를 클릭 하거나 값을 설정 하는 경우.NET Framework에서 메서드가 호출 되지 않습니다는 <xref:System.Windows.Forms.Form.DialogResult%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1196">Unlike modeless forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="8bcbb-1197">대신 폼 숨겨져 있고 대화 상자의 새 인스턴스를 만들지 않고 다시 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1197">Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="8bcbb-1198">호출 해야 양식 대신 닫힌 하는 대화 상자는 숨겨진 것으로 표시 된 <xref:System.Windows.Forms.Control.Dispose%2A> 폼은 더 이상 필요 없는 응용 프로그램에서 폼의 메서드.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1198">Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="8bcbb-1199">이 버전의는 <xref:System.Windows.Forms.Form.ShowDialog%2A> 메서드를 사용 하면 표시 되는 대화 상자를 소유 하는 특정 형태를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1199">This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method allows you to specify a specific form that will own the dialog box that is shown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1200">다음 코드 예제에서는 폼을 모달 대화 상자로 표시 하 고 대화 상자의 반환 값의 값을 읽어올 지 여부를 결정 하기 전에 평가 <xref:System.Windows.Forms.TextBox> 대화 상자 폼에서 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1200">The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form.</span></span> <span data-ttu-id="8bcbb-1201">이 예제에서는 <xref:System.Windows.Forms.Form> 라는 `Form2` 만들어집니다 및 포함 된를 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `TextBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1201">This example requires that a <xref:System.Windows.Forms.Form> named `Form2` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`.</span></span> <span data-ttu-id="8bcbb-1202">버전을 사용 하는 예제 <xref:System.Windows.Forms.Form.ShowDialog%2A> 대화 상자에 대 한 소유자를 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1202">The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bcbb-1203">
            <paramref name="owner" /> 매개 변수에 지정된 폼이 표시된 폼과 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1203">The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bcbb-1204">표시될 폼이 이미 표시되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1204">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="8bcbb-1205">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1205">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-1206">표시될 폼을 사용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1206">The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="8bcbb-1207">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1207">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-1208">표시될 폼이 최상위 창이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1208">The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="8bcbb-1209">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1209">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-1210">대화 상자로 표시될 폼이 이미 모달 폼인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1210">The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="8bcbb-1211">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1211">-or-</span>
          </span>
          <span data-ttu-id="8bcbb-1212">현재 프로세스가 사용자 대화형 모드에서 실행되고 있지 않은 경우. 자세한 내용은 <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1212">The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowIcon">
      <MemberSignature Language="C#" Value="public bool ShowIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowIcon { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowIcon : bool with get, set" Usage="System.Windows.Forms.Form.ShowIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1213">폼의 캡션 표시줄에 아이콘이 표시되는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1213">Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1214">폼의 캡션 표시줄에 아이콘이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1214">
              <see langword="true" /> if the form displays an icon in the caption bar; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-1215">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1215">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1216"><xref:System.Windows.Forms.Form.ShowIcon%2A> 속성에 포함을 <xref:System.Boolean> 나타내는 값 여부를 양식의 <xref:System.Windows.Forms.Form.Icon%2A> 폼의 캡션 표시줄에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1216">The <xref:System.Windows.Forms.Form.ShowIcon%2A> property contains a <xref:System.Boolean> value that indicates whether the form's <xref:System.Windows.Forms.Form.Icon%2A> is displayed in the caption bar of the form.</span></span> <span data-ttu-id="8bcbb-1217">경우는 <xref:System.Windows.Forms.Form.ControlBox%2A> 속성은 `false`, 아이콘 및 컨트롤 상자는 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1217">If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is `false`, both the icon and control box will be suppressed.</span></span>  
  
 <span data-ttu-id="8bcbb-1218">하는 경우 <xref:System.Windows.Forms.Form.ShowIcon%2A> 는 `false` 일반 아이콘 기본 폼이 표시 되 면 응용 프로그램에 대 한 작업 표시줄 단추에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1218">If <xref:System.Windows.Forms.Form.ShowIcon%2A> is `false` when the primary form is shown, a generic icon will be displayed in the taskbar button for the application.</span></span>  
  
 <span data-ttu-id="8bcbb-1219">경우에이 속성이 적용 되지 않습니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A> 로 설정 된 <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1219">This property has no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span></span> <span data-ttu-id="8bcbb-1220">이 경우 폼 아이콘을 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1220">In that case, the form does not display an icon.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.Icon" />
        <altmember cref="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInTaskbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInTaskbar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowInTaskbar : bool with get, set" Usage="System.Windows.Forms.Form.ShowInTaskbar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1221">폼이 Windows 작업 표시줄에 표시되는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1221">Gets or sets a value indicating whether the form is displayed in the Windows taskbar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1222">런타임에 폼을 Windows 작업 표시줄에 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1222">
              <see langword="true" /> to display the form in the Windows taskbar at run time; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-1223">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1223">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1224">다른 폼 내에서 폼 부모가 부모로 지정된 된 폼을 Windows 작업 표시줄에서 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1224">If a form is parented within another form, the parented form is not displayed in the Windows taskbar.</span></span>  
  
 <span data-ttu-id="8bcbb-1225">Windows 작업 표시줄을 통해 폼을 선택 하지 못하게 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1225">You can use this property to prevent users from selecting your form through the Windows taskbar.</span></span> <span data-ttu-id="8bcbb-1226">예를 들어, 응용 프로그램에서 찾기 및 바꾸기 도구 창으로 표시 하려는 응용 프로그램의 주 창 및 찾기 및 바꾸기 도구 창을 모두 해야 하기 때문에 선택한 Windows 작업 표시줄에서 창이 방지 검색을 적절 하 게 처리 하기 위해 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1226">For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.</span></span>  
  
 <span data-ttu-id="8bcbb-1227">사용 하 여 폼을 만들 때이 속성을 사용 하려면 종종는 <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1227">You will often wish to use this property when creating a form with the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style.</span></span> <span data-ttu-id="8bcbb-1228">설정 된 <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> 스타일 것 만으로 창의 작업 표시줄에 표시 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1228">Setting the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style does not alone guarantee that a window will not appear in the taskbar.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1229">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Form.ShowInTaskbar%2A> 속성 대화 상자을 Windows 작업 표시줄에 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1229">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.ShowInTaskbar%2A> property to make a dialog box that is not displayed in the Windows taskbar.</span></span>  
  
 [!code-cpp[Form.ShowInTaskbar#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.ShowInTaskbar/CPP/form1.cpp#1)]
 [!code-csharp[Form.ShowInTaskbar#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.ShowInTaskbar/CS/form1.cs#1)]
 [!code-vb[Form.ShowInTaskbar#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.ShowInTaskbar/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shown">
      <MemberSignature Language="C#" Value="public event EventHandler Shown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Shown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Shown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Shown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Shown;" />
      <MemberSignature Language="F#" Value="member this.Shown : EventHandler " Usage="member this.Shown : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1230">폼이 처음 표시될 때마다 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1230">Occurs whenever the form is first displayed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1231"><xref:System.Windows.Forms.Form.Shown> 이후에 최소화, 최대화, 복원, 숨기기, 표시 또는 무효화 및 다시 그리기는이 이벤트가 발생 하지 않으면 양식을 표시 하는 첫 번째에 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1231">The <xref:System.Windows.Forms.Form.Shown> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event.</span></span> <span data-ttu-id="8bcbb-1232">폼의 이벤트의 순서에 대 한 자세한 내용은 참조 [Windows Forms에서 이벤트의 순서](~/docs/framework/winforms/order-of-events-in-windows-forms.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1232">For more information about the order of events of a form, see [Order of Events in Windows Forms](~/docs/framework/winforms/order-of-events-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="8bcbb-1233">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1233">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1234">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1234">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8bcbb-1235">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Form.Shown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1235">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Shown> event.</span></span> <span data-ttu-id="8bcbb-1236">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1236">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8bcbb-1237">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1237">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8bcbb-1238">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1238">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="8bcbb-1239">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.Form.Shown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1239">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Shown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#403](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#403)]
 [!code-vb[System.Windows.Forms.EventExamples#403](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#403)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="ShowWithoutActivation">
      <MemberSignature Language="C#" Value="protected virtual bool ShowWithoutActivation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWithoutActivation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowWithoutActivation" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ShowWithoutActivation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ShowWithoutActivation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowWithoutActivation : bool" Usage="System.Windows.Forms.Form.ShowWithoutActivation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1240">창이 표시될 때 활성화할지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1240">Gets a value indicating whether the window will be activated when it is shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1241">창이 표시될 때 활성화되지 않으면 <see langword="True" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1241">
              <see langword="True" /> if the window will not be activated when it is shown; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-1242">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1242">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1243">최상위 창에 표시 하려고 하지만 현재 창에서 입력된 포커스를 수행 하 여 사용자의 작업을 중단 하지 않으려는 경우이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1243">Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window.</span></span> <span data-ttu-id="8bcbb-1244">이 정보를 팝업 창 또는 도구 팔레트 그리기 응용 프로그램에서 등의 부동 창 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1244">This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.</span></span>  
  
 <span data-ttu-id="8bcbb-1245">이 속성이 읽기 전용 이므로 변경할 수 있습니다만 해당 값 재정의 하 여 <xref:System.Windows.Forms.Form.ShowWithoutActivation%2A> 사용자 지정 폼 및 반환 하도록 프로그래밍 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1245">Because this property is read-only, you can only change its value by overriding <xref:System.Windows.Forms.Form.ShowWithoutActivation%2A> in your own form, and programming it to return `true`.</span></span>  
  
 <span data-ttu-id="8bcbb-1246">활성화 되지 않은 창을 UI 컨트롤을 사용 해야 하는 경우 사용 하 여 고려해 야 합니다 <xref:System.Windows.Forms.ToolStrip> 컨트롤과 같은 <xref:System.Windows.Forms.ToolStripDropDown>합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1246">If your non-activated window needs to use UI controls, you should consider using the <xref:System.Windows.Forms.ToolStrip> controls, such as <xref:System.Windows.Forms.ToolStripDropDown>.</span></span> <span data-ttu-id="8bcbb-1247">이러한 컨트롤을 창 없는 되며 창이 선택할 때 활성화 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1247">These controls are windowless, and will not cause a window to activate when they are selected.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1248">폼의 크기를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1248">Gets or sets the size of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1249">폼의 크기를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1249">A <see cref="T:System.Drawing.Size" /> that represents the size of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1250">이 속성을 사용 하면 설정 하는 대신 동시에 높이 폼의 너비 (픽셀)를 설정할 수 있습니다 합니다 <xref:System.Windows.Forms.Control.Height%2A> 고 <xref:System.Windows.Forms.Control.Width%2A> 속성 개별적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1250">This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually.</span></span> <span data-ttu-id="8bcbb-1251">크기와 폼의 위치를 설정 하려는 경우 사용할 수 있습니다는 <xref:System.Windows.Forms.Form.DesktopBounds%2A> 바탕 화면 좌표 또는 사용을 기반으로 속성을 크기 조정 하 고 양식을 찾습니다는 <xref:System.Windows.Forms.Control.Bounds%2A> 의 속성을 <xref:System.Windows.Forms.Control> 화면 좌표계를 기반으로 한 크기와 폼의 위치를 설정 하는 클래스 inates 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1251">If you want to set the size and location of a form, you can use the <xref:System.Windows.Forms.Form.DesktopBounds%2A> property to size and locate the form based on desktop coordinates or use the <xref:System.Windows.Forms.Control.Bounds%2A> property of the <xref:System.Windows.Forms.Control> class to set the size and location of the form based on screen coordinates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-1252">이 속성의 최대 값은 폼 실행 되는 화면 해상도 따라 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1252">The maximum value of this property is limited by the resolution of the screen on which the form runs.</span></span> <span data-ttu-id="8bcbb-1253">값 (예: 가로 + 12 및 세로 + 12) 각 화면 차원에 대해 12 픽셀 보다 클 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1253">The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bcbb-1254">Pocket PC 장치에서 설정 하 여 크기 조정 가능한 창의 만들 수 있습니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A> 하 `None` 하나를 제거 하 고 <xref:System.Windows.Forms.MainMenu> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1254">On Pocket PC devices, you can create a resizable window by setting <xref:System.Windows.Forms.Form.FormBorderStyle%2A> to `None` and removing any <xref:System.Windows.Forms.MainMenu> control.</span></span> <span data-ttu-id="8bcbb-1255">SmartPhone 장치에서 되지 크기를 조정할 수는 <xref:System.Windows.Forms.Form> -전체 화면을 항상 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1255">On SmartPhone devices, you can never resize a <xref:System.Windows.Forms.Form> - it will always fill the entire screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1256">다음 코드 예제에서는 75% 불투명도로 표시 되는 양식을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1256">The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</span></span> <span data-ttu-id="8bcbb-1257">예제 코드를 사용 하 여 화면 가운데에 배치 되는 새 폼을 만듭니다는 <xref:System.Windows.Forms.Form.Opacity%2A> 폼의 불투명도 변경 하려면 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1257">The example code creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form.</span></span> <span data-ttu-id="8bcbb-1258">예제 코드를 설정 합니다 <xref:System.Windows.Forms.Form.Size%2A> 속성을 더 큰 크기 폼의 기본 크기 보다 폼입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1258">The example code also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form.</span></span> <span data-ttu-id="8bcbb-1259">이 예제는이 예제에서 정의 된 메서드는 이벤트 처리기 또는 기타 방법에 대 한 다른 폼에서 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1259">This example requires that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]
 [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]
 [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Width" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="SizeGripStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SizeGripStyle SizeGripStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SizeGripStyle SizeGripStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.SizeGripStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeGripStyle As SizeGripStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SizeGripStyle SizeGripStyle { System::Windows::Forms::SizeGripStyle get(); void set(System::Windows::Forms::SizeGripStyle value); };" />
      <MemberSignature Language="F#" Value="member this.SizeGripStyle : System.Windows.Forms.SizeGripStyle with get, set" Usage="System.Windows.Forms.Form.SizeGripStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SizeGripStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1260">폼의 오른쪽 아래 모퉁이에 표시할 크기 조정 핸들의 스타일을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1260">Gets or sets the style of the size grip to display in the lower-right corner of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1261">표시할 크기 조정 그립의 스타일을 나타내는 <see cref="T:System.Windows.Forms.SizeGripStyle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1261">A <see cref="T:System.Windows.Forms.SizeGripStyle" /> that represents the style of the size grip to display.</span>
          </span>
          <span data-ttu-id="8bcbb-1262">기본값은 <see cref="F:System.Windows.Forms.SizeGripStyle.Auto" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1262">The default is <see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /></span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1263">이 속성을 사용 하면 크기 조정 그립은 폼에 표시 될 때를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1263">This property enables you to determine when the sizing grip is displayed on the form.</span></span> <span data-ttu-id="8bcbb-1264">크기 조정 그립을 표시 하거나이 자동으로 표시의 설정에 따라이 속성을 설정할 수 있습니다는 <xref:System.Windows.Forms.Form.FormBorderStyle%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1264">You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1265">다음 코드 예제에 대 한 크기 조정 그립을 숨기는 방법을 보여 줍니다는 <xref:System.Windows.Forms.Form> 경우는 <xref:System.Windows.Forms.Form> 크기를 조정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1265">The following code example demonstrates how to hide the size grip for a <xref:System.Windows.Forms.Form> when the <xref:System.Windows.Forms.Form> is not resizable.</span></span>  
  
 [!code-cpp[Form.SizeGripStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.SizeGripStyle/CPP/form1.cpp#1)]
 [!code-csharp[Form.SizeGripStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.SizeGripStyle/CS/form1.cs#1)]
 [!code-vb[Form.SizeGripStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.SizeGripStyle/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="8bcbb-1266">지정된 값이 유효한 값 범위를 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1266">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <Member MemberName="StartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormStartPosition StartPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormStartPosition StartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.StartPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property StartPosition As FormStartPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormStartPosition StartPosition { System::Windows::Forms::FormStartPosition get(); void set(System::Windows::Forms::FormStartPosition value); };" />
      <MemberSignature Language="F#" Value="member this.StartPosition : System.Windows.Forms.FormStartPosition with get, set" Usage="System.Windows.Forms.Form.StartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormStartPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1267">런타임에 폼의 시작 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1267">Gets or sets the starting position of the form at run time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1268">폼의 시작 위치를 나타내는 <see cref="T:System.Windows.Forms.FormStartPosition" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1268">A <see cref="T:System.Windows.Forms.FormStartPosition" /> that represents the starting position of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1269">이 속성을 사용 하면 런타임에 표시 되 면 폼의 시작 위치를 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1269">This property enables you to set the starting position of the form when it is displayed at run time.</span></span> <span data-ttu-id="8bcbb-1270">폼의 위치를 설정 하 여 수동으로 지정할 수 있습니다는 <xref:System.Windows.Forms.Form.Location%2A> 속성 또는 Windows에서 지정 된 기본 위치를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1270">The form’s position can be specified manually by setting the <xref:System.Windows.Forms.Form.Location%2A> property or use the default location specified by Windows.</span></span> <span data-ttu-id="8bcbb-1271">또한 다중 문서 MDI (인터페이스) 자식 폼과 같은 폼의 부모 폼의 가운데 또는 화면 가운데에 표시 하려면 폼을 배치할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1271">You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.</span></span>  
  
 <span data-ttu-id="8bcbb-1272">이 속성은 폼 표시 되기 전에 설정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1272">This property should be set before the form is shown.</span></span>  <span data-ttu-id="8bcbb-1273">호출 하기 전에이 속성을 설정할 수는 <xref:System.Windows.Forms.Form.Show%2A> 또는 <xref:System.Windows.Forms.Form.ShowDialog%2A> 메서드 또는 폼의 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1273">You can set this property before you call the <xref:System.Windows.Forms.Form.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method or in your form's constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1274">다음 코드 예제에서는의 새 인스턴스를 만듭니다는 <xref:System.Windows.Forms.Form> 호출을 <xref:System.Windows.Forms.Form.ShowDialog%2A> 폼을 대화 상자로 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1274">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="8bcbb-1275">예제에서는 합니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, 및 <xref:System.Windows.Forms.Form.StartPosition%2A> 대화 상자에 모양 및 폼의 기능을 변경 하려면 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1275">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="8bcbb-1276">또한이 예제에서는 합니다 <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> 양식의 메서드의 <xref:System.Windows.Forms.Control.Controls%2A> 추가할 두 컬렉션 <xref:System.Windows.Forms.Button> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1276">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="8bcbb-1277">이 예제에서는 사용 된 <xref:System.Windows.Forms.Form.HelpButton%2A> 속성 대화 상자 캡션 표시줄에 도움말 단추를 표시 하려면.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1277">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.StartPosition Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.StartPosition Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CS/source.cs#1)]
 [!code-vb[Classic Form.StartPosition Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.StartPosition Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="8bcbb-1278">지정된 값이 유효한 값 범위를 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1278">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public int TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TabIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TabIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int with get, set" Usage="System.Windows.Forms.Form.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1279">컨트롤 컨테이너 내의 컨트롤 탭 순서를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1279">Gets or sets the tab order of the control within its container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1280">컨트롤 컨테이너 내의 컨트롤 집합(탭 순서로 포함)에 있는 컨트롤 인덱스를 포함하는 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1280">An <see cref="T:System.Int32" /> containing the index of the control within the set of controls within its container that is included in the tab order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1281">Forms 탭 순서로 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1281">Forms are not included in the tab order.</span></span> <span data-ttu-id="8bcbb-1282">설정 된 <xref:System.Windows.Forms.Form.TabIndex%2A> 속성 아무 작업도 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1282">Setting the <xref:System.Windows.Forms.Form.TabIndex%2A> property does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.TabIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.TabIndexChanged : EventHandler " Usage="member this.TabIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1283">
            <see cref="P:System.Windows.Forms.Form.TabIndex" /> 속성 값이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1283">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.TabIndex" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TabStop : bool with get, set" Usage="System.Windows.Forms.Form.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Runtime.InteropServices.DispId(-516)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1284">Tab 키를 사용하여 이 컨트롤의 포커스를 이동할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1284">Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1285">Tab 키를 사용하여 컨트롤의 포커스를 이동할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1285">
              <see langword="true" /> if the user can give the focus to the control using the TAB key; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-1286">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1286">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberSignature Language="F#" Value="member this.TabStopChanged : EventHandler " Usage="member this.TabStopChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1287">
            <see cref="P:System.Windows.Forms.Form.TabStop" /> 속성이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1287">Occurs when the <see cref="P:System.Windows.Forms.Form.TabStop" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.Form.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1288">이 컨트롤과 관련된 텍스트를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1288">Gets or sets the text associated with this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1289">이 컨트롤과 관련된 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1289">The text associated with this control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="TopLevel">
      <MemberSignature Language="C#" Value="public bool TopLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TopLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TopLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TopLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TopLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TopLevel : bool with get, set" Usage="System.Windows.Forms.Form.TopLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1290">폼을 최상위 창으로 표시할지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1290">Gets or sets a value indicating whether to display the form as a top-level window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1291">폼을 최상위 창으로 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1291">
              <see langword="true" /> to display the form as a top-level window; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-1292">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1292">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1293">최상위 폼에는 없는 부모 폼 또는 해당 부모 폼은 바탕 화면 창인 된 창입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1293">A top-level form is a window that has no parent form, or whose parent form is the desktop window.</span></span> <span data-ttu-id="8bcbb-1294">최상위 창은 응용 프로그램에서 기본 폼으로 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1294">Top-level windows are typically used as the main form in an application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1295">다음 코드 예제에서 사용 된 <xref:System.Windows.Forms.Form.Modal%2A> 폼이 모달 형식으로 표시 하는 경우를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1295">The following code example use the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form.</span></span> <span data-ttu-id="8bcbb-1296">없는 경우는 <xref:System.Windows.Forms.Form.FormBorderStyle%2A> 고 <xref:System.Windows.Forms.Form.TopLevel%2A> 속성 도구 창 테두리를 사용 하 여 하위 수준의 양식에 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1296">If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form non-top-level form with a tool window border.</span></span>  
  
 [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]
 [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]
 [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="8bcbb-1297">MDI(다중 문서 인터페이스) 부모 폼이 최상위 창이어야 하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1297">A Multiple-document interface (MDI) parent form must be a top-level window.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.TopMost" />
      </Docs>
    </Member>
    <Member MemberName="TopMost">
      <MemberSignature Language="C#" Value="public bool TopMost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TopMost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TopMost" />
      <MemberSignature Language="VB.NET" Value="Public Property TopMost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TopMost { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TopMost : bool with get, set" Usage="System.Windows.Forms.Form.TopMost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1298">폼을 맨 위 폼으로 표시할지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1298">Gets or sets a value indicating whether the form should be displayed as a topmost form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1299">폼을 맨 위 폼으로 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1299">
              <see langword="true" /> to display the form as a topmost form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-1300">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1300">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1301">맨 위 폼에는 활성 또는 포그라운드 폼 없는 경우에 다른 (맨 위) 폼을 모두 겹치는 형태가입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1301">A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form.</span></span> <span data-ttu-id="8bcbb-1302">맨 위 폼 바탕 화면에서 windows의 z-순서에서 가장 높은 지점에 항상 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1302">Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop.</span></span> <span data-ttu-id="8bcbb-1303">이 속성을 사용 하 여 찾기 및 바꾸기 도구 창과 같은 응용 프로그램에 항상 표시 되는 폼을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1303">You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1304">다음 코드 예제에는 맨 위 폼을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1304">The following code example demonstrates how to create a topmost form.</span></span> <span data-ttu-id="8bcbb-1305">이 예제에서는 두 가지 상태의 최대화 된, 하나는 맨 위 폼으로 표시 되는 하나 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1305">The example creates two forms, one that is maximized and one that will be displayed as a topmost form.</span></span> <span data-ttu-id="8bcbb-1306">라는 첫 번째 폼 `bottomForm`, 최대화를 사용 하 여 표시 되는 <xref:System.Windows.Forms.Form.WindowState%2A> 맨 위 폼의 기능을 더 잘 보여 주기 위해 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1306">The first form, named `bottomForm`, is displayed maximized, using the <xref:System.Windows.Forms.Form.WindowState%2A> property, to better demonstrate the abilities of the topmost form.</span></span> <span data-ttu-id="8bcbb-1307">라는 두 번째 폼 `topMostForm`를 설정 합니다 <xref:System.Windows.Forms.Form.TopMost%2A> 속성을 `true` 맨 위 폼으로 표시 하려면.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1307">The second form, named `topMostForm`, sets the <xref:System.Windows.Forms.Form.TopMost%2A> property to `true` to display the form as a topmost form.</span></span> <span data-ttu-id="8bcbb-1308">이 코드를 실행 하는 경우 상태의 최대화 된 폼에서 클릭 발생 하지 않습니다 최대화 양식 아래에 표시할 최상위 형식.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1308">When this code is run, clicking on the maximized form will not cause the topmost form to be displayed below the maximized form.</span></span> <span data-ttu-id="8bcbb-1309">이 예제는 예제에 정의 된 메서드는 다른 폼에서 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1309">The example requires that the method defined in the example is called from another form.</span></span>  
  
 [!code-cpp[Form.TopMost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.TopMost/CPP/form1.cpp#1)]
 [!code-csharp[Form.TopMost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.TopMost/CS/form1.cs#1)]
 [!code-vb[Form.TopMost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.TopMost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.TopLevel" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="form.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1310">폼의 현재 인스턴스를 나타내는 문자열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1310">Gets a string representing the current instance of the form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-1311">폼 개체의 정규화된 클래스 이름과 폼의 <see cref="P:System.Windows.Forms.Form.Text" /> 속성으로 구성된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1311">A string consisting of the fully qualified name of the form object's class, with the <see cref="P:System.Windows.Forms.Form.Text" /> property of the form appended to the end.</span>
          </span>
          <span data-ttu-id="8bcbb-1312">예를 들어 폼이 <c>MyNamespace</c> 네임스페이스의 <c>MyForm</c> 클래스에서 파생되고 <see cref="P:System.Windows.Forms.Form.Text" /> 속성이 <c>Hello, World</c>로 설정된 경우 이 메서드에서는 <c>MyNamespace.MyForm, Text: Hello, World</c>를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1312">For example, if the form is derived from the class <c>MyForm</c> in the <c>MyNamespace</c> namespace, and the <see cref="P:System.Windows.Forms.Form.Text" /> property is set to <c>Hello, World</c>, this method will return <c>MyNamespace.MyForm, Text: Hello, World</c>.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransparencyKey">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TransparencyKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TransparencyKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TransparencyKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransparencyKey As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TransparencyKey { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TransparencyKey : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Form.TransparencyKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1313">폼의 투명 영역을 나타내는 색을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1313">Gets or sets the color that will represent transparent areas of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1314">폼에 투명하게 표시할 색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1314">A <see cref="T:System.Drawing.Color" /> that represents the color to display transparently on the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1315">경우는 <xref:System.Windows.Forms.Form.TransparencyKey%2A> 속성에 할당 되는 <xref:System.Drawing.Color>, 동일한 폼의 영역 <xref:System.Windows.Forms.Control.BackColor%2A> 투명 하 게 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1315">When the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is assigned a <xref:System.Drawing.Color>, the areas of the form that have the same <xref:System.Windows.Forms.Control.BackColor%2A> will be displayed transparently.</span></span> <span data-ttu-id="8bcbb-1316">모든 마우스 작업을 마우스 클릭 같은 형식의 투명 한 영역에서 수행 되는 투명 한 영역 아래의 창으로 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1316">Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area.</span></span> <span data-ttu-id="8bcbb-1317">예를 들어, 폼의 클라이언트 영역의 투명 하 게 나타나는, 경우 해당 영역에서 마우스 클릭를 보냅니다. 클릭 이벤트 알림을 창 아래에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1317">For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it.</span></span> <span data-ttu-id="8bcbb-1318">색에 할당 하는 경우는 <xref:System.Windows.Forms.Form.TransparencyKey%2A> 속성은 양식의 모든 컨트롤이 동일, 수도 표시 됩니다 투명 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1318">If the color assigned to the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is the same as any controls on the form, they also will be displayed transparently.</span></span> <span data-ttu-id="8bcbb-1319">예를 들어 있는 경우는 <xref:System.Windows.Forms.Button> 양식에 있는 컨트롤을 해당 <xref:System.Windows.Forms.Form.TransparencyKey%2A> 속성이로 설정 `SystemColors.Control`, 컨트롤 표시할 투명 하 게 하지 않는 한를 <xref:System.Windows.Forms.Control.BackColor%2A> 의 속성을 <xref:System.Windows.Forms.Button> 컨트롤은 다른 색으로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1319">For example, if you have a <xref:System.Windows.Forms.Button> control on a form that has its <xref:System.Windows.Forms.Form.TransparencyKey%2A> property set to `SystemColors.Control`, the control will be displayed transparently unless the <xref:System.Windows.Forms.Control.BackColor%2A> property of the <xref:System.Windows.Forms.Button> control is changed to a different color.</span></span>  
  
 <span data-ttu-id="8bcbb-1320">이 속성은 실행할 <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> 는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1320">This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1321">다음 코드 예제에는 폼의 배경색에 관계 없이 투명 한 클라이언트 영역이 있는 창을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1321">The following code example creates a window that has a transparent client region regardless of background color of the form.</span></span> <span data-ttu-id="8bcbb-1322">이 예제에서는 예제 메서드에서 양식 클래스 내에서 정의 되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1322">This example requires that the example method is defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.TransparencyKey Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.TransparencyKey Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CS/source.cs#1)]
 [!code-vb[Classic Form.TransparencyKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDefaultButton">
      <MemberSignature Language="C#" Value="protected override void UpdateDefaultButton ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateDefaultButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.UpdateDefaultButton" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateDefaultButton ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateDefaultButton();" />
      <MemberSignature Language="F#" Value="override this.UpdateDefaultButton : unit -&gt; unit" Usage="form.UpdateDefaultButton " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1323">기본 단추로 사용되는 단추를 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1323">Updates which button is the default button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1324"><xref:System.Windows.Forms.Form.UpdateDefaultButton%2A> 폼에 단추는 다음 우선 순위에 따라 사용자가 ENTER를 누를 때 Click 이벤트를 발생 시킵니다. 메서드를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1324">The <xref:System.Windows.Forms.Form.UpdateDefaultButton%2A> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:</span></span>  
  
1.  <span data-ttu-id="8bcbb-1325">경우는 <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> 속성이 구현 하는 <xref:System.Windows.Forms.IButtonControl> 인터페이스 컨트롤이 기본 단추 인지 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1325">If the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property implements the <xref:System.Windows.Forms.IButtonControl> interface, that control is the default button.</span></span>  
  
2.  <span data-ttu-id="8bcbb-1326"><xref:System.Windows.Forms.Form.AcceptButton%2A> 속성에는 기본 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1326">The <xref:System.Windows.Forms.Form.AcceptButton%2A> property is the default button.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateChildren">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1327">폼에서 선택할 수 있는 모든 자식 컨트롤의 유효성을 검사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1327">Validates all selectable child controls in the form.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateChildren">
      <MemberSignature Language="C#" Value="public override bool ValidateChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ValidateChildren" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateChildren () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateChildren();" />
      <MemberSignature Language="F#" Value="override this.ValidateChildren : unit -&gt; bool" Usage="form.ValidateChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1328">컨트롤 내에서 유효성 검사를 지원하는 모든 자식 컨트롤이 해당 데이터의 유효성을 검사하도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1328">Causes all of the child controls within a control that support validation to validate their data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-1329">모든 자식의 유효성을 검사했으면 <see langword="true" />이고, 검사하지 못했으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1329">
              <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-1330">이 메서드는 <see cref="E:System.Windows.Forms.Control.Validating" /> 또는 <see cref="E:System.Windows.Forms.Control.Validated" /> 이벤트 처리기에서 호출된 경우 항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1330">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ValidateChildren" />
      </Docs>
    </Member>
    <Member MemberName="ValidateChildren">
      <MemberSignature Language="C#" Value="public override bool ValidateChildren (System.Windows.Forms.ValidationConstraints validationConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateChildren(valuetype System.Windows.Forms.ValidationConstraints validationConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateChildren(System::Windows::Forms::ValidationConstraints validationConstraints);" />
      <MemberSignature Language="F#" Value="override this.ValidateChildren : System.Windows.Forms.ValidationConstraints -&gt; bool" Usage="form.ValidateChildren validationConstraints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationConstraints" Type="System.Windows.Forms.ValidationConstraints" />
      </Parameters>
      <Docs>
        <param name="validationConstraints">
          <span data-ttu-id="8bcbb-1331">
            <see cref="E:System.Windows.Forms.Control.Validating" /> 이벤트가 발생한 컨트롤을 제한합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1331">Places restrictions on which controls have their <see cref="E:System.Windows.Forms.Control.Validating" /> event raised.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1332">컨트롤 내에서 유효성 검사를 지원하는 모든 자식 컨트롤이 해당 데이터의 유효성을 검사하도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1332">Causes all of the child controls within a control that support validation to validate their data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bcbb-1333">모든 자식의 유효성을 검사했으면 <see langword="true" />이고, 검사하지 못했으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1333">
              <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8bcbb-1334">이 메서드는 <see cref="E:System.Windows.Forms.Control.Validating" /> 또는 <see cref="E:System.Windows.Forms.Control.Validated" /> 이벤트 처리기에서 호출된 경우 항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1334">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As FormWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormWindowState WindowState { System::Windows::Forms::FormWindowState get(); void set(System::Windows::Forms::FormWindowState value); };" />
      <MemberSignature Language="F#" Value="member this.WindowState : System.Windows.Forms.FormWindowState with get, set" Usage="System.Windows.Forms.Form.WindowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bcbb-1335">폼을 최소화하거나 최대화할지, 또는 보통 크기로 할지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1335">Gets or sets a value that indicates whether form is minimized, maximized, or normal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bcbb-1336">폼이 최소화, 최대화 또는 표준인지를 나타내는 <see cref="T:System.Windows.Forms.FormWindowState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1336">A <see cref="T:System.Windows.Forms.FormWindowState" /> that represents whether form is minimized, maximized, or normal.</span>
          </span>
          <span data-ttu-id="8bcbb-1337">기본값은 <see langword="FormWindowState.Normal" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1337">The default is <see langword="FormWindowState.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bcbb-1338">폼 표시 되기 전에 <xref:System.Windows.Forms.Form.WindowState%2A> 속성을 always로 설정 됩니다 `FormWindowState.Normal`초기 설정에 관계 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1338">Before a form is displayed, the <xref:System.Windows.Forms.Form.WindowState%2A> property is always set to `FormWindowState.Normal`, regardless of its initial setting.</span></span> <span data-ttu-id="8bcbb-1339"><xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Left%2A>를 <xref:System.Windows.Forms.Control.Top%2A>, 및 <xref:System.Windows.Forms.Control.Width%2A> 속성 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1339">This is reflected in the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Top%2A>, and <xref:System.Windows.Forms.Control.Width%2A> property settings.</span></span> <span data-ttu-id="8bcbb-1340">이러한 속성 변경에 관계 없이 다시 폼이 표시 될 때까지 이전 상태를 반영 양식에 표시 된 후 숨겨진 경우는 <xref:System.Windows.Forms.Form.WindowState%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1340">If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <xref:System.Windows.Forms.Form.WindowState%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bcbb-1341">다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Form.WindowState%2A> 를 최대화 합니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1341">The following code example demonstrates how to set the <xref:System.Windows.Forms.Form.WindowState%2A> to maximized.</span></span> <span data-ttu-id="8bcbb-1342">코드에서 호출 되는 <xref:System.Windows.Forms.Form.Shown> 양식을 만든 후에 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="8bcbb-1342">The code is called from the <xref:System.Windows.Forms.Form.Shown> event handler after the form has been created.</span></span>  
  
```csharp  
private void Form1_Shown(object sender, EventArgs e)  
        {  
            this.WindowState = System.Windows.Forms.FormWindowState.Maximized;  
        }  
```  
  
```vb  
Private  Sub Form1_Shown(ByVal sender As Object, ByVal e As EventArgs)  
            Me.WindowState = System.Windows.Forms.FormWindowState.Maximized  
End Sub  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="8bcbb-1343">지정된 값이 유효한 값 범위를 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1343">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormWindowState" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="form.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="8bcbb-1344">처리할 Windows <see cref="T:System.Windows.Forms.Message" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1344">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bcbb-1345">Windows 메시지를 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bcbb-1345">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>