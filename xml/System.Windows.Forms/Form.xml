<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Form.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b891ec5d-4b60-42d7-ac21-95eab9e3ef821f3fc084a02f774d87fefe2646b5cb5ad6cc9733.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f3fc084a02f774d87fefe2646b5cb5ad6cc9733</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">058bfa0b75b777d3171411d35da8f11617fc06b0</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/04/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Form">
          <source>Represents a window or dialog box that makes up an application's user interface.</source>
          <target state="translated">응용 프로그램의 사용자 인터페이스를 구성하는 창 또는 대화 상자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is a representation of any window displayed in your application.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 응용 프로그램에 표시 하는 모든 창의 표현입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class can be used to create standard, tool, borderless, and floating windows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 클래스 standard, 여백, 도구 및 부동 창을 만드는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class to create modal windows such as a dialog box.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 클래스 대화 상자와 같은 모달 창을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms.</source>
          <target state="translated">특별 한 종류 (MDI) 다중 문서 인터페이스 폼을 폼의 MDI 자식 폼을 호출 하는 다른 폼을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>An MDI form is created by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">설정 하 여 MDI 폼 만들어집니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>MDI child forms are created by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property to the MDI parent form that will contain the child form.</source>
          <target state="translated">MDI 자식 폼을 설정 하 여 만든는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> 속성 자식 폼을 포함 하는 MDI 부모 폼을 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>Using the properties available in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating.</source>
          <target state="translated">사용할 수 있는 속성을 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 클래스를 만들면 창 또는 대화 상자의 모양, 크기, 색 및 창 관리 기능을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property allows you to specify the caption of the window in the title bar.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> 속성 창의 캡션을 제목 표시줄에 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DesktopLocation%2A&gt;</ph> properties allow you to define the size and position of the window when it is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DesktopLocation%2A&gt;</ph> 속성을 사용 하면 표시 되는 크기와 창의 위치를 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> color property to change the default foreground color of all controls placed on the form.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> 모든 컨트롤의 기본 전경색을 변경 하려면 색 속성 폼에 배치 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> properties allow you to control whether the form can be minimized, maximized, or resized at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> 속성을 사용 하면 컨트롤을 폼 최소화, 최대화 하거나 실행 시 크기를 조정할 수 있는지 여부를 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>In addition to properties, you can use the methods of the class to manipulate a form.</source>
          <target state="translated">속성 외에 폼을 조작 하는 클래스의 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to show a form as a modal dialog box.</source>
          <target state="translated">예를 들어, 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드를 폼을 모달 대화 상자로 표시 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> method to position the form on the desktop.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> 메서드를 폼의 바탕 화면에서 위치를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The events of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class allow you to respond to actions performed on the form.</source>
          <target state="translated">이벤트는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 클래스를 허용 하면 폼에서 수행 하는 작업에 응답할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> 폼 활성화 될 때 폼의 컨트롤에 표시 된 데이터를 업데이트 하는 등 작업을 수행 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can use a form as the starting class in your application by placing a method called <ph id="ph1">`Main`</ph> in the class.</source>
          <target state="translated">라는 메서드를 배치 하 여 응용 프로그램에서 폼 시작 클래스로 사용할 수 있습니다 <ph id="ph1">`Main`</ph> 클래스에 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>In the <ph id="ph1">`Main`</ph> method add code to create and show the form.</source>
          <target state="translated">에 <ph id="ph1">`Main`</ph> 메서드를 만들고 폼을 표시 하는 코드를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You will also need to add the <ph id="ph1">`STAThread`</ph> attribute to the <ph id="ph2">`Main`</ph> method in order for the form to run.</source>
          <target state="translated">추가 해야 합니다는 <ph id="ph1">`STAThread`</ph> 특성을 <ph id="ph2">`Main`</ph> 폼을 실행 하려면 메서드.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>When the starting form is closed, the application is also closed.</source>
          <target state="translated">시작 폼을 닫을 때 응용 프로그램이 닫힙니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph> before the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> is visible (for example, setting <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> to false in the <ph id="ph5">[!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)]</ph> designer), the minimize, maximize, close, and system buttons remain enabled.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph> 하기 전에 <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> 표시 됩니다 (예를 들어 설정 <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> 를 false로 <ph id="ph5">[!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)]</ph> 디자이너), 최소화, 최대화, 닫기 및 시스템 단추를 사용 하도록 유지 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> to <ph id="ph2">`false`</ph> after the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> is visible (for example, when the Load event occurs), the buttons are disabled.</source>
          <target state="translated">설정한 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> 를 <ph id="ph2">`false`</ph> 후의 <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> 됩니다 (예: Load 이벤트가 발생할 때), 단추가 비활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">다음 코드 예제에서는의 새 인스턴스를 만듭니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 호출과 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드를 폼으로 대화 상자 표시 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> 대화 상자에 표시 되는 모양 및 폼의 기능을 변경 하려면 속성입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">또한이 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> 메서드가 폼의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 두 개를 추가할 컬렉션 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">이 예제에서는 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> 속성을 대화 상자의 캡션 표시줄에 도움말 단추를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The default size of a form is 300 pixels in height and 300 pixels in width.</source>
          <target state="translated">기본 폼의 크기가 높이 및 너비가 300 픽셀이 고 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">다음 코드 예제에서는의 새 인스턴스를 만듭니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 호출과 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드를 폼으로 대화 상자 표시 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> 대화 상자에 표시 되는 모양 및 폼의 기능을 변경 하려면 속성입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The example also sets uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">또한 사용 하 여 설정 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> 폼의 메서드 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 두 개를 추가할 컬렉션 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">이 예제에서는 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> 속성을 대화 상자의 캡션 표시줄에 도움말 단추를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>Gets or sets the button on the form that is clicked when the user presses the ENTER key.</source>
          <target state="translated">사용자가 Enter 키를 누를 때 클릭되는 폼의 단추를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IButtonControl" /&gt;</ph> that represents the button to use as the accept button for the form.</source>
          <target state="translated">폼의 적용 단추로 사용할 단추를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IButtonControl" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>This property enables you to designate a default action to occur when the user presses the ENTER key in your application.</source>
          <target state="translated">이 속성을 사용 하면 사용자가 응용 프로그램에서 ENTER 키를 누를 때 발생 하는 기본 동작을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The button assigned to this property must be an <ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> that is on the current form or located within a container on the current form.</source>
          <target state="translated">이 속성에 할당 된 단추 이어야 합니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> 또는 현재 폼에 있는 컨테이너 내에 있는 현재 양식에 인 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.</source>
          <target state="translated">사용자가 수동으로 마우스로 accept 단추를 클릭 하지 않고 완료 되 면 ENTER 키를 누르면 수 있으므로 간단한 양식을 빠르게 탐색할 수 있도록이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it.</source>
          <target state="translated">폼에서 현재 선택 된 컨트롤 ENTER 키를 차단 하 고 처리 하는 경우 적용 단추가 활성화 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.</source>
          <target state="translated">예를 들어 여러 줄 텍스트 상자 컨트롤에 ENTER 키를를 누른 상태로 선택 컨트롤에서 줄 바꿈 문자를 삽입할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">다음 코드 예제에서는의 새 인스턴스를 만듭니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 호출과 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드를 폼으로 대화 상자 표시 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> 대화 상자에 표시 되는 모양 및 폼의 기능을 변경 하려면 속성입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">또한이 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> 메서드가 폼의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 두 개를 추가할 컬렉션 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">이 예제에서는 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> 속성을 대화 상자의 캡션 표시줄에 도움말 단추를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Activate">
          <source>Activates the form and gives it focus.</source>
          <target state="translated">폼을 활성화하고 포커스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application.</source>
          <target state="translated">폼 활성화 상태가 앞으로 활성 응용 프로그램 이거나 없으면이 활성 응용 프로그램 창 캡션의 깜박입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>The form must be visible for this method to have any effect.</source>
          <target state="translated">폼이이 메서드를 사용 하려면에 대 한 표시 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>To determine the active form in an application, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph> property if your forms are in a Multiple-document interface (MDI) application.</source>
          <target state="translated">응용 프로그램에서 활성 폼을 확인 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph> 속성 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph> 양식은 다중 문서 MDI (인터페이스) 응용 프로그램의 경우 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> 멤버입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>To run the example, paste the following code in a form called <ph id="ph1">`Form1`</ph> containing a button called <ph id="ph2">`Button1`</ph> and two <ph id="ph3">`Label`</ph> controls called <ph id="ph4">`Label1`</ph> and <ph id="ph5">`Label2`</ph>.</source>
          <target state="translated">예제를 실행 하려면 이라는 폼에 다음 코드를 붙여 <ph id="ph1">`Form1`</ph> 호출할 단추가 포함 된 <ph id="ph2">`Button1`</ph> 와 두 개의 <ph id="ph3">`Label`</ph> 이라는 컨트롤 <ph id="ph4">`Label1`</ph> 및 <ph id="ph5">`Label2`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>for changing focus.</source>
          <target state="translated">포커스를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Activated">
          <source>Occurs when the form is activated in code or by the user.</source>
          <target state="translated">폼이 코드에서 활성화되거나 사용자에 의해 활성화될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>When the application is active and has multiple forms, the active form is the form with the input focus.</source>
          <target state="translated">응용 프로그램이 활성화 되어 폼이 여러 개 때 현재 형식은 입력된 포커스가 있는 폼이입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>A form that is not visible cannot be the active form.</source>
          <target state="translated">양식에 표시 되지 않는 활성 폼 일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.</source>
          <target state="translated">표시 폼을 활성화 하는 가장 간단한 방법은를 클릭 하거나 적절 한 키보드 조합을 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>To activate a form at run time using code, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> method.</source>
          <target state="translated">호출 코드를 사용 하 여 런타임에 폼을 활성화 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.</source>
          <target state="translated">폼이 활성화 되지 않은 경우 폼의 데이터에 대 한 변경 내용에 따라 폼의 내용을 업데이트 하는 등 작업에 대 한이 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> 멤버입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>To run the example, paste the following code in a form called Form1 containing a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> called <ph id="ph2">`Button1`</ph> and two <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> controls called <ph id="ph4">`Label1`</ph> and <ph id="ph5">`Label2`</ph>.</source>
          <target state="translated">예제를 실행 하려면 이라는 Form1 포함 된 폼에 다음 코드를 붙여넣습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 호출 <ph id="ph2">`Button1`</ph> 와 두 개의 <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> 이라는 컨트롤 <ph id="ph4">`Label1`</ph> 및 <ph id="ph5">`Label2`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>The child form to activate.</source>
          <target state="translated">활성화할 자식 폼입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>Activates the MDI child of a form.</source>
          <target state="translated">폼의 MDI 자식을 활성화합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>If the <ph id="ph1">`form`</ph> parameter is already the active MDI child form, then the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph> method simply returns.</source>
          <target state="translated">경우는 <ph id="ph1">`form`</ph> 매개 변수는 이미 활성 MDI 자식 폼은 다음 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph> 메서드를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>If <ph id="ph1">`form`</ph> is not <ph id="ph2">`null`</ph>, then it is set to be the active MDI child form.</source>
          <target state="translated">경우 <ph id="ph1">`form`</ph> 않습니다 <ph id="ph2">`null`</ph>, 활성 MDI 자식 폼 되도록 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>Whether the <ph id="ph1">`form`</ph> parameter is <ph id="ph2">`null`</ph> or not, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph> raises the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph> event.</source>
          <target state="translated">여부는 <ph id="ph1">`form`</ph> 매개 변수는 <ph id="ph2">`null`</ph> 여부 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph> 를 발생 시킵니다는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>Gets the currently active form for this application.</source>
          <target state="translated">이 응용 프로그램의 현재 활성 폼을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the currently active form, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no active form.</source>
          <target state="translated">현재 활성 폼을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>이고 활성 폼이 없는 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.</source>
          <target state="translated">이 메서드는 폼 이나 컨트롤에서 동작을 수행 하려면 현재 활성 폼에 대 한 참조를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>If your application is a multiple-document interface (MDI) application, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph> property to obtain the currently active MDI child form.</source>
          <target state="translated">응용 프로그램은 (mdi 다중) 다중 문서 인터페이스 응용 프로그램을 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph> 속성을 현재 활성 MDI 자식 폼을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>The following code example gets the active form and disables all the controls on the form.</source>
          <target state="translated">다음 코드 예제에서는 활성 폼을 가져오고 폼에 있는 모든 컨트롤을 사용 하지 않도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection of the form to iterate through each control on the form and disable the controls.</source>
          <target state="translated">이 예제에서는 사용은 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 양식이 폼에 있는 각 컨트롤을 반복 하는 컨트롤을 사용 하지 않도록 설정의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>for requesting a form.</source>
          <target state="translated">폼을 요청 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>Gets the currently active multiple-document interface (MDI) child window.</source>
          <target state="translated">현재 활성 상태인 MDI(다중 문서 인터페이스) 자식 창을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the currently active MDI child window, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are currently no child windows present.</source>
          <target state="translated">현재 활성 상태인 MDI 자식 창을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>을(를) 반환하고 현재 자식 창이 없는 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을(를) 반환합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>You can use this method to determine whether there are any MDI child forms open in your MDI application.</source>
          <target state="translated">MDI 응용 프로그램에서 열려 있는 MDI 자식 폼을 확인 하려면이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.</source>
          <target state="translated">또한 응용 프로그램에 표시 되는 또 다른 형태 또는 MDI 부모 폼에서 MDI 자식 창에 대 한 작업을 수행 하려면이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>If the currently active form is not an MDI child form, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph> property to obtain a reference to it.</source>
          <target state="translated">현재 활성 폼 MDI 자식 폼을 없는 경우 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph> 속성에 대 한 참조를 얻으려고 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>The following code example obtains a reference to the active MDI child form and loops through all <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls on the form, resetting their <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 활성 MDI 자식 폼 및 모든 반복에 대 한 참조를 가져옵니다 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 폼에 컨트롤 다시 설정 하면 해당 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>This example requires that an MDI parent form has been created and that this method call is being made from the MDI parent form.</source>
          <target state="translated">이 예제에서는 MDI 부모 폼을 만들었는지와 MDI 부모 폼에서이 메서드 호출은 만들어지는 되 고 필요 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that this form will own.</source>
          <target state="translated">이 폼이 소유하게 될 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>Adds an owned form to this form.</source>
          <target state="translated">소유된 폼을 이 폼에 추가합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>The form assigned to the owner form remains owned until the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> method is called.</source>
          <target state="translated">소유자 폼에 할당 된 상태를 유지 될 때까지 소유는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>You can also make a form owned by another by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property with a reference to its owner form.</source>
          <target state="translated">설정 하 여 다른가 소유 하는 폼을 만들 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> 소유자 폼에 대 한 참조를 사용 하 여 속성입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>When a form is owned by another form, it is closed or hidden with the owner form.</source>
          <target state="translated">폼을 다른 폼에서 소유 하는 경우 종료 되었거나 소유자 양식으로 숨겨집니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>For example, consider a form named <ph id="ph1">`Form2`</ph> that is owned by a form named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예를 들어 라는 폼 <ph id="ph1">`Form2`</ph> 이라는 폼에서 소유 하는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>If <ph id="ph1">`Form1`</ph> is closed or minimized, <ph id="ph2">`Form2`</ph> is also closed or hidden.</source>
          <target state="translated">경우 <ph id="ph1">`Form1`</ph> 닫히거나을 최소화 하 고 <ph id="ph2">`Form2`</ph> 도 닫히거나 숨겨집니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>Owned forms are also never displayed behind their owner form.</source>
          <target state="translated">소유 된 폼의 소유자 폼 뒤 표시 되지 됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</source>
          <target state="translated">찾기 등의 windows에 대 한 소유 된 폼을 사용할 수 있으며 소유자 폼을 선택한 경우 소유자 폼 뒤 표시 되지 않아야 하는 창과 바꿀 수 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open.</source>
          <target state="translated">폼이 (mdi 다중) 다중 문서 인터페이스 부모 폼이이 속성 열려 있는 MDI 자식 폼 현재 제외 하 고 표시 되는 모든 폼을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>To obtain the MDI child forms opened in an MDI parent form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> property.</source>
          <target state="translated">MDI 부모 폼에서 열려 있는 MDI 자식 폼을 가져오려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AddOwnedForm%2A&gt;</ph> method to display a form as an owned form of another form.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AddOwnedForm%2A&gt;</ph> 메서드를 다른 폼의 소유 된 폼으로 둔 양식을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>Once the owned form is shown, you can minimize its owner form and the owned form will minimize with it.</source>
          <target state="translated">소유 된 폼 표시 되 면, 소유자 폼을 최소화할 수 있습니다 및 함께 소유 된 폼이 최소화 됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>The example requires that the code in the example is called from another event or method of a form.</source>
          <target state="translated">이 예제에서는 다른 이벤트 또는 메서드는 폼의 코드 예제에서 호출 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to show the scroll bars; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스크롤 막대를 표시하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)">
          <source>Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</source>
          <target state="translated">현재 컨트롤 위치 및 현재 선택된 컨트롤에 따라 컨테이너의 스크롤 막대를 조정합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source>Gets or sets a value indicating whether the opacity of the form can be adjusted.</source>
          <target state="translated">폼의 불투명도를 조정할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the opacity of the form can be changed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">폼의 불투명도를 변경할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source>This property is automatically set to <ph id="ph1">`true`</ph> if the <ph id="ph2">`Opacity`</ph> is changed.</source>
          <target state="translated">이 속성은으로 자동 설정 <ph id="ph1">`true`</ph> 경우는 <ph id="ph2">`Opacity`</ph> 변경 됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source>When the opacity of a form is set using the <ph id="ph1">`Opacity`</ph> property, the form will layer objects on the form.</source>
          <target state="translated">폼의 불투명도 사용 하 여 설정 된 경우는 <ph id="ph1">`Opacity`</ph> 속성 폼에 폼에서 개체 계층화 됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AllowTransparency%2A&gt;</ph> property to <ph id="ph2">`false`</ph> the form will not be in layered mode which will improve the display performance of the form.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AllowTransparency%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph> 폼 폼의 표시 성능을 향상 하는 계층화 된 모드에 있지 않게 됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ApplyAutoScaling">
          <source>Resizes the form according to the current value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /&gt;</ph> property and the size of the current font.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /&gt;</ph> 속성 값과 현재 글꼴 크기에 따라 폼의 크기를 조정합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ApplyAutoScaling">
          <source>This method determines the form size using the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> value returned by the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method.</source>
          <target state="translated">값을 사용 하 여 폼 크기를 결정 하는이 메서드는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> 에서 반환 된 값은 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.</source>
          <target state="translated">폼의 크기가 해당 폼에 사용된 글꼴의 높이와 컨트롤의 크기에 맞게 조정되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">폼에 사용된 현재 글꼴에 따라 해당 폼의 크기 및 컨트롤이 자동으로 조정되는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScale%2A&gt;</ph> is obsolete and has been retained for backward compatibility.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScale%2A&gt;</ph> 사용 되지 않으며 이전 버전과 호환성을 위해 유지 되었습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>The non-obsolete alternative is <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">사용되는 대체 항목은 <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
          <target state="translated">자동 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms의 자동 크기 조정을<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>You can use this property to allow your form and its controls to automatically adjust based on changes in the font.</source>
          <target state="translated">이 속성을 사용 하 여 폼 및 글꼴 변경 내용에 따라 자동으로 조정 하도록 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.</source>
          <target state="translated">이 글꼴의 크기가 달라질 응용 프로그램 또는 Windows에서 사용 하기 위해 지정 된 언어에 따라 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>To obtain the size the form will auto scale to, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property.</source>
          <target state="translated">크기를 가져오는 폼이 자동 크기 조정 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>If you want to determine the size the form will auto scale to based on a specific font, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method.</source>
          <target state="translated">크기를 결정 하려면 폼 자동으로 조정 기반으로 사용 하 여 특정 글꼴는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>Gets or sets the base size used for autoscaling of the form.</source>
          <target state="translated">폼의 자동 크기 조정에 사용되는 기본 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the base size that this form uses for autoscaling.</source>
          <target state="translated">이 폼에서 자동 크기 조정을 위해 사용하는 기본 크기를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>This member has been retained for backward compatibility.</source>
          <target state="translated">이 멤버의 이전 버전과 호환성을 위해 유지 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
          <target state="translated">자동 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms의 자동 크기 조정을<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property is used at form-display time to compute the scaling factor for the form.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> 속성은 폼에 대 한 배율 인수를 계산 하려면 양식 표시 시간에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used.</source>
          <target state="translated">자동 크기 조정 기본 크기는 폼에서 사용를 기반으로 비교 하는 시스템의 글꼴 크기에 대 한 자동 크기 조정을 사용 되는 경우 폼의 크기 조정을를 결정 하기.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>If you want to determine the size a form will auto scale to based on a specific font, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method.</source>
          <target state="translated">크기를 결정 하려면 폼 자동으로 조정 기반으로 사용 하 여 특정 글꼴는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>The value of this property is used when the form is initially created.</source>
          <target state="translated">이 속성의 값은 폼을 처음으로 만들어질 때 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>Once the property is set, it cannot be changed.</source>
          <target state="translated">속성이 설정 되어 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>Gets or sets a value indicating whether the form enables autoscrolling.</source>
          <target state="translated">폼에서 자동 스크롤 기능을 사용할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable autoscrolling on the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">폼에서 자동 스크롤 기능을 사용하는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>If this property is set to <ph id="ph1">`true`</ph>, scroll bars are displayed on the form if any controls are located outside the form's client region.</source>
          <target state="translated">이 속성은로 설정 하는 경우 <ph id="ph1">`true`</ph>, 컨트롤이 폼의 클라이언트 영역 외부에 있는 경우 스크롤 막대가 폼에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.</source>
          <target state="translated">또한 자동 스크롤에 있으면 폼의 클라이언트 영역 자동으로 스크롤됩니다 입력된 포커스가 있는 컨트롤을 표시 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.</source>
          <target state="translated">사용자가 자신의 비디오 해상도 설정을 낮은 해상도로 설정 된 경우 컨트롤을 볼 수 있는 기능을 손실 하지 못하도록 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> property to enable the display of controls that are outsize the client area of a form.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> 속성 폼의 클라이언트 영역 보다 큰 컨트롤을 표시할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The example creates a new form and adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control to the form.</source>
          <target state="translated">이 예제에서는 새 폼을 만들고 추가 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤을 폼입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control is positioned outsize the client area of the new form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤은 초과 하 여 배치 새 폼의 클라이언트 영역입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> property is set to true to display scroll bars on the form to enable the user to scroll to the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> 속성이 스크롤 막대 컨트롤을 스크롤할 수 있도록 폼에 표시 하려면 true로 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>This example requires that the method defined in this example is called from another form in an event handler or other method.</source>
          <target state="translated">이 예제에서는 이벤트 처리기 또는 다른 방법의 다른 폼에서이 예제에 정의 된 메서드가 호출 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>Resize the form according to the setting of <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoSizeMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoSizeMode" /&gt;</ph>의 설정에 따라 폼의 크기를 조정합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form will automatically resize; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it must be manually resized.</source>
          <target state="translated">폼의 크기가 자동으로 조정되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 폼의 크기를 수동으로 조정해야 하면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> to force a form to resize to fit its contents.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> 폼 크기를 내용에 맞게 조정 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> properties.</source>
          <target state="translated">폼의 값에 관계 없이 Visual Studio 폼 디자이너에서 자동으로 크기가 조정 되지 않습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>The form correctly resizes itself at run time according to the values of these two properties.</source>
          <target state="translated">폼 올바르게 크기 조정에서 이러한 두 속성의 값에 따라 런타임에 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>By contrast, a custom <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> automatically resizes itself both at design time and at run time.</source>
          <target state="translated">반대로, 사용자 지정 <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> 자동으로 디자인 타임 및 런타임 시 크기 조정 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>When using <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MinimumSize%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MaximumSize%2A&gt;</ph> properties are respected, but the current value of the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property is ignored.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MinimumSize%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MaximumSize%2A&gt;</ph> 의 현재 값을 제외한 속성은 적용 된 <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> 속성은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> also renders the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> property superfluous, as there is no way to shrink the form to hide its contained controls from view.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> 렌더링는 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> 속성 폼 보기에서 포함된 된 컨트롤 숨기기을 축소할 수 없으므로 없기 때문에 불필요 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph> enumeration for information on how a form behaves when <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph> 때 폼 동작에 대 한 내용은 열거형 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> 은 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>The following code example shows a form created using code that automatically resizes to fit its contents.</source>
          <target state="translated">다음 코드 예제에서는 내용에 맞게 자동으로 크기가 조정 되는 코드를 사용 하 여 만든 폼을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>When run, the form displays a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> for entering a URL, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> for displaying that URL inside of the user's default Web browser.</source>
          <target state="translated">실행 되는 경우 폼에 표시 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> URL을 입력에 대 한 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 사용자의 기본 웹 브라우저 내 해당 URL을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>The code example uses a <ph id="ph1">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph> to lay out the contained controls one after the other.</source>
          <target state="translated">사용 하 여 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph> 포함 된 레이아웃에 하나씩를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>It also sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph> to grow and shrink to fit the contents of its form.</source>
          <target state="translated">또한 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph> 성장 시키고 해당 폼의 내용에 맞게 축소 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.AutoSizeChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoSize" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoSize" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>Gets or sets the mode by which the form automatically resizes itself.</source>
          <target state="translated">폼에서 자신의 크기를 자동 조정하는 모드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> enumerated value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> property to a new value causes the form to be laid out again.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> 속성을 새 값을 하면 다시 레이아웃 폼입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> properties.</source>
          <target state="translated">폼의 값에 관계 없이 Visual Studio 폼 디자이너에서 자동으로 크기가 조정 되지 않습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The form correctly resizes itself at run time according to the values of these two properties.</source>
          <target state="translated">폼 올바르게 크기 조정에서 이러한 두 속성의 값에 따라 런타임에 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>By contrast, a custom <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> automatically resizes itself both at design time and at run time.</source>
          <target state="translated">반대로, 사용자 지정 <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> 자동으로 디자인 타임 및 런타임 시 크기 조정 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The following code example shows a form created using code that automatically resizes to fit its contents.</source>
          <target state="translated">다음 코드 예제에서는 내용에 맞게 자동으로 크기가 조정 되는 코드를 사용 하 여 만든 폼을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>When run, the form displaya a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> for entering a URL, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> for displaying that URL inside of the user's default Web browser.</source>
          <target state="translated">실행할 때 코드는 <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> URL을 입력에 대 한 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 사용자의 기본 웹 브라우저 내 해당 URL을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The code example uses a <ph id="ph1">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph> to lay out the contained controls one after the other.</source>
          <target state="translated">사용 하 여 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph> 포함 된 레이아웃에 하나씩를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>It also sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph> to grow and shrink to fit the contents of its form.</source>
          <target state="translated">또한 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph> 성장 시키고 해당 폼의 내용에 맞게 축소 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The value is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> value.</source>
          <target state="translated">값이 유효한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> 값이 아닐 경우</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoValidate">
          <source>Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</source>
          <target state="translated">포커스가 변경될 때 이 컨테이너의 컨트롤에 대한 유효성 검사가 자동으로 수행되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoValidate">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoValidate" /&gt;</ph> enumerated value that indicates whether contained controls are implicitly validated on focus change.</source>
          <target state="translated">포커스가 변경될 때 암시적으로 포함된 컨트롤의 유효성을 검사할지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoValidate" /&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoValidate">
          <source>The default is Inherit.</source>
          <target state="translated">기본값은 Inherit입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.AutoValidateChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoValidate" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoValidate" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.BackColor">
          <source>Gets or sets the background color for the control.</source>
          <target state="translated">컨트롤의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.BackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of the control.</source>
          <target state="translated">컨트롤의 배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.BackColor">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph> property.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>Gets or sets the button control that is clicked when the user presses the ESC key.</source>
          <target state="translated">사용자가 ESC 키를 누를 때 클릭되는 Button 컨트롤을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IButtonControl" /&gt;</ph> that represents the cancel button for the form.</source>
          <target state="translated">폼의 취소 단추를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IButtonControl" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The cancel button for a form is the button control that is clicked whenever the user presses the ESC key.</source>
          <target state="translated">폼에 대 한 취소 단추에는 ESC 키를 누를 때마다 클릭 되 단추 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The button assigned to this property must be an <ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> that is on the current form or located within a container on the current form.</source>
          <target state="translated">이 속성에 할당 된 단추 이어야 합니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> 또는 현재 폼에 있는 컨테이너 내에 있는 현재 양식에 인 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>This property allows you to designate a default action to occur when the user presses the ESC key in your application.</source>
          <target state="translated">이 속성을 사용 하면 사용자가 응용 프로그램에서 ESC 키를 누를 때 발생 하는 기본 동작을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.</source>
          <target state="translated">수동으로 마우스로 취소 단추를 클릭 하지 않고 변경 내용을 커밋하지 않고 창을 닫으려면 ESC 키를 누르기만 허용 하 여 간단한 양식을 빠르게 탐색할 수 있도록 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> may not work if another control on the form intercepts the ESC key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> 폼에서 다른 컨트롤 ESC 키를 가로채 면 작동 하지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>For example, if you have a <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> open on your form, ESC will close the <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> instead of closing the Form.</source>
          <target state="translated">예를 들어 한 <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> 폼에 열려 ESC 닫힙니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> 폼을 종료 하는 대신 합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> object assigned to <ph id="ph2">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> must be visible on the form, or else pressing the ESC key will have no effect.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> 개체에 할당 된 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> 폼에 표시 되어야 합니다. 그렇지 않으면는 esc 키 아무런 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">다음 코드 예제에서는의 새 인스턴스를 만듭니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 호출과 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드를 폼으로 대화 상자 표시 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> 대화 상자에 표시 되는 모양 및 폼의 기능을 변경 하려면 속성입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">또한이 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> 메서드가 폼의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 두 개를 추가할 컬렉션 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">이 예제에서는 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> 속성을 대화 상자의 캡션 표시줄에 도움말 단추를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CenterToParent">
          <source>Centers the position of the form within the bounds of the parent form.</source>
          <target state="translated">부모 폼의 경계 안에서 폼의 위치를 가운데로 맞춥니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToParent">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph> method directly from your code.</source>
          <target state="translated">호출 하지 마십시오는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph> 사용자 코드에서 직접 메서드.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToParent">
          <source>Instead, set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormStartPosition.CenterParent&gt;</ph>.</source>
          <target state="translated">대신, 설정 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Windows.Forms.FormStartPosition.CenterParent&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToParent">
          <source>If the form or dialog is top-level, then <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph> centers the form with respect to the screen or desktop.</source>
          <target state="translated">양식 또는 대화는 최상위 수준, 다음 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph> 화면이 나 바탕 화면에 대해 폼 가운데에 맞춥니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>Centers the form on the current screen.</source>
          <target state="translated">폼을 현재 화면의 가운데로 맞춥니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>Do not call this directly from your code.</source>
          <target state="translated">이 사용자 코드에서 직접 호출 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>Instead, set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormStartPosition.CenterScreen&gt;</ph>.</source>
          <target state="translated">대신, 설정 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Windows.Forms.FormStartPosition.CenterScreen&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToScreen%2A&gt;</ph> method uses the following priority list to determine the screen used to center the form:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToScreen%2A&gt;</ph> 메서드 다음과 같은 우선 순위를 사용 하 여 폼 가운데 하는 데 사용 하 여 화면을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property of the form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> 폼의 속성입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>The HWND owner of the form.</source>
          <target state="translated">폼의 HWND 소유자입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>The screen that currently has the mouse cursor.</source>
          <target state="translated">현재 마우스 커서에 있는 화면입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>Gets or sets the size of the client area of the form.</source>
          <target state="translated">폼의 클라이언트 영역 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the size of the form's client area.</source>
          <target state="translated">폼의 클라이언트 영역 크기를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>The size of the client area of the form is the size of the form excluding the borders and the title bar.</source>
          <target state="translated">폼의 클라이언트 영역 크기에는 테두리 및 제목 표시줄을 제외한 폼의 크기가입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>The client area of a form is the area within a form where controls can be placed.</source>
          <target state="translated">폼의 클라이언트 영역에는 컨트롤을 배치할 수 있는 폼 내에서 영역이입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form.</source>
          <target state="translated">이 속성을 사용 하 여 폼의 컨트롤을 배치 하 고 크기를 조정할 또는 그래픽 작업을 수행할 때 적절 한 크기를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>To get the size of the entire form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property or use the individual properties <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>.</source>
          <target state="translated">전체 폼의 크기를 가져오려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> 속성 하거나 개별 속성을 사용 하 여 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>You cannot currently bind to this property using application settings.</source>
          <target state="translated">현재 응용 프로그램 설정을 사용 하 여이 속성에 바인딩할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>For more information on application settings, see <bpt id="p1">[</bpt>Application Settings Overview<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>.</source>
          <target state="translated">응용 프로그램 설정에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>응용 프로그램 설정 개요<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>The following code example creates an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event of a form.</source>
          <target state="translated">다음 코드 예제에 대 한 이벤트 처리기를 만듭니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> 폼의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>The event handler uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ClientSize%2A&gt;</ph> property of the form to make a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control named <ph id="ph3">`button1`</ph> fill the entire client area of the form.</source>
          <target state="translated">이벤트 처리기에서 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ClientSize%2A&gt;</ph> 있도록 폼의 속성을 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 라는 컨트롤 <ph id="ph3">`button1`</ph> 폼의 전체 클라이언트 영역을 채웁니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Close">
          <source>Closes the form.</source>
          <target state="translated">폼을 닫습니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>When a form is closed, all resources created within the object are closed and the form is disposed.</source>
          <target state="translated">폼이 닫힐 때 개체 내에서 생성 된 모든 리소스 닫혀 있고 폼이 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>You can prevent the closing of a form at run time by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event and setting the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed as a parameter to your event handler.</source>
          <target state="translated">처리 하 여 런타임에 폼의 닫는 방지할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 이벤트와 설정 된 <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> 이벤트 처리기에 매개 변수로 전달 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>If the form you are closing is the startup form of your application, your application ends.</source>
          <target state="translated">닫으려는 폼은 응용 프로그램의 시작 폼을 응용 프로그램 종료 됩니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>The two conditions when a form is not disposed on <ph id="ph1">`Close`</ph> is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>.</source>
          <target state="translated">폼에서 삭제 되지 않은 두 가지 경우 <ph id="ph1">`Close`</ph> 는 경우는 (mdi 다중) 다중 문서 인터페이스 응용 프로그램의 일부인 (1) 및 폼은 보이지 않습니다. (2)을 표시 한 양식 사용 하 여 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>In these cases, you will need to call <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> manually to mark all of the form's controls for garbage collection.</source>
          <target state="translated">이러한 경우에 호출 해야 합니다 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> 가비지 수집에 대 한 폼의 컨트롤을 모두 표시 하도록 수동으로 합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is called on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> displayed as a modeless window, you cannot call the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method to make the form visible, because the form's resources have already been released.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> 메서드가 호출 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> 모덜리스 창으로 표시를 호출할 수 없습니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> 메서드 폼의 리소스가 이미 해제 되었으므로 때문에 폼을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>To hide a form and then make it visible, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">폼을 숨기고 표시를 사용 하 여 확인 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>Prior to the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 2.0, the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph> events are not raised when the <ph id="ph4">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated">이전에 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 2.0는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph> 이벤트는 실행 될 때 발생 하는 <ph id="ph4">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> 메서드를 호출 응용 프로그램을 종료 하 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>If you have validation code in either of these events that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사 코드를 실행 해야 하는 이러한 이벤트 중 하나에 있으면 호출 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> 호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Close">
          <source>The form was closed while a handle was being created.</source>
          <target state="translated">핸들이 만들어지는 동안 폼이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Close">
          <source>You cannot call this method from the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Activated" /&gt;</ph> event when <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Form.WindowState" /&gt;</ph> is set to <ph id="ph3">&lt;see cref="F:System.Windows.Forms.FormWindowState.Maximized" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Activated" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Form.WindowState" /&gt;</ph>로 설정된 경우에는 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.FormWindowState.Maximized" /&gt;</ph> 이벤트에서 이 메서드를 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Closed">
          <source>Occurs when the form is closed.</source>
          <target state="translated">폼이 닫힐 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event is obsolete in the .NET Framework version 2.0; use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> 이벤트는.NET Framework 버전 2.0에서에서 사용 되지 않습니다; 사용 된 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> 이벤트 대신 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>This event occurs after the form has been closed by the user or by the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method of the form.</source>
          <target state="translated">이 이벤트는 사용자 또는 폼이 닫힌 후 발생는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> 폼의 메서드.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>To prevent a form from closing, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event and set the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed to your event handler to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">폼을 닫는 하지 않도록 하려면 처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 이벤트 집합과 <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> 이벤트 처리기에 전달 된 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</source>
          <target state="translated">폼에서 사용 하는 리소스를 확보 하는 등의 작업을 수행 하 고 폼에 입력 한 정보를 저장 하 또는 부모 폼을 업데이트 하려면이 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph> events are not raised when the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph> 이벤트는 실행 될 때 발생 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> 메서드는 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>If you have validation code in either of these events that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사 코드를 실행 해야 하는 이러한 이벤트 중 하나에 있으면 호출 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> 호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>If the form is an MDI parent form, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is raised.</source>
          <target state="translated">폼이 MDI 부모 폼의 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 모든 MDI 자식 폼의 MDI 부모 폼의 하기 전에 발생 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> 모든 MDI 자식 폼의 발생 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> MDI 부모 폼의 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> 멤버입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>To run the example, paste the following code in a form called <ph id="ph1">`Form1`</ph> containing a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> called <ph id="ph3">`Button1`</ph> and two <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> controls called <ph id="ph5">`Label1`</ph> and <ph id="ph6">`Label2`</ph>.</source>
          <target state="translated">예제를 실행 하려면 이라는 폼에 다음 코드를 붙여 <ph id="ph1">`Form1`</ph> 포함 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 호출 <ph id="ph3">`Button1`</ph> 와 두 개의 <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> 이라는 컨트롤 <ph id="ph5">`Label1`</ph> 및 <ph id="ph6">`Label2`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Closing">
          <source>Occurs when the form is closing.</source>
          <target state="translated">폼이 닫히는 동안 발생합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is obsolete in the .NET Framework version 2.0; use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 이벤트는.NET Framework 버전 2.0에서에서 사용 되지 않습니다; 사용 된 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> 이벤트 대신 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event occurs as the form is being closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 이 이벤트는 폼을 닫을 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>When a form is closed, all resources created within the object are released and the form is disposed.</source>
          <target state="translated">폼이 닫힐 때 개체 내에서 만들어진 모든 리소스가 해제 되 고 폼이 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>If you cancel this event, the form remains opened.</source>
          <target state="translated">이 이벤트를 취소 하면 폼 열린 상태로 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>To cancel the closure of a form, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed to your event handler to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">폼의 클로저를 취소 하려면는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> 이벤트 처리기에 전달 된 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">폼을 모달 대화 상자로 표시 되 면 클릭 하 고 <bpt id="p1">**</bpt>닫기<ept id="p1">**</ept> 단추 (x 폼의 오른쪽 위 모서리에 있는 단추)를 사용 하면 양식을 숨길 및 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 속성으로 설정 됩니다 <ph id="ph2">`DialogResult.Cancel`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>You can override the value assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property in an event handler for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of the form.</source>
          <target state="translated">에 할당 된 값을 재정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 클릭할 때 속성의 <bpt id="p1">**</bpt>닫기<ept id="p1">**</ept> 설정 하 여 단추는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 속성에 대 한 이벤트 처리기에는 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 폼의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is called on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> displayed as a modeless window, you cannot call the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method to make the form visible, because the form's resources have already been released.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> 메서드가 호출 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> 모덜리스 창으로 표시를 호출할 수 없습니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> 메서드 폼의 리소스가 이미 해제 되었으므로 때문에 폼을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>To hide a form and then make it visible, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">폼을 숨기고 표시를 사용 하 여 확인 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph> events are not raised when the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph> 이벤트는 실행 될 때 발생 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> 메서드는 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>If you have validation code in either of these events that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사 코드를 실행 해야 하는 이러한 이벤트 중 하나에 있으면 호출 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> 호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>If the form is an MDI parent form, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is raised.</source>
          <target state="translated">폼이 MDI 부모 폼의 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 모든 MDI 자식 폼의 MDI 부모 폼의 하기 전에 발생 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> 모든 MDI 자식 폼의 발생 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> MDI 부모 폼의 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>Canceling the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of an MDI child form does not prevent the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of the MDI parent form from being raised.</source>
          <target state="translated">취소는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 때도 MDI 자식 폼의 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> MDI 부모 폼에서 발생 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>However, canceling the event will set to <ph id="ph1">`true`</ph> the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> that is passed as a parameter to the parent form.</source>
          <target state="translated">그러나로 설정 됩니다 이벤트를 취소 <ph id="ph1">`true`</ph> 는 <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> 부모 폼에 매개 변수로 전달 되는 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>To force all MDI parent and child forms to close, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id="ph2">`false`</ph> in the MDI parent form.</source>
          <target state="translated">모든 MDI 부모 및 자식 폼을 강제로 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph> 는 mdi 부모 폼입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> to test if the text in a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> has changed.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 여부를 테스트 하에 있는 텍스트는 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 변경 되었습니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>If it has, the user is asked whether to save the changes to a file.</source>
          <target state="translated">있는 경우, 사용자가 것인지 묻는 메시지가 나타나면 파일에 변경 내용을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.</source>
          <target state="translated">폼의 캡션 표시줄에 컨트롤 상자가 표시되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form displays a control box in the upper-right corner of the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 폼의 오른쪽 위 모퉁이에 컨트롤 상자가 표시 되는 경우 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the control box is displayed in the upper-right corner of the caption bar.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>, 캡션 표시줄의 오른쪽 위 모퉁이에 컨트롤 상자가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The control box can include minimize, maximize, and help buttons in addition to a close button.</source>
          <target state="translated">컨트롤 상자 포함 될 수 있습니다 최소화, 최대화 및 닫기 단추를 단추는 또한 데 도움이 됩니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>For the <ph id="ph1">`ControlBox`</ph> property to have any effect, you must also set the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한는 <ph id="ph1">`ControlBox`</ph> 매개 변수가 적용 속성 폼을 설정 해야 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> 속성을 <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, 또는 <ph id="ph6">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> to <ph id="ph2">`false`</ph> and also set the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property, the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property of the form is not updated to reflect that the non-client area of the form has been hidden.</source>
          <target state="translated">설정 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> 를 <ph id="ph2">`false`</ph> 설정는 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> 속성에는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> 폼의 속성이 양식의 비클라이언트 영역 숨겨진 반영 하도록 업데이트 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>To fix this problem, put the code that alters the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event handler.</source>
          <target state="translated">이 문제를 해결 하려면 변경 하는 코드를 삽입는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>When set to <ph id="ph1">`false`</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.</source>
          <target state="translated">로 설정 하면 <ph id="ph1">`false`</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> 속성이 생성 시 최대화 표시 되는 다중 문서 MDI (인터페이스) 자식 폼에 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to create a form that does not have any border or caption box.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> 어떤 테두리 또는 캡션 상자를 하지 않은 폼을 만들 속성입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The form created in this example could be used to create a splash screen for an application.</source>
          <target state="translated">이 예제에서 만든 양식 응용 프로그램에 대 한 시작 화면을 만드는 데 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The example requires that the example's method is defined in a form class and called when the form is being initialized.</source>
          <target state="translated">예제에서는 예에 나오는 메서드는 폼 클래스에 정의 되 고 폼이 초기화 될 때 호출.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateControlsInstance">
          <source>Creates a new instance of the control collection for the control.</source>
          <target state="translated">컨트롤에 대한 컨트롤 컬렉션의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateControlsInstance">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> assigned to the control.</source>
          <target state="translated">컨트롤에 할당된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>의 새 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateHandle">
          <source>Creates the handle for the form.</source>
          <target state="translated">폼에 대한 핸들을 만듭니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateHandle">
          <source>If a derived class overrides this function, it must call the base implementation.</source>
          <target state="translated">파생된 클래스가 이 함수를 재정의하려면 기본 구현을 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateHandle">
          <source>A handle for this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> has already been created.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>에 대한 핸들은 이미 만들어졌습니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.CreateParams">
          <source>Gets the required creation parameters when the control handle is created.</source>
          <target state="translated">컨트롤 핸들이 만들어지는 경우 필요한 작성 매개 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CreateParams">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
          <target state="translated">컨트롤 핸들을 만들 때 필요한 작성 매개 변수가 포함된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>Occurs when the form loses focus and is no longer the active form.</source>
          <target state="translated">폼이 포커스를 잃고 비활성 상태가 될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.</source>
          <target state="translated">비활성화 된 폼의 데이터로 업데이트 하는 응용 프로그램의 다른 창 등의 작업을 수행 하려면이 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>Gets the default Input Method Editor (IME) mode supported by the control.</source>
          <target state="translated">컨트롤에서 지원하는 기본 IME(입력기) 모드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</source>
          <target state="translated">입력된 (입력기)는 사용자가 표준 키보드를 사용 하 여 복잡 한 한글 등의 기호를 입력할 수 있는 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>As implemented in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, this property always returns the <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType&gt;</ph> value.</source>
          <target state="translated">구현 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 클래스,이 속성은 항상 반환는 <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>The value of this property is assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">이 속성의 값에 할당 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DefaultSize">
          <source>Gets the default size of the control.</source>
          <target state="translated">컨트롤의 기본 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultSize">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> of the control.</source>
          <target state="translated">컨트롤의 기본 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">처리할 Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)">
          <source>Sends the specified message to the default window procedure.</source>
          <target state="translated">지정된 메시지를 기본 창 프로시저로 보냅니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>Gets or sets the size and location of the form on the Windows desktop.</source>
          <target state="translated">Windows 데스크톱에서 폼의 크기 및 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounds of the form on the Windows desktop using desktop coordinates.</source>
          <target state="translated">데스크톱 좌표를 사용하여 Windows 데스크톱에서 폼의 경계를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</source>
          <target state="translated">데스크톱 좌표로 작업 표시줄을 제외 하는 화면에서의 작업 영역을 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>The coordinate system of the desktop is pixel-based.</source>
          <target state="translated">바탕 화면 좌표계는 픽셀 시작 합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.</source>
          <target state="translated">응용 프로그램이 다중 모니터 시스템에서 실행 되는 경우 폼의 좌표는 조합 된 데스크톱 좌표입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>You can use this property to size and position a form relative to other forms or applications on the Windows desktop.</source>
          <target state="translated">이 속성은 크기와 다른 양식 또는 응용 프로그램을 기준으로 폼의 Windows 바탕 화면에서 위치를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>The following code example sets the size and position of a form so that the form is positioned 50 pixels from the left border of the desktop and 50 pixels from the top of the desktop.</source>
          <target state="translated">다음 코드 예제에서는 폼에서 바탕 화면 맨 위에서부터 데스크톱 및 50 픽셀의 왼쪽된 테두리 50 픽셀을 위치 지정된이 있도록 크기와 폼의 위치를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>This example requires that the method is defined within a form class.</source>
          <target state="translated">이 예제에서는 메서드가 양식 클래스 내에서 정의 되어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>Gets or sets the location of the form on the Windows desktop.</source>
          <target state="translated">Windows 데스크톱에서 폼의 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the location of the form on the desktop.</source>
          <target state="translated">데스크톱에서 폼의 위치를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</source>
          <target state="translated">데스크톱 좌표로 작업 표시줄을 제외 하는 화면에서의 작업 영역을 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>The coordinate system of the desktop is pixel based.</source>
          <target state="translated">바탕 화면 좌표계는 픽셀 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.</source>
          <target state="translated">응용 프로그램이 다중 모니터 시스템에서 실행 되는 경우 폼의 좌표는 조합 된 데스크톱 좌표입니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>You can use this property to position your form relative to other forms and applications on the Windows desktop.</source>
          <target state="translated">Windows 바탕 화면에서 다른 폼과 응용 프로그램을 기준으로 폼 배치 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>If you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> method, your form will be positioned at its default location, which is determined by the operating system.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> 메서드 호출 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> 메서드를 폼으로 운영 체제에 의해 결정 된 기본 위치에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>For more information about window positioning, see the "Window Size and Position" section of the "Window Features" document in the MSDN library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">창 위치를 지정 하는 방법에 대 한 자세한 내용은 MSDN library에서 "창 기능" 문서 "창 크기 및 위치" 섹션을 참조 하십시오. <ph id="ph1">http://msdn.microsoft.com/library</ph>합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>, your form will be positioned at the location you specified.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> 호출한 후 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>, 폼을 사용자가 지정한 위치에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>The following code example sets the position of a form so that the form is positioned 100 pixels from the left border of the desktop and 100 pixels from the top of the desktop.</source>
          <target state="translated">다음 코드 예제에서는 폼에서 바탕 화면 맨 위에서부터 데스크톱 및 100 픽셀의 왼쪽된 테두리 100 픽셀을 위치 지정된이 있도록 폼의 위치를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>This example requires that method has been defined within a form class.</source>
          <target state="translated">이 예제에서는 폼 클래스 내에 메서드가 정의 되어 있는지 필요 합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>Gets or sets the dialog result for the form.</source>
          <target state="translated">폼의 대화 상자 결과를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> that represents the result of the form when used as a dialog box.</source>
          <target state="translated">폼이 대화 상자로 사용되는 경우 해당 폼의 결과를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box.</source>
          <target state="translated">폼의 대화 상자 결과는 모달 대화 상자로 표시 되 면 폼에서 반환 되는 값입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>If the form is displayed as a dialog box, setting this property with a value from the <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form.</source>
          <target state="translated">폼이 대화 상자로 표시를 하는 경우이 속성의 값으로 설정 된 <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> 열거형 형식에 대 한 대화 상자 결과의 값을 설정, 모달 대화 상자를 숨깁니다 및 컨트롤을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>This property is typically set by the <ph id="ph1">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control on the form.</source>
          <target state="translated">일반적으로이 속성은에서 설정 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 폼에서 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>When the user clicks the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, the value assigned to the <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> is assigned to the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form.</source>
          <target state="translated">클릭 하면는 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 에 할당 된 값을 제어는 <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 에 할당 되는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 폼의 속성입니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">폼을 모달 대화 상자로 표시 되 면 클릭 하 고 <bpt id="p1">**</bpt>닫기<ept id="p1">**</ept> 단추 (X가 폼의 오른쪽 위 모서리에 있는 단추)를 사용 하면 양식을 숨길 및 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 속성으로 설정 됩니다 <ph id="ph2">`DialogResult.Cancel`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is not automatically called when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button of a dialog box or sets the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> 메서드가 클릭할 때 자동으로 호출 되지 않습니다는 <bpt id="p1">**</bpt>닫기<ept id="p1">**</ept> 대화 상자의 단추의 값을 설정 하거나는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>Instead, the form is hidden and can be shown again without creating a new instance of the dialog box.</source>
          <target state="translated">대신, 폼 숨겨져 있고 대화 상자의 새 인스턴스를 만들지 않고 다시 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>Because of this behavior, you must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the form when the form is no longer needed by your application.</source>
          <target state="translated">이러한 동작으로 인해를 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> 폼은 더 이상 필요 없는 응용 프로그램에서 폼의 메서드.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.</source>
          <target state="translated">대화 상자에서 수행 되는 동작을 제대로 처리할 수 있도록 대화 상자를 닫을 하는 방법을 확인 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>You can override the value assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property in an event handler for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of the form.</source>
          <target state="translated">에 할당 된 값을 재정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 클릭할 때 속성의 <bpt id="p1">**</bpt>닫기<ept id="p1">**</ept> 설정 하 여 단추는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 속성에 대 한 이벤트 처리기에는 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 폼의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is displayed as a modeless window, the value returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 모덜리스 창에서 반환 된 값으로 표시 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 속성 폼을 닫을 때 폼의 리소스가 자동으로 해제 하기 때문에 폼에 사용 된 값을 반환 하지 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>The following code example displays a form as a dialog box and displays a message box indicating whether the OK or Cancel button of the form was clicked by referencing the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form.</source>
          <target state="translated">다음 코드 예제에서는 대화 상자로 있는 폼을 표시 하 고 참조 하 여 폼의 확인 또는 취소 단추가 클릭 되었다는 있는지 여부를 나타내는 메시지 상자를 표시 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 폼의 속성입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">지정된 값이 유효한 값 범위를 벗어난 경우</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>Disposes of the resources (other than memory) used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>에서 사용하는 리소스(메모리 제외)를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose`</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">`Dispose`</ph> 와 <ph id="ph3">`disposing`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 매개 변수가 <ph id="ph2">`true`</ph>인 경우 이 메서드는 이 <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> will be called automatically if the form is shown using the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> 사용 하 여 폼이 표시 하는 경우 자동으로 호출 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>If another method such as <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> is used, or the form is never shown at all, you must call <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> yourself within your application.</source>
          <target state="translated">하는 경우와 같은 다른 방법을 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 사용 하는 경우 또는 폼이 전혀 표시 되지 않는 호출 해야 합니다 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> 응용 프로그램 내에서 직접 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>를 재정의할 때 이전 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Finalize 메서드를 재정의<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.DpiChanged">
          <source>Occurs when the DPI setting changes on the display device where the form is currently displayed.</source>
          <target state="translated">양식이 현재 표시되어 있는 디스플레이 장치에서 DPI 설정이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>Gets or sets the border style of the form.</source>
          <target state="translated">폼의 테두리 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormBorderStyle" /&gt;</ph> that represents the style of border to display for the form.</source>
          <target state="translated">폼에 표시되는 테두리의 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormBorderStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The default is <ph id="ph1">&lt;see langword="FormBorderStyle.Sizable" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="FormBorderStyle.Sizable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The border style of the form determines how the outer edge of the form appears.</source>
          <target state="translated">폼의 테두리 스타일 폼의 바깥쪽 가장자리 표시 되는 방식을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>In addition to changing the border display for a form, certain border styles prevent the form from being sized.</source>
          <target state="translated">폼의 테두리 표시를 변경 하는 것 외에도 특정 테두리 스타일의 크기도 조정할 폼을 방지 합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>For example, the <ph id="ph1">`FormBorderStyle.FixedDialog`</ph> border style changes the border of the form to that of a dialog box and prevents the form from being resized.</source>
          <target state="translated">예를 들어는 <ph id="ph1">`FormBorderStyle.FixedDialog`</ph> 테두리 스타일의 대화 상자 폼의 테두리 변경 하 고 폼 크기를 조정 하지 못하도록 합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The border style can also affect the size or availability of the caption bar section of a form.</source>
          <target state="translated">테두리 스타일 크기 또는 폼의 캡션 표시줄 섹션의 가용성에 영향을 줄 수 있습니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable&gt;</ph> style, it is impossible to resize the window below a certain minimum value, even if you have set <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> to <ph id="ph3">`false`</ph> and assigned a zero-length string to <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Text%2A&gt;</ph>.</source>
          <target state="translated">와 <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable&gt;</ph> 스타일 수 없으면 특정 한 최소 값 이하로 창 크기를 조정 하면 설정한 경우에 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> 를 <ph id="ph3">`false`</ph> 길이가 0 인 문자열을 할당 하 고 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Text%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>Consider working around this by using the <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow&gt;</ph> style instead.</source>
          <target state="translated">사용 하 여이 문제를 해결할 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow&gt;</ph> 대신 스타일입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">다음 코드 예제에서는의 새 인스턴스를 만듭니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 호출과 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드를 폼으로 대화 상자 표시 합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> 대화 상자에 표시 되는 모양 및 폼의 기능을 변경 하려면 속성입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">또한이 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> 메서드가 폼의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 두 개를 추가할 컬렉션 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">이 예제에서는 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> 속성을 대화 상자의 캡션 표시줄에 도움말 단추를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">지정된 값이 유효한 값 범위를 벗어난 경우</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>Occurs after the form is closed.</source>
          <target state="translated">폼이 닫힌 후 발생합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event occurs after the form has been closed by the user or by the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Windows.Forms.Application&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> 이 이벤트는 사용자 또는 폼이 닫힌 후 발생는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> 메서드 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 의 메서드는 <ph id="ph4">&lt;xref:System.Windows.Forms.Application&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>To prevent a form from closing, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event and set the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed to your event handler to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">폼을 닫는 하지 않도록 하려면 처리는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> 이벤트 집합과 <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> 이벤트 처리기에 전달 된 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</source>
          <target state="translated">폼에서 사용 하는 리소스를 확보 하는 등의 작업을 수행 하 고 폼에 입력 한 정보를 저장 하 또는 부모 폼을 업데이트 하려면이 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>If the form is a multiple-document interface (MDI) parent form, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event is raised.</source>
          <target state="translated">폼이 (mdi 다중) 다중 문서 인터페이스 부모 폼의 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> 모든 MDI 자식 폼의 MDI 부모 폼의 하기 전에 발생 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">마찬가지로,는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> 모든 MDI 자식 폼의 발생 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> MDI 부모 폼의 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>Occurs before the form is closed.</source>
          <target state="translated">폼이 닫히기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event occurs as the form is being closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> 이 이벤트는 폼을 닫을 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>When a form is closed, it is disposed, releasing all resources associated with the form.</source>
          <target state="translated">폼을 닫을 때 삭제 되 고 폼과 관련 된 모든 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>If you cancel this event, the form remains opened.</source>
          <target state="translated">이 이벤트를 취소 하면 폼 열린 상태로 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To cancel the closure of a form, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> passed to your event handler to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">폼의 클로저를 취소 하려면는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> 이벤트 처리기에 전달 된 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">폼을 모달 대화 상자로 표시 되 면 클릭 하 고 <bpt id="p1">**</bpt>닫기<ept id="p1">**</ept> 단추 (x 폼의 오른쪽 위 모서리에 있는 단추)를 사용 하면 양식을 숨길 및 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 속성으로 설정 됩니다 <ph id="ph2">`DialogResult.Cancel`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>You can override the value assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property in an event handler for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event of the form.</source>
          <target state="translated">에 할당 된 값을 재정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 클릭할 때 속성의 <bpt id="p1">**</bpt>닫기<ept id="p1">**</ept> 설정 하 여 단추는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 속성에 대 한 이벤트 처리기에는 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> 폼의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is called on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> displayed as a modeless window, you cannot call the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method to make the form visible, because the form's resources have already been released.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> 메서드가 호출 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> 모덜리스 창으로 표시를 호출할 수 없습니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> 메서드 폼의 리소스가 이미 해제 되었으므로 때문에 폼을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To hide a form and then make it visible, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method.</source>
          <target state="translated">폼을 숨기고 표시를 사용 하 여 확인 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>If the form is a multiple-document interface (MDI) parent form, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event is raised.</source>
          <target state="translated">폼이 (mdi 다중) 다중 문서 인터페이스 부모 폼의 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> 모든 MDI 자식 폼의 MDI 부모 폼의 하기 전에 발생 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">마찬가지로,는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> 모든 MDI 자식 폼의 발생 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> MDI 부모 폼의 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>Canceling the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event of an MDI child form does not prevent the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event of the MDI parent form from being raised.</source>
          <target state="translated">취소는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> 때도 MDI 자식 폼의 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> MDI 부모 폼에서 발생 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>However, canceling the event will set to <ph id="ph1">`true`</ph> the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> class that is passed as a parameter to the parent form.</source>
          <target state="translated">그러나로 설정 됩니다 이벤트를 취소 <ph id="ph1">`true`</ph> 는 <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> 부모 폼에 매개 변수로 전달 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To force all MDI parent and child forms to close, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id="ph2">`false`</ph> in the MDI parent form.</source>
          <target state="translated">모든 MDI 부모 및 자식 폼을 강제로 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph> 는 mdi 부모 폼입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> representing the font to determine the autoscaled base size of the form.</source>
          <target state="translated">자동 조정되는 폼의 기본 크기를 결정하기 위한 글꼴을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>Gets the size when autoscaling the form based on a specified font.</source>
          <target state="translated">지정된 글꼴에 따라 폼의 크기를 자동으로 조정하는 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> representing the autoscaled size of the form.</source>
          <target state="translated">자동으로 조정되는 폼의 크기를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method is obsolete in.NET Framework version 2.0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> 메서드는 사용 되지 않는 in.NET Framework 버전 2.0.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>This member has been retained for backward compatibility.</source>
          <target state="translated">이 멤버의 이전 버전과 호환성을 위해 유지 합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
          <target state="translated">자동 크기 조정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms의 자동 크기 조정을<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form.</source>
          <target state="translated">폼을 폼에 글꼴을 적용 하기 전에 자동 크기 조정을 특정 글꼴에 대 한는 크기를 확인 하려면이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property.</source>
          <target state="translated">크기를 확인 하려는 경우는 특정 폼이를 폼에 사용 된 현재 글꼴에 따라, 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the area for which to retrieve the display bounds.</source>
          <target state="translated">디스플레이 범위를 검색할 영역을 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The height and width of the control's bounds.</source>
          <target state="translated">컨트롤 범위의 높이 및 너비입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> that specifies the bounds of the control to use when defining its size and position.</source>
          <target state="translated">크기 및 위치를 정의하는 데 사용할 컨트롤 범위를 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Retrieves the bounds within which the control is scaled.</source>
          <target state="translated">컨트롤의 배율이 조정되는 범위를 검색합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> representing the bounds within which the control is scaled.</source>
          <target state="translated">컨트롤의 크기가 조정되는 범위를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.</source>
          <target state="translated">폼의 캡션 상자에 도움말 단추를 표시해야 하는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display a Help button in the form's caption bar; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">폼의 캡션 표시줄에 도움말 단추를 표시하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>When this property is set to <ph id="ph1">`true`</ph>, a small button with a question mark appears in the caption bar to the left of the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button.</source>
          <target state="translated">이 속성이로 설정 된 경우 <ph id="ph1">`true`</ph>, 왼쪽의 캡션 표시줄에 물음표 있는 작은 단추가 표시 되는 <bpt id="p1">**</bpt>닫기<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>You can use this button to display help for your application.</source>
          <target state="translated">응용 프로그램에 대 한 도움말을 표시 하려면이 단추를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>You can create an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event to display Help information to the user when the Help button of the form is clicked.</source>
          <target state="translated">에 대 한 이벤트 처리기를 만들 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> 폼의 도움말 단추를 클릭할 때 사용자에 게 도움말 정보를 표시 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>To display a Help button, the value of the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property must be <ph id="ph2">`true`</ph>, its default value.</source>
          <target state="translated">도움말 단추를 폼의 값을 표시 하려면 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> 속성 이어야 합니다 <ph id="ph2">`true`</ph>, 해당 기본값입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> 속성 캡션 표시줄의 오른쪽 위 모퉁이 최대화 단추, 최소화 단추, 도움말 단추 및 닫기 단추와 같은 컨트롤 포함 되는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>In addition, you must also set the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">또한 양식의 설정 해야 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property is ignored if the <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Minimize<ept id="p2">**</ept> buttons are shown.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> 속성은 무시 됩니다는 <bpt id="p1">**</bpt>최대화<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>최소화<ept id="p2">**</ept> 단추가 표시 합니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">다음 코드 예제에서는의 새 인스턴스를 만듭니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 호출과 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드를 폼으로 대화 상자 표시 합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> 대화 상자에 표시 되는 모양 및 폼의 기능을 변경 하려면 속성입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">또한이 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> 메서드가 폼의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 두 개를 추가할 컬렉션 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a Help button in the caption bar of the dialog box.</source>
          <target state="translated">이 예제에서는 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> 속성을 대화 상자의 캡션 표시줄에 도움말 단추를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>Occurs when the <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button is clicked.</source>
          <target state="translated"><bpt id="p1">**</bpt>도움말<ept id="p1">**</ept> 단추를 클릭하면 발생합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> event occurs when the <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button in the form's caption bar is clicked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> 이벤트가 발생할 때의 <bpt id="p1">**</bpt>도움말<ept id="p1">**</ept> 폼의 캡션 표시줄에 단추를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>The <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button is displayed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>도움말<ept id="p1">**</ept> 단추가 표시 되는지를 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> can be canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Icon">
          <source>Gets or sets the icon for the form.</source>
          <target state="translated">폼의 아이콘을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Icon">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> that represents the icon for the form.</source>
          <target state="translated">폼의 아이콘을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Icon">
          <source>A form's icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.</source>
          <target state="translated">폼의 아이콘을 폼의 컨트롤 상자에 표시 되는 아이콘을 비롯 하 여 작업 표시줄에 폼을 나타내는 그림을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Icon">
          <source>This property will have no effect if <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>.</source>
          <target state="translated">이 속성이 아무런 효과가 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Icon">
          <source>In that case, the form will not display an icon.</source>
          <target state="translated">이 경우 폼 아이콘이 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>Occurs after the input language of the form has changed.</source>
          <target state="translated">폼의 입력 언어가 변경된 후에 발생합니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>You can use this event to make changes to your form's appearance and text based on changes made to the input language of the form.</source>
          <target state="translated">폼의 모양 및 폼의 입력된 언어에 대 한 변경 내용을 기반으로 하는 텍스트를 변경 하려면이 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>Occurs when the user attempts to change the input language for the form.</source>
          <target state="translated">폼의 입력 언어를 변경하려고 하면 발생합니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>This event occurs before the change of input language is made for the form.</source>
          <target state="translated">이 이벤트는 폼에 대 한 입력된 언어를 변경 하 여 만들어지기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>You can cancel the language change by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.InputLanguageChangingEventArgs&gt;</ph> passed to your event handler to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">언어 변경 설정 하 여 취소할 수 있습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.InputLanguageChangingEventArgs&gt;</ph> 이벤트 처리기에 전달 된 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>If the event is canceled, the input language is not changed.</source>
          <target state="translated">이벤트가 취소 되는 입력된 언어 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>You can use this event to determine whether the requested input language change is appropriate for your application.</source>
          <target state="translated">응용 프로그램에 대 한 적절 한 요청한 입력된 언어 변경 되는지 확인 하려면이 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanging&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanging&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanging&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanging&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>Gets a value indicating whether the form is a multiple-document interface (MDI) child form.</source>
          <target state="translated">폼이 MDI(다중 문서 인터페이스) 자식 폼인지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form is an MDI child form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">폼이 MDI 자식 폼인 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>At run time, MDI child forms are displayed inside the client area of an MDI parent form.</source>
          <target state="translated">런타임 시 MDI 자식 폼은 MDI 부모 폼의 클라이언트 영역 안에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>An MDI child form can be maximized, minimized, and moved within the MDI parent form.</source>
          <target state="translated">MDI 자식 폼 최대화을 최소화 하며 MDI 부모 폼 내에서 이동 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>To create an MDI child form, assign the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that will be the MDI parent form to the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property of the child form.</source>
          <target state="translated">MDI 자식 폼을 만들려면 할당는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> MDI 부모 폼에 사용 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> 자식 폼의 속성입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property to determine whether a form is an MDI parent form.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> 속성을 폼이 MDI 부모 폼입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiChild%2A&gt;</ph> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiChild%2A&gt;</ph> 속성을 메서드 또는 속성에 의해 반환 된 폼 MDI 자식 폼 또는 대화 상자와 같은 응용 프로그램에서 표준 형식 인지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>All MDI child forms have sizable borders, a control-menu box, and Minimize and <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> buttons, regardless of the settings of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> properties.</source>
          <target state="translated">모든 MDI 자식 폼에는 크기 조정 가능한 테두리, 컨트롤 메뉴 상자 및 최소화 및 <bpt id="p1">**</bpt>최대화<ept id="p1">**</ept> 의 설정에 관계 없이 단추는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.</source>
          <target state="translated">폼이 MDI(다중 문서 인터페이스) 자식 폼의 컨테이너인지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form is a container for MDI child forms; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">폼이 MDI 자식 폼의 컨테이너인 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>This property changes the display and behavior of the form to an MDI parent form.</source>
          <target state="translated">이 속성 MDI 부모 폼을 표시 및 폼의 동작을 변경합니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the form displays a sunken client area with a raised border.</source>
          <target state="translated">이 속성이로 설정 된 경우 <ph id="ph1">`true`</ph>, 폼에 볼록한 테두리가 오목한 클라이언트 영역을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>All MDI child forms assigned to the parent form are displayed within its client area.</source>
          <target state="translated">부모 폼에 사용 된 모든 MDI 자식 폼의 클라이언트 영역 내에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>When an MDI parent form is closed, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is raised.</source>
          <target state="translated">MDI 부모 폼이 닫히면는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 모든 MDI 자식 폼의 MDI 부모 폼의 하기 전에 발생 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> 모든 MDI 자식 폼의 발생 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> MDI 부모 폼의 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>If there are two <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on an MDI child form, setting <ph id="ph2">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> to <ph id="ph3">`true`</ph> for the parent form merges the contents of only one of the <ph id="ph4">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls.</source>
          <target state="translated">두 개 있는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> 설정 된 MDI 자식 폼의 컨트롤 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> 를 <ph id="ph3">`true`</ph> 부모에 대 한 폼 중 하나만의 내용을 병합 하는 <ph id="ph4">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph> to merge the contents of additional child <ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on the MDI parent form.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph> 내용을 병합 하 여 추가 자식 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> MDI 부모 폼에서 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property as well as changing the <ph id="ph2">`BackColor`</ph> property of an MDI Form.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> 변경할 뿐 아니라 속성은 <ph id="ph2">`BackColor`</ph> MDI 폼의 속성입니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>To run this example, paste the following code in a new form.</source>
          <target state="translated">이 예제를 실행 하려면 새 폼에 다음 코드를 붙여 넣습니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>Gets a value indicating whether the form can use all windows and user input events without restriction.</source>
          <target state="translated">폼에서 제한 없이 모든 창과 사용자 입력 이벤트를 사용할 수 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form has restrictions; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">폼에 제한이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsRestrictedWindow%2A&gt;</ph> property determines whether the <ph id="ph2">&lt;xref:System.Security.Permissions.UIPermissionWindow.AllWindows&gt;</ph> permission is granted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsRestrictedWindow%2A&gt;</ph> 속성 결정 여부는 <ph id="ph2">&lt;xref:System.Security.Permissions.UIPermissionWindow.AllWindows&gt;</ph> 권한이 부여 됩니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>This property is set at run time in the form's constructor, and is cached for the lifetime of the form.</source>
          <target state="translated">이 속성은 런타임에 폼의 생성자에서 설정 되며 폼의 수명 동안 캐시 됩니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.</source>
          <target state="translated">공용 언어 런타임 부모 생성자가 부분 신뢰 환경에서 항상 호출을 보장 부분 신뢰에서 실행 되는 Windows Forms 응용 프로그램에서이 검사를 피할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.</source>
          <target state="translated">포커스가 있는 컨트롤에 이벤트가 전달되기 전에 폼이 키 이벤트를 받을지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form will receive all key events; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the currently selected control on the form receives key events.</source>
          <target state="translated">폼이 모든 키 이벤트를 받는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 폼에서 현재 선택되어 있는 컨트롤이 키 이벤트를 받는 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the form will receive all <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> events.</source>
          <target state="translated">이 속성이로 설정 된 경우 <ph id="ph1">`true`</ph>, 폼을 모두를 받게 됩니다 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>After the form's event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus.</source>
          <target state="translated">폼의 이벤트 처리기는 키 입력 처리를 완료 하면 키 입력 포커스가 있는 컨트롤에 할당 됩니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the currently selected control is a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, after the keystroke is handled by the event handlers of the form the <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control will receive the key that was pressed.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph2">`true`</ph> 현재 선택 된 컨트롤은 한 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>키 입력은 폼의 이벤트 처리기에서 처리 한 후는 <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 컨트롤 누른 키를 받게 됩니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> property in your form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event handler to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">폼 수준 에서만 키보드 이벤트를 처리 하 고 키보드 이벤트를 수신 하도록 컨트롤을 허용 하지 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> 속성 폼의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> 이벤트 처리기를 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke.</source>
          <target state="translated">이 속성을 사용 하 여 처리 하거나 응용 프로그램의 대부분의 키 입력을 처리 하거나 키 입력을 처리 하는 적절 한 컨트롤을 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.</source>
          <target state="translated">예를 들어 응용 프로그램에서 기능 키를 사용할 때 키 입력 이벤트를 받을 수 있는 각 컨트롤에 대 한 코드를 작성 하는 대신 폼 수준에서 키 입력을 처리 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>If a form has no visible or enabled controls, it automatically receives all keyboard events.</source>
          <target state="translated">폼에 표시 되거나 설정 된 컨트롤이 키보드 이벤트를 모두 자동으로 받습니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>A control on a form may be programmed to cancel any keystrokes it receives.</source>
          <target state="translated">폼의 컨트롤 받은 키 입력을 취소를 프로그래밍할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph>.</source>
          <target state="translated">컨트롤을 폼에 이러한 키 입력 보내지 않습니다, 이후 폼을 볼 수 없습니다 하의 설정에 관계 없이 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>The following code example demonstrates setting a form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph> property to true and handling the key events at the form level.</source>
          <target state="translated">다음 코드 예제는 폼을 설정 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph> 속성을 true로 폼 수준에서 키 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>To run the example, paste the following code in a blank form.</source>
          <target state="translated">이 예제를 실행 하려면 빈 폼에 다음 코드를 붙여 넣습니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MdiLayout" /&gt;</ph> values that defines the layout of MDI child forms.</source>
          <target state="translated">MDI 자식 폼의 레이아웃을 정의하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MdiLayout" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>Arranges the multiple-document interface (MDI) child forms within the MDI parent form.</source>
          <target state="translated">MDI(다중 문서 인터페이스) 부모 폼 내에 MDI 자식 폼을 정렬합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms.</source>
          <target state="translated">허용 하기 위해 더 쉽게 탐색 및 조작 MDI 자식 폼의 MDI 부모 폼의 MDI 자식 폼을 정렬 하려면이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.</source>
          <target state="translated">MDI 자식 폼 종속 연결 된, 또는 MDI 부모 폼 내에서 아이콘으로 가로 또는 세로로 바둑판식 수 수 있습니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>The following code example shows the event handlers for the menu items of a Window menu in an MDI application's parent form.</source>
          <target state="translated">다음 코드 예제에서는 MDI 응용 프로그램의 부모 폼에서 창 메뉴의 메뉴 항목에 대 한 이벤트 처리기를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>Each event handler makes calls to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.LayoutMdi%2A&gt;</ph> method to arrange any child forms that are currently open in the application.</source>
          <target state="translated">각 이벤트 처리기를 호출 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.LayoutMdi%2A&gt;</ph> 자식 폼을 정렬 하는 메서드는 응용 프로그램에서 현재 열려 있습니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Load">
          <source>Occurs before a form is displayed for the first time.</source>
          <target state="translated">폼이 처음으로 표시되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Load">
          <source>You can use this event to perform tasks such as allocating resources used by the form.</source>
          <target state="translated">폼에서 사용 하는 리소스를 할당 하는 등의 작업을 수행 하려면이 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Load">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Load">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> 멤버입니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Load">
          <source>To run the example, paste the following code in a form called <ph id="ph1">`Form1`</ph> containing a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> called <ph id="ph3">`Button1`</ph> and two <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> controls called <ph id="ph5">`Label1`</ph> and <ph id="ph6">`Label2`</ph>.</source>
          <target state="translated">예제를 실행 하려면 이라는 폼에 다음 코드를 붙여 <ph id="ph1">`Form1`</ph> 포함 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 호출 <ph id="ph3">`Button1`</ph> 와 두 개의 <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> 이라는 컨트롤 <ph id="ph5">`Label1`</ph> 및 <ph id="ph6">`Label2`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Location">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the upper-left corner of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> in screen coordinates.</source>
          <target state="translated">화면 좌표에서 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>의 왼쪽 위 모퉁이를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>을(를) 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the upper-left corner of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> in screen coordinates.</source>
          <target state="translated">화면 좌표에서 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>의 왼쪽 위 모퉁이를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source><ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> is a structure, which means that it is a value type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> 즉, 값 형식 구조가입니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>If you access a property in <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>, a copy of the property is returned.</source>
          <target state="translated">속성에 액세스 하는 경우 <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>, 속성의 복사본이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>Therefore, changing the <ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> returned from the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property will not affect the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, or <ph id="ph8">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property values of the <ph id="ph9">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">따라서 변경는 <ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> 에서 반환 된는 <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> 속성에 영향을 주지 것입니다는 <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, 또는 <ph id="ph8">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> 의 속성 값은 <ph id="ph9">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>To adjust these properties, set each property value individually, or set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property with a new <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>.</source>
          <target state="translated">이러한 속성을 조정 하려면 각 속성 값을 개별적으로 설정 하거나 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> 를 새 속성 <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property gets or sets the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> base class, and sets the <ph id="ph4">&lt;xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A&gt;</ph> property to <ph id="ph5">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> 속성 가져오거나는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> 기본 클래스 및 집합은 <ph id="ph4">&lt;xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A&gt;</ph> 속성을 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>Gets or sets the primary menu container for the form.</source>
          <target state="translated">폼의 기본 메뉴 컨테이너를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuStrip" /&gt;</ph> that represents the container for the menu structure of the form.</source>
          <target state="translated">폼의 메뉴 구조에 대한 컨테이너를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuStrip" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>In addition to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MainMenuStrip%2A&gt;</ph> property, you must <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection.Add%2A&gt;</ph> the <ph id="ph3">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> control to the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection of the form.</source>
          <target state="translated">설정 뿐만 아니라는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MainMenuStrip%2A&gt;</ph> 해야 속성 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection.Add%2A&gt;</ph> 는 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> 컨트롤을 <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 폼의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> class supersedes the <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> class in previous versions of the .NET Framework.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> 클래스를 대체는 <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 이전 버전의.NET Framework 클래스입니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Margin">
          <source>Gets or sets the space between controls.</source>
          <target state="translated">컨트롤 사이의 공백을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Margin">
          <source>A value that represents the space between controls.</source>
          <target state="translated">컨트롤 사이의 공백을 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MarginChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Margin" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Margin" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>Gets or sets a value indicating whether the <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button is displayed in the caption bar of the form.</source>
          <target state="translated">폼의 캡션 표시줄에 <bpt id="p1">**</bpt>최대화<ept id="p1">**</ept> 단추가 표시되는지 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display a <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button for the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 표시 하는 <bpt id="p1">**</bpt>최대화<ept id="p1">**</ept> 폼; 단추를 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>A <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button enables users to enlarge a window to full-screen size.</source>
          <target state="translated">A <bpt id="p1">**</bpt>최대화<ept id="p1">**</ept> 단추를 사용 하면 사용자가 창을 전체 화면 크기로 확대 합니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>To display a <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button, the value of the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property must be <ph id="ph2">`true`</ph>, its default value.</source>
          <target state="translated">표시 하는 <bpt id="p1">**</bpt>최대화<ept id="p1">**</ept> 단추를 폼의 값 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> 속성 이어야 <ph id="ph2">`true`</ph>, 값이 기본값으로 합니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> 속성 캡션 표시줄의 오른쪽 위 모퉁이 최대화 단추, 최소화 단추, 도움말 단추 및 닫기 단추와 같은 컨트롤 포함 되는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>In addition, you must also set the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">또한 양식의 설정 해야 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>A <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button automatically becomes a restore button when a window is maximized.</source>
          <target state="translated">A <bpt id="p1">**</bpt>최대화<ept id="p1">**</ept> 창이 최대화 되 면 자동으로 단추 복원 단추 됩니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>Minimizing or restoring a window automatically changes the restore button back to a <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button.</source>
          <target state="translated">최소화 하거나 창을 자동으로 복원 하면 복원 단추 변경 다시는 <bpt id="p1">**</bpt>최대화<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>Maximizing a form at run time generates a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event.</source>
          <target state="translated">런타임에 폼을 최대화를 생성 한 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property reflects the current state of the window.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> 속성 창의 현재 상태를 반영 합니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property to <ph id="ph2">`FormWindowState.Maximized`</ph>, the form is maximized independently of whatever settings are in effect for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> properties.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> 속성을 <ph id="ph2">`FormWindowState.Maximized`</ph>, 설정값 관계 없이 적용에 대 한 폼이 최대화는 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">다음 코드 예제에서는의 새 인스턴스를 만듭니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 호출과 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드를 폼으로 대화 상자 표시 합니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> 대화 상자에 표시 되는 모양 및 폼의 기능을 변경 하려면 속성입니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">또한이 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> 메서드가 폼의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 두 개를 추가할 컬렉션 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">이 예제에서는 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> 속성을 대화 상자의 캡션 표시줄에 도움말 단추를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>Gets and sets the size of the form when it is maximized.</source>
          <target state="translated">폼이 최대화될 때의 크기를 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounds of the form when it is maximized.</source>
          <target state="translated">폼이 최대화될 때 폼의 경계를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Drawing.Rectangle.Top" /&gt;</ph> property is greater than the height of the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Rectangle.Top" /&gt;</ph> 속성 값이 폼의 높이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Drawing.Rectangle.Left" /&gt;</ph> property is greater than the width of the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Rectangle.Left" /&gt;</ph> 속성 값이 폼의 너비보다 큰 경우</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>Classes that inherit from <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> can override this method to provide new bounds for the form when it is maximized.</source>
          <target state="translated">상속 된 클래스 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 최대화 되어 폼에 대 한 새 경계를 제공 하려면이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>The class sets this property internally when the form's <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button is clicked.</source>
          <target state="translated">클래스는이 속성을 설정 내부적으로 때 폼의 <bpt id="p1">**</bpt>최대화<ept id="p1">**</ept> 단추를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MaximizedBounds" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MaximizedBounds" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximizedBoundsChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximizedBoundsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximizedBoundsChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximizedBoundsChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>Gets the maximum size the form can be resized to.</source>
          <target state="translated">폼을 조정할 수 있는 최대 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the maximum size for the form.</source>
          <target state="translated">폼의 최대 크기를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>This property enables you to limit the size of a form to a specified maximum size.</source>
          <target state="translated">이 속성을 사용 하면 지정된 된 최대 크기를 폼의 크기를 제한할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden.</source>
          <target state="translated">단일 창 숨겨져야 다른 창을 이어지지 되도록이 기능을 동시에 여러 창을 표시할 때 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>If this property is set to a <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.</source>
          <target state="translated">이 속성은로 설정 하는 경우는 <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> 높이 및 폭, 폼 0 개체 Windows 설정도 넘어 없는 최대 크기를 갖게 됩니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>The following code example demonstrates setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSize%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 설정 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSize%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>The values of the height or width within the <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> object are less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> 개체 내의 높이 또는 너비 값이 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MaximumSize" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MaximumSize" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSizeChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSizeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSizeChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSizeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.</source>
          <target state="translated">MDI 응용 프로그램 내에서 MDI(다중 문서 인터페이스) 자식 폼이 활성화되었거나 닫힌 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.</source>
          <target state="translated">이 이벤트를 사용 하 여 MDI 자식 폼의 콘텐츠를 업데이트 하는 등 작업을 수행 하 고 활성화 된 MDI 자식 폼의 상태에 따라 MDI 부모 폼에서 사용할 수 있는 메뉴 옵션을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.</source>
          <target state="translated">이 폼의 하위 폼이 되는 MDI(다중 문서 인터페이스) 자식 폼을 나타내는 폼 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> objects, each of which identifies one of this form's MDI child forms.</source>
          <target state="translated">각각 이 폼의 MDI 자식 폼 중 하나를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form.</source>
          <target state="translated">이 속성을 사용 하면 MDI 부모 폼에서 현재 열려 있는 모든 MDI 자식 폼에 대 한 참조를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>To create an MDI child form, assign the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that will be the MDI parent form to the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property of the child form.</source>
          <target state="translated">MDI 자식 폼을 만들려면 할당는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> MDI 부모 폼에 사용 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> 자식 폼의 속성입니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.</source>
          <target state="translated">이 속성을 모든 MDI 자식 폼 MDI 부모 폼을 닫을 때 데이터베이스에 데이터를 저장 하는 등 작업을 수행 하거나 응용 프로그램에서 수행 된 작업에 따라 자식 폼의 필드를 업데이트할 루핑하려면 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> property to iterate through the list of MDI child forms and add a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control to each.</source>
          <target state="translated">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> 속성을 추가 하 고 MDI 자식 폼 목록을 반복는 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 각각 제어 합니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>Gets or sets the current multiple-document interface (MDI) parent form of this form.</source>
          <target state="translated">이 폼의 현재 MDI(다중 문서 인터페이스) 부모 폼을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the MDI parent form.</source>
          <target state="translated">MDI 부모 폼을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>To create an MDI child form, assign the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that will be the MDI parent form to the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property of the child form.</source>
          <target state="translated">MDI 자식 폼을 만들려면 할당는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> MDI 부모 폼에 사용 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> 자식 폼의 속성입니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.</source>
          <target state="translated">모든 자식 폼을 동작을 수행 하는 메서드를 호출 하거나 모든 자식 폼을 필요로 하는 전역 정보를 가져오는 MDI 자식 폼에서이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>If there are two <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on an MDI child form, setting <ph id="ph2">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> to <ph id="ph3">`true`</ph> for the parent form merges the contents of only one of the <ph id="ph4">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls.</source>
          <target state="translated">두 개 있는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> 설정 된 MDI 자식 폼의 컨트롤 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> 를 <ph id="ph3">`true`</ph> 부모에 대 한 폼 중 하나만의 내용을 병합 하는 <ph id="ph4">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph> to merge the contents of additional child <ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on the MDI parent form.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph> 내용을 병합 하 여 추가 자식 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> MDI 부모 폼에서 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The following code example demonstrates how to create child forms in an MDI application.</source>
          <target state="translated">다음 코드 예제에서는 MDI 응용 프로그램에서 자식 폼을 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The example code creates a form with unique text to identify the child form.</source>
          <target state="translated">예제 코드와 자식 폼을 식별 하는 고유한 텍스트 양식을 만듭니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property to specify that a form is a child form.</source>
          <target state="translated">이 예제에서는 사용은 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> 속성을 통해 폼이 자식 폼을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>This example requires that the code in the example is called from a form that has its <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property set to <ph id="ph2">`true`</ph> and that the form has a private class level integer variable named <ph id="ph3">`childCount`</ph>.</source>
          <target state="translated">이 예제는 예제에서 코드는 양식에서 호출 되도록 하려면 해당 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> 속성이로 설정 <ph id="ph2">`true`</ph> 그리고 폼에 라는 전용 클래스 수준 정수 변수에 <ph id="ph3">`childCount`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> assigned to this property is not marked as an MDI container.</source>
          <target state="translated">이 속성에 할당된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>이 MDI 컨테이너로 표시되지 않은 경우</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> assigned to this property is both a child and an MDI container form.</source>
          <target state="translated">이 속성에 할당된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>이 자식 폼이면서 MDI 컨테이너 폼인 경우</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> assigned to this property is located on a different thread.</source>
          <target state="translated">이 속성에 할당된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>이 다른 스레드에 있는 경우</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>for requesting a form.</source>
          <target state="translated">폼을 요청 합니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Menu">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> that is displayed in the form.</source>
          <target state="translated">폼에 표시되는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>을(를) 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> that represents the menu to display in the form.</source>
          <target state="translated">폼에 표시할 메뉴를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>You can use this property to switch between complete menu sets at run time.</source>
          <target state="translated">런타임 시 완전 한 메뉴 집합 사이 전환 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>For example, you can define one <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to display when a child window is displayed.</source>
          <target state="translated">예를 들어 하나 정의할 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 활성 MDI 자식 폼 및 다른 (mdi 다중) 다중 문서 인터페이스 폼에 표시할 <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 자식 창이 표시 될 때 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>You can also use a different <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> when specific conditions exist in your application that require displaying a different menu set.</source>
          <target state="translated">사용할 수도 있습니다를 다른 <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 특정 조건을 서로 다른 메뉴 집합을 표시 해야 하는 응용 프로그램에 존재 하는 경우.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, assigns two <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> and binds it to a form.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, 두 개의 할당 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 폼에 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> created that is named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예제를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 만든 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>Occurs when the menu of a form loses focus.</source>
          <target state="translated">폼의 메뉴가 포커스를 잃으면 발생합니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus.</source>
          <target state="translated">이 이벤트는 수행 중인 명령에서 발생 하 고 메뉴가 포커스를 잃으면 메뉴 항목에에서 대 한 메뉴를 클릭할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>You can use this event to perform tasks such as updating the text of a <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control or enabling and disabling buttons on a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph>.</source>
          <target state="translated">이 이벤트를 사용 하 여 텍스트를 업데이트 하는 등 작업을 수행 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> 컨트롤 또는 설정 및 해제 단추에는 <ph id="ph2">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuComplete&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuComplete&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuComplete&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuComplete&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>Occurs when the menu of a form receives focus.</source>
          <target state="translated">폼의 메뉴가 포커스를 받으면 발생합니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>This event is raised when any menu item in the menu is clicked by the user.</source>
          <target state="translated">이 이벤트는 사용자가 메뉴에서 모든 메뉴 항목을 클릭할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.</source>
          <target state="translated">설정 및 해제 메뉴에 액세스 하는 경우 사용자가 액세스 해서는 안 되는 양식에서 컨트롤 등의 작업을 수행 하려면이 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuStart&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuStart&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuStart&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuStart&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>Gets the merged menu for the form.</source>
          <target state="translated">폼의 병합된 메뉴를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> that represents the merged menu of the form.</source>
          <target state="translated">폼의 병합된 메뉴를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu.</source>
          <target state="translated">이 속성은 폼이 (mdi 다중) 다중 문서 인터페이스 자식 폼은 부모 폼의 메뉴가 해당 메뉴를 병합 하는 경우에 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure.</source>
          <target state="translated">이 속성을 사용 하 여를 변경 하거나 메뉴 구조에 대 한 추가 MDI 응용 프로그램에서 현재 메뉴 구조를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>To obtain the nonmerged <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> assigned to a form, use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Menu%2A&gt;</ph> property.</source>
          <target state="translated">된 병합 되지 않은 <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 사용 하 여 폼에 할당 된 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Menu%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>Gets or sets a value indicating whether the <bpt id="p1">**</bpt>Minimize<ept id="p1">**</ept> button is displayed in the caption bar of the form.</source>
          <target state="translated">폼의 캡션 표시줄에 <bpt id="p1">**</bpt>최소화<ept id="p1">**</ept> 단추가 표시되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display a <bpt id="p1">**</bpt>Minimize<ept id="p1">**</ept> button for the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 표시 하는 <bpt id="p1">**</bpt>최소화<ept id="p1">**</ept> 폼; 단추를 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>A <bpt id="p1">**</bpt>Minimize<ept id="p1">**</ept> button enables users to minimize a window to an icon.</source>
          <target state="translated">A <bpt id="p1">**</bpt>최소화<ept id="p1">**</ept> 창을 아이콘으로 최소화 하기 위해 사용자가 단추를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>To display a <bpt id="p1">**</bpt>Minimize<ept id="p1">**</ept> button, the value of the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property must be <ph id="ph2">`true`</ph>, its default value.</source>
          <target state="translated">표시 하는 <bpt id="p1">**</bpt>최소화<ept id="p1">**</ept> 단추를 폼의 값 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> 속성 이어야 <ph id="ph2">`true`</ph>, 값이 기본값으로 합니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> 속성 캡션 표시줄의 오른쪽 위 모퉁이 최대화 단추, 최소화 단추, 도움말 단추 및 닫기 단추와 같은 컨트롤 포함 되는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>In addition, you must also set the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">또한 양식의 설정 해야 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>Minimizing a form at run time generates a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event.</source>
          <target state="translated">런타임에 폼을 최소화에서는 오류가 발생 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property reflects the current state of the window.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> 속성 창의 현재 상태를 반영 합니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property to <ph id="ph2">`FormWindowState.Minimized`</ph>, the form is minimized independently of whatever settings are in effect for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> properties.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> 속성을 <ph id="ph2">`FormWindowState.Minimized`</ph>, 설정값 관계 없이 적용에 대 한 폼이 최소화는 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">다음 코드 예제에서는의 새 인스턴스를 만듭니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 호출과 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드를 폼으로 대화 상자 표시 합니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> 대화 상자에 표시 되는 모양 및 폼의 기능을 변경 하려면 속성입니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">또한이 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> 메서드가 폼의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 두 개를 추가할 컬렉션 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">이 예제에서는 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> 속성을 대화 상자의 캡션 표시줄에 도움말 단추를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>Gets or sets the minimum size the form can be resized to.</source>
          <target state="translated">폼을 조정할 수 있는 최소 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the minimum size for the form.</source>
          <target state="translated">폼의 최소 크기를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>This property enables you to limit the size of a form to a specified minimum size.</source>
          <target state="translated">이 속성을 사용 하면 지정 된 최소 크기로 폼의 크기를 제한할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>You can use this feature to prevent a user from sizing a window to an undesirable size.</source>
          <target state="translated">사용자가 원하지 않는 크기로 창 크기를 조정 하지 않도록 하려면이 기능을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>If this property is set to a <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.</source>
          <target state="translated">이 속성은로 설정 하는 경우는 <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> 높이 및 너비를 폼 0 개체 Windows 설정도 넘어 없는 최소 크기를 가집니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>The values of the height or width within the <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> object are less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> 개체 내의 높이 또는 너비 값이 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MinimumSize" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MinimumSize" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MinimumSizeChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MinimumSizeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MinimumSizeChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MinimumSizeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Modal">
          <source>Gets a value indicating whether this form is displayed modally.</source>
          <target state="translated">이 폼이 모달 형식으로 표시되는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form is displayed modally; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">폼이 모달 형식으로 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form.</source>
          <target state="translated">폼이 모달 형식으로 표시 합니다 (키보드 또는 마우스 클릭)을 입력 하지 않고 모달 폼에 있는 개체를 제외 하 고 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>The program must hide or close a modal form (usually in response to some user action) before input to another form can occur.</source>
          <target state="translated">프로그램 숨기 거 나 닫기를 모달 폼 (일반적으로 사용자의 일부 동작에 대 한 응답) 다른 폼에 입력 하기 전에 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>Forms that are displayed modally are typically used as dialog boxes in an application.</source>
          <target state="translated">모달 형식으로 표시 되는 폼은 일반적으로 응용 프로그램에서 대화 상자로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.</source>
          <target state="translated">메서드 또는 속성에서 가져온 양식 모달 형식으로 표시 되어 있는지 여부를 확인 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>To display a form modally use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method.</source>
          <target state="translated">표시 하려면 폼 모달 형식으로 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Modal%2A&gt;</ph> property to determine if a form is displayed as a modal form.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Modal%2A&gt;</ph> 속성 폼을 모달 폼으로 표시 되는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>If it is not the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph> properties are changed to make the form a non-top-level form with a tool window border.</source>
          <target state="translated">없는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph> 속성 폼을 도구 창 테두리를 포함 하는 하위 수준의 폼 변경 됩니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Activated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Activated" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnActivated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnActivated%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>Overriding this method is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">파생된 클래스에서 이벤트를 처리 하는 기본 방법에는이 메서드를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the data.</source>
          <target state="translated">데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Closed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Closed" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> method is obsolete in the .NET Framework version 2.0; use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> method instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> 메서드는.NET Framework 버전 2.0에서에서 사용 되지 않는, 사용 된 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>Overriding this method is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">파생된 클래스에서 이벤트를 처리 하는 기본 방법에는이 메서드를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> methods are not called when the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> 메서드 호출 되지 않습니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> 메서드는 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>If you have validation code in either of these methods that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사 코드를 실행 해야 하는 이러한 방법 중 하나에 있으면 호출 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> 호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> method in a class derived from <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> .</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> 에서 파생 된 클래스에서 메서드가 <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> 합니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Closing" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Closing" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> method is obsolete in the .NET Framework version 2.0; use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> method instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> 메서드는.NET Framework 버전 2.0에서에서 사용 되지 않는, 사용 된 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>Overriding this method is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">파생된 클래스에서 이벤트를 처리 하는 기본 방법에는이 메서드를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> methods are not called when the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> 메서드 호출 되지 않습니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> 메서드는 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>If you have validation code in either of these methods that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사 코드를 실행 해야 하는 이러한 방법 중 하나에 있으면 호출 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> 호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> to test if the text in a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> has changed.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 여부를 테스트 하에 있는 텍스트는 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 변경 되었습니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>If it has, the user is asked whether to save the changes to a file.</source>
          <target state="translated">있는 경우, 사용자가 것인지 묻는 메시지가 나타나면 파일에 변경 내용을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnCreateControl">
          <source>Raises the <ph id="ph1">&lt;see langword="CreateControl" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CreateControl" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnCreateControl">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnCreateControl">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnCreateControl">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnCreateControl" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnCreateControl" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnCreateControl" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnCreateControl" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Deactivate" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Deactivate" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnDeactivate%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnDeactivate%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.DpiChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.DpiChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnEnter%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormClosedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormClosedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.FormClosed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.FormClosed" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> method removes the current form from the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> collection of the associated <ph id="ph3">&lt;xref:System.Windows.Forms.Application&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> 에서 현재 폼을 제거 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> 연결 되어 있는 컬렉션 <ph id="ph3">&lt;xref:System.Windows.Forms.Application&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>Overriding this method is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">파생된 클래스에서 이벤트를 처리 하는 기본 방법에는이 메서드를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormClosingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormClosingEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.FormClosing" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.FormClosing" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source>The DPI value for the display device where the form was previously displayed.</source>
          <target state="translated">양식을 이전에 표시했던 디스플레이 장치의 DPI 값입니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source>The DPI value for the display device where the form will be displayed.</source>
          <target state="translated">양식을 표시할 디스플레이 장치의 DPI 값입니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the new size of the form based on the new DPI value.</source>
          <target state="translated">새 DPI 값에 따른 양식의 새 크기를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source>Raises the GetDpiScaledSize event.</source>
          <target state="translated">GetDpiScaledSize 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if successful; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">성공하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Load" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Load" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnLoad%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnLoad%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MdiChildActivate" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MdiChildActivate" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMdiChildActivate%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMdiChildActivate%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MenuComplete" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MenuComplete" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMenuComplete%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMenuComplete%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MenuStart" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MenuStart" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMenuStart%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMenuStart%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResize(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResize(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.ResizeBegin" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.ResizeBegin" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event will only be raised if the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> 경우에 이벤트를 발생 됩니다 폼의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnResizeBegin%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnResizeBegin%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.ResizeEnd" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.ResizeEnd" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event will only be raised if the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> 경우에 이벤트를 발생 됩니다 폼의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnResizeEnd%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnResizeEnd%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>If the current form or one of its parents is disposing of resources, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph> method will return without performing any action.</source>
          <target state="translated">현재 폼 이나 불가 리소스를 삭제 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph> 메서드는 작업을 수행 하지 않고 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of the form has a value of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes&gt;</ph>, then the handles of the form and its child controls will be recreated through calls to the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> 폼의 속성 값이 <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes&gt;</ph>, 호출을 통해 폼과 해당 자식 컨트롤의 핸들은 다시 다음는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Shown" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Shown" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event occurs whenever the form is first shown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> 이벤트는 폼이 처음 표시 될 때마다 발생 합니다.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnShown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnShown%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.StyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.StyleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnVisibleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnVisibleChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Opacity">
          <source>Gets or sets the opacity level of the form.</source>
          <target state="translated">폼의 불투명도를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The level of opacity for the form.</source>
          <target state="translated">폼의 불투명도입니다.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The default is 1.00.</source>
          <target state="translated">기본값은 1.00입니다.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property enables you to specify a level of transparency for the form and its controls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> 속성 폼과 해당 컨트롤에 대 한 투명도 수준을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent.</source>
          <target state="translated">이 속성을 100% (1.00) 보다 작은 값으로 설정, 테두리를 비롯 한 전체 양식은 더욱 투명해 집니다.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>Setting this property to a value of 0 percent (0.00) makes the form completely invisible.</source>
          <target state="translated">이 속성 값이 0% (0.00)을 설정 하면 폼 완전히 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view.</source>
          <target state="translated">서로 다른 수준의 투명도 제공 하거나 나타나거나 폼을 단계적으로 변경 하는 등의 효과 제공 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>For example, you can phase a form into view by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).</source>
          <target state="translated">폼 보기에 / 단계 수를 설정 하 여는 예를 들어는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> 속성 값 (0.00) 0% 및 100% (1.00)에 도달할 때까지 값을 점차적으로 증가 합니다.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> differs from the transparency provided by the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> 제공 하는 투명도에서 다른는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>, 폼 수만 있게 해줍니다 며, 해당 컨트롤 완전히 투명 한 경우 같은 색에 지정 된 값으로는 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>This property is not supported when <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 속성은 실행할 수 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property depends on the Layered Windows API that was introduced with Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> 계층화 Windows API에 도입 된 Windows 2000 속성에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>For more information, see the "Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications" in the Platform SDK documentation at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com</ph><ept id="p1">](http://msdn.microsoft.com/)</ept>.</source>
          <target state="translated">자세한 내용은 "계층화 된 Windows:: A 새로운 방식으로를 사용 하 여 투명도 및 투명도 효과에 Windows" 응용 프로그램 참조의 Platform SDK 설명서에 <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com</ph> <ept id="p1">](http://msdn.microsoft.com/)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</source>
          <target state="translated">다음 코드 예제에서는 75%의 불투명도로 표시 되는 양식을 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The code example creates a new form that is positioned in the center of the screen with an <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property set to change the opacity level of the form.</source>
          <target state="translated">코드 예제와 함께 화면의 가운데에 배치 하는 새 양식을 만듭니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> 속성 폼의 불투명도 수준을 변경 하려면 설정 합니다.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The code example also sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property to provide a larger sized form than the default size of the form.</source>
          <target state="translated">코드 예제에서는 또한 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> 속성을 더 큰 폼의 기본 크기 보다 폼 크기가 조정 합니다.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>This code example was written under the assumption that the method defined in this example is called from another form in an event handler or other method.</source>
          <target state="translated">이 코드 예제는이 예에서 정의 된 메서드는 이벤트 처리기 또는 다른 방법의 다른 폼에서 가정 작성 되었습니다.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>Gets an array of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> objects that represent all forms that are owned by this form.</source>
          <target state="translated">이 폼에 소유된 모든 폼을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 개체의 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> array that represents the owned forms for this form.</source>
          <target state="translated">이 폼에 대해 소유된 폼을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>This property returns an array that contains all forms that are owned by this form.</source>
          <target state="translated">이 속성을이 폼에서 소유 하 고 있는 모든 폼을 포함 하는 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>To make a form owned by another form, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AddOwnedForm%2A&gt;</ph> method.</source>
          <target state="translated">다른 폼에 소유 하는 폼을 하려면 호출 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AddOwnedForm%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>The form assigned to the owner form will remain owned until the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> method is called.</source>
          <target state="translated">될 때까지 소유 소유자 폼에 할당 된 상태로 유지 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>You can also make a form owned by another by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property with a reference to its owner form.</source>
          <target state="translated">설정 하 여 다른가 소유 하는 폼을 만들 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> 소유자 폼에 대 한 참조를 사용 하 여 속성입니다.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>When a form is owned by another form, it is closed or hidden with the owner form.</source>
          <target state="translated">폼을 다른 폼에서 소유 하는 경우 종료 되었거나 소유자 양식으로 숨겨집니다.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>For example, consider a form named <ph id="ph1">`Form2`</ph> that is owned by a form named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예를 들어 라는 폼 <ph id="ph1">`Form2`</ph> 이라는 폼에서 소유 하는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>If <ph id="ph1">`Form1`</ph> is closed or minimized, <ph id="ph2">`Form2`</ph> is also closed or hidden.</source>
          <target state="translated">경우 <ph id="ph1">`Form1`</ph> 닫히거나을 최소화 하 고 <ph id="ph2">`Form2`</ph> 도 닫히거나 숨겨집니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>Owned forms are also never displayed behind their owner form.</source>
          <target state="translated">소유 된 폼의 소유자 폼 뒤 표시 되지 됩니다.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</source>
          <target state="translated">찾기 등의 windows에 대 한 소유 된 폼을 사용할 수 있으며 소유자 폼을 선택한 경우 소유자 폼 뒤 표시 되지 않아야 하는 창과 바꿀 수 있습니다.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open.</source>
          <target state="translated">폼이 (mdi 다중) 다중 문서 인터페이스 부모 폼이이 속성은 열려 있는 MDI 자식 폼 현재 제외 하 고 표시 되는 모든 폼을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>To obtain the MDI child forms opened in an MDI parent form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> property.</source>
          <target state="translated">MDI 부모 폼에서 열려 있는 MDI 자식 폼을 가져오려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OwnedForms%2A&gt;</ph> property to modify all forms owned by the owner form.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OwnedForms%2A&gt;</ph> 소유자 폼에서 소유 하는 모든 폼을 수정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>The first method in the example adds forms to the array of owned forms associated with the owned form.</source>
          <target state="translated">예제에서 첫 번째 방법은 소유 된 폼와 관련 된 소유 된 폼의 배열에 폼을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>The second method loops through all owned forms and changes the caption.</source>
          <target state="translated">두 번째 방법은 모든 소유 된 폼과 캡션을 변경 하는입니다.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>This example requires that both methods are called by an event or other method of a form.</source>
          <target state="translated">이 예제를 실행 하려면 두 메서드가 모두 이벤트 또는 폼의 다른 메서드에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Owner">
          <source>Gets or sets the form that owns this form.</source>
          <target state="translated">이 폼을 소유하는 폼을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the form that is the owner of this form.</source>
          <target state="translated">이 폼의 소유자 폼을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>To make a form owned by another form, assign its <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property a reference to the form that will be the owner.</source>
          <target state="translated">다른 폼에 소유 하는 폼을 하려면 할당 해당 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> 속성 소유자 수 있는 형식에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>When a form is owned by another form, it is closed or hidden with the owner form.</source>
          <target state="translated">폼을 다른 폼에서 소유 하는 경우 종료 되었거나 소유자 양식으로 숨겨집니다.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>For example, consider a form named <ph id="ph1">`Form2`</ph> that is owned by a form named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예를 들어 라는 폼 <ph id="ph1">`Form2`</ph> 이라는 폼에서 소유 하는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>If <ph id="ph1">`Form1`</ph> is closed or minimized, <ph id="ph2">`Form2`</ph> is also closed or hidden.Owned forms are also never displayed behind their owner form.</source>
          <target state="translated">경우 <ph id="ph1">`Form1`</ph> 닫히거나을 최소화 하 고 <ph id="ph2">`Form2`</ph> 도 닫히거나 숨겨집니다. 소유 된 폼의 소유자 폼 뒤 표시 되지 됩니다.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected.</source>
          <target state="translated">찾기 등의 windows에 대 한 소유 된 폼을 사용할 수 있으며 기존 소유자 폼을 선택한 경우 표시 되어야 하는 windows 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>To determine the forms that are owned by a parent form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OwnedForms%2A&gt;</ph> property.</source>
          <target state="translated">부모 폼에서 소유 하는 폼을 확인 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OwnedForms%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Owner">
          <source>A top-level window cannot have an owner.</source>
          <target state="translated">최상위 창은 소유자를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the Win32 message to process.</source>
          <target state="translated">처리할 Win32 메시지를 나타내며 참조에 의해 전달되는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">처리할 키를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Processes a command key.</source>
          <target state="translated">명령 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the keystroke was processed and consumed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to allow further processing.</source>
          <target state="translated">컨트롤에서 키 입력을 처리하고 사용했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 추가 처리를 허용하면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ProcessCmdKey%2A&gt;</ph> method overrides the base</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ProcessCmdKey%2A&gt;</ph> 메서드 재정의 기본</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType&gt;</ph> implementation to provide additional handling of main menu command keys and MDI accelerators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType&gt;</ph> 주 메뉴 명령 키 및 MDI 액셀러레이터의 추가 처리 작업을 제공 구현입니다.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>For information about trapping keystrokes, see "How to trap keystrokes in controls by using Visual C#" and "How to trap keystrokes in .NET controls by using Visual Basic .NET" in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">트래핑 키 입력에 대 한 내용은 "Visual C#을 사용 하 여 컨트롤에서 키 입력을 트래핑 하는 방법"을 참조 하 고 ".NET에서 키 입력을 트래핑 하는 방법을 제어 Visual Basic.NET을 사용 하 여"에서 Microsoft 기술 자료에서 <ph id="ph1">http://support.microsoft.com</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)">
          <source>The character to process.</source>
          <target state="translated">처리할 문자입니다.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)">
          <source>Processes a dialog character.</source>
          <target state="translated">대화 상자 문자를 처리합니다.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컨트롤이 문자를 처리하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">처리할 키를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Processes a dialog box key.</source>
          <target state="translated">대화 상자 키를 처리합니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the keystroke was processed and consumed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to allow further processing.</source>
          <target state="translated">컨트롤에서 키 입력을 처리하고 사용했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 추가 처리를 허용하면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ProcessDialogKey%2A&gt;</ph> method overrides the base <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType&gt;</ph> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ProcessDialogKey%2A&gt;</ph> 메서드 재정의 기본 <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType&gt;</ph> 구현 리턴 및 이스케이프 키 대화 상자에서 추가 처리 작업을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.</source>
          <target state="translated">Alt 키 또는 제어 한정자를 포함 하는 키 입력 없음 처리를 수행 하는 메서드.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">처리할 창 메시지를 나타내며 참조에 의해 전달되는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Previews a keyboard message.</source>
          <target state="translated">키보드 메시지를 미리 봅니다.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컨트롤이 메시지를 처리하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)">
          <source>The character to process.</source>
          <target state="translated">처리할 문자입니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)">
          <source>Processes a mnemonic character.</source>
          <target state="translated">니모닉 문자를 처리합니다.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed as a mnemonic by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컨트롤이 문자를 니모닉으로 처리하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cycle forward through the controls in the ContainerControl; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ContainerControl의 컨트롤 전체를 순환하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)">
          <source>Selects the next available control and makes it the active control.</source>
          <target state="translated">사용 가능한 다음 컨트롤을 선택하여 활성 컨트롤로 만듭니다.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a control is selected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컨트롤이 선택되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> representing the form to remove from the list of owned forms for this form.</source>
          <target state="translated">이 폼에 대한 소유된 폼 목록에서 제거할 폼을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)">
          <source>Removes an owned form from this form.</source>
          <target state="translated">이 폼에서 소유된 폼을 제거합니다.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)">
          <source>The form assigned to the owner form remains owned until the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> method is called.</source>
          <target state="translated">소유자 폼에 할당 된 상태를 유지 될 때까지 소유는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)">
          <source>In addition to removing the owned form from the list of owned form, this method also sets the owner form to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">소유 된 폼 소유 된 폼 목록에서이 메서드 제거도 설정 소유자 폼 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Occurs when a form enters resizing mode.</source>
          <target state="translated">폼이 크기 조정 모드로 들어가면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> 는 사용자가 일반적으로 클릭 하 고 끌어서 테두리 또는 폼의 오른쪽 아래 모서리에 있는 크기 조정 그립 중 하나는 폼 크기를 조정 하기 시작할 때 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>This action puts the form into a modal sizing loop until the resize operation is completed.</source>
          <target state="translated">이 작업 크기 조정 작업이 완료 될 때까지 크기 조정 모달 루프에 폼을 넣습니다.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Typically, the following set of events occurs during a resize operation:</source>
          <target state="translated">일반적으로 다음과 같은 이벤트 집합이 크기 조정 작업 중에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>A single <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event occurs as the form enters resizing mode.</source>
          <target state="translated">단일 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> 폼 크기 조정 모드로 들어가면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Zero or more pairs of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> events occur as the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> is modified.</source>
          <target state="translated">0 개 이상의 쌍 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> 폼의 이벤트가 발생할 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> 수정 됩니다.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>A single <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event occurs as the form exits resizing mode.</source>
          <target state="translated">단일 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> 폼 크기 조정 모드를 종료 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Just clicking without dragging on a border or resizing grip will generate the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> events without any intermediate <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event pairs.</source>
          <target state="translated">테두리 또는 크기 조정 그립 없이 클릭 만으로 생성 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> 이벤트 중간 단계의 없이 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> 이벤트 쌍입니다.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> 이벤트 쌍은 사용자가 클릭 하 고 끌어서 캡션 표시줄에 폼을 이동 하는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>These events are not generated by programmatic manipulation of the form, for example by changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> properties.</source>
          <target state="translated">이러한 이벤트에서 생성 되지 않은 폼의 프로그래밍 방식으로 조작 예를 들어 변경 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>Occurs when a form exits resizing mode.</source>
          <target state="translated">폼이 크기 조정 모드를 벗어나면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> 테두리 또는 폼의 오른쪽 아래 모서리에 있는 크기 조정 그립 중 하나를 끌어서 놓는 하 여 일반적으로 폼의 크기 조정을 마쳤을 때 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>For more information about the resizing operation, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event.</source>
          <target state="translated">크기 조정 작업에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> 이벤트는 사용자가 클릭 하 고 캡션 표시줄을 끌어 양식을 이동한 후에 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>This event is not generated by programmatic manipulation of the form, for example by changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> properties.</source>
          <target state="translated">이 이벤트가 생성 되지 않습니다는 폼의 프로그래밍 방식으로 조작 하 여 예를 들어 변경 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>Gets the location and size of the form in its normal window state.</source>
          <target state="translated">표준 창 상태의 폼 위치 및 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that contains the location and size of the form in the normal window state.</source>
          <target state="translated">표준 창 상태의 폼 위치 및 크기를 포함하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>Typically, you use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> property to track the user's window size and position preferences for the form in its normal window state.</source>
          <target state="translated">일반적으로 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> 속성을 사용자의 창 크기를 추적 하 고 표준 창 상태의 폼에 대 한 기본 위치를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>You should track both the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> properties when tracking the user's window preferences.</source>
          <target state="translated">값을 추적 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> 속성을 사용자의 창 기본 추적 합니다.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> property is valid only when the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class is not equal to <ph id="ph4">&lt;xref:System.Windows.Forms.FormWindowState.Normal&gt;</ph>.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> 속성은 경우에만 유효는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> 클래스 같지 않습니다. <ph id="ph4">&lt;xref:System.Windows.Forms.FormWindowState.Normal&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Gets or sets a value indicating whether right-to-left mirror placement is turned on.</source>
          <target state="translated">오른쪽에서 왼쪽 방향의 미러 배치가 설정되어 있는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if right-to-left mirror placement is turned on; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> for standard child control placement.</source>
          <target state="translated">오른쪽에서 왼쪽 방향의 미러 배치가 설정되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 표준 자식 컨트롤 배치에 대해서는 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> property is primarily useful for developing world-ready forms for worldwide audiences.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> 속성은 전세계 사용자를 위한 지역화 대비 폼을 개발 하는 데 매우 유용 합니다.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Many forms are designed so that controls are laid out on a form in a left-to-right fashion.</source>
          <target state="translated">여러 폼은 왼쪽에서 오른쪽으로 폼에 컨트롤 표시 되는 있도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>These forms are compatible with languages that follow this writing direction.</source>
          <target state="translated">이러한 폼이 쓰기 방향 언어와 호환 됩니다.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form.</source>
          <target state="translated">그러나 오른쪽에서 왼쪽 방향 언어의 사용자에 게 동일한 폼을 표시할 때 것이 좋습니다 폼에서 컨트롤의 순서를 반대로 하 합니다.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>If both the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> properties are <ph id="ph3">`true`</ph>, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.</source>
          <target state="translated">모두는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> 속성은 <ph id="ph3">`true`</ph>, 미러링 켜 집니다 양식 및 컨트롤 배치 및 텍스트 방향에는 오른쪽에서 왼쪽 됩니다.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Unlike <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> does not inherit.</source>
          <target state="translated">와 달리 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> 상속 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>If you want it to take effect for child controls, you must set it on each child control that you want mirrored.</source>
          <target state="translated">자식 컨트롤에 적용 하려는 경우 원하는 미러된 각 자식 컨트롤에 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Owner draw is not supported when <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is set to <ph id="ph2">`Yes`</ph>.</source>
          <target state="translated">소유자 그리기 없는 경우 지원 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> 로 설정 된 <ph id="ph2">`Yes`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>The owner draw events will still occur, but the behavior of any code you author in these events is not defined.</source>
          <target state="translated">소유자 그리기 이벤트가 계속 발생 하지만 이러한 이벤트에서 작성 한 코드의 동작은 정의 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Additionally, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>, and the painting events are not supported.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>, 그리기 이벤트 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> properties cause the following Win32 API window styles to be set:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> 속성 인해 다음과 같은 Win32 API 창 스타일을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> is set to <ph id="ph2">`Yes`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is set to <ph id="ph4">`true`</ph>, Windows Forms sets the <ph id="ph5">`WS_EX_LAYOUTRTL`</ph> window style, and removes the <ph id="ph6">`WS_EX_RIGHT`</ph> and <ph id="ph7">`WS_EX_RTLREADING`</ph> styles.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> 로 설정 되어 <ph id="ph2">`Yes`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> 로 설정 된 <ph id="ph4">`true`</ph>를 설정 하는 Windows Forms는 <ph id="ph5">`WS_EX_LAYOUTRTL`</ph> 창 스타일을 설정 하 고 제거는 <ph id="ph6">`WS_EX_RIGHT`</ph> 및 <ph id="ph7">`WS_EX_RTLREADING`</ph> 스타일입니다.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> is set to <ph id="ph2">`Yes`</ph> but <ph id="ph3">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is set to <ph id="ph4">`No`</ph>, Windows Forms sets the <ph id="ph5">`WS_EX_RIGHT`</ph> and <ph id="ph6">`WS_EX_RTLREADING`</ph> window styles.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> 로 설정 된 <ph id="ph2">`Yes`</ph> 하지만 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> 로 설정 되어 <ph id="ph4">`No`</ph>를 설정 하는 Windows Forms는 <ph id="ph5">`WS_EX_RIGHT`</ph> 및 <ph id="ph6">`WS_EX_RTLREADING`</ph> 창 스타일입니다.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Changing the value of this property raises the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph> event.</source>
          <target state="translated">이 속성의 값을 변경 발생는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>For more information about globalization issues, see <bpt id="p1">[</bpt>Best Practices for Developing World-Ready Applications<ept id="p1">](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md)</ept>.</source>
          <target state="translated">전역화 문제에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>지역화 대비 응용 프로그램 개발에 대 한 유용한<ept id="p1">](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>Occurs after the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /&gt;</ph> 속성 값이 변경된 후 발생합니다.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> properties are typically used in developing World-Ready applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> 속성 지역화 대비 응용 프로그램 개발에 일반적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The factor by which the height and width of the control are scaled.</source>
          <target state="translated">컨트롤의 높이와 너비 크기를 조정하는 인수입니다.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> value that specifies the bounds of the control to use when defining its size and position.</source>
          <target state="translated">컨트롤의 크기와 위치를 정의할 때 사용할 컨트롤 범위를 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Scales the location, size, padding, and margin of a control.</source>
          <target state="translated">컨트롤의 위치, 크기, 안쪽 여백 및 여백을 조정합니다.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)">
          <source>Percentage to scale the form horizontally</source>
          <target state="translated">가로로 폼의 크기를 조정할 백분율입니다.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)">
          <source>Percentage to scale the form vertically</source>
          <target state="translated">세로로 폼의 크기를 조정할 백분율입니다.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)">
          <source>Performs scaling of the form.</source>
          <target state="translated">폼의 크기를 조정합니다.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>If set to true that the active control is changed</source>
          <target state="translated">true로 설정하면 활성 컨트롤이 변경됩니다.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>If directed is true, then this controls the direction in which focus is moved.</source>
          <target state="translated">directed가 true이면 포커스가 이동하는 방향이 조절됩니다.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>If this is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, then the next control is selected; otherwise, the previous control is selected.</source>
          <target state="translated">이 값이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 다음 컨트롤이 선택되고, 그렇지 않으면 이전 컨트롤이 선택됩니다.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>Selects this form, and optionally selects the next or previous control.</source>
          <target state="translated">이 폼을 선택하고, 선택적으로 다음 또는 이전 컨트롤을 선택합니다.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>For changing focus.</source>
          <target state="translated">포커스를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">컨트롤의 새 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">컨트롤의 새 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">컨트롤의 새 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">컨트롤의 새 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Performs the work of setting the specified bounds of this control.</source>
          <target state="translated">이 컨트롤의 지정된 범위를 설정합니다.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Requested width of the client region.</source>
          <target state="translated">클라이언트 영역의 요청된 너비입니다.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Requested height of the client region.</source>
          <target state="translated">클라이언트 영역의 요청된 높이입니다.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Sets the client size of the form.</source>
          <target state="translated">폼의 클라이언트 크기를 설정합니다.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)">
          <source>This will adjust the bounds of the form to make the client size the requested size.</source>
          <target state="translated">폼의 경계를 조정하여 클라이언트 크기를 요청한 크기로 만듭니다.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the form's location.</source>
          <target state="translated">폼 위치의 x 좌표입니다.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the form's location.</source>
          <target state="translated">폼 위치의 y 좌표입니다.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The width of the form.</source>
          <target state="translated">폼의 너비입니다.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The height of the form.</source>
          <target state="translated">폼의 높이입니다.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Sets the bounds of the form in desktop coordinates.</source>
          <target state="translated">폼의 경계를 데스크톱 좌표로 설정합니다.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</source>
          <target state="translated">데스크톱 좌표로 작업 표시줄을 제외 하는 화면에서의 작업 영역을 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>You can use this method to set the position and size of your form on the desktop.</source>
          <target state="translated">데스크톱에서 폼의 크기와 위치를 설정 하려면이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</source>
          <target state="translated">데스크톱 좌표로 폼의 작업 영역을 기반으로 하므로 양식에 바탕 화면에서 완전히 표시 되는지 확인 하려면이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopBounds%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopBounds%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>To run this example, paste the following code in a form that contains a button named <ph id="ph1">`Button2`</ph>.</source>
          <target state="translated">이 예제를 실행 하려면 이라는 단추가 포함 된 폼에 다음 코드를 붙여 <ph id="ph1">`Button2`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>The x-coordinate of the form's location.</source>
          <target state="translated">폼 위치의 x 좌표입니다.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>The y-coordinate of the form's location.</source>
          <target state="translated">폼 위치의 y 좌표입니다.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>Sets the location of the form in desktop coordinates.</source>
          <target state="translated">폼의 위치를 데스크톱 좌표로 설정합니다.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</source>
          <target state="translated">데스크톱 좌표로 작업 표시줄을 제외 하는 화면에서의 작업 영역을 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>You can use this method to position your form on the desktop.</source>
          <target state="translated">폼을 배치할 바탕 화면에서이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</source>
          <target state="translated">데스크톱 좌표로 폼의 작업 영역을 기반으로 하므로 양식에 바탕 화면에서 완전히 표시 되는지 확인 하려면이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>This method is intended to be used primarily for top-level forms; use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.LayoutMdi%2A&gt;</ph> method to position multiple-document interface (MDI) child forms.</source>
          <target state="translated">이 메서드는 최상위 폼;에 주로 사용 하도록 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.LayoutMdi%2A&gt;</ph> 다중 문서 MDI (인터페이스) 자식 폼을 배치 하는 메서드.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> 멤버입니다.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>To run the example, paste the following code in a form called <ph id="ph1">`Form1`</ph> containing a button called <ph id="ph2">`Button1`</ph> and two <ph id="ph3">`Label`</ph> controls called <ph id="ph4">`Label1`</ph> and <ph id="ph5">`Label2`</ph>.</source>
          <target state="translated">예제를 실행 하려면 이라는 폼에 다음 코드를 붙여 <ph id="ph1">`Form1`</ph> 호출할 단추가 포함 된 <ph id="ph2">`Button1`</ph> 와 두 개의 <ph id="ph3">`Label`</ph> 이라는 컨트롤 <ph id="ph4">`Label1`</ph> 및 <ph id="ph5">`Label2`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to make the control visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컨트롤을 표시하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)">
          <source>Sets the control to the specified visible state.</source>
          <target state="translated">컨트롤을 지정된 표시 상태로 설정합니다.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>Any object that implements <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph> and represents the top-level window that will own this form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph>을(를) 구현하고 이 폼을 소유할 최상위 창을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>Shows the form with the specified owner to the user.</source>
          <target state="translated">사용자에게 소유자가 지정된 폼을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>You can use this method to display a non-modal form.</source>
          <target state="translated">비 모달 폼을 표시 하려면이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>When you use this method, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property of the form is set to <ph id="ph2">`owner`</ph>.</source>
          <target state="translated">이 메서드를 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> 폼의 속성이로 설정 되어 <ph id="ph2">`owner`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The non-modal form can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property to get information about the owning form.</source>
          <target state="translated">비 모달 폼 צ ְ ײ는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> 소유 양식에 대 한 정보를 가져올 속성입니다.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>Calling this method is identical to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property of the non-modal and then calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Show&gt;</ph> method.</source>
          <target state="translated">이 메서드를 호출 하는 것은 동일한 설정으로는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> 비 모달의 속성과 다음 호출는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Show&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>Showing the form is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">폼을 표시 설정에 해당 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>After the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property returns a value of <ph id="ph3">`true`</ph> until the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method is called.</source>
          <target state="translated">후의 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> 메서드가 호출 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> 속성의 값을 반환 <ph id="ph3">`true`</ph> 될 때까지 <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is already visible.</source>
          <target state="translated">표시될 폼이 이미 표시되어 있는 경우</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form specified in the <ph id="ph1">&lt;paramref name="owner" /&gt;</ph> parameter is the same as the form being shown.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owner" /&gt;</ph> 매개 변수에 지정된 폼이 표시된 폼과 같은 경우</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is disabled.</source>
          <target state="translated">표시될 폼을 사용할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is not a top-level window.</source>
          <target state="translated">표시될 폼이 최상위 창이 아닌 경우</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form being shown as a dialog box is already a modal form.</source>
          <target state="translated">대화 상자로 표시될 폼이 이미 모달 폼인 경우</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The current process is not running in user interactive mode (for more information, see <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>).</source>
          <target state="translated">현재 프로세스가 사용자 대화형 모드에서 실행되고 있지 않은 경우. 자세한 내용은 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Form">
          <source>Shows the form as a modal dialog box.</source>
          <target state="translated">폼을 모달 대화 상자로 표시합니다.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Shows the form as a modal dialog box.</source>
          <target state="translated">폼을 모달 대화 상자로 표시합니다.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>You can use this method to display a modal dialog box in your application.</source>
          <target state="translated">응용 프로그램에 모달 대화 상자를 표시 하려면이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>When this method is called, the code following it is not executed until after the dialog box is closed.</source>
          <target state="translated">이 메서드가 호출 되 면 대화 상자를 닫은 후 뒤에 나오는 코드 될 때까지 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The dialog box can be assigned one of the values of the <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> enumeration by assigning it to the <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> on the form or by setting the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form in code.</source>
          <target state="translated">대화 상자 할당할 수의 값 중 하나는 <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> 열거형에 할당는 <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 는 폼 또는 설정 하 여는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 코드에서 폼의 속성입니다.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>This value is then returned by this method.</source>
          <target state="translated">이 값은 다음이 메서드에 의해 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>You can use this return value to determine how to process the actions that occurred in the dialog box.</source>
          <target state="translated">대화 상자에서 발생 한 동작을 처리할 방법을 결정 하기 위해이 반환 값을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>For example, if the dialog box was closed and returned the <ph id="ph1">`DialogResult.Cancel`</ph> value through this method, you could prevent code following the call to <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> from executing.</source>
          <target state="translated">예를 들어 대화 상자가 닫히고 반환 되는 <ph id="ph1">`DialogResult.Cancel`</ph> 값이이 메서드를 통해 코드를 호출 하면 못하게 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 에서 실행 합니다.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">폼을 모달 대화 상자로 표시 되 면 클릭 하 고 <bpt id="p1">**</bpt>닫기<ept id="p1">**</ept> 단추 (x 폼의 오른쪽 위 모서리에 있는 단추)를 사용 하면 양식을 숨길 및 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 속성으로 설정 됩니다 <ph id="ph2">`DialogResult.Cancel`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Unlike non-modal forms, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property.</source>
          <target state="translated">비 모달 폼 달리는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> 대화 상자 닫기 폼 단추를 클릭 하거나의 값을 설정 하는 경우.NET Framework에서 메서드가 호출 되지 않습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</source>
          <target state="translated">대신 폼 숨겨져 있고 대화 상자의 새 인스턴스를 만들지 않고 다시 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Because a form displayed as a dialog box is hidden instead of closed, you must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the form when the form is no longer needed by your application.</source>
          <target state="translated">호출 해야 대신 종료 하는 대화 상자가 모음이 숨겨진 표시 된 폼을 하기 때문에 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> 폼은 더 이상 필요 없는 응용 프로그램에서 폼의 메서드.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method does not specify a form or control as its owner.</source>
          <target state="translated">이 버전의는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드로 지정 하지 않습니다는 폼 이나 컨트롤의 소유자입니다.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>When this version is called, the currently active window is made the owner of the dialog box.</source>
          <target state="translated">이 버전 호출 될 때 현재 활성 창의 대화 상자의 소유자를 이루어집니다.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>If you want to specify a specific owner, use the other version of this method.</source>
          <target state="translated">특정 소유자를 지정 하려는 경우이 방법의 다른 버전을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control on the dialog box form.</source>
          <target state="translated">다음 코드 예제에서는 폼을 모달 대화 상자로 표시 하 고 값을 읽을 것인지 결정 하기 전에 대화 상자의 반환 값을 평가 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 대화 상자 폼에서 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`testDialog`</ph> is created and that it contains a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph4">`TextBox1`</ph>.</source>
          <target state="translated">이 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`testDialog`</ph> 만들어집니다 및 포함 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 라는 컨트롤 <ph id="ph4">`TextBox1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Furthermore, the example requires that code in this example is contained and called from a different <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> in order to display <ph id="ph2">`testDialog`</ph> as a modal dialog box.</source>
          <target state="translated">이 예제에서는 하기 위해서는 또한이 예제 코드에서는 다른 호출에 포함 된를 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 표시 하기 위해 <ph id="ph2">`testDialog`</ph> 모달 대화 상자로 합니다.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The example uses the version of <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> that specifies an owner for the dialog box.</source>
          <target state="translated">이 예제에서는 버전을 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 대화 상자에 대 한 소유자를 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The form being shown is already visible.</source>
          <target state="translated">표시될 폼이 이미 표시되어 있는 경우</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The form being shown is disabled.</source>
          <target state="translated">표시될 폼을 사용할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The form being shown is not a top-level window.</source>
          <target state="translated">표시될 폼이 최상위 창이 아닌 경우</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The form being shown as a dialog box is already a modal form.</source>
          <target state="translated">대화 상자로 표시될 폼이 이미 모달 폼인 경우</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The current process is not running in user interactive mode (for more information, see <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>).</source>
          <target state="translated">현재 프로세스가 사용자 대화형 모드에서 실행되고 있지 않은 경우. 자세한 내용은 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Any object that implements <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph> that represents the top-level window that will own the modal dialog box.</source>
          <target state="translated">모달 대화 상자를 소유할 최상위 창을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph>을(를) 구현하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Shows the form as a modal dialog box with the specified owner.</source>
          <target state="translated">폼을 지정된 소유자가 있는 모달 대화 상자로 표시합니다.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>You can use this method to display a modal dialog box in your application.</source>
          <target state="translated">응용 프로그램에 모달 대화 상자를 표시 하려면이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>When this method is called, the code following it is not executed until after the dialog box is closed.</source>
          <target state="translated">이 메서드가 호출 되 면 대화 상자를 닫은 후 뒤에 나오는 코드 될 때까지 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The dialog box can be assigned one of the values of <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> by assigning it to the <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> on the form or by setting the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form in code.</source>
          <target state="translated">값 중 하나는 대화 상자를 할당할 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> 에 할당 하 여는 <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 는 폼 또는 설정 하 여는 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 코드에서 폼의 속성입니다.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>This value is then returned by this method.</source>
          <target state="translated">이 값은 다음이 메서드에 의해 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>You can use this return value to determine how to process the actions that occurred in the dialog box.</source>
          <target state="translated">대화 상자에서 발생 한 동작을 처리할 방법을 결정 하기 위해이 반환 값을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>For example, if the dialog box was closed and returned the <ph id="ph1">`DialogResult.Cancel`</ph> value through this method, you could prevent code following the call to <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> from executing.</source>
          <target state="translated">예를 들어 대화 상자가 닫히고 반환 되는 <ph id="ph1">`DialogResult.Cancel`</ph> 값이이 메서드를 통해 코드를 호출 하면 못하게 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 에서 실행 합니다.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">폼을 모달 대화 상자로 표시 되 면 클릭 하 고 <bpt id="p1">**</bpt>닫기<ept id="p1">**</ept> 단추 (x 폼의 오른쪽 위 모서리에 있는 단추)를 사용 하면 양식을 숨길 및 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 속성으로 설정 됩니다 <ph id="ph2">`DialogResult.Cancel`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Unlike modeless forms, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property.</source>
          <target state="translated">모덜리스 폼과 달리는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> 대화 상자 닫기 폼 단추를 클릭 하거나의 값을 설정 하는 경우.NET Framework에서 메서드가 호출 되지 않습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</source>
          <target state="translated">대신 폼 숨겨져 있고 대화 상자의 새 인스턴스를 만들지 않고 다시 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Because a form displayed as a dialog box is hidden instead of closed, you must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the form when the form is no longer needed by your application.</source>
          <target state="translated">호출 해야 대신 종료 하는 대화 상자가 모음이 숨겨진 표시 된 폼을 하기 때문에 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> 폼은 더 이상 필요 없는 응용 프로그램에서 폼의 메서드.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method allows you to specify a specific form that will own the dialog box that is shown.</source>
          <target state="translated">이 버전의는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드를 사용 하는 표시 되는 대화 상자를 소유 하는 특정 모양을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control on the dialog box form.</source>
          <target state="translated">다음 코드 예제에서는 폼을 모달 대화 상자로 표시 하 고 값을 읽을 것인지 결정 하기 전에 대화 상자의 반환 값을 평가 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 대화 상자 폼에서 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form2`</ph> is created and that it contains a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph4">`TextBox1`</ph>.</source>
          <target state="translated">이 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form2`</ph> 만들어집니다 및 포함 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 라는 컨트롤 <ph id="ph4">`TextBox1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The example uses the version of <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> that specifies an owner for the dialog box.</source>
          <target state="translated">이 예제에서는 버전을 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 대화 상자에 대 한 소유자를 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form specified in the <ph id="ph1">&lt;paramref name="owner" /&gt;</ph> parameter is the same as the form being shown.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owner" /&gt;</ph> 매개 변수에 지정된 폼이 표시된 폼과 같은 경우</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is already visible.</source>
          <target state="translated">표시될 폼이 이미 표시되어 있는 경우</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is disabled.</source>
          <target state="translated">표시될 폼을 사용할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is not a top-level window.</source>
          <target state="translated">표시될 폼이 최상위 창이 아닌 경우</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form being shown as a dialog box is already a modal form.</source>
          <target state="translated">대화 상자로 표시될 폼이 이미 모달 폼인 경우</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The current process is not running in user interactive mode (for more information, see <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>).</source>
          <target state="translated">현재 프로세스가 사용자 대화형 모드에서 실행되고 있지 않은 경우. 자세한 내용은 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.</source>
          <target state="translated">폼의 캡션 표시줄에 아이콘이 표시되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form displays an icon in the caption bar; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">폼의 캡션 표시줄에 아이콘이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph> property contains a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Icon%2A&gt;</ph> is displayed in the caption bar of the form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph> 속성 포함 한 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 나타내는 값 여부를 폼의 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Icon%2A&gt;</ph> 폼의 캡션 표시줄에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, both the icon and control box will be suppressed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>, 아이콘과 컨트롤 상자는 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph> is <ph id="ph2">`false`</ph> when the primary form is shown, a generic icon will be displayed in the taskbar button for the application.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph> 은 <ph id="ph2">`false`</ph> 일반 아이콘 기본 폼이 표시 되 면 응용 프로그램에 대 한 작업 표시줄 단추에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>This property has no effect if <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>.</source>
          <target state="translated">경우에이 속성이 적용 되지 않습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>In that case, the form does not display an icon.</source>
          <target state="translated">이 경우 폼 아이콘이 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>Gets or sets a value indicating whether the form is displayed in the Windows taskbar.</source>
          <target state="translated">폼이 Windows 작업 표시줄에 표시되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display the form in the Windows taskbar at run time; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">런타임에 폼을 Windows 작업 표시줄에 표시하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>If a form is parented within another form, the parented form is not displayed in the Windows taskbar.</source>
          <target state="translated">다른 폼 내에서 폼 부모가 부모로 지정된 된 폼을 Windows 작업 표시줄에 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>You can use this property to prevent users from selecting your form through the Windows taskbar.</source>
          <target state="translated">사용자가 해당 폼 Windows 작업 표시줄을 선택 하지 못하도록 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.</source>
          <target state="translated">예를 들어 응용 프로그램에서 찾기 및 바꾸기 도구 창을 표시는 경우 해당 창 응용 프로그램의 주 창 및 찾기 및 바꾸기 도구 창 모두에 필요 하기 때문에 Windows 작업 표시줄 선택 하지 않도록 설정 하려면 검색 하려면 적절 하 게 표시 합니다.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>You will often wish to use this property when creating a form with the <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph> style.</source>
          <target state="translated">폼을 만들 때이 속성을 사용 하려면 자주는 <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph> 스타일입니다.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph> style does not alone guarantee that a window will not appear in the taskbar.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph> 스타일 것 만으로 창을 작업 표시줄에 표시 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowInTaskbar%2A&gt;</ph> property to make a dialog box that is not displayed in the Windows taskbar.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowInTaskbar%2A&gt;</ph> 속성 대화 상자을 Windows 작업 표시줄에 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Shown">
          <source>Occurs whenever the form is first displayed.</source>
          <target state="translated">폼이 처음 표시될 때마다 발생합니다.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> 이후에 최소화, 최대화, 복원, 숨기기, 표시 또는 무효화 및 다시 그리기는이 이벤트가 발생 하지 않으면 이벤트는 처음으로 양식을 표시 하는 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>For more information about the order of events of a form, see <bpt id="p1">[</bpt>Order of Events in Windows Forms<ept id="p1">](~/docs/framework/winforms/order-of-events-in-windows-forms.md)</ept>.</source>
          <target state="translated">폼의 이벤트 순서에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms에서 이벤트의 순서<ept id="p1">](~/docs/framework/winforms/order-of-events-in-windows-forms.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>Gets a value indicating whether the window will be activated when it is shown.</source>
          <target state="translated">창이 표시될 때 활성화할지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the window will not be activated when it is shown; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">창이 표시될 때 활성화되지 않으면 <ph id="ph1">&lt;see langword="True" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window.</source>
          <target state="translated">최상위 창을 표시 하려고 하지만 현재 창에서 입력된 포커스를 수행 하 여 사용자의 작업을 중단 하지 않으려는 경우이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.</source>
          <target state="translated">이 정보 팝업 창이 또는 도구 팔레트 그리기 응용 프로그램에서 같은 부동 창 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>Because this property is read-only, you can only change its value by overriding <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowWithoutActivation%2A&gt;</ph> in your own form, and programming it to return <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 속성이 읽기 전용 이므로 변경할 수 있습니다만 해당 값 재정의 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowWithoutActivation%2A&gt;</ph> 사용자 지정 폼 및에 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>If your non-activated window needs to use UI controls, you should consider using the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls, such as <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripDropDown&gt;</ph>.</source>
          <target state="translated">사용을 고려해 야 하면 활성화 되지 않은 창 UI 컨트롤을 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> 와 같은 컨트롤 <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripDropDown&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>These controls are windowless, and will not cause a window to activate when they are selected.</source>
          <target state="translated">이러한 컨트롤은 창 없는, 되며 창이 선택할 때 활성화 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Size">
          <source>Gets or sets the size of the form.</source>
          <target state="translated">폼의 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the size of the form.</source>
          <target state="translated">폼의 크기를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> properties individually.</source>
          <target state="translated">이 속성을 사용 하면 설정 하는 대신 동시에 높이 너비 (픽셀 단위)는 폼의 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> 속성 개별적으로 합니다.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>If you want to set the size and location of a form, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DesktopBounds%2A&gt;</ph> property to size and locate the form based on desktop coordinates or use the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> class to set the size and location of the form based on screen coordinates.</source>
          <target state="translated">폼의 위치와 크기를 설정 하려는 경우 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DesktopBounds%2A&gt;</ph> 데스크톱 좌표 또는 사용을 기반으로 하 고 양식을 찾습니다 크기 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> 화면 좌표계에 따라 폼의 위치와 크기를 설정 하는 클래스 inates 합니다.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The maximum value of this property is limited by the resolution of the screen on which the form runs.</source>
          <target state="translated">이 속성의 최대값은 폼 실행 되는 화면 해상도로 제한 됩니다.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).</source>
          <target state="translated">값 (예: 가로 + 12, 세로 + 12) 각 화면 크기 보다 12 픽셀 보다 클 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>On Pocket PC devices, you can create a resizable window by setting <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> to <ph id="ph2">`None`</ph> and removing any <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> control.</source>
          <target state="translated">Pocket PC 장치에서 설정 하 여 크기 조정 가능한 창을 만들 수 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> 를 <ph id="ph2">`None`</ph> 모두 제거 하 고 <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>On SmartPhone devices, you can never resize a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> - it will always fill the entire screen.</source>
          <target state="translated">SmartPhone 장치에서 되지 크기를 조정할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> -전체 화면을 항상 채웁니다.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</source>
          <target state="translated">다음 코드 예제에서는 75%의 불투명도로 표시 되는 양식을 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The example code creates a new form that is positioned in the center of the screen with an <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property set to change the opacity level of the form.</source>
          <target state="translated">예제 코드와 함께 화면의 가운데에 배치 하는 새 양식을 만듭니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> 속성 폼의 불투명도 수준을 변경 하려면 설정 합니다.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The example code also sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property to provide a larger sized form than the default size of the form.</source>
          <target state="translated">예제 코드는 또한 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> 속성을 더 큰 폼의 기본 크기 보다 폼 크기가 조정 합니다.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>This example requires that the method defined in this example is called from another form in an event handler or other method.</source>
          <target state="translated">이 예제에서는 이벤트 처리기 또는 다른 방법의 다른 폼에서이 예제에 정의 된 메서드가 호출 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>Gets or sets the style of the size grip to display in the lower-right corner of the form.</source>
          <target state="translated">폼의 오른쪽 아래 모퉁이에 표시할 크기 조정 핸들의 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.SizeGripStyle" /&gt;</ph> that represents the style of the size grip to display.</source>
          <target state="translated">표시할 크기 조정 그립의 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.SizeGripStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /&gt;</ph></source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>This property enables you to determine when the sizing grip is displayed on the form.</source>
          <target state="translated">이 속성을 사용 하면 크기 조정 그립 폼에 표시 되는 시기를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property.</source>
          <target state="translated">크기 조정 그립을 표시 하거나의 설정에 따라이 자동으로 표시 한이 속성을 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>The following code example demonstrates how to hide the size grip for a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> when the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> is not resizable.</source>
          <target state="translated">다음 코드 예제에 대 한 크기 조정 그립을 숨기는 방법에는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 때는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> 는 조정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">지정된 값이 유효한 값 범위를 벗어난 경우</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>Gets or sets the starting position of the form at run time.</source>
          <target state="translated">런타임에 폼의 시작 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormStartPosition" /&gt;</ph> that represents the starting position of the form.</source>
          <target state="translated">폼의 시작 위치를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormStartPosition" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>This property enables you to set the starting position of the form when it is displayed at run time.</source>
          <target state="translated">이 속성을 사용 하면 런타임 시 표시 될 때 폼의 시작 위치를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The form’s position can be specified manually by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property or use the default location specified by Windows.</source>
          <target state="translated">폼의 위치를 설정 하 여 수동으로 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> 속성 또는 Windows가 지정한 기본 위치를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.</source>
          <target state="translated">다중 문서 MDI (인터페이스) 자식 폼과 같은 폼은 부모 폼의 중심 또는 화면 중앙에 표시 하려면 폼을 배치할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>This property should be set before the form is shown.</source>
          <target state="translated">폼이 표시 되기 전에이 속성을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>You can set this property before you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method or in your form's constructor.</source>
          <target state="translated">호출 하기 전에이 속성을 설정할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드 또는 폼의 생성자입니다.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">다음 코드 예제에서는의 새 인스턴스를 만듭니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 호출과 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> 메서드를 폼으로 대화 상자 표시 합니다.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> 대화 상자에 표시 되는 모양 및 폼의 기능을 변경 하려면 속성입니다.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">또한이 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> 메서드가 폼의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> 두 개를 추가할 컬렉션 <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">이 예제에서는 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> 속성을 대화 상자의 캡션 표시줄에 도움말 단추를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">지정된 값이 유효한 값 범위를 벗어난 경우</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TabIndex">
          <source>Gets or sets the tab order of the control within its container.</source>
          <target state="translated">컨트롤 컨테이너 내의 컨트롤 탭 순서를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabIndex">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the index of the control within the set of controls within its container that is included in the tab order.</source>
          <target state="translated">컨트롤 컨테이너 내의 컨트롤 집합(탭 순서로 포함)에 있는 컨트롤 인덱스를 포함하는 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabIndex">
          <source>Forms are not included in the tab order.</source>
          <target state="translated">Forms 탭 순서에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabIndex">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TabIndex%2A&gt;</ph> property does nothing.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TabIndex%2A&gt;</ph> 속성은 아무 작업도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.TabIndexChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.TabIndex" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.TabIndex" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TabStop">
          <source>Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</source>
          <target state="translated">Tab 키를 사용하여 이 컨트롤의 포커스를 이동할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabStop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can give the focus to the control using the TAB key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Tab 키를 사용하여 컨트롤의 포커스를 이동할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabStop">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.TabStopChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.TabStop" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.TabStop" /&gt;</ph> 속성이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Text">
          <source>Gets or sets the text associated with this control.</source>
          <target state="translated">이 컨트롤과 관련된 텍스트를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Text">
          <source>The text associated with this control.</source>
          <target state="translated">이 컨트롤과 관련된 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>Gets or sets a value indicating whether to display the form as a top-level window.</source>
          <target state="translated">폼을 최상위 창으로 표시할지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display the form as a top-level window; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">폼을 최상위 창으로 표시하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>A top-level form is a window that has no parent form, or whose parent form is the desktop window.</source>
          <target state="translated">최상위 폼에는 창 있는 부모 폼이 없는, 또는 해당 부모 폼은 데스크톱 창입니다.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>Top-level windows are typically used as the main form in an application.</source>
          <target state="translated">최상위 창에서 응용 프로그램 기본 폼으로 일반적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>The following code example use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Modal%2A&gt;</ph> property to determine if a form is displayed as a modal form.</source>
          <target state="translated">다음 코드 예제에서 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Modal%2A&gt;</ph> 속성 폼을 모달 폼으로 표시 되는지 확인을 합니다.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>If it is not the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph> properties are changed to make the form non-top-level form with a tool window border.</source>
          <target state="translated">없는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph> 속성 폼 하위 수준의 폼 도구 창 테두리도 변경 됩니다.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>A Multiple-document interface (MDI) parent form must be a top-level window.</source>
          <target state="translated">MDI(다중 문서 인터페이스) 부모 폼이 최상위 창이어야 하는 경우</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TopMost">
          <source>Gets or sets a value indicating whether the form should be displayed as a topmost form.</source>
          <target state="translated">폼을 맨 위 폼으로 표시할지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display the form as a topmost form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">폼을 맨 위 폼으로 표시하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form.</source>
          <target state="translated">맨 위 폼은 활성 또는 전경 폼 폼이 아닌 경우에 다른 (맨 위) 폼을 합니다.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop.</source>
          <target state="translated">맨 위 폼의 windows 바탕 화면에 z-순서에서 가장 높은 지점에 항상 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.</source>
          <target state="translated">찾기 및 바꾸기 도구 창과 같은 응용 프로그램에 항상 표시 되는 폼을 만들려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The following code example demonstrates how to create a topmost form.</source>
          <target state="translated">다음 코드 예제에서는 폼을 맨 위를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The example creates two forms, one that is maximized and one that will be displayed as a topmost form.</source>
          <target state="translated">이 예제에서는 두 가지 형태, 최대화 하 고 다른 하나는 맨 위 폼으로 표시 됩니다 만듭니다.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The first form, named <ph id="ph1">`bottomForm`</ph>, is displayed maximized, using the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property, to better demonstrate the abilities of the topmost form.</source>
          <target state="translated">명명 된 첫 번째 형태에서 <ph id="ph1">`bottomForm`</ph>, 최대화, 사용 하 여 표시 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> 맨 위 폼의 기능을 더 잘 보여 주기 위해 속성.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The second form, named <ph id="ph1">`topMostForm`</ph>, sets the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopMost%2A&gt;</ph> property to <ph id="ph3">`true`</ph> to display the form as a topmost form.</source>
          <target state="translated">라는 두 번째 형태 <ph id="ph1">`topMostForm`</ph>, 설정는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopMost%2A&gt;</ph> 속성을 <ph id="ph3">`true`</ph> 맨 위 폼으로 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>When this code is run, clicking on the maximized form will not cause the topmost form to be displayed below the maximized form.</source>
          <target state="translated">이 코드가 실행 되 면에서 최대화 된 폼을 클릭 하 발생 하지 않습니다 맨 위 폼 최대화 된 폼 아래 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The example requires that the method defined in the example is called from another form.</source>
          <target state="translated">이 예제에서는 다른 폼에서이 예제에 정의 된 메서드가 호출 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ToString">
          <source>Gets a string representing the current instance of the form.</source>
          <target state="translated">폼의 현재 인스턴스를 나타내는 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ToString">
          <source>A string consisting of the fully qualified name of the form object's class, with the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Text" /&gt;</ph> property of the form appended to the end.</source>
          <target state="translated">폼 개체의 정규화된 클래스 이름과 폼의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Text" /&gt;</ph> 속성으로 구성된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ToString">
          <source>For example, if the form is derived from the class <bpt id="p1">&lt;c&gt;</bpt>MyForm<ept id="p1">&lt;/c&gt;</ept> in the <bpt id="p2">&lt;c&gt;</bpt>MyNamespace<ept id="p2">&lt;/c&gt;</ept> namespace, and the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Text" /&gt;</ph> property is set to <bpt id="p3">&lt;c&gt;</bpt>Hello, World<ept id="p3">&lt;/c&gt;</ept>, this method will return <bpt id="p4">&lt;c&gt;</bpt>MyNamespace.MyForm, Text: Hello, World<ept id="p4">&lt;/c&gt;</ept>.</source>
          <target state="translated">예를 들어 폼이 <bpt id="p2">&lt;c&gt;</bpt>MyNamespace<ept id="p2">&lt;/c&gt;</ept> 네임스페이스의 <bpt id="p1">&lt;c&gt;</bpt>MyForm<ept id="p1">&lt;/c&gt;</ept> 클래스에서 파생되고 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Text" /&gt;</ph> 속성이 <bpt id="p3">&lt;c&gt;</bpt>Hello, World<ept id="p3">&lt;/c&gt;</ept>로 설정된 경우 이 메서드에서는 <bpt id="p4">&lt;c&gt;</bpt>MyNamespace.MyForm, Text: Hello, World<ept id="p4">&lt;/c&gt;</ept>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>Gets or sets the color that will represent transparent areas of the form.</source>
          <target state="translated">폼의 투명 영역을 나타내는 색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the color to display transparently on the form.</source>
          <target state="translated">폼에 투명하게 표시할 색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property is assigned a <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph>, the areas of the form that have the same <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> will be displayed transparently.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> 속성에 할당 되는 <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph>, 동일한 폼의 영역 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> 투명 하 게 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area.</source>
          <target state="translated">모든 마우스 작업을 마우스 클릭과 같은 폼의 투명 영역에서 수행 되는 투명 한 영역 아래의 창으로 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it.</source>
          <target state="translated">예를 들어 폼의 클라이언트 영역와 투명 하 게 수행 해당 영역에서 마우스를 클릭 하는 보내기 클릭에 대 한 이벤트 알림을 창 아래에 있습니다.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>If the color assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property is the same as any controls on the form, they also will be displayed transparently.</source>
          <target state="translated">색에 할당 된 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> 속성 폼에 있는 모든 컨트롤와 같은지도 표시 될 투명 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>For example, if you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control on a form that has its <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property set to <ph id="ph3">`SystemColors.Control`</ph>, the control will be displayed transparently unless the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph> control is changed to a different color.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 양식에 있는 컨트롤의 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> 속성이로 설정 <ph id="ph3">`SystemColors.Control`</ph>, 컨트롤은 투명 하 게 않은 경우 표시는 <ph id="ph4">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> 속성의는 <ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤을 다른 색으로 변경 됩니다.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>This property is not supported when <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 속성은 실행할 수 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>The following code example creates a window that has a transparent client region regardless of background color of the form.</source>
          <target state="translated">다음 코드 예제에는 폼의 배경색에 관계 없이 투명 한 클라이언트 영역을 포함 하는 창을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>This example requires that the example method is defined within a form class.</source>
          <target state="translated">이 예제에서는 메서드 예제 양식 클래스 내에서 정의 되어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.UpdateDefaultButton">
          <source>Updates which button is the default button.</source>
          <target state="translated">기본 단추로 사용되는 단추를 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.UpdateDefaultButton">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.UpdateDefaultButton%2A&gt;</ph> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.UpdateDefaultButton%2A&gt;</ph> 메서드 확인 폼에 단추를 다음 우선 순위에 따라 사용자가 ENTER를 누를 때 Click 이벤트를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.UpdateDefaultButton">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property implements the <ph id="ph2">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> interface, that control is the default button.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> 속성이 구현 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> 인터페이스, 제어 기본 단추 인지 합니다.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.UpdateDefaultButton">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> property is the default button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> 속성 기본 단추입니다.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Form">
          <source>Validates all selectable child controls in the form.</source>
          <target state="translated">폼에서 선택할 수 있는 모든 자식 컨트롤의 유효성을 검사합니다.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren">
          <source>Causes all of the child controls within a control that support validation to validate their data.</source>
          <target state="translated">컨트롤 내에서 유효성 검사를 지원하는 모든 자식 컨트롤이 해당 데이터의 유효성을 검사하도록 합니다.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all of the children validated successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">모든 자식의 유효성을 검사했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 검사하지 못했으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren">
          <source>If called from the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> event handlers, this method will always return <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> 이벤트 처리기에서 호출된 경우 항상 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
          <source>Places restrictions on which controls have their <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> event raised.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> 이벤트가 발생한 컨트롤을 제한합니다.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
          <source>Causes all of the child controls within a control that support validation to validate their data.</source>
          <target state="translated">컨트롤 내에서 유효성 검사를 지원하는 모든 자식 컨트롤이 해당 데이터의 유효성을 검사하도록 합니다.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all of the children validated successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">모든 자식의 유효성을 검사했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 검사하지 못했으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
          <source>If called from the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> event handlers, this method will always return <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> 이벤트 처리기에서 호출된 경우 항상 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.WindowState">
          <source>Gets or sets a value that indicates whether form is minimized, maximized, or normal.</source>
          <target state="translated">폼을 최소화하거나 최대화할지, 또는 보통 크기로 할지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormWindowState" /&gt;</ph> that represents whether form is minimized, maximized, or normal.</source>
          <target state="translated">폼이 최소화, 최대화 또는 표준인지를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormWindowState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>The default is <ph id="ph1">&lt;see langword="FormWindowState.Normal" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="FormWindowState.Normal" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>Before a form is displayed, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property is always set to <ph id="ph2">`FormWindowState.Normal`</ph>, regardless of its initial setting.</source>
          <target state="translated">폼이 표시 되기 전에 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> 항상 속성이 <ph id="ph2">`FormWindowState.Normal`</ph>초기 설정에 관계 없이 합니다.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>This is reflected in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> property settings.</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> 속성 설정 합니다.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property.</source>
          <target state="translated">표시 된 후 폼이 나타나지 않으면 이러한 속성을 변경 해도 다시 폼이 표시 될 때까지 이전 상태로 반영 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> to maximized.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> 를 최대화 합니다.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>The code is called from the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event handler after the form has been created.</source>
          <target state="translated">코드에서 호출 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> 폼이 만들어진 후 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.WindowState">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">지정된 값이 유효한 값 범위를 벗어난 경우</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">처리할 Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)">
          <source>Processes Windows messages.</source>
          <target state="translated">Windows 메시지를 처리합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>