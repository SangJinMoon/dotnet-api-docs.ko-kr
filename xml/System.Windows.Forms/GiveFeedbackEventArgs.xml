<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GiveFeedbackEventArgs.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac512f265db3dd1cb80acb417f31b0359c3e40d85c3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12f265db3dd1cb80acb417f31b0359c3e40d85c3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GiveFeedback" /&gt;</ph> event, which occurs during a drag operation.</source>
          <target state="translated">끌기 작업 중에 발생하는 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GiveFeedback" /&gt;</ph> 이벤트에 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event occurs during a drag operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> 이벤트는 끌기 작업 중에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</source>
          <target state="translated">끌어서 놓기 작업 중 사용자의 시각적 피드백을 제공 하기 위해 마우스 포인터의 모양을 수정 하려면 끌기 이벤트의 소스 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph> object specifies the type of drag-and-drop operation and whether default cursors are used.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph> 개체에는 기본 커서의 사용 여부 및 끌어서 놓기 작업의 유형을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>For information about the event model, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트 모델에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The following example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">다음 예제에서는 두 끌어서 놓기 작업 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">예제에서는 호출은 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 끌기 작업이 시작 될 때 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> 하는 동안 마우스 위치에서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 <ph id="ph2">`MouseDown`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The example assumes that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">이 예에서는 두 가정 커서 파일 <ph id="ph1">`3dwarro.cur`</ph> 및 <ph id="ph2">`3dwno.cur`</ph>, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">사용자 지정 커서 사용 하는 경우는 <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">에 설정 된 사용자 지정 커서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">키보드 상태에서 평가 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 오른쪽에 대 한 이벤트 처리기 <ph id="ph2">`ListBox`</ph>항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">위치는 <ph id="ph1">`ListBox`</ph> 삭제가 발생 중도 결정 됩니다는 <ph id="ph2">`DragOver`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">삭제할 데이터가 아닌 경우는 <ph id="ph1">`String`</ph>, 하면 <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">드롭다운 상태에 표시 되는 마지막으로,는 <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">데이터를 오른쪽에 대 한 drop <ph id="ph1">`ListBox`</ph> 에 따라 결정 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> 이벤트 처리기 및 <ph id="ph3">`String`</ph> 적절 한 위치에서 값이 추가 <ph id="ph4">`ListBox`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph> class.</source>
          <target state="translated">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 전체 코드 예제에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)">
          <source>The type of drag-and-drop operation.</source>
          <target state="translated">끌어서 놓기 작업의 형식입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)">
          <source>Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph>.</source>
          <target state="translated">가능한 값은 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph>에 정의된 상수에 비트 OR(|) 연산을 적용하여 얻습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if default pointers are used; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본 포인터가 사용되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>Gets the drag-and-drop operation feedback that is displayed.</source>
          <target state="translated">표시된 끌어서 놓기 작업 피드백을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The following example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">다음 예제에서는 두 끌어서 놓기 작업 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">예제에서는 호출은 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 끌기 작업이 시작 될 때 메서드.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> 하는 동안 마우스 위치에서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 <ph id="ph2">`MouseDown`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The example assumes that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">이 예에서는 두 가정 커서 파일 <ph id="ph1">`3dwarro.cur`</ph> 및 <ph id="ph2">`3dwno.cur`</ph>, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">사용자 지정 커서 사용 하는 경우는 <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">에 설정 된 사용자 지정 커서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">키보드 상태에서 평가 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 오른쪽에 대 한 이벤트 처리기 <ph id="ph2">`ListBox`</ph>항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">위치는 <ph id="ph1">`ListBox`</ph> 삭제가 발생 중도 결정 됩니다는 <ph id="ph2">`DragOver`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">삭제할 데이터가 아닌 경우는 <ph id="ph1">`String`</ph>, 하면 <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">드롭다운 상태에 표시 되는 마지막으로,는 <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">데이터를 오른쪽에 대 한 drop <ph id="ph1">`ListBox`</ph> 에 따라 결정 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> 이벤트 처리기 및 <ph id="ph3">`String`</ph> 적절 한 위치에서 값이 추가 <ph id="ph4">`ListBox`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph> class.</source>
          <target state="translated">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 전체 코드 예제에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.</source>
          <target state="translated">끌기 작업에서 끌어서 놓기 작업에 관련된 기본 커서를 사용해야 하는지를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the default pointers are used; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본 포인터가 사용되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The system provides default drag-drop cursors for different drag-drop operations such as move or copy.</source>
          <target state="translated">시스템 기본 끌어서 놓기 커서 이동 또는 복사와 같은 다양 한 끌어서 놓기 작업을 제공합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, it is the responsibility of the event source to set the appropriate cursor.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A&gt;</ph> 로 설정 된 <ph id="ph2">`false`</ph>, 이벤트 소스의 적절 한 커서를 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The following example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">다음 예제에서는 두 끌어서 놓기 작업 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">예제에서는 호출은 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 끌기 작업이 시작 될 때 메서드.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> 하는 동안 마우스 위치에서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 <ph id="ph2">`MouseDown`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The example assumes that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">이 예에서는 두 가정 커서 파일 <ph id="ph1">`3dwarro.cur`</ph> 및 <ph id="ph2">`3dwno.cur`</ph>, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">사용자 지정 커서 사용 하는 경우는 <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">에 설정 된 사용자 지정 커서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">키보드 상태에서 평가 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 오른쪽에 대 한 이벤트 처리기 <ph id="ph2">`ListBox`</ph>항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">위치는 <ph id="ph1">`ListBox`</ph> 삭제가 발생 중도 결정 됩니다는 <ph id="ph2">`DragOver`</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">삭제할 데이터가 아닌 경우는 <ph id="ph1">`String`</ph>, 하면 <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">드롭다운 상태에 표시 되는 마지막으로,는 <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">데이터를 오른쪽에 대 한 drop <ph id="ph1">`ListBox`</ph> 에 따라 결정 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> 이벤트 처리기 및 <ph id="ph3">`String`</ph> 적절 한 위치에서 값이 추가 <ph id="ph4">`ListBox`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph> class.</source>
          <target state="translated">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> 전체 코드 예제에 대 한 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>