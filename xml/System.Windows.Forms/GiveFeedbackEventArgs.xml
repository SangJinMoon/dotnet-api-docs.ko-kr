<Type Name="GiveFeedbackEventArgs" FullName="System.Windows.Forms.GiveFeedbackEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12f265db3dd1cb80acb417f31b0359c3e40d85c3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GiveFeedbackEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GiveFeedbackEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.GiveFeedbackEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class GiveFeedbackEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class GiveFeedbackEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6cf2b-101">끌기 작업 중에 발생하는 <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> 이벤트에 데이터를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6cf2b-101">Provides data for the <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> event, which occurs during a drag operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf2b-102"><xref:System.Windows.Forms.Control.GiveFeedback> 이벤트는 끌기 작업 중에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-102">The <xref:System.Windows.Forms.Control.GiveFeedback> event occurs during a drag operation.</span></span> <span data-ttu-id="6cf2b-103">끌어서 놓기 작업 중 사용자의 시각적 피드백을 제공 하기 위해 마우스 포인터의 모양을 수정 하려면 끌기 이벤트의 소스 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-103">It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="6cf2b-104">A <xref:System.Windows.Forms.GiveFeedbackEventArgs> 개체에는 기본 커서의 사용 여부 및 끌어서 놓기 작업의 유형을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-104">A <xref:System.Windows.Forms.GiveFeedbackEventArgs> object specifies the type of drag-and-drop operation and whether default cursors are used.</span></span>  
  
 <span data-ttu-id="6cf2b-105">이벤트 모델에 대 한 정보를 참조 하십시오. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-105">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cf2b-106">다음 예제에서는 두 끌어서 놓기 작업 <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-106">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="6cf2b-107">예제에서는 호출은 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-107">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="6cf2b-108">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-108">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="6cf2b-109"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-109">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="6cf2b-110">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-110">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="6cf2b-111">이 예에서는 두 가정 커서 파일 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-111">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="6cf2b-112">사용자 지정 커서 사용 하는 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-112">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="6cf2b-113">에 설정 된 사용자 지정 커서는 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-113">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="6cf2b-114">키보드 상태에서 평가 됩니다는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-114">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="6cf2b-115">위치는 `ListBox` 삭제가 발생 중도 결정 됩니다는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-115">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="6cf2b-116">삭제할 데이터가 아닌 경우는 `String`, 하면 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-116">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6cf2b-117">드롭다운 상태에 표시 되는 마지막으로,는 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-117">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="6cf2b-118">데이터를 오른쪽에 대 한 drop `ListBox` 에 따라 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 적절 한 위치에서 값이 추가 `ListBox`합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-118">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="6cf2b-119">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-119">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="6cf2b-120">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.GiveFeedbackEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-120">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class.</span></span> <span data-ttu-id="6cf2b-121">참조는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-121">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GiveFeedbackEventArgs (System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (effect As DragDropEffects, useDefaultCursors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GiveFeedbackEventArgs(System::Windows::Forms::DragDropEffects effect, bool useDefaultCursors);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="useDefaultCursors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="effect">
          <span data-ttu-id="6cf2b-122">끌어서 놓기 작업의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cf2b-122">The type of drag-and-drop operation.</span>
          </span>
          <span data-ttu-id="6cf2b-123">가능한 값은 <see cref="T:System.Windows.Forms.DragDropEffects" />에 정의된 상수에 비트 OR(|) 연산을 적용하여 얻습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cf2b-123">Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <see cref="T:System.Windows.Forms.DragDropEffects" />.</span>
          </span>
        </param>
        <param name="useDefaultCursors">
          <span data-ttu-id="6cf2b-124">기본 포인터가 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cf2b-124">
              <see langword="true" /> if default pointers are used; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cf2b-125">
            <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cf2b-125">Initializes a new instance of the <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cf2b-126">표시된 끌어서 놓기 작업 피드백을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cf2b-126">Gets the drag-and-drop operation feedback that is displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cf2b-127">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cf2b-127">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6cf2b-128">다음 예제에서는 두 끌어서 놓기 작업 <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-128">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="6cf2b-129">예제에서는 호출은 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-129">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="6cf2b-130">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-130">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="6cf2b-131"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-131">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="6cf2b-132">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-132">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="6cf2b-133">이 예에서는 두 가정 커서 파일 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-133">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="6cf2b-134">사용자 지정 커서 사용 하는 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-134">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="6cf2b-135">에 설정 된 사용자 지정 커서는 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-135">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="6cf2b-136">키보드 상태에서 평가 됩니다는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-136">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="6cf2b-137">위치는 `ListBox` 삭제가 발생 중도 결정 됩니다는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-137">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="6cf2b-138">삭제할 데이터가 아닌 경우는 `String`, 하면 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-138">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6cf2b-139">드롭다운 상태에 표시 되는 마지막으로,는 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-139">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="6cf2b-140">데이터를 오른쪽에 대 한 drop `ListBox` 에 따라 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 적절 한 위치에서 값이 추가 `ListBox`합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-140">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="6cf2b-141">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-141">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="6cf2b-142">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.GiveFeedbackEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-142">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class.</span></span> <span data-ttu-id="6cf2b-143">참조는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-143">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCursors">
      <MemberSignature Language="C#" Value="public bool UseDefaultCursors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCursors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCursors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCursors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cf2b-144">끌기 작업에서 끌어서 놓기 작업에 관련된 기본 커서를 사용해야 하는지를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cf2b-144">Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cf2b-145">기본 포인터가 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cf2b-145">
              <see langword="true" /> if the default pointers are used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf2b-146">시스템 기본 끌어서 놓기 커서 이동 또는 복사와 같은 다양 한 끌어서 놓기 작업을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-146">The system provides default drag-drop cursors for different drag-drop operations such as move or copy.</span></span> <span data-ttu-id="6cf2b-147">경우 <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A> 로 설정 된 `false`, 이벤트 소스의 적절 한 커서를 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-147">If <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A> is set to `false`, it is the responsibility of the event source to set the appropriate cursor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cf2b-148">다음 예제에서는 두 끌어서 놓기 작업 <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-148">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="6cf2b-149">예제에서는 호출은 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-149">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="6cf2b-150">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-150">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="6cf2b-151"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-151">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="6cf2b-152">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-152">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="6cf2b-153">이 예에서는 두 가정 커서 파일 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-153">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="6cf2b-154">사용자 지정 커서 사용 하는 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-154">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="6cf2b-155">에 설정 된 사용자 지정 커서는 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-155">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="6cf2b-156">키보드 상태에서 평가 됩니다는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-156">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="6cf2b-157">위치는 `ListBox` 삭제가 발생 중도 결정 됩니다는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-157">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="6cf2b-158">삭제할 데이터가 아닌 경우는 `String`, 하면 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-158">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6cf2b-159">드롭다운 상태에 표시 되는 마지막으로,는 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-159">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="6cf2b-160">데이터를 오른쪽에 대 한 drop `ListBox` 에 따라 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 적절 한 위치에서 값이 추가 `ListBox`합니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-160">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="6cf2b-161">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-161">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="6cf2b-162">이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.GiveFeedbackEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-162">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class.</span></span> <span data-ttu-id="6cf2b-163">참조는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="6cf2b-163">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>