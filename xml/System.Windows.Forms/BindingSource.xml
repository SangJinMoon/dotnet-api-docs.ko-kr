<Type Name="BindingSource" FullName="System.Windows.Forms.BindingSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d59eb470995743a585c3bb381b5f75e5d9df277" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36348976" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BindingSource : System.ComponentModel.Component, System.Collections.IList, System.ComponentModel.IBindingList, System.ComponentModel.IBindingListView, System.ComponentModel.ICancelAddNew, System.ComponentModel.ISupportInitialize, System.ComponentModel.ISupportInitializeNotification, System.ComponentModel.ITypedList, System.Windows.Forms.ICurrencyManagerProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingSource extends System.ComponentModel.Component implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ComponentModel.IBindingList, class System.ComponentModel.IBindingListView, class System.ComponentModel.ICancelAddNew, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.ComponentModel.ITypedList, class System.Windows.Forms.ICurrencyManagerProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingSource" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingSource&#xA;Inherits Component&#xA;Implements IBindingList, IBindingListView, ICancelAddNew, ICurrencyManagerProvider, IList, ISupportInitialize, ISupportInitializeNotification, ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingSource : System::ComponentModel::Component, System::Collections::IList, System::ComponentModel::IBindingList, System::ComponentModel::IBindingListView, System::ComponentModel::ICancelAddNew, System::ComponentModel::ISupportInitialize, System::ComponentModel::ISupportInitializeNotification, System::ComponentModel::ITypedList, System::Windows::Forms::ICurrencyManagerProvider" />
  <TypeSignature Language="F#" Value="type BindingSource = class&#xA;    inherit Component&#xA;    interface IBindingListView&#xA;    interface IBindingList&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ITypedList&#xA;    interface ICancelAddNew&#xA;    interface ISupportInitializeNotification&#xA;    interface ISupportInitialize&#xA;    interface ICurrencyManagerProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingListView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICancelAddNew</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ITypedList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.ICurrencyManagerProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CurrentChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f04cf-101">Encapsulates the data source for a form.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f04cf-101">Encapsulates the data source for a form.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-102"><xref:System.Windows.Forms.BindingSource> 구성 요소에는 여러 용도로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-102">The <xref:System.Windows.Forms.BindingSource> component serves many purposes.</span></span> <span data-ttu-id="f04cf-103">첫째, 현재 항목 관리, 변경 알림 및 Windows Forms 컨트롤 및 데이터 원본 간에 다른 서비스를 제공 하 여 데이터를 폼에 컨트롤 바인딩을 간소화 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-103">First, it simplifies binding controls on a form to data by providing currency management, change notification, and other services between Windows Forms controls and data sources.</span></span> <span data-ttu-id="f04cf-104">연결 하 여 이렇게는 <xref:System.Windows.Forms.BindingSource> 구성 요소를 사용 하 여 데이터 소스는 <xref:System.Windows.Forms.BindingSource.DataSource%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-104">This is accomplished by attaching the <xref:System.Windows.Forms.BindingSource> component to your data source using the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property.</span></span> <span data-ttu-id="f04cf-105">복합 바인딩 시나리오에 대 한 지정할 수도 있습니다는 <xref:System.Windows.Forms.BindingSource.DataMember%2A> 속성을 특정 열 또는 데이터 원본의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-105">For complex binding scenarios you can optionally set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a specific column or list in the data source.</span></span> <span data-ttu-id="f04cf-106">다음 컨트롤에 <xref:System.Windows.Forms.BindingSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-106">You then bind controls to the <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="f04cf-107">모든 상호 작용 데이터에 대 한 호출을 사용 하 여 수행 되는 <xref:System.Windows.Forms.BindingSource> 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-107">All further interaction with the data is accomplished with calls to the <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="f04cf-108">방법에 대 한 예제 <xref:System.Windows.Forms.BindingSource> 바인딩 프로세스를 단순화할 수, 참조 [하는 방법: DBNull 데이터베이스 값에 Windows Forms 컨트롤 바인딩](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md) 및 [하는 방법: 오류 처리 및데이터바인딩에서발생하는예외](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md).</span><span class="sxs-lookup"><span data-stu-id="f04cf-108">For examples on how the <xref:System.Windows.Forms.BindingSource> can simplify the binding process, see [How to: Bind Windows Forms Controls to DBNull Database Values](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md) and [How to: Handle Errors and Exceptions that Occur with Databinding](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md).</span></span> <span data-ttu-id="f04cf-109">탐색 및 데이터 원본의 업데이트와 같은 메서드를 통해 구현 됩니다 <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveLast%2A>, 및 <xref:System.Windows.Forms.BindingSource.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-109">Navigation and updating of the data source is accomplished through methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveLast%2A>, and <xref:System.Windows.Forms.BindingSource.Remove%2A>.</span></span> <span data-ttu-id="f04cf-110">정렬 및 필터링 같은 작업을 통해 처리 되는 <xref:System.Windows.Forms.BindingSource.Sort%2A> 및 <xref:System.Windows.Forms.BindingSource.Filter%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-110">Operations such as sorting and filtering are handled through the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties.</span></span> <span data-ttu-id="f04cf-111">정렬 및 필터링을 사용 하 여 대 한 자세한 내용은 <xref:System.Windows.Forms.BindingSource>, 참조 [하는 방법: Windows Forms BindingSource 구성 요소를 사용 하 여 ADO.NET 데이터 필터와 정렬](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-111">For more information on using sorting and filtering with the <xref:System.Windows.Forms.BindingSource>, see [How to: Sort and Filter ADO.NET Data with the Windows Forms BindingSource Component](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md).</span></span>  
  
 <span data-ttu-id="f04cf-112">또한는 <xref:System.Windows.Forms.BindingSource> 구성 요소는 강력한 형식의 데이터 소스로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-112">In addition, the <xref:System.Windows.Forms.BindingSource> component can act as a strongly typed data source.</span></span> <span data-ttu-id="f04cf-113">일반적으로 다음 메커니즘 중 하나를 통해 데이터 원본 유형의 고정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-113">Typically the type of the underlying data source is fixed through one of the following mechanisms:</span></span>  
  
-   <span data-ttu-id="f04cf-114">사용 하 여는 <xref:System.Windows.Forms.BindingSource.Add%2A> 항목을 추가 하는 메서드는 <xref:System.Windows.Forms.BindingSource> 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-114">Use the <xref:System.Windows.Forms.BindingSource.Add%2A> method to add an item to the <xref:System.Windows.Forms.BindingSource> component.</span></span>  
  
-   <span data-ttu-id="f04cf-115">설정의 <xref:System.Windows.Forms.BindingSource.DataSource%2A> 속성을 목록, 단일 개체 또는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-115">Set the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property to a list, single object, or type.</span></span>  
  
 <span data-ttu-id="f04cf-116">이러한 메커니즘 중 둘 다 강력한 형식의 목록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-116">Both of these mechanisms create a strongly-typed list.</span></span> <span data-ttu-id="f04cf-117">사용 하는 방법에 대 한 자세한 내용은 <xref:System.Windows.Forms.BindingSource> 참조 형식에 바인딩할 [하는 방법: Windows Forms 컨트롤 형식에 바인딩](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-117">For more information on how to use the <xref:System.Windows.Forms.BindingSource> to bind to a type, see [How to: Bind a Windows Forms Control to a Type](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md).</span></span> <span data-ttu-id="f04cf-118">사용할 수도 있습니다는 <xref:System.Windows.Forms.BindingSource> 팩터리 개체에 사용자 컨트롤에 바인딩할 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-118">You can also use the <xref:System.Windows.Forms.BindingSource> to bind your controls to a factory object.</span></span> <span data-ttu-id="f04cf-119">이 작업을 수행 하는 방법에 대 한 자세한 내용은 참조 하십시오. [하는 방법: 팩터리 개체에 Windows Forms 컨트롤 바인딩](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-119">For more information on how to do this, see [How to: Bind a Windows Forms Control to a Factory Object](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f04cf-120">때문에 <xref:System.Windows.Forms.BindingSource> 핸들 간단 하 고 복잡 한 데이터 원본 두 용어는 문제가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-120">Because a <xref:System.Windows.Forms.BindingSource> handles both simple and complex data sources, terminology is problematic.</span></span> <span data-ttu-id="f04cf-121">이 클래스 설명서에 용어 *목록* 호스팅된 데이터 원본 내에서 데이터 컬렉션을 참조 하 고 *항목* 단일 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-121">Within this class documentation, the term *list* refers to a data collection within the hosted data source, and *item* denotes a single element.</span></span> <span data-ttu-id="f04cf-122">경우 기능을 설명할와 관련 된 복잡 한 데이터 소스는 같은 의미로 *테이블* 및 *행* 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-122">When discussing functionality associated with complex data sources, the equivalent terms *table* and *row* are used.</span></span>  
  
 <span data-ttu-id="f04cf-123"><xref:System.Windows.Forms.BindingSource> 기본 데이터에 액세스 하기 위한 멤버를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-123"><xref:System.Windows.Forms.BindingSource> provides members for accessing the underlying data.</span></span> <span data-ttu-id="f04cf-124">현재 항목을 통해 검색할 수는 <xref:System.Windows.Forms.BindingSource.Current%2A> 속성과 전체 목록을 통해 검색할 수 있습니다는 <xref:System.Windows.Forms.BindingSource.List%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-124">The current item can be retrieved through the <xref:System.Windows.Forms.BindingSource.Current%2A> property, and the entire list can be retrieved through the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="f04cf-125">통해 현재 항목에 지원 되는 편집 작업 <xref:System.Windows.Forms.BindingSource.Current%2A> 및 <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>, <xref:System.Windows.Forms.BindingSource.EndEdit%2A>, <xref:System.Windows.Forms.BindingSource.CancelEdit%2A> 및 <xref:System.Windows.Forms.BindingSource.Add%2A> 및 <xref:System.Windows.Forms.BindingSource.AddNew%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-125">Editing operations are supported on the current item through <xref:System.Windows.Forms.BindingSource.Current%2A> and the <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>, <xref:System.Windows.Forms.BindingSource.EndEdit%2A>, <xref:System.Windows.Forms.BindingSource.CancelEdit%2A> and <xref:System.Windows.Forms.BindingSource.Add%2A> and <xref:System.Windows.Forms.BindingSource.AddNew%2A> methods.</span></span> <span data-ttu-id="f04cf-126">이 클래스와 같은 수의 이벤트를 노출, 현재 항목 관리는 모든 데이터 원본 형식에 대 한 자동으로 처리 되지만 <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> 및 <xref:System.Windows.Forms.BindingSource.DataSourceChanged>, 하는 사용자 지정이 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-126">Although currency management is handled automatically for all underlying data source types, this class exposes a number of events, such as <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> and <xref:System.Windows.Forms.BindingSource.DataSourceChanged>, that allow for customization.</span></span>  
  
 <span data-ttu-id="f04cf-127">데이터 원본에 바인딩되는 <xref:System.Windows.Forms.BindingSource> 구성 요소 또한 탐색 하 고 관리할 수 있는 <xref:System.Windows.Forms.BindingNavigator> 목록 내 항목 탐색을 위한 VCR 비슷한 사용자 인터페이스 (UI)를 제공 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-127">Data sources that are bound to a <xref:System.Windows.Forms.BindingSource> component can also be navigated and managed with the <xref:System.Windows.Forms.BindingNavigator> class, which provides a VCR-like user interface (UI) for navigating items within a list.</span></span> <span data-ttu-id="f04cf-128">하지만 <xref:System.Windows.Forms.BindingNavigator> 바인딩될 수와 통합 하도록 설계 된 모든 데이터 소스에는 <xref:System.Windows.Forms.BindingSource> 구성 요소를 통해 해당 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-128">Although <xref:System.Windows.Forms.BindingNavigator> can be bound to any data source, it was designed to integrate with a <xref:System.Windows.Forms.BindingSource> component through its <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f04cf-129">기본 속성에는 <xref:System.Windows.Forms.BindingSource> 클래스는 <xref:System.Windows.Forms.BindingSource.DataSource%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-129">The default property for the <xref:System.Windows.Forms.BindingSource> class is <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="f04cf-130">기본 이벤트는 <xref:System.Windows.Forms.BindingSource.CurrentChanged>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-130">The default event is <xref:System.Windows.Forms.BindingSource.CurrentChanged>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f04cf-131">멤버는 대부분의 <xref:System.Windows.Forms.BindingSource> 나타내는 기본 목록에서 동작 클래스는 <xref:System.Windows.Forms.BindingSource.List%2A> 속성 단순히 기본 목록에 해당 작업을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-131">Many of the members of the <xref:System.Windows.Forms.BindingSource> class operate on the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and simply refer their operation to the underlying list.</span></span> <span data-ttu-id="f04cf-132">따라서,는 <xref:System.Windows.Forms.BindingSource> 의 사용자 지정 구현에 바인딩되어 <xref:System.Collections.IList>, 클래스 설명서에서 설명 된 동작에서 이러한 멤버의 정확한 동작은 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-132">Therefore, when the <xref:System.Windows.Forms.BindingSource> is bound to a custom implementation of <xref:System.Collections.IList>, the exact behavior of these members may differ from the behavior described in the class documentation.</span></span> <span data-ttu-id="f04cf-133">예를 들어는 <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> 메서드 호출 <xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-133">For example, the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method calls <xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f04cf-134"><xref:System.Windows.Forms.BindingSource> 설명서에서 설명는 <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> 메서드 이해를 바탕으로 하는 <xref:System.Collections.IList.RemoveAt%2A> 메서드 내부에 대 한 <xref:System.Collections.IList> 는 잘못 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-134">The <xref:System.Windows.Forms.BindingSource> documentation describes the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method with the understanding that the <xref:System.Collections.IList.RemoveAt%2A> method for the underlying <xref:System.Collections.IList> is correctly implemented.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-135">다음 코드 예제는 <xref:System.Windows.Forms.ListBox> 에 바인딩된는 <xref:System.Windows.Forms.BindingSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-135">The following code example demonstrates a <xref:System.Windows.Forms.ListBox> bound to a <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="f04cf-136"><xref:System.Windows.Forms.BindingSource> 바인딩되는 <xref:System.ComponentModel.BindingList%601> 글꼴 목록이 들어 있는입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-136">The <xref:System.Windows.Forms.BindingSource> is bound to a <xref:System.ComponentModel.BindingList%601> that contains a list of fonts.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#0)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingNavigator" />
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-137">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-137">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-138">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class to the default property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-138">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class to the default property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-139">다음 표에서 기본 <xref:System.Windows.Forms.BindingSource> 이 생성자에 의해 초기화 된 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-139">The following table shows the default <xref:System.Windows.Forms.BindingSource> property values initialized by this constructor.</span></span>  
  
|<span data-ttu-id="f04cf-140">속성</span><span class="sxs-lookup"><span data-stu-id="f04cf-140">Property</span></span>|<span data-ttu-id="f04cf-141">기본값</span><span class="sxs-lookup"><span data-stu-id="f04cf-141">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.BindingSource.DataSource%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.DataMember%2A>|<xref:System.String.Empty>|  
|<xref:System.Windows.Forms.BindingSource.Sort%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.Filter%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>|`true`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingSource : System.ComponentModel.IContainer -&gt; System.Windows.Forms.BindingSource" Usage="new System.Windows.Forms.BindingSource container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="f04cf-142">The <see cref="T:System.ComponentModel.IContainer" /> to add the current <see cref="T:System.Windows.Forms.BindingSource" /> to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-142">The <see cref="T:System.ComponentModel.IContainer" /> to add the current <see cref="T:System.Windows.Forms.BindingSource" /> to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-143">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class and adds the <see cref="T:System.Windows.Forms.BindingSource" /> to the specified container.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-143">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class and adds the <see cref="T:System.Windows.Forms.BindingSource" /> to the specified container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-144">이 생성자는 기본 생성자를 호출 하 고 그런 다음 현재 <xref:System.Windows.Forms.BindingSource> 지정된 된 컨테이너에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-144">This constructor calls the default constructor, and then adds the current <xref:System.Windows.Forms.BindingSource> to the specified container.</span></span> <span data-ttu-id="f04cf-145">이 사용 되지 않습니다 일반적으로 솔루션 프로그래머가 대신 디자인 타임 환경의 작성자가.</span><span class="sxs-lookup"><span data-stu-id="f04cf-145">It is not typically used by the solutions programmer, but instead by authors of design-time environments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataSource As Object, dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingSource : obj * string -&gt; System.Windows.Forms.BindingSource" Usage="new System.Windows.Forms.BindingSource (dataSource, dataMember)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <span data-ttu-id="f04cf-146">The data source for the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-146">The data source for the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </param>
        <param name="dataMember">
          <span data-ttu-id="f04cf-147">The specific column or list name within the data source to bind to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-147">The specific column or list name within the data source to bind to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-148">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class with the specified data source and data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-148">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class with the specified data source and data member.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="bindingSource.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f04cf-149">An <see cref="T:System.Object" /> to be added to the internal list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-149">An <see cref="T:System.Object" /> to be added to the internal list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-150">Adds an existing item to the internal list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-150">Adds an existing item to the internal list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04cf-151">The zero-based index at which <paramref name="value" /> was added to the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-151">The zero-based index at which <paramref name="value" /> was added to the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-152"><xref:System.Windows.Forms.BindingSource.Add%2A> 메서드 내부 목록에 대 한 호출을 참조 `Add` 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-152">The <xref:System.Windows.Forms.BindingSource.Add%2A> method refers the call to the underlying list's `Add` method.</span></span>  
  
 <span data-ttu-id="f04cf-153">내부 목록에 같은 형식이 포함 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-153">The internal list must contain homogenous types.</span></span> <span data-ttu-id="f04cf-154">경우는 <xref:System.Windows.Forms.BindingSource.DataSource%2A> 속성이 아직 설정 하지 않은 다음 목록에 추가 하는 첫 번째 개체 목록에 대 한 형식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-154">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property has not already been set, then the first object added to the list defines the type for the list.</span></span>  
  
 <span data-ttu-id="f04cf-155">이 메서드는 <xref:System.Windows.Forms.BindingSource.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-155">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-156">다음 코드 예제를 사용 하는 방법의 <xref:System.Windows.Forms.BindingSource.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-156">The following code example how to use the <xref:System.Windows.Forms.BindingSource.Add%2A> method.</span></span> <span data-ttu-id="f04cf-157">이 예제를 실행 하려면 Windows Form 및 호출에 코드를 붙여넣습니다는 `PopulateBindingSourceWithFonts` 폼의 생성자에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-157">To run this example, paste the code into a Windows Form, and call the `PopulateBindingSourceWithFonts` method from the form's constructor.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04cf-158">
            <paramref name="value" /> differs in type from the existing items in the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-158">
              <paramref name="value" /> differs in type from the existing items in the underlying list.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddingNew">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AddingNewEventHandler AddingNew;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AddingNewEventHandler AddingNew" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.AddingNew" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AddingNew As AddingNewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AddingNewEventHandler ^ AddingNew;" />
      <MemberSignature Language="F#" Value="member this.AddingNew : System.ComponentModel.AddingNewEventHandler " Usage="member this.AddingNew : System.ComponentModel.AddingNewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AddingNewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-159">Occurs before an item is added to the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-159">Occurs before an item is added to the underlying list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-160"><xref:System.Windows.Forms.BindingSource.AddingNew> 이벤트 발생 새 개체를 나타내는 기본 목록에 추가 되기 전에 <xref:System.Windows.Forms.BindingSource.List%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-160">The <xref:System.Windows.Forms.BindingSource.AddingNew> event occurs before a new object is added to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="f04cf-161">이 이벤트가 발생 한 후의 <xref:System.Windows.Forms.BindingSource.AddNew%2A> 메서드는 새 항목을 만들어 기본 목록에 추가 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-161">This event is fired after the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method is called, but before the new item is created and added to the underlying list.</span></span> <span data-ttu-id="f04cf-162">프로그래머는이 이벤트를 처리 하 여 사용자 지정 항목 만들기를 제공할 수 있으며에서 파생 하는 강제 된 <xref:System.Windows.Forms.BindingSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-162">By handling this event, the programmer can provide custom item creation and insertion behavior without being forced to derive from the <xref:System.Windows.Forms.BindingSource> class.</span></span> <span data-ttu-id="f04cf-163">설정 하 여 이벤트 처리기에서 이렇게는 <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> 의 속성은 <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> 새 항목에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-163">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="f04cf-164">만든 새 개체는 <xref:System.Windows.Forms.BindingSource.AddingNew> 이벤트 목록에 포함 된 형식과 동일한 형식 이어야 합니다 또는 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-164">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span> <span data-ttu-id="f04cf-165">설정할 수 없습니다는 <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> 바인딩된 경우이 속성을 <xref:System.Data.DataView> 또는 <xref:System.Data.DataTable> 새 추가할 수 없으므로 <xref:System.Data.DataRowView> 목록에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-165">You cannot set the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property when bound to a <xref:System.Data.DataView> or <xref:System.Data.DataTable> because you cannot add a new <xref:System.Data.DataRowView> to the list.</span></span>  
  
 <span data-ttu-id="f04cf-166">새 사용자 지정 항목 기능을 제공 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.BindingSource.AddNew%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-166">For more information about supplying custom new item functionality, see the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method.</span></span> <span data-ttu-id="f04cf-167">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-167">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-168">다음 코드 예제에서는 <xref:System.Windows.Forms.BindingSource> 구성 요소 목록을에 바인딩하는 <xref:System.Windows.Forms.DataGridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-168">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="f04cf-169">새 항목으로 목록에 추가 되는 <xref:System.Windows.Forms.BindingSource.AddingNew> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-169">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="f04cf-170">이 코드 예제는에 제공 된 큰 예제의 일부 [하는 방법: Windows Forms BindingSource를 사용 하 여 항목 추가 사용자 지정](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-170">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04cf-171">
            <see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> is not the same type as the type contained in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-171">
              <see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> is not the same type as the type contained in the list.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public virtual object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj&#xA;override this.AddNew : unit -&gt; obj" Usage="bindingSource.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-172">Adds a new item to the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-172">Adds a new item to the underlying list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04cf-173">The <see cref="T:System.Object" /> that was created and added to the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-173">The <see cref="T:System.Object" /> that was created and added to the list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-174"><xref:System.Windows.Forms.BindingSource.AddNew%2A> 나타내는 기본 목록에 새 항목을 추가 하는 메서드는 <xref:System.Windows.Forms.BindingSource.List%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-174">The <xref:System.Windows.Forms.BindingSource.AddNew%2A> method adds a new item to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="f04cf-175">이 메서드는 다음과 같은 일련의 동작을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-175">This method sets up the following series of actions:</span></span>  
  
1.  <span data-ttu-id="f04cf-176"><xref:System.Windows.Forms.BindingSource.EndEdit%2A> 메서드 자동으로 모든 보류 중인 편집 작업을 커밋하기 위해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-176">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is automatically called to commit any pending edit operations.</span></span>  
  
2.  <span data-ttu-id="f04cf-177"><xref:System.Windows.Forms.BindingSource.AddingNew> 이벤트가 자동으로 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-177">The <xref:System.Windows.Forms.BindingSource.AddingNew> event is automatically raised.</span></span> <span data-ttu-id="f04cf-178">이 이벤트를 새 항목을 생성 하려면 프로그래밍 방식으로 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-178">This event can be programmatically handled to construct the new item.</span></span> <span data-ttu-id="f04cf-179">설정 하 여 이벤트 처리기에서 이렇게는 <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> 의 속성은 <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> 새 항목에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-179">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="f04cf-180">만든 새 개체는 <xref:System.Windows.Forms.BindingSource.AddingNew> 이벤트 목록에 포함 된 형식과 동일한 형식 이어야 합니다 또는 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-180">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span>  
  
     <span data-ttu-id="f04cf-181">경우는 <xref:System.Windows.Forms.BindingSource.AddingNew> 이벤트가 처리 되지 않은 한 기본 목록이 <xref:System.ComponentModel.IBindingList>, 요청에는 목록에 전달 되는 다음 <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-181">If the <xref:System.Windows.Forms.BindingSource.AddingNew> event is not handled, and the underlying list is an <xref:System.ComponentModel.IBindingList>, then the request is passed to the list's <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f04cf-182">내부 목록이 <xref:System.ComponentModel.IBindingList>가 아닌 경우 public 기본 생성자를 통해 항목이 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-182">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the item is automatically created through its public default constructor.</span></span> <span data-ttu-id="f04cf-183">두 경우 모두 목록의 끝에 새 항목이 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-183">In either case, the new item is added to the end of the list.</span></span>  
  
3.  <span data-ttu-id="f04cf-184">새 항목은 즉시 추가 내부 목록에는 데이터 원본 구현 하지 않는 한는 <xref:System.ComponentModel.IEditableObject> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-184">The new item is added immediately to the internal list unless the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="f04cf-185">이 경우 새 항목 커밋되지 않는를 명시적으로 호출 될 때까지 <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> 만들어질 새 목록 작업이 시작 될 때까지 또는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-185">In this case, the new item is not committed until an explicit call to <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> is made or until a new list operation is initiated.</span></span> <span data-ttu-id="f04cf-186">커밋되기 전에 새 항목 롤백할 수를 호출 하 여 <xref:System.Windows.Forms.BindingSource.CancelEdit%2A>,이 경우 새 항목이 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-186">Before it is committed, the new item can be rolled back by calling <xref:System.Windows.Forms.BindingSource.CancelEdit%2A>, in which case the new item is discarded.</span></span>  
  
 <span data-ttu-id="f04cf-187">이 메서드는 <xref:System.Windows.Forms.BindingSource.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-187">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-188">다음 코드 예제에서는 <xref:System.Windows.Forms.BindingSource> 구성 요소 목록을에 바인딩하는 <xref:System.Windows.Forms.DataGridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-188">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="f04cf-189">새 항목으로 목록에 추가 되는 <xref:System.Windows.Forms.BindingSource.AddingNew> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-189">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="f04cf-190">이 코드 예제는에 제공 된 큰 예제의 일부 [하는 방법: Windows Forms BindingSource를 사용 하 여 항목 추가 사용자 지정](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-190">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04cf-191">The <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property is set to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-191">The <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property is set to <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f04cf-192">-or-  A public default constructor could not be found for the current item type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-192">-or-  A public default constructor could not be found for the current item type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public virtual bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowEdit : bool" Usage="System.Windows.Forms.BindingSource.AllowEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-193">Gets a value indicating whether items in the underlying list can be edited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-193">Gets a value indicating whether items in the underlying list can be edited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-194">
            <see langword="true" /> 목록 항목을 표시 하려면를 편집할 수 있습니다. 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-194">
              <see langword="true" /> to indicate list items can be edited; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-195"><xref:System.Windows.Forms.BindingSource.AllowEdit%2A> 속성은 일반적으로 목록에 있는 항목의 편집이 허용 되는지를 확인 하려면 다른 구성 요소에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-195">The <xref:System.Windows.Forms.BindingSource.AllowEdit%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNew">
      <MemberSignature Language="C#" Value="public virtual bool AllowNew { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowNew { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNew : bool with get, set" Usage="System.Windows.Forms.BindingSource.AllowNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-196">Gets or sets a value indicating whether the <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> method can be used to add items to the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-196">Gets or sets a value indicating whether the <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> method can be used to add items to the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-197">
            <see langword="true" /> 경우 <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> 목록에 항목을 추가 하는 데 사용 되지 않으면, <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-197">
              <see langword="true" /> if <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> can be used to add items to the list; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-198">기본값은 <xref:System.Windows.Forms.BindingSource.AllowNew%2A> 속성은 기본 데이터 원본 유형에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-198">The default value for the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property depends on the underlying data source type.</span></span> <span data-ttu-id="f04cf-199">내부 목록에 구현 하는 경우는 <xref:System.ComponentModel.IBindingList> 인터페이스에 기본 목록에는이 속성을 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-199">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, this property will delegate to the underlying list.</span></span> <span data-ttu-id="f04cf-200">그렇지 않으면이 속성은 반환 `false` 기본 목록에는 다음과 같은 특징이의 경우:</span><span class="sxs-lookup"><span data-stu-id="f04cf-200">Otherwise, this property will return `false` if the underlying list has any of the following characteristics:</span></span>  
  
-   <span data-ttu-id="f04cf-201">에 의해 결정 된 크기는 고정 된 <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-201">It has a fixed size, as determined by the <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="f04cf-202">읽기 전용을 기준으로 <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-202">It is read-only, as determined by the <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="f04cf-203">항목의 형식에 없는 기본 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-203">The item's type does not have a default constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f04cf-204">이 속성의 값이 설정 되 고 나면 getter 내부 목록에 대 한 호출을 더 이상 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-204">Once the value of this property is set, the getter no longer refers the call to the underlying list.</span></span> <span data-ttu-id="f04cf-205">대신, 단순히 값을 반환 될 때까지 이전에 설정한는 <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-205">Instead, it simply returns the value that was previously set until the <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method is called.</span></span>  
  
 <span data-ttu-id="f04cf-206">이 속성 설정의 <xref:System.Windows.Forms.BindingSource.ListChanged> 사용 하 여 이벤트 <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> 로 설정 <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-206">Setting this property raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f04cf-207">설정 하는 경우는 <xref:System.Windows.Forms.BindingSource.AllowNew%2A> 속성을 `true` 기본 목록 형식 기본 생성자가 없습니다 처리 해야 합니다는 <xref:System.Windows.Forms.BindingSource.AddingNew> 이벤트 적절 한 형식을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-207">If you set the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to `true` and the underlying list type does not have a default constructor, you must handle the <xref:System.Windows.Forms.BindingSource.AddingNew> event and create the appropriate type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-208">다음 코드 예제를 사용 하 여 보여 줍니다.는 <xref:System.Windows.Forms.BindingSource.AllowNew%2A> 속성은 <xref:System.Windows.Forms.BindingSource> 사용자가 새 항목을 추가 하는 구성 요소는 <xref:System.Windows.Forms.BindingSource> 구성 요소의 기본 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-208">The following code example demonstrates using the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property of the <xref:System.Windows.Forms.BindingSource> component to permit the user to add new items to the <xref:System.Windows.Forms.BindingSource> component's underlying list.</span></span> <span data-ttu-id="f04cf-209">이 속성을 설정 `true` 하면 바인딩된 <xref:System.Windows.Forms.DataGridView> 컨트롤을 새 레코드에 대 한 행을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-209">Setting this property to `true` causes the bound <xref:System.Windows.Forms.DataGridView> control to display its row for new records.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04cf-210">This property is set to <see langword="true" /> when the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property has a fixed size or is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-210">This property is set to <see langword="true" /> when the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property has a fixed size or is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="f04cf-211">The property is set to <see langword="true" /> and the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event is not handled when the underlying list type does not have a default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-211">The property is set to <see langword="true" /> and the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event is not handled when the underlying list type does not have a default constructor.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowEdit" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowRemove" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="AllowRemove">
      <MemberSignature Language="C#" Value="public virtual bool AllowRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRemove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowRemove" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowRemove : bool" Usage="System.Windows.Forms.BindingSource.AllowRemove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-212">Gets a value indicating whether items can be removed from the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-212">Gets a value indicating whether items can be removed from the underlying list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-213">
            <see langword="true" /> 나타내는 목록 항목이 목록에서 제거 수 있습니다. 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-213">
              <see langword="true" /> to indicate list items can be removed from the list; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-214"><xref:System.Windows.Forms.BindingSource.AllowRemove%2A> 속성은 일반적으로 목록에 있는 항목의 편집이 허용 되는지를 확인 하려면 다른 구성 요소에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-214">The <xref:System.Windows.Forms.BindingSource.AllowRemove%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplySort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-215">Sorts the data source with the specified sort description or descriptions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-215">Sorts the data source with the specified sort description or descriptions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.ListSortDescriptionCollection sorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.ListSortDescriptionCollection sorts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (sorts As ListSortDescriptionCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::ListSortDescriptionCollection ^ sorts);" />
      <MemberSignature Language="F#" Value="abstract member ApplySort : System.ComponentModel.ListSortDescriptionCollection -&gt; unit&#xA;override this.ApplySort : System.ComponentModel.ListSortDescriptionCollection -&gt; unit" Usage="bindingSource.ApplySort sorts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sorts" Type="System.ComponentModel.ListSortDescriptionCollection" />
      </Parameters>
      <Docs>
        <param name="sorts">
          <span data-ttu-id="f04cf-216">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> containing the sort descriptions to apply to the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-216">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> containing the sort descriptions to apply to the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-217">Sorts the data source with the specified sort descriptions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-217">Sorts the data source with the specified sort descriptions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-218"><xref:System.ComponentModel.IBindingListView> 다중 열 정렬을 속성 설명자 방향 쌍의 집합으로 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-218"><xref:System.ComponentModel.IBindingListView> implements multi-column sorting as a set of property descriptor-direction pairs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f04cf-219">The data source is not an <see cref="T:System.ComponentModel.IBindingListView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-219">The data source is not an <see cref="T:System.ComponentModel.IBindingListView" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.PropertyDescriptor property, valuetype System.ComponentModel.ListSortDirection sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (property As PropertyDescriptor, sort As ListSortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::PropertyDescriptor ^ property, System::ComponentModel::ListSortDirection sort);" />
      <MemberSignature Language="F#" Value="abstract member ApplySort : System.ComponentModel.PropertyDescriptor * System.ComponentModel.ListSortDirection -&gt; unit&#xA;override this.ApplySort : System.ComponentModel.PropertyDescriptor * System.ComponentModel.ListSortDirection -&gt; unit" Usage="bindingSource.ApplySort (property, sort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="sort" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="f04cf-220">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the property by which to sort the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-220">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the property by which to sort the data source.</span>
          </span>
        </param>
        <param name="sort">
          <span data-ttu-id="f04cf-221">A <see cref="T:System.ComponentModel.ListSortDirection" /> indicating how the list should be sorted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-221">A <see cref="T:System.ComponentModel.ListSortDirection" /> indicating how the list should be sorted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-222">Sorts the data source using the specified property descriptor and sort direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-222">Sorts the data source using the specified property descriptor and sort direction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-223"><xref:System.ComponentModel.IBindingList> 단일 열 정렬을 사용 하 여 구현 하는 <xref:System.ComponentModel.PropertyDescriptor> 를 기준으로 정렬 하려면 속성을 나타내는 및 <xref:System.ComponentModel.ListSortDirection> 속성 내용을 오름차순 또는 내림차순으로 정렬할지 여부를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-223">The <xref:System.ComponentModel.IBindingList> implements single column sorting using a <xref:System.ComponentModel.PropertyDescriptor> to indicate a property to sort by and a <xref:System.ComponentModel.ListSortDirection> indicating whether the property contents should be sorted in ascending or descending order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f04cf-224">The data source is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-224">The data source is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-225">Occurs when all the clients have been bound to this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-225">Occurs when all the clients have been bound to this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-226"><xref:System.Windows.Forms.BindingSource.BindingComplete> 이벤트 발생 후 모든 클라이언트에 일반적으로 컨트롤에 바인딩 되었고 현재 <xref:System.Windows.Forms.BindingSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-226">The <xref:System.Windows.Forms.BindingSource.BindingComplete> event occurs after all the clients, typically controls, have been bound to the current <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="f04cf-227">이 이벤트의 처리기는 검사 하 여 성공, 오류 또는 바인딩 프로세스의 예외에 따라 적절 한 작업을 수행할 수는 <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> 의 속성은 <xref:System.Windows.Forms.BindingCompleteEventArgs> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-227">The handler of this event can take the appropriate action based on the success, error, or exceptions in the binding process, by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter.</span></span>  
  
 <span data-ttu-id="f04cf-228">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-228">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-229">다음 코드 예제에서는 처리는 <xref:System.Windows.Forms.BindingSource.BindingComplete> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-229">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.BindingComplete> event.</span></span> <span data-ttu-id="f04cf-230">이 코드를 실행 하려면 빈 코드 파일에 붙여 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-230">To run this code, paste it into an empty code file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingSource.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-231">Cancels the current edit operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-231">Cancels the current edit operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-232">이 메서드는 마지막 저장 또는 로드는 다음 두 조건이 모두 충족 될 경우 작업 이후 데이터 수정 내용을 삭제:</span><span class="sxs-lookup"><span data-stu-id="f04cf-232">This method discards modifications to data since the last save or load operation if both of the following conditions are met:</span></span>  
  
-   <span data-ttu-id="f04cf-233">데이터 원본 구현 하는 <xref:System.ComponentModel.IEditableObject> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-233">The data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span>  
  
-   <span data-ttu-id="f04cf-234"><xref:System.Windows.Forms.BindingSource.EndEdit%2A> 메서드가 아직 호출 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-234">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method has not been called yet.</span></span>  
  
 <span data-ttu-id="f04cf-235">이 메서드를 호출는 <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> 메서드 내부 <xref:System.Windows.Forms.CurrencyManager>, 행 수준 변경 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-235">This method calls the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> method of the underlying <xref:System.Windows.Forms.CurrencyManager>, and is scoped to row-level changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="bindingSource.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-236">Removes all elements from the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-236">Removes all elements from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-237"><xref:System.Windows.Forms.BindingSource.Clear%2A> 나타내는 기본 목록에서 모든 요소를 제거 하는 메서드는 <xref:System.Windows.Forms.BindingSource.List%2A> 속성을 설정은 <xref:System.Windows.Forms.BindingSource.Count%2A> 속성을 0으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-237">The <xref:System.Windows.Forms.BindingSource.Clear%2A> method removes all elements from the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and sets the <xref:System.Windows.Forms.BindingSource.Count%2A> property to zero.</span></span>  
  
 <span data-ttu-id="f04cf-238">이 메서드는 <xref:System.Windows.Forms.BindingSource.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-238">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="bindingSource.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f04cf-239">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-239">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
          <span data-ttu-id="f04cf-240">The value can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-240">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-241">Determines whether an object is an item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-241">Determines whether an object is an item in the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04cf-242">
            <see langword="true" /> if the <paramref name="value" /> parameter is found in the <see cref="P:System.Windows.Forms.BindingSource.List" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-242">
              <see langword="true" /> if the <paramref name="value" /> parameter is found in the <see cref="P:System.Windows.Forms.BindingSource.List" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-243">이 구현은 기본 목록에 종속 `Contains` 메서드를 일반적으로 다음과 같은 특징이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-243">Although the implementation is dependent on the underlying list's `Contains` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="f04cf-244"><xref:System.Windows.Forms.BindingSource.List%2A> 첫 번째 요소부터 마지막 요소에서 끝나는 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-244"><xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="f04cf-245">선형 검색을 수행 하는 내부 메서드 따라서 평균 실행 시간은의 값에 비례는 <xref:System.Windows.Forms.BindingSource.Count%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-245">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="f04cf-246">기본 메서드를 호출 하 여 일치 여부를 확인는 <xref:System.Object.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-246">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (arr As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ arr, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="bindingSource.CopyTo (arr, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr">
          <span data-ttu-id="f04cf-247">The destination array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-247">The destination array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f04cf-248">The index in the destination array at which to start the copy operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-248">The index in the destination array at which to start the copy operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-249">Copies the contents of the <see cref="P:System.Windows.Forms.BindingSource.List" /> to the specified array, starting at the specified index value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-249">Copies the contents of the <see cref="P:System.Windows.Forms.BindingSource.List" /> to the specified array, starting at the specified index value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-250">항목을 결합 하려면 여러 원본에서 단일 배열에이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-250">You can use this method to combine items from multiple sources into a single array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.BindingSource.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-251">Gets the total number of items in the underlying list, taking the current <see cref="P:System.Windows.Forms.BindingSource.Filter" /> value into consideration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-251">Gets the total number of items in the underlying list, taking the current <see cref="P:System.Windows.Forms.BindingSource.Filter" /> value into consideration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-252">내부 목록에서 필터링된 항목의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-252">The total number of filtered items in the underlying list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-253"><xref:System.Windows.Forms.BindingSource.Count%2A> 속성 나타내는 기본 목록에서 항목의 수를 가져옵니다는 <xref:System.Windows.Forms.BindingSource.List%2A> 속성의 값에 의해 수정 되는 <xref:System.Windows.Forms.BindingSource.Filter%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-253">The <xref:System.Windows.Forms.BindingSource.Count%2A> property gets the number of items in the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property as modified by the value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-254">다음 코드 예제는 <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, 및 <xref:System.Windows.Forms.BindingSource.Count%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-254">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="f04cf-255">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms.BindingSource> 라는 `BindingSource1`, 라는 두 개의 레이블이 `label1` 및 `label2`, 이라는 버튼 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-255">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="f04cf-256">연결 된 `button1_Click` 메서드는 <xref:System.Windows.Forms.Control.Click> 이벤트에 대 한 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-256">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="f04cf-257">Visual Basic 사용자는 System.Data.dll에 대 한 참조를 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-257">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager CurrencyManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CurrencyManager CurrencyManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.CurrencyManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencyManager As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::CurrencyManager ^ CurrencyManager { System::Windows::Forms::CurrencyManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyManager : System.Windows.Forms.CurrencyManager" Usage="System.Windows.Forms.BindingSource.CurrencyManager" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.ICurrencyManagerProvider.CurrencyManager</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-258">Gets the currency manager associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-258">Gets the currency manager associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-259">이 <see cref="T:System.Windows.Forms.CurrencyManager" />와 연결된 <see cref="T:System.Windows.Forms.BindingSource" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-259">The <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-260">다른 바인딩 사용 하는 동일한 데이터 멤버에 대 한 통화 관리자에 액세스 하려는 경우는 <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-260">If you want to access the currency manager for another binding to the same data member use the <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.BindingSource.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-261">Gets the current item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-261">Gets the current item in the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-262">
            <see cref="T:System.Object" /> 나타내는 기본 목록에서 현재 항목을 나타내는 <see cref="P:System.Windows.Forms.BindingSource.List" /> 속성 또는 <see langword="null" /> 는 목록에 항목이 없는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-262">An <see cref="T:System.Object" /> that represents the current item in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property, or <see langword="null" /> if the list has no items.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-263">사용 하 여는 <xref:System.Windows.Forms.BindingSource.Current%2A> 속성을 현재 항목에 액세스 하지만 사용는 <xref:System.Windows.Forms.BindingSource.List%2A> 속성 전체 목록을 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-263">Use the <xref:System.Windows.Forms.BindingSource.Current%2A> property to access the current item, but use the <xref:System.Windows.Forms.BindingSource.List%2A> property to get the entire list.</span></span> <span data-ttu-id="f04cf-264">를 현재 개체의 형식을 확인 하려면 사용 된 <xref:System.Object.GetType%2A>, 또는 <xref:System.Object.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-264">To determine the type of the current object, use the <xref:System.Object.GetType%2A>, or <xref:System.Object.ToString%2A> methods.</span></span>  
  
 <span data-ttu-id="f04cf-265">현재 항목을 변경 하려면는 <xref:System.Windows.Forms.BindingSource.Position%2A> 속성을 새 정수 계열 값 또는와 같은 탐색 방법 중 하나를 사용 <xref:System.Windows.Forms.BindingSource.MoveNext%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-265">To change the current item, set the <xref:System.Windows.Forms.BindingSource.Position%2A> property to a new integral value, or use one of the navigation methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-266">다음 코드 예제는 <xref:System.Windows.Forms.BindingSource.Current%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-266">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.Current%2A> property.</span></span> <span data-ttu-id="f04cf-267">이 예제를 실행 하려면 폼 호출에 코드를 붙여넣습니다는 `PopulateBindingSourceWithFonts` 메서드가 폼의 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-267">To run this example, paste the code into a form and call the `PopulateBindingSourceWithFonts` method from the form's <xref:System.Windows.Forms.Form.Load> event handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentChanged : EventHandler " Usage="member this.CurrentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-268">Occurs when the currently bound item changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-268">Occurs when the currently bound item changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-269"><xref:System.Windows.Forms.BindingSource.CurrentChanged> 이벤트가 발생할 때마다는 <xref:System.Windows.Forms.BindingSource.Current%2A> 다음과 같은 원인에 대 한 속성 변경:</span><span class="sxs-lookup"><span data-stu-id="f04cf-269">The <xref:System.Windows.Forms.BindingSource.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingSource.Current%2A> property changes for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="f04cf-270">현재 위치는 <xref:System.Windows.Forms.BindingSource.List%2A> 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-270">The current position of the <xref:System.Windows.Forms.BindingSource.List%2A> changes.</span></span>  
  
-   <span data-ttu-id="f04cf-271"><xref:System.Windows.Forms.BindingSource.DataSource%2A> 또는 <xref:System.Windows.Forms.BindingSource.DataMember%2A> 속성 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-271">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span>  
  
-   <span data-ttu-id="f04cf-272">기본의 멤버 자격 <xref:System.Windows.Forms.BindingSource.List%2A> 변경 된 경우 <xref:System.Windows.Forms.BindingSource.Position%2A> 다른 항목을 참조 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-272">The membership of the underlying <xref:System.Windows.Forms.BindingSource.List%2A> changes, which causes <xref:System.Windows.Forms.BindingSource.Position%2A> to refer to a different item.</span></span> <span data-ttu-id="f04cf-273">추가 또는 삭제는 현재 항목을 삭제 하거나 현재 항목 자체를 이동 하거나 현재 위치에 항목을 이동 하기 전에 항목을 예로 들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-273">Examples include adding or deleting an item before the current item, deleting or moving the current item itself, or moving an item to the current position.</span></span>  
  
-   <span data-ttu-id="f04cf-274">새 정렬 또는 필터링 작업에 의해 기본 목록이 새로 고쳐집니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-274">The underlying list is refreshed by a new sorting or filtering operation.</span></span>  
  
 <span data-ttu-id="f04cf-275">이 이벤트는 발생 하는 경우는 <xref:System.Windows.Forms.BindingSource.Current%2A> 속성의 새 값이 이미 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-275">When this event is triggered, the <xref:System.Windows.Forms.BindingSource.Current%2A> property will already contain its new value.</span></span>  
  
 <span data-ttu-id="f04cf-276"><xref:System.Windows.Forms.BindingSource.CurrentChanged> 에 대 한 기본 이벤트는 <xref:System.Windows.Forms.BindingSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-276"><xref:System.Windows.Forms.BindingSource.CurrentChanged> is the default event for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
 <span data-ttu-id="f04cf-277">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-277">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentItemChanged : EventHandler " Usage="member this.CurrentItemChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-278">Occurs when a property value of the <see cref="P:System.Windows.Forms.BindingSource.Current" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-278">Occurs when a property value of the <see cref="P:System.Windows.Forms.BindingSource.Current" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-279"><xref:System.Windows.Forms.BindingSource.CurrentItemChanged> 이벤트는 모든를 발생 시키는 조건에 대 한 응답에는 <xref:System.Windows.Forms.BindingSource.CurrentChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-279">The <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> event is raised in response to all of the circumstances that raise the <xref:System.Windows.Forms.BindingSource.CurrentChanged> event.</span></span> <span data-ttu-id="f04cf-280">또한 <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> 될 때마다 발생 하는 항목의 속성 중 하나의 값 <xref:System.Windows.Forms.BindingSource.Current%2A> 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-280">Additionally, <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> is also fired whenever the value of one of the properties of <xref:System.Windows.Forms.BindingSource.Current%2A> is changed.</span></span>  
  
 <span data-ttu-id="f04cf-281">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-281">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-282">Occurs when a currency-related exception is silently handled by the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-282">Occurs when a currency-related exception is silently handled by the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-283">이 이벤트는 정보를 제공 하 고 CLS 규격 예외만 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-283">This event is informational and reports CLS-compliant exceptions only.</span></span> <span data-ttu-id="f04cf-284">어떤 유형의 예외가 발생 확인 하려면이 이벤트를 처리 하 고 확인는 <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> 의 속성은 <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-284">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="f04cf-285">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-285">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Windows.Forms.BindingSource.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-286">Gets or sets the specific list in the data source to which the connector currently binds to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-286">Gets or sets the specific list in the data source to which the connector currently binds to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-287">목록 (또는 행)의 이름에서 <see cref="P:System.Windows.Forms.BindingSource.DataSource" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-287">The name of a list (or row) in the <see cref="P:System.Windows.Forms.BindingSource.DataSource" />.</span>
          </span>
          <span data-ttu-id="f04cf-288">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-288">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-289">경우는 <xref:System.Windows.Forms.BindingSource.DataSource%2A> 여러 목록 (또는 테이블)가 포함의 데이터를 설정 해야는 <xref:System.Windows.Forms.BindingSource.DataMember%2A> 속성을 소스 중 하나의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-289">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> contains multiple lists (or tables) of data, you should set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to the name of one of the sources.</span></span>  
  
 <span data-ttu-id="f04cf-290">이 속성 설정에서 <xref:System.Windows.Forms.BindingSource.DataMemberChanged> 이벤트</span><span class="sxs-lookup"><span data-stu-id="f04cf-290">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataMemberChanged;" />
      <MemberSignature Language="F#" Value="member this.DataMemberChanged : EventHandler " Usage="member this.DataMemberChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-291">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> property value has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-291">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> property value has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-292"><xref:System.Windows.Forms.BindingSource.DataMemberChanged> 이벤트 발생 후의 <xref:System.Windows.Forms.BindingSource.DataMember%2A> 속성 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-292">The <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property changes.</span></span>  
  
 <span data-ttu-id="f04cf-293">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-293">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.BindingSource.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-294">Gets or sets the data source that the connector binds to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-294">Gets or sets the data source that the connector binds to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-295">
            <see cref="T:System.Object" /> 데이터 원본으로 역할을 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-295">An <see cref="T:System.Object" /> that acts as a data source.</span>
          </span>
          <span data-ttu-id="f04cf-296">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-296">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-297"><xref:System.Windows.Forms.BindingSource.DataSource%2A> 다양 한 형식, 개체 및 형식의 목록을 비롯 한 데이터 원본 속성을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-297">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property can be set to a number of data sources, including types, objects, and lists of types.</span></span> <span data-ttu-id="f04cf-298">결과 데이터 소스 목록으로 노출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-298">The resulting data source will be exposed as a list.</span></span> <span data-ttu-id="f04cf-299">다음 표에서 몇 가지 일반적인 데이터 소스 및 목록 계산 결과 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-299">The following table shows some of the common data sources and the resulting list evaluation.</span></span>  
  
|<span data-ttu-id="f04cf-300">DataSource 속성</span><span class="sxs-lookup"><span data-stu-id="f04cf-300">DataSource property</span></span>|<span data-ttu-id="f04cf-301">목록 결과</span><span class="sxs-lookup"><span data-stu-id="f04cf-301">List results</span></span>|  
|-------------------------|------------------|  
|`null`|<span data-ttu-id="f04cf-302">빈 <xref:System.ComponentModel.IBindingList> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-302">An empty <xref:System.ComponentModel.IBindingList> of objects.</span></span> <span data-ttu-id="f04cf-303">추가 된 항목의 형식으로 목록을 설정 항목을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-303">Adding an item sets the list to the type of the added item.</span></span>|  
|<span data-ttu-id="f04cf-304">`null` 와 <xref:System.Windows.Forms.BindingSource.DataMember%2A> 설정</span><span class="sxs-lookup"><span data-stu-id="f04cf-304">`null` with <xref:System.Windows.Forms.BindingSource.DataMember%2A> set</span></span>|<span data-ttu-id="f04cf-305">지원 되지 <xref:System.ArgumentException>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-305">Not supported, raises <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="f04cf-306">목록이 아닌 형식 또는 "T" 유형의 개체</span><span class="sxs-lookup"><span data-stu-id="f04cf-306">Non-list type or object of type "T"</span></span>|<span data-ttu-id="f04cf-307">빈 <xref:System.ComponentModel.IBindingList> "T" 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-307">Empty <xref:System.ComponentModel.IBindingList> of type "T".</span></span>|  
|<span data-ttu-id="f04cf-308">배열 인스턴스</span><span class="sxs-lookup"><span data-stu-id="f04cf-308">Array instance</span></span>|<span data-ttu-id="f04cf-309"><xref:System.ComponentModel.IBindingList> 배열 요소를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-309"><xref:System.ComponentModel.IBindingList> containing the array elements.</span></span>|  
|<span data-ttu-id="f04cf-310"><xref:System.Collections.IEnumerable> 인스턴스</span><span class="sxs-lookup"><span data-stu-id="f04cf-310"><xref:System.Collections.IEnumerable> instance</span></span>|<span data-ttu-id="f04cf-311"><xref:System.ComponentModel.IBindingList> 포함 하는 <xref:System.Collections.IEnumerable> 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-311">An <xref:System.ComponentModel.IBindingList> containing the <xref:System.Collections.IEnumerable> items.</span></span>|  
|<span data-ttu-id="f04cf-312">"T" 유형이 포함 된 인스턴스를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-312">List instance containing type "T"</span></span>|<span data-ttu-id="f04cf-313"><xref:System.ComponentModel.IBindingList> "T" 형식은 포함 하는 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="f04cf-313"><xref:System.ComponentModel.IBindingList> instance containing type "T".</span></span>|  
  
 <span data-ttu-id="f04cf-314">또한 <xref:System.Windows.Forms.BindingSource.DataSource%2A> 와 같은 다른 목록 형식으로 설정할 수 있습니다 <xref:System.ComponentModel.IListSource> 및 <xref:System.ComponentModel.ITypedList> 및 <xref:System.Windows.Forms.BindingSource> 적절히 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-314">In addition, <xref:System.Windows.Forms.BindingSource.DataSource%2A> can be set to other list types such as <xref:System.ComponentModel.IListSource> and <xref:System.ComponentModel.ITypedList> and the <xref:System.Windows.Forms.BindingSource> will handle them appropriately.</span></span> <span data-ttu-id="f04cf-315">이 경우 목록에 포함 된 형식은 기본 생성자가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-315">In this case, the type contained in the list should have a default constructor.</span></span>  
  
 <span data-ttu-id="f04cf-316">데이터 소스에 제공 된 참조 목록 또는 테이블을 여러 개 포함 되어 있으면을 설정할 때 설정 해야 합니다는 <xref:System.Windows.Forms.BindingSource.DataMember%2A> 속성을 바인딩할 목록을 지정 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-316">When setting a data source, if the supplied reference contains more than one list or table, you must set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a string that specifies the list to bind to.</span></span> <span data-ttu-id="f04cf-317">이 속성 설정에서 <xref:System.Windows.Forms.BindingSource.DataSourceChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-317">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f04cf-318">변경 내용을 확인 하는 경우는 <xref:System.Windows.Forms.BindingSource.DataSource%2A> 속성 값을 해야 이렇게 하면 UI 변경 내용이 반영 되도록 사용자 인터페이스 (UI) 스레드에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-318">If you make any changes to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property value, you should do so on the user interface (UI) thread to ensure that the UI reflects the changes.</span></span>  
  
 <span data-ttu-id="f04cf-319"><xref:System.Windows.Forms.BindingSource.DataSource%2A> 속성은 기본 속성에 대 한는 <xref:System.Windows.Forms.BindingSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-319">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property is the default property for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-320">다음 코드 예제에서는 할당에 고객 목록이 <xref:System.Windows.Forms.BindingSource.DataSource%2A> 의 <xref:System.Windows.Forms.BindingSource> 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-320">The following code example assigns a list of customers to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> of a <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="f04cf-321">이 코드 예제는 아래에 보다 큰 예제의 일부 [하는 방법: BindingSource ResetItem 메서드를 사용 하 여 변경 알림 발생](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-321">This code example is part of a larger example provided at [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-322">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> property value has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-322">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> property value has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-323"><xref:System.Windows.Forms.BindingSource.DataSourceChanged> 이벤트 발생 후의 <xref:System.Windows.Forms.BindingSource.DataSource%2A> 속성 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-323">The <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property changes.</span></span>  
  
 <span data-ttu-id="f04cf-324">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-324">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="bindingSource.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f04cf-325">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-325">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-326">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.BindingSource" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-326">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.BindingSource" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-327">이 메서드는 public `Dispose` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-327">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f04cf-328">`Dispose` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-328">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="f04cf-329"><xref:System.Object.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-329"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="f04cf-330">경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Windows.Forms.BindingSource> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-330">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.BindingSource> references.</span></span> <span data-ttu-id="f04cf-331">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-331">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f04cf-332">
            <para>
              <see langword="Dispose" /> 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" /> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) 구현 합니다.  에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 Resources](~/docs/standard/garbage-collection/unmanaged.md) 정리 하 고 [Finalize 메서드를 재정의] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-332">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="bindingSource.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-333">Applies pending changes to the underlying data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-333">Applies pending changes to the underlying data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-334">경우는 <xref:System.Windows.Forms.BindingSource.EndEdit%2A> 메서드가 호출 되 면 보류 중인 변경 내용이 모든 데이터 원본에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-334">When the <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is called, all pending changes are applied to the underlying data source.</span></span>  
  
 <span data-ttu-id="f04cf-335">데이터 소스에 포함 된 개체를 구현 하지 않으면이 메서드에서 아무 작업도 <xref:System.ComponentModel.IEditableObject> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-335">This method has no effect unless the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="f04cf-336">개체를 구현 하지 않는 경우는 <xref:System.ComponentModel.IEditableObject> 인터페이스, 데이터 변경에는 각 변경 후 즉시 데이터 원본에 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-336">If the objects do not implement the <xref:System.ComponentModel.IEditableObject> interface, changes to the data are copied to the underlying data source immediately after each change.</span></span>  
  
 <span data-ttu-id="f04cf-337">이 메서드는 <xref:System.Windows.Forms.BindingSource.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-337">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="System.Windows.Forms.BindingSource.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-338">Gets or sets the expression used to filter which rows are viewed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-338">Gets or sets the expression used to filter which rows are viewed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-339">행의 필터링 방법을 지정하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-339">A string that specifies how rows are to be filtered.</span>
          </span>
          <span data-ttu-id="f04cf-340">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-340">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-341">일반적으로 복잡 한 데이터 바인딩 시나리오에 사용 된 <xref:System.Windows.Forms.BindingSource.Filter%2A> 속성의 하위 집합을 볼 수 있습니다는 <xref:System.Windows.Forms.BindingSource.DataSource%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-341">Typically used in complex data-binding scenarios, the <xref:System.Windows.Forms.BindingSource.Filter%2A> property allows you to view a subset of the <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="f04cf-342">기본 목록 에서만 구현 하는 <xref:System.ComponentModel.IBindingListView> 인터페이스 필터링을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-342">Only underlying lists that implement the <xref:System.ComponentModel.IBindingListView> interface support filtering.</span></span>  
  
 <span data-ttu-id="f04cf-343">때 <xref:System.Windows.Forms.BindingSource.Filter%2A> 않습니다 `null`, <xref:System.Windows.Forms.BindingSource> 내부 목록에이 속성을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-343">When <xref:System.Windows.Forms.BindingSource.Filter%2A> is not `null`, the <xref:System.Windows.Forms.BindingSource> passes this property to the underlying list.</span></span> <span data-ttu-id="f04cf-344">개체 초기화 하는 동안이 속성을 설정 하면 초기화가 완료 된 후 호출 될 때까지 지연 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-344">If you set this property during object initialization, the call will be deferred until after initialization is complete.</span></span>  
  
 <span data-ttu-id="f04cf-345">필터 값을 구성 하려면 다음 연산자와 값을 필터링 할 열의 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-345">To form a filter value, specify the name of a column followed by an operator and a value to filter on.</span></span> <span data-ttu-id="f04cf-346">데이터 원본에 허용 되는 필터 구문에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-346">The accepted filter syntax depends on the underlying data source.</span></span> <span data-ttu-id="f04cf-347">기본 데이터 원본이 있는 경우는 <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, 또는 <xref:System.Data.DataView>, 부울 식에 대해 문서화 된 구문을 사용 하 여 지정할 수 있습니다는 <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-347">If the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, you can specify Boolean expressions using the syntax documented for the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f04cf-348">값은 <xref:System.Windows.Forms.BindingSource.Filter%2A> 속성의 값에 영향을 줍니다는 <xref:System.Windows.Forms.BindingSource.Count%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-348">The value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property affects the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span> <span data-ttu-id="f04cf-349">또한는 <xref:System.Windows.Forms.BindingSource.Filter%2A> 값은 데이터 원본이 변경 될 때 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-349">Additionally, the <xref:System.Windows.Forms.BindingSource.Filter%2A> value will persist when the data source changes.</span></span> <span data-ttu-id="f04cf-350">필터링을 중지 하려면는 <xref:System.Windows.Forms.BindingSource.DataSource%2A>, 호출 된 <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-350">To stop filtering the <xref:System.Windows.Forms.BindingSource.DataSource%2A>, call the <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-351">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Forms.BindingSource.Filter%2A> 속성으로는 <xref:System.Data.DataView>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-351">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Filter%2A> property with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="f04cf-352">이 예제를 실행 하려면 Windows Form과 호출에 코드를 붙여 `PopulateDataViewAndFilter` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-352">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFilter` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="f04cf-353">가져오는 것이 양식에 <xref:System.Xml> 및 <xref:System.IO> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-353">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveFilter" />
        <altmember cref="P:System.ComponentModel.IBindingList.IsSorted" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-354">Find the specified item in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-354">Find the specified item in the data source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public virtual int Find (System.ComponentModel.PropertyDescriptor prop, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Find(class System.ComponentModel.PropertyDescriptor prop, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Find (prop As PropertyDescriptor, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Find(System::ComponentModel::PropertyDescriptor ^ prop, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Find : System.ComponentModel.PropertyDescriptor * obj -&gt; int&#xA;override this.Find : System.ComponentModel.PropertyDescriptor * obj -&gt; int" Usage="bindingSource.Find (prop, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prop">
          <span data-ttu-id="f04cf-355">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-355">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="f04cf-356">The value of <c>prop</c> to match.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-356">The value of <c>prop</c> to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-357">Searches for the index of the item that has the given property descriptor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-357">Searches for the index of the item that has the given property descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04cf-358">The zero-based index of the item that has the given value for <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-358">The zero-based index of the item that has the given value for <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-359">이 메서드는 일반적으로 사용 되는 복잡 한 데이터 바인딩 경우에 첫 번째 행에서 지정 된 필드의 값을 찾고는 `prop` 매개 변수 값과 같은지는 `key` 매개 변수</span><span class="sxs-lookup"><span data-stu-id="f04cf-359">This method is typically used in complex data-binding cases to locate the first row where the value of the field specified by the `prop` parameter equals the value of the `key` parameter</span></span>  
  
 <span data-ttu-id="f04cf-360">이 메서드는 단순히 요청 내부 목록에 참조 <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-360">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f04cf-361">예를 들어, 기본 데이터 원본이 <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, 또는 <xref:System.Data.DataView>,이 메서드를 호출는 <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-361">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f04cf-362">동작은 <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>와 같은 반환 되는 값, 일치 하는 항목이 있으면 기본 목록에 메서드의 구현에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-362">The behavior of <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-363">다음 코드 예제에서는 <xref:System.Windows.Forms.BindingSource.Find%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-363">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method.</span></span> <span data-ttu-id="f04cf-364">전체 예제 클래스 개요 항목을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="f04cf-364">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f04cf-365">The underlying list is not of type <see cref="T:System.ComponentModel.IBindingList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-365">The underlying list is not of type <see cref="T:System.ComponentModel.IBindingList" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string propertyName, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string propertyName, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (propertyName As String, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ propertyName, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.Find : string * obj -&gt; int" Usage="bindingSource.Find (propertyName, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="f04cf-366">The name of the property to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-366">The name of the property to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="f04cf-367">The value of the item with the specified <c>propertyName</c> to find.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-367">The value of the item with the specified <c>propertyName</c> to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-368">Returns the index of the item in the list with the specified property name and value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-368">Returns the index of the item in the list with the specified property name and value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04cf-369">The zero-based index of the item with the specified property name and value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-369">The zero-based index of the item with the specified property name and value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-370"><xref:System.Windows.Forms.BindingSource.Find%2A> 메서드 내부 목록 일 때만 사용 수는 <xref:System.ComponentModel.IBindingList> 검색 기능이 구현 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-370">The <xref:System.Windows.Forms.BindingSource.Find%2A> method can only be used when the underlying list is an <xref:System.ComponentModel.IBindingList> with searching implemented.</span></span> <span data-ttu-id="f04cf-371">이 메서드는 단순히 요청 내부 목록에 참조 <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-371">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f04cf-372">예를 들어, 기본 데이터 원본이 <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, 또는 <xref:System.Data.DataView>,이 메서드는 변환 `propertyName` 에 <xref:System.ComponentModel.PropertyDescriptor> 호출과 <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-372">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method converts `propertyName` to a <xref:System.ComponentModel.PropertyDescriptor> and calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A> method.</span></span> <span data-ttu-id="f04cf-373">동작은 <xref:System.Windows.Forms.BindingSource.Find%2A>와 같은 반환 되는 값, 일치 하는 항목이 있으면 기본 목록에 메서드의 구현에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-373">The behavior of <xref:System.Windows.Forms.BindingSource.Find%2A>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
 <span data-ttu-id="f04cf-374">속성 이름을 비교는 대/소문자 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-374">The property name comparison is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-375">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Forms.BindingSource.Find%2A> 메서드는 <xref:System.Data.DataView>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-375">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="f04cf-376">이 예제를 실행 하려면 Windows Form과 호출에 코드를 붙여 `PopulateDataViewAndFind` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-376">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFind` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="f04cf-377">가져오는 것이 양식에 <xref:System.Xml> 및 <xref:System.IO> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-377">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04cf-378">The underlying list is not a <see cref="T:System.ComponentModel.IBindingList" /> with searching functionality implemented.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-378">The underlying list is not a <see cref="T:System.ComponentModel.IBindingList" /> with searching functionality implemented.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f04cf-379">
            <paramref name="propertyName" /> does not match a property in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-379">
              <paramref name="propertyName" /> does not match a property in the list.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="bindingSource.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-380">Retrieves an enumerator for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-380">Retrieves an enumerator for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04cf-381">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-381">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingSource.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="f04cf-382">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-382">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-383">Retrieves an array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects representing the bindable properties of the data source list type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-383">Retrieves an array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects representing the bindable properties of the data source list type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04cf-384">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represents the properties on this list type used to bind data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-384">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represents the properties on this list type used to bind data.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public virtual string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string&#xA;override this.GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="bindingSource.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="f04cf-385">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-385">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-386">Gets the name of the list supplying data for the binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-386">Gets the name of the list supplying data for the binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04cf-387">The name of the list supplying the data for binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-387">The name of the list supplying the data for binding.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetRelatedCurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager (string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager(string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelatedCurrencyManager (dataMember As String) As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::CurrencyManager ^ GetRelatedCurrencyManager(System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="abstract member GetRelatedCurrencyManager : string -&gt; System.Windows.Forms.CurrencyManager&#xA;override this.GetRelatedCurrencyManager : string -&gt; System.Windows.Forms.CurrencyManager" Usage="bindingSource.GetRelatedCurrencyManager dataMember" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.ICurrencyManagerProvider.GetRelatedCurrencyManager(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataMember">
          <span data-ttu-id="f04cf-388">The name of column or list, within the data source to retrieve the currency manager for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-388">The name of column or list, within the data source to retrieve the currency manager for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-389">Gets the related currency manager for the specified data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-389">Gets the related currency manager for the specified data member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04cf-390">The related <see cref="T:System.Windows.Forms.CurrencyManager" /> for the specified data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-390">The related <see cref="T:System.Windows.Forms.CurrencyManager" /> for the specified data member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-391">경우 `dataMember` 은 `null` 또는 빈 문자열 (""), <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> 기본 통화 관리자; 반환 그렇지 않으면 다른 검사 <xref:System.Windows.Forms.BindingSource> 지정된 된 데이터 멤버에 바인딩되며 해당 현재 위치 관리자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-391">If `dataMember` is `null` or an empty string (""), <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> returns the main currency manager; otherwise, it checks for another <xref:System.Windows.Forms.BindingSource> bound to the specified data member and returns its currency manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="bindingSource.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f04cf-392">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-392">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
          <span data-ttu-id="f04cf-393">The value can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-393">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-394">Searches for the specified object and returns the index of the first occurrence within the entire list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-394">Searches for the specified object and returns the index of the first occurrence within the entire list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f04cf-395">The zero-based index of the first occurrence of the <paramref name="value" /> parameter; otherwise, -1 if <paramref name="value" /> is not in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-395">The zero-based index of the first occurrence of the <paramref name="value" /> parameter; otherwise, -1 if <paramref name="value" /> is not in the list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-396">이 구현은 기본 목록에 종속 `IndexOf` 메서드를 일반적으로 다음과 같은 특징이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-396">Although the implementation is dependent on the underlying list's `IndexOf` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="f04cf-397"><xref:System.Windows.Forms.BindingSource.List%2A> 검색은 첫 번째 요소부터 마지막 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-397">The <xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="f04cf-398">선형 검색을 수행 하는 내부 메서드 따라서 평균 실행 시간은의 값에 비례는 <xref:System.Windows.Forms.BindingSource.Count%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-398">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="f04cf-399">기본 메서드를 호출 하 여 일치 여부를 확인는 <xref:System.Object.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-399">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="bindingSource.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f04cf-400">The zero-based index at which <c>value</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-400">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f04cf-401">The <see cref="T:System.Object" /> to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-401">The <see cref="T:System.Object" /> to insert.</span>
          </span>
          <span data-ttu-id="f04cf-402">The value can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-402">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-403">Inserts an item into the list at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-403">Inserts an item into the list at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-404">이 메서드는 <xref:System.Windows.Forms.BindingSource.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-404">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f04cf-405">
            <paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-405">
              <paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f04cf-406">The list is read-only or has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-406">The list is read-only or has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBindingSuspended : bool" Usage="System.Windows.Forms.BindingSource.IsBindingSuspended" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-407">Gets a value indicating whether the list binding is suspended.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-407">Gets a value indicating whether the list binding is suspended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-408">
            <see langword="true" /> 바인딩이 나타내기 위해 일시 중단 됩니다. 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-408">
              <see langword="true" /> to indicate the binding is suspended; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Windows.Forms.BindingSource.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-409">Gets a value indicating whether the underlying list has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-409">Gets a value indicating whether the underlying list has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-410">
            <see langword="true" /> 기본 목록의 크기가 고정된 되어 있으면 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-410">
              <see langword="true" /> if the underlying list has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-411">목록의 크기가 고정 되어 있으면 것 없도록를 추가 하거나 제거할 요소의 목록을 만든 후 기존 요소를 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-411">If the list has a fixed size, it does not allow the addition or removal of elements after the list has been created, but you can modify existing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.BindingSource.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-412">Gets a value indicating whether the underlying list is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-412">Gets a value indicating whether the underlying list is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-413">목록이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-413">
              <see langword="true" /> if the list is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-414">읽기 전용 목록 목록을 만든 다음에 추가, 제거 또는 수정 된 모든 목록 항목의 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-414">A list that is read-only does not allow the addition, removal, or modification of any list items after the list is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSorted">
      <MemberSignature Language="C#" Value="public virtual bool IsSorted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSorted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSorted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSorted : bool" Usage="System.Windows.Forms.BindingSource.IsSorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-415">Gets a value indicating whether the items in the underlying list are sorted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-415">Gets a value indicating whether the items in the underlying list are sorted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-416">
            <see langword="true" /> 목록이 <see cref="T:System.ComponentModel.IBindingList" /> 고, 그러지 않으면 정렬 및 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-416">
              <see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingList" /> and is sorted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-417"><xref:System.Windows.Forms.BindingSource.IsSorted%2A> 항상 반환 `false` 는 목록이 아닌 경우는 <xref:System.ComponentModel.IBindingList>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-417"><xref:System.Windows.Forms.BindingSource.IsSorted%2A> always returns `false` if the list is not an <xref:System.ComponentModel.IBindingList>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Windows.Forms.BindingSource.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-418">Gets a value indicating whether access to the collection is synchronized (thread safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-418">Gets a value indicating whether access to the collection is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-419">
            <see langword="true" /> 목록을 나타내는 동기화 됩니다. 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-419">
              <see langword="true" /> to indicate the list is synchronized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Forms.BindingSource.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f04cf-420">The zero-based index of the element to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-420">The zero-based index of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-421">Gets or sets the list element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-421">Gets or sets the list element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-422">지정한 인덱스의 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-422">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-423"><xref:System.Windows.Forms.BindingSource.Item%2A> 속성은이 클래스에 대 한 인덱서를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-423">The <xref:System.Windows.Forms.BindingSource.Item%2A> property represents the indexer for this class.</span></span> <span data-ttu-id="f04cf-424">허용 `null` 을 유효한 값으로 하 고 목록에서 중복 된 항목을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-424">It accepts `null` as a valid value and allows duplicate items within the list.</span></span>  
  
 <span data-ttu-id="f04cf-425">값에서 발생 하는 설정의 <xref:System.Windows.Forms.BindingSource.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-425">Setting a value will raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f04cf-426">
            <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-426">
              <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.IList" Usage="System.Windows.Forms.BindingSource.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-427">Gets the list that the connector is bound to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-427">Gets the list that the connector is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-428">
            <see cref="T:System.Collections.IList" /> 목록 나타내는 또는 <see langword="null" /> 와 연결 된 기본 목록이 없는 경우 <see cref="T:System.Windows.Forms.BindingSource" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-428">An <see cref="T:System.Collections.IList" /> that represents the list, or <see langword="null" /> if there is no underlying list associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-429"><xref:System.Windows.Forms.BindingSource> 클래스는 다양 한 데이터 소스를 균일 하 게 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-429">The <xref:System.Windows.Forms.BindingSource> class uniformly handles different data sources.</span></span> <span data-ttu-id="f04cf-430">이상적으로 <xref:System.Windows.Forms.BindingSource.List%2A> 일반 속성을 설정 해야 <xref:System.Collections.IList>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-430">Ideally the <xref:System.Windows.Forms.BindingSource.List%2A> property should be set to a general <xref:System.Collections.IList>.</span></span> <span data-ttu-id="f04cf-431">그러나, 때때로 수 있습니다에 더 구체적인 형식으로이 속성을 캐스팅 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-431">However, sometimes it may be necessary to cast this property to a more specific type.</span></span> <span data-ttu-id="f04cf-432">다음 표에서 형식 또는 데이터 원본의 값에 따라 달라 지는 기본 목록 형식을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-432">The following table shows the underlying list type, which depends on the type or value of the data source.</span></span>  
  
|<span data-ttu-id="f04cf-433">데이터 소스 형식</span><span class="sxs-lookup"><span data-stu-id="f04cf-433">Data source type</span></span>|<span data-ttu-id="f04cf-434">기본 목록 설명</span><span class="sxs-lookup"><span data-stu-id="f04cf-434">Underlying list description</span></span>|  
|----------------------|---------------------------------|  
|<span data-ttu-id="f04cf-435"><xref:System.Windows.Forms.BindingSource.DataSource%2A> 및 <xref:System.Windows.Forms.BindingSource.DataMember%2A> 됩니다 `null`</span><span class="sxs-lookup"><span data-stu-id="f04cf-435"><xref:System.Windows.Forms.BindingSource.DataSource%2A> and <xref:System.Windows.Forms.BindingSource.DataMember%2A> are `null`</span></span>|<span data-ttu-id="f04cf-436">빈 <xref:System.Collections.ArrayList>입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-436">An empty <xref:System.Collections.ArrayList>.</span></span>|  
|<span data-ttu-id="f04cf-437"><xref:System.Windows.Forms.BindingSource.DataSource%2A> `null`, 하지만 <xref:System.Windows.Forms.BindingSource.DataMember%2A> 않습니다 `null`</span><span class="sxs-lookup"><span data-stu-id="f04cf-437"><xref:System.Windows.Forms.BindingSource.DataSource%2A> is `null`, but <xref:System.Windows.Forms.BindingSource.DataMember%2A> is not `null`</span></span>|<span data-ttu-id="f04cf-438">해당 항목이 없습니다. 가져오려는 시도가 <xref:System.Windows.Forms.BindingSource.List%2A> throw 됩니다는 <xref:System.ArgumentException>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-438">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="f04cf-439"><xref:System.Array> 인스턴스</span><span class="sxs-lookup"><span data-stu-id="f04cf-439">An <xref:System.Array> instance</span></span>|<span data-ttu-id="f04cf-440"><xref:System.Array>입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-440">An <xref:System.Array>.</span></span>|  
|<span data-ttu-id="f04cf-441"><xref:System.ComponentModel.IListSource> 인스턴스</span><span class="sxs-lookup"><span data-stu-id="f04cf-441">An <xref:System.ComponentModel.IListSource> instance</span></span>|<span data-ttu-id="f04cf-442">에 대 한 호출의 반환 값은 <xref:System.ComponentModel.IListSource.GetList%2A> 이 방식의 <xref:System.ComponentModel.IListSource> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="f04cf-442">The return value from a call to the <xref:System.ComponentModel.IListSource.GetList%2A> method of this <xref:System.ComponentModel.IListSource> instance.</span></span>|  
|<span data-ttu-id="f04cf-443"><xref:System.ComponentModel.IBindingList> 인스턴스</span><span class="sxs-lookup"><span data-stu-id="f04cf-443">An <xref:System.ComponentModel.IBindingList> instance</span></span>|<span data-ttu-id="f04cf-444"><xref:System.ComponentModel.IBindingList>입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-444">An <xref:System.ComponentModel.IBindingList>.</span></span>|  
|<span data-ttu-id="f04cf-445"><xref:System.Collections.IList> 인스턴스</span><span class="sxs-lookup"><span data-stu-id="f04cf-445">An <xref:System.Collections.IList> instance</span></span>|<span data-ttu-id="f04cf-446"><xref:System.Collections.IList>입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-446">An <xref:System.Collections.IList>.</span></span>|  
|<span data-ttu-id="f04cf-447">비-<xref:System.Collections.IList> "T" 유형의 인스턴스</span><span class="sxs-lookup"><span data-stu-id="f04cf-447">A non-<xref:System.Collections.IList> instance of type "T"</span></span>|<span data-ttu-id="f04cf-448">A <xref:System.ComponentModel.BindingList%601> 하나의 요소가 표시 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-448">A <xref:System.ComponentModel.BindingList%601> with one element.</span></span>|  
|<span data-ttu-id="f04cf-449"><xref:System.ComponentModel.ICustomTypeDescriptor> 인스턴스</span><span class="sxs-lookup"><span data-stu-id="f04cf-449">An <xref:System.ComponentModel.ICustomTypeDescriptor> instance</span></span>|<span data-ttu-id="f04cf-450"><xref:System.Collections.ArrayList> 하나의 요소가 표시 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-450">An <xref:System.Collections.ArrayList> with one element.</span></span>|  
|<span data-ttu-id="f04cf-451">는 <xref:System.Collections.IEnumerable></span><span class="sxs-lookup"><span data-stu-id="f04cf-451">An <xref:System.Collections.IEnumerable></span></span>|<span data-ttu-id="f04cf-452"><xref:System.Collections.ArrayList> 복사한 요소를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-452">An <xref:System.Collections.ArrayList> with the elements copied over.</span></span>|  
|<span data-ttu-id="f04cf-453"><xref:System.Array> 형식을 <xref:System.Windows.Forms.BindingSource.DataMember%2A> 항목의 "T"를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-453">The <xref:System.Array> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span>|<span data-ttu-id="f04cf-454"><xref:System.ComponentModel.BindingList%601></span><span class="sxs-lookup"><span data-stu-id="f04cf-454">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="f04cf-455">A <xref:System.Type> 나타내는 <xref:System.ComponentModel.IListSource> 또는 <xref:System.ComponentModel.ITypedList></span><span class="sxs-lookup"><span data-stu-id="f04cf-455">A <xref:System.Type> that represents an <xref:System.ComponentModel.IListSource> or <xref:System.ComponentModel.ITypedList></span></span>|<span data-ttu-id="f04cf-456">에 대 한 호출에서 만든 인스턴스는 <xref:System.Activator.CreateInstance%28System.Type%29> 의 메서드는 <xref:System.Activator> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-456">An instance created by a call to the <xref:System.Activator.CreateInstance%28System.Type%29> method of the <xref:System.Activator> class.</span></span> <span data-ttu-id="f04cf-457">A <xref:System.NotSupportedException> throw 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-457">A <xref:System.NotSupportedException> may be thrown.</span></span>|  
|<span data-ttu-id="f04cf-458"><xref:System.Collections.IList> 형식을 <xref:System.Windows.Forms.BindingSource.DataMember%2A> 항목의 "T"를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-458">The <xref:System.Collections.IList> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span><br /><br /> <span data-ttu-id="f04cf-459">또는</span><span class="sxs-lookup"><span data-stu-id="f04cf-459">-or-</span></span><br /><br /> <span data-ttu-id="f04cf-460">비-<xref:System.Collections.IList> 유형</span><span class="sxs-lookup"><span data-stu-id="f04cf-460">A non-<xref:System.Collections.IList> type</span></span>|<span data-ttu-id="f04cf-461"><xref:System.ComponentModel.BindingList%601></span><span class="sxs-lookup"><span data-stu-id="f04cf-461">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="f04cf-462"><xref:System.ComponentModel.ICustomTypeDescriptor> 유형</span><span class="sxs-lookup"><span data-stu-id="f04cf-462">The <xref:System.ComponentModel.ICustomTypeDescriptor> type</span></span>|<span data-ttu-id="f04cf-463">해당 항목이 없습니다. 가져오려는 시도가 <xref:System.Windows.Forms.BindingSource.List%2A> throw 됩니다는 <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-463">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.NotSupportedException>.</span></span>|  
  
 <span data-ttu-id="f04cf-464">형식을 검색 하는 경우이 <xref:System.Collections.IList> 인터페이스를 기본 컬렉션와 같은 더 복잡 해질 수 있습니다는 <xref:System.Collections.ArrayList> 또는 <xref:System.Data.DataView> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-464">If the type retrieved is the <xref:System.Collections.IList> interface, the underlying collection may be more complex, such as an <xref:System.Collections.ArrayList> or <xref:System.Data.DataView> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-465">다음 코드 예제는 <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, 및 <xref:System.Windows.Forms.BindingSource.Count%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-465">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="f04cf-466">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms.BindingSource> 라는 `BindingSource1`, 라는 두 개의 레이블이 `label1` 및 `label2`, 이라는 버튼 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-466">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="f04cf-467">연결 된 `button1_Click` 메서드는 <xref:System.Windows.Forms.Control.Click> 이벤트에 대 한 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-467">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="f04cf-468">Visual Basic 사용자는 System.Data.dll에 대 한 참조를 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-468">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ListChangedEventHandler ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ListChangedEventHandler ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ListChanged As ListChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::ListChangedEventHandler ^ ListChanged;" />
      <MemberSignature Language="F#" Value="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " Usage="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-469">Occurs when the underlying list changes or an item in the list changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-469">Occurs when the underlying list changes or an item in the list changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-470"><xref:System.Windows.Forms.BindingSource.ListChanged> 멤버 자격 또는 나타내는 기본 목록의 메타 데이터 변경 내용이 있을 때 이벤트 발생는 <xref:System.Windows.Forms.BindingSource.List%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-470">The <xref:System.Windows.Forms.BindingSource.ListChanged> event occurs when there is a change to the membership or metadata of the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="f04cf-471">항목을 추가, 제거 또는 이동 하는 경우이 이벤트는 발생 하는 예를 들어 또는 <xref:System.Windows.Forms.BindingSource.DataSource%2A> 또는 <xref:System.Windows.Forms.BindingSource.DataMember%2A> 속성 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-471">For example, this event is raised when items are added, removed, or moved, or the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span> <span data-ttu-id="f04cf-472">값은 <xref:System.Windows.Forms.BindingSource.Sort%2A> 및 <xref:System.Windows.Forms.BindingSource.Filter%2A> 속성은이 이벤트가 발생할 때 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-472">The values of the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties will persist when this event occurs.</span></span>  
  
 <span data-ttu-id="f04cf-473">이 이벤트를 설정 하 여 완전히 억제할 수 있습니다는 <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> 속성을 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-473">This event can be completely suppressed by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span> <span data-ttu-id="f04cf-474">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-474">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-475">다음 코드 예제에서는 처리는 <xref:System.Windows.Forms.BindingSource.ListChanged> 의 이벤트는 <xref:System.Windows.Forms.BindingSource> 을 탐지 구성 요소는 <xref:System.Windows.Forms.BindingSource> 구성 요소의 기본 목록이 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-475">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.ListChanged> event of the <xref:System.Windows.Forms.BindingSource> component to detect when the <xref:System.Windows.Forms.BindingSource> component's underlying list is changed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="MoveFirst">
      <MemberSignature Language="C#" Value="public void MoveFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveFirst" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveFirst ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveFirst();" />
      <MemberSignature Language="F#" Value="member this.MoveFirst : unit -&gt; unit" Usage="bindingSource.MoveFirst " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-476">Moves to the first item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-476">Moves to the first item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-477">현재 값을 변경 하는 <xref:System.Windows.Forms.BindingSource.Position%2A> 속성을 0으로, 데이터 원본에서 첫 번째 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-477">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to 0, the first item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-478">다음 코드 예제는 <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, 및 <xref:System.Windows.Forms.BindingSource.Position%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-478">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="f04cf-479">이 예제를 실행 하려면 가져오는 폼에 다음 코드를 붙여넣습니다는 <xref:System.Drawing.Drawing2D> 네임 스페이스를 포함 하 고는 <xref:System.Windows.Forms.BindingSource> 라는 `BindingSource1` 이라는 버튼 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-479">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="f04cf-480">연결의 `Form1_Load` 및 `Form1_Paint` 사용 하 여 메서드는 <xref:System.Windows.Forms.Form.Load> 및 <xref:System.Windows.Forms.Control.Paint> 양식과 연결에 대 한 이벤트는 `button1_click` 사용 하 여 메서드는 <xref:System.Windows.Forms.Control.Click> 이벤트에 대 한 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-480">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="f04cf-481">Visual Basic 사용자는 System.Data.dll에 대 한 참조를 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-481">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
      </Docs>
    </Member>
    <Member MemberName="MoveLast">
      <MemberSignature Language="C#" Value="public void MoveLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveLast() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveLast" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveLast ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveLast();" />
      <MemberSignature Language="F#" Value="member this.MoveLast : unit -&gt; unit" Usage="bindingSource.MoveLast " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-482">Moves to the last item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-482">Moves to the last item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-483">현재 값을 변경 하는 <xref:System.Windows.Forms.BindingSource.Position%2A> 속성의 값과 같은 기본 데이터 원본에 있는 마지막 항목의 인덱스에는 <xref:System.Windows.Forms.BindingSource.Count%2A> 속성 값-1입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-483">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the index of the last item in the underlying data source, which is equal to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property minus 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public void MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveNext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; unit" Usage="bindingSource.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-484">Moves to the next item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-484">Moves to the next item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-485">현재 값을 변경 하는 <xref:System.Windows.Forms.BindingSource.Position%2A> 속성의 데이터 원본에서 다음 항목을 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-485">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the next item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-486">다음 코드 예제는 <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, 및 <xref:System.Windows.Forms.BindingSource.Position%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-486">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="f04cf-487">이 예제를 실행 하려면 가져오는 폼에 다음 코드를 붙여넣습니다는 <xref:System.Drawing.Drawing2D> 네임 스페이스를 포함 하 고는 <xref:System.Windows.Forms.BindingSource> 라는 `BindingSource1` 이라는 버튼 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-487">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="f04cf-488">연결의 `Form1_Load` 및 `Form1_Paint` 사용 하 여 메서드는 <xref:System.Windows.Forms.Form.Load> 및 <xref:System.Windows.Forms.Control.Paint> 양식과 연결에 대 한 이벤트는 `button1_click` 사용 하 여 메서드는 <xref:System.Windows.Forms.Control.Click> 이벤트에 대 한 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-488">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="f04cf-489">Visual Basic 사용자는 System.Data.dll에 대 한 참조를 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-489">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public void MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Sub MovePrevious ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MovePrevious();" />
      <MemberSignature Language="F#" Value="member this.MovePrevious : unit -&gt; unit" Usage="bindingSource.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-490">Moves to the previous item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-490">Moves to the previous item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-491">현재 값을 변경 하는이 메서드는 <xref:System.Windows.Forms.BindingSource.Position%2A> 속성을 데이터 원본에서 이전 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-491">This method changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the previous item in the underlying data source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="OnAddingNew">
      <MemberSignature Language="C#" Value="protected virtual void OnAddingNew (System.ComponentModel.AddingNewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAddingNew(class System.ComponentModel.AddingNewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAddingNew (e As AddingNewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAddingNew(System::ComponentModel::AddingNewEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAddingNew : System.ComponentModel.AddingNewEventArgs -&gt; unit&#xA;override this.OnAddingNew : System.ComponentModel.AddingNewEventArgs -&gt; unit" Usage="bindingSource.OnAddingNew e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AddingNewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f04cf-492">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-492">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-493">Raises the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-493">Raises the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-494">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-494">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f04cf-495">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-495">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f04cf-496">또한 <xref:System.Windows.Forms.BindingSource.OnAddingNew%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-496">The <xref:System.Windows.Forms.BindingSource.OnAddingNew%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f04cf-497">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-497">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f04cf-498">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-498">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingComplete (e As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit&#xA;override this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="bindingSource.OnBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f04cf-499">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-499">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-500">Raises the <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-500">Raises the <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-501">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-501">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f04cf-502">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-502">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f04cf-503">또한 <xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-503">The <xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f04cf-504">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-504">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f04cf-505">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-505">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentChanged : EventArgs -&gt; unit" Usage="bindingSource.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f04cf-506">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-506">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-507">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-507">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-508">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-508">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f04cf-509">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-509">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f04cf-510">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-510">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f04cf-511">또한 <xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-511">The <xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f04cf-512">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-512">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f04cf-513">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-513">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentItemChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentItemChanged : EventArgs -&gt; unit" Usage="bindingSource.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f04cf-514">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-514">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-515">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-515">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-516">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-516">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f04cf-517">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-517">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f04cf-518">또한 <xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-518">The <xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f04cf-519">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-519">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f04cf-520">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-520">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected virtual void OnDataError (System.Windows.Forms.BindingManagerDataErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataError(class System.Windows.Forms.BindingManagerDataErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataError (e As BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataError(System::Windows::Forms::BindingManagerDataErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataError : System.Windows.Forms.BindingManagerDataErrorEventArgs -&gt; unit&#xA;override this.OnDataError : System.Windows.Forms.BindingManagerDataErrorEventArgs -&gt; unit" Usage="bindingSource.OnDataError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingManagerDataErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f04cf-521">A <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-521">A <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-522">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataError" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-522">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataError" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-523">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-523">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f04cf-524">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-524">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f04cf-525">또한 <xref:System.Windows.Forms.BindingSource.OnDataError%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-525">The <xref:System.Windows.Forms.BindingSource.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f04cf-526">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-526">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f04cf-527">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-527">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDataMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataMemberChanged : EventArgs -&gt; unit&#xA;override this.OnDataMemberChanged : EventArgs -&gt; unit" Usage="bindingSource.OnDataMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f04cf-528">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-528">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-529">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-529">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-530">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-530">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f04cf-531">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-531">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f04cf-532">또한 <xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-532">The <xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f04cf-533">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-533">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f04cf-534">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.  또한 <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-534">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method so that registered delegates receive the event.  The <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="bindingSource.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f04cf-535">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-535">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-536">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-536">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-537">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-537">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f04cf-538">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-538">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f04cf-539">또한 <xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-539">The <xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f04cf-540">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-540">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f04cf-541">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-541">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnListChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnListChanged (System.ComponentModel.ListChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnListChanged(class System.ComponentModel.ListChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnListChanged (e As ListChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnListChanged(System::ComponentModel::ListChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnListChanged : System.ComponentModel.ListChangedEventArgs -&gt; unit&#xA;override this.OnListChanged : System.ComponentModel.ListChangedEventArgs -&gt; unit" Usage="bindingSource.OnListChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ListChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f04cf-542">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-542">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-543">Raises the <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-543">Raises the <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-544">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-544">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f04cf-545">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-545">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f04cf-546">또한 <xref:System.Windows.Forms.BindingSource.OnListChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-546">The <xref:System.Windows.Forms.BindingSource.OnListChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f04cf-547">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-547">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f04cf-548">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-548">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
      </Docs>
    </Member>
    <Member MemberName="OnPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPositionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPositionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPositionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPositionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPositionChanged : EventArgs -&gt; unit&#xA;override this.OnPositionChanged : EventArgs -&gt; unit" Usage="bindingSource.OnPositionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f04cf-549">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-549">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-550">Raises the <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-550">Raises the <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-551">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-551">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f04cf-552">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-552">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f04cf-553">또한 <xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-553">The <xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f04cf-554">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-554">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f04cf-555">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-555">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.BindingSource.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-556">Gets or sets the index of the current item in the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-556">Gets or sets the index of the current item in the underlying list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-557">내부 목록에 있는 현재 항목의 위치를 나타내는 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-557">A zero-based index that specifies the position of the current item in the underlying list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-558">설정할 때의 <xref:System.Windows.Forms.BindingSource.Position%2A> 속성, 범위를 벗어난 값은 다음과 같이 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-558">When setting the <xref:System.Windows.Forms.BindingSource.Position%2A> property, out-of-range values are treated in the following manner:</span></span>  
  
-   <span data-ttu-id="f04cf-559">음수 값은 0으로 처리됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-559">Negative values are treated as 0.</span></span>  
  
-   <span data-ttu-id="f04cf-560">값 보다 크거나 <xref:System.Windows.Forms.BindingSource.Count%2A> 로 처리 <xref:System.Windows.Forms.BindingSource.Count%2A> 1을 뺀 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-560">Values greater than or equal to <xref:System.Windows.Forms.BindingSource.Count%2A> are treated as <xref:System.Windows.Forms.BindingSource.Count%2A> minus 1.</span></span>  
  
 <span data-ttu-id="f04cf-561">변경 된 <xref:System.Windows.Forms.BindingSource.Position%2A> 속성 조정 됩니다는 <xref:System.Windows.Forms.BindingSource.Current%2A> 속성 마찬가지로 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-561">Changing the <xref:System.Windows.Forms.BindingSource.Position%2A> property will adjust the <xref:System.Windows.Forms.BindingSource.Current%2A> property likewise.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-562">다음 코드 예제는 <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, 및 <xref:System.Windows.Forms.BindingSource.Position%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-562">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="f04cf-563">이 예제를 실행 하려면 가져오는 폼에 다음 코드를 붙여넣습니다는 <xref:System.Drawing.Drawing2D> 네임 스페이스를 포함 하 고는 <xref:System.Windows.Forms.BindingSource> 라는 `BindingSource1` 이라는 버튼 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-563">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="f04cf-564">연결의 `Form1_Load` 및 `Form1_Paint` 사용 하 여 메서드는 <xref:System.Windows.Forms.Form.Load> 및 <xref:System.Windows.Forms.Control.Paint> 양식과 연결에 대 한 이벤트는 `button1_click` 사용 하 여 메서드는 <xref:System.Windows.Forms.Control.Click> 이벤트에 대 한 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-564">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="f04cf-565">Visual Basic 사용자는 System.Data.dll에 대 한 참조를 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-565">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberSignature Language="F#" Value="member this.PositionChanged : EventHandler " Usage="member this.PositionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-566">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingSource.Position" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-566">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingSource.Position" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-567"><xref:System.Windows.Forms.BindingSource.PositionChanged> 이벤트 발생 후의 <xref:System.Windows.Forms.BindingSource.Position%2A> 속성이 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-567">The <xref:System.Windows.Forms.BindingSource.PositionChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.Position%2A> property has changed.</span></span>  
  
 <span data-ttu-id="f04cf-568">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-568">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseListChangedEvents">
      <MemberSignature Language="C#" Value="public bool RaiseListChangedEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RaiseListChangedEvents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property RaiseListChangedEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RaiseListChangedEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RaiseListChangedEvents : bool with get, set" Usage="System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-569">Gets or sets a value indicating whether <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-569">Gets or sets a value indicating whether <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-570">
            <see langword="true" /> 경우 <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> 이벤트 고, 그렇지 않으면 발생 해야 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-570">
              <see langword="true" /> if <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f04cf-571">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-571">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-572">경우는 <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> 속성은 `false`의 발생 일시 중단 <xref:System.Windows.Forms.BindingSource.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-572">When the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property is `false`, it suspends the raising of <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span> <span data-ttu-id="f04cf-573">이 이벤트는 바인딩된 목록 추가, 삭제, 삽입 또는 수정 항목을 포함 하 여 어떤 방식으로든에서 수정 되었다는 사실을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-573">This event indicates that the bound list has been modified in some way, including adding, deleting, inserting, or modifying items.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="bindingSource.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f04cf-574">The item to remove from the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-574">The item to remove from the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-575">Removes the specified item from the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-575">Removes the specified item from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-576"><xref:System.Windows.Forms.BindingSource.Remove%2A> 메서드를 사용 하면 검색할 목록은 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-576">The <xref:System.Windows.Forms.BindingSource.Remove%2A> method causes the list to be searched for the `value` parameter.</span></span> <span data-ttu-id="f04cf-577">하는 경우,이 메서드 매개 변수에서 항목의 <xref:System.Windows.Forms.BindingSource.List%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-577">If found, this method will attempt to remove the item from the <xref:System.Windows.Forms.BindingSource.List%2A>.</span></span> <span data-ttu-id="f04cf-578">크기가 고정된 되어 목록이 읽기 전용인 경우이 시도가 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-578">This attempt will fail if the list has a fixed size or is read-only.</span></span> <span data-ttu-id="f04cf-579">이러한 두 조건을 함께 테스트할 수 있습니다는 <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> 및 <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> 속성을 각각.</span><span class="sxs-lookup"><span data-stu-id="f04cf-579">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="f04cf-580">이 메서드는 <xref:System.Windows.Forms.BindingSource.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-580">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f04cf-581">The underlying list has a fixed size or is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-581">The underlying list has a fixed size or is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="bindingSource.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f04cf-582">The zero-based index of the item to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-582">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-583">Removes the item at the specified index in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-583">Removes the item at the specified index in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-584">이러한 두 조건을 함께 테스트할 수 있습니다는 <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> 및 <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> 속성을 각각.</span><span class="sxs-lookup"><span data-stu-id="f04cf-584">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="f04cf-585">이 메서드는 <xref:System.Windows.Forms.BindingSource.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-585">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-586">다음 코드 예제는 <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, 및 <xref:System.Windows.Forms.BindingSource.Count%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-586">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="f04cf-587">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms.BindingSource> 라는 `BindingSource1`, 라는 두 개의 레이블이 `label1` 및 `label2`, 이라는 버튼 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-587">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="f04cf-588">연결 된 `button1_Click` 메서드는 <xref:System.Windows.Forms.Control.Click> 이벤트에 대 한 `button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-588">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="f04cf-589">Visual Basic 사용자는 System.Data.dll에 대 한 참조를 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-589">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f04cf-590">
            <paramref name="index" /> is less than zero or greater than the value of the <see cref="P:System.Windows.Forms.BindingSource.Count" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-590">
              <paramref name="index" /> is less than zero or greater than the value of the <see cref="P:System.Windows.Forms.BindingSource.Count" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f04cf-591">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-591">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCurrent">
      <MemberSignature Language="C#" Value="public void RemoveCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCurrent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCurrent();" />
      <MemberSignature Language="F#" Value="member this.RemoveCurrent : unit -&gt; unit" Usage="bindingSource.RemoveCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-592">Removes the current item from the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-592">Removes the current item from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-593"><xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> 메서드는 <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-593">The <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> method is equivalent to the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f04cf-594">The <see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> property is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-594">The <see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> property is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f04cf-595">-or-  <see cref="P:System.Windows.Forms.BindingSource.Position" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-595">-or-  <see cref="P:System.Windows.Forms.BindingSource.Position" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f04cf-596">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-596">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveFilter">
      <MemberSignature Language="C#" Value="public virtual void RemoveFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFilter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveFilter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveFilter();" />
      <MemberSignature Language="F#" Value="abstract member RemoveFilter : unit -&gt; unit&#xA;override this.RemoveFilter : unit -&gt; unit" Usage="bindingSource.RemoveFilter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-597">Removes the filter associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-597">Removes the filter associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-598"><xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> 메서드 내부 목록에 요청 참조 <xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-598">The <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f04cf-599">만 구현 하는 목록 <xref:System.ComponentModel.IBindingListView> 필터링을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-599">Only lists that implement <xref:System.ComponentModel.IBindingListView> support filtering.</span></span>  
  
 <span data-ttu-id="f04cf-600">기본적으로이 메서드를 호출은 설정에 해당 하는 <xref:System.Windows.Forms.BindingSource.Filter%2A> 속성을 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-600">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Filter%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f04cf-601">The underlying list does not support filtering.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-601">The underlying list does not support filtering.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSort">
      <MemberSignature Language="C#" Value="public virtual void RemoveSort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveSort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSort();" />
      <MemberSignature Language="F#" Value="abstract member RemoveSort : unit -&gt; unit&#xA;override this.RemoveSort : unit -&gt; unit" Usage="bindingSource.RemoveSort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-602">Removes the sort associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-602">Removes the sort associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-603"><xref:System.Windows.Forms.BindingSource.RemoveSort%2A> 메서드 내부 목록에 요청 참조 <xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-603">The <xref:System.Windows.Forms.BindingSource.RemoveSort%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f04cf-604">만 구현 하는 목록 <xref:System.ComponentModel.IBindingList> 정렬을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-604">Only lists that implement <xref:System.ComponentModel.IBindingList> support sorting.</span></span>  
  
 <span data-ttu-id="f04cf-605">기본적으로이 메서드를 호출은 설정에 해당 하는 <xref:System.Windows.Forms.BindingSource.Sort%2A> 속성을 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-605">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f04cf-606">The underlying list does not support sorting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-606">The underlying list does not support sorting.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
      </Docs>
    </Member>
    <Member MemberName="ResetAllowNew">
      <MemberSignature Language="C#" Value="public virtual void ResetAllowNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllowNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetAllowNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetAllowNew();" />
      <MemberSignature Language="F#" Value="abstract member ResetAllowNew : unit -&gt; unit&#xA;override this.ResetAllowNew : unit -&gt; unit" Usage="bindingSource.ResetAllowNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-607">Reinitializes the <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-607">Reinitializes the <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-608"><xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> 메서드 다시 초기화는 <xref:System.Windows.Forms.BindingSource.AllowNew%2A> 해당 값을 반영 하는 속성 <xref:System.Windows.Forms.BindingSource.AllowNew%2A> 기본 목록에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-608">The <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method reinitializes the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to reflect the value of the corresponding <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property in the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
      </Docs>
    </Member>
    <Member MemberName="ResetBindings">
      <MemberSignature Language="C#" Value="public void ResetBindings (bool metadataChanged);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBindings(bool metadataChanged) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBindings (metadataChanged As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBindings(bool metadataChanged);" />
      <MemberSignature Language="F#" Value="member this.ResetBindings : bool -&gt; unit" Usage="bindingSource.ResetBindings metadataChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataChanged" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataChanged">
          <span data-ttu-id="f04cf-609">
            <see langword="true" /> if the data schema has changed; <see langword="false" /> if only values have changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-609">
              <see langword="true" /> if the data schema has changed; <see langword="false" /> if only values have changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-610">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-610">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-611"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> 메서드에 바인딩된 모든 컨트롤에 알립니다는 <xref:System.Windows.Forms.BindingSource> 해당 값을 새로 고칠 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-611">The <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method informs all controls bound to the <xref:System.Windows.Forms.BindingSource> to refresh their values.</span></span> <span data-ttu-id="f04cf-612">메서드는이 발생 시켜는 <xref:System.Windows.Forms.BindingSource.ListChanged> 이벤트를 한 번 이상; `metaDataChanged` 매개 변수는 기본 변경의 특성을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-612">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event at least once; the `metaDataChanged` parameter indicates the nature of the underlying change.</span></span>  
  
-   <span data-ttu-id="f04cf-613">A `metaDataChanged` 값 `true` 나타냅니다의 데이터 스키마 <xref:System.Windows.Forms.BindingSource> 변경 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-613">A `metaDataChanged` value of `true` indicates that the data schema of <xref:System.Windows.Forms.BindingSource> has changed.</span></span> <span data-ttu-id="f04cf-614">A <xref:System.Windows.Forms.BindingSource.ListChanged> 이 <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> 로 설정 <xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-614">A <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="f04cf-615">A `metaDataChanged` 값 `false` 하나 이상의 항목의 값만 있는 변경 되었음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-615">A `metaDataChanged` value of `false` indicates that only the values of one or more items have changed.</span></span>  
  
 <span data-ttu-id="f04cf-616">값에 관계 없이 `metaDataChanged`, <xref:System.Windows.Forms.BindingSource.ListChanged> 이 <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> 로 설정 <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-616">Regardless of the value of `metaDataChanged`, a <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f04cf-617">결과적으로 호출 <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> 의 매개 변수와 함께 `true` 두 시킵니다 <xref:System.Windows.Forms.BindingSource.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-617">As a consequence, calling <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> with a parameter of `true` will raise two <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span>  
  
 <span data-ttu-id="f04cf-618"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> 데이터 바인딩, 설정 하는 등 주요 사항을 변경 하면 다른 멤버 때마다 자동으로 호출 됩니다는 <xref:System.Windows.Forms.BindingSource.DataSource%2A> 또는 <xref:System.Windows.Forms.BindingSource.DataMember%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-618"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> is automatically called whenever another member makes major changes to the data-binding, such as setting the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties.</span></span> <span data-ttu-id="f04cf-619">그러나 프로그래머는이 메서드를 명시적으로 호출할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-619">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-620">다음 코드 예제에서는 <xref:System.Windows.Forms.BindingSource> 구성 요소에 바인딩하는 배열 목록을 변경 알림을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-620">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind an array list, which does not provide change notification.</span></span> <span data-ttu-id="f04cf-621">항목 목록에서 제거 되 고 호출 하 여 바인딩된 컨트롤 변경 알림이 표시 됩니다는 <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-621">An item is removed from the list, and the bound controls are notified of the change by calling the <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method.</span></span> <span data-ttu-id="f04cf-622">이 코드 예제는에 제공 된 큰 예제의 일부 [하는 방법: BindingSource가 있는 Windows Forms 컨트롤에 데이터 소스 업데이트 반영](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-622">This code example is part of a larger example provided in [How to: Reflect Data Source Updates in a Windows Forms Control with the BindingSource](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResetCurrentItem">
      <MemberSignature Language="C#" Value="public void ResetCurrentItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCurrentItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetCurrentItem" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCurrentItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCurrentItem();" />
      <MemberSignature Language="F#" Value="member this.ResetCurrentItem : unit -&gt; unit" Usage="bindingSource.ResetCurrentItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-623">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the currently selected item and refresh its displayed value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-623">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the currently selected item and refresh its displayed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-624">이 메서드는 발생 하는 호출 된 <xref:System.Windows.Forms.BindingSource.ListChanged> 이벤트를 발생 하 고, 현재 위치에서 변경 된 항목을 지정 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-624">Calling this method will cause the <xref:System.Windows.Forms.BindingSource.ListChanged> event to occur, specifying the item changed at the current position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetItem">
      <MemberSignature Language="C#" Value="public void ResetItem (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetItem(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetItem (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetItem(int itemIndex);" />
      <MemberSignature Language="F#" Value="member this.ResetItem : int -&gt; unit" Usage="bindingSource.ResetItem itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">
          <span data-ttu-id="f04cf-625">The zero-based index of the item that has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-625">The zero-based index of the item that has changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-626">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the item at the specified index, and refresh its displayed value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-626">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the item at the specified index, and refresh its displayed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-627"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> 메서드는 지정 된 항목에 바인딩된 모든 컨트롤에 알립니다 <xref:System.Windows.Forms.BindingSource.Position%2A> 해당 값을 새로 고칠 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-627">The <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method notifies all controls bound to the item at the specified <xref:System.Windows.Forms.BindingSource.Position%2A> to refresh their values.</span></span> <span data-ttu-id="f04cf-628">메서드는이 발생 시켜는 <xref:System.Windows.Forms.BindingSource.ListChanged> 사용 하 여 이벤트 <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> 로 설정 <xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-628">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f04cf-629"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> 개별 항목의 값이 변경 될 때마다 자동으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-629"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> is automatically called whenever changes are made to the value of an individual item.</span></span> <span data-ttu-id="f04cf-630">그러나 프로그래머는이 메서드를 명시적으로 호출할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-630">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-631">다음 코드 예제에서는 <xref:System.Windows.Forms.BindingSource> 구성 요소 목록을에 바인딩하는 <xref:System.Windows.Forms.DataGridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-631">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="f04cf-632">목록 변경 알림을 발생 시 키 지 않습니다 하므로 <xref:System.Windows.Forms.BindingSource.ResetItem%2A> 메서드를는 <xref:System.Windows.Forms.BindingSource> 발생 하는 데 사용 되는 <xref:System.Windows.Forms.BindingSource.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-632">The list does not raise change notifications, so the <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method on the <xref:System.Windows.Forms.BindingSource> is used to raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span> <span data-ttu-id="f04cf-633">이 코드 예제는에 제공 된 큰 예제의 일부 [하는 방법: BindingSource ResetItem 메서드를 사용 하 여 변경 알림 발생](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-633">This code example is part of a larger example provided in [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeBinding();" />
      <MemberSignature Language="F#" Value="member this.ResumeBinding : unit -&gt; unit" Usage="bindingSource.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-634">Resumes data binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-634">Resumes data binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-635"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 및 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> 단순 바인딩 시나리오에서 데이터 바인딩 했다가 일시적 중단을 허용 하는 두 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-635"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="f04cf-636">데이터 바인딩 사용자 유효성 검사를 수행 하기 전에 데이터 필드에 몇 가지 편집 하도록 허용 해야 하는 경우에 일반적으로 일시 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-636">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="f04cf-637">예를 들어 하지만 유효성을 검사 하는 두 번째에 따라 한 필드를 변경 해야 하는 경우 첫 번째 필드에 오류에 포함 되도록 두 번째 필드를 리라 예상 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-637">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f04cf-638">사용 하 여 <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 변경 내용이 될 때까지 데이터 원본에 반영 되지 않도록 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> 호출 되지만 실제로 발생 이벤트를 억제 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-638">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="f04cf-639">와 같은 복잡 한 데이터 바인딩을 사용 하는 컨트롤의 <xref:System.Windows.Forms.DataGridView> 제어와 같은 변경 이벤트에 따라 해당 값을 업데이트 합니다는 <xref:System.Windows.Forms.CurrencyManager.ListChanged> 하므로 호출 하는 이벤트 <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 에서 데이터 원본에 대 한 변경 내용을 수신 주지 않는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-639">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="f04cf-640">이러한 이유로이 <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 및 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> 와 같은 단순 바인딩된 컨트롤을 사용 하도록 설계 되는 <xref:System.Windows.Forms.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-640">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="f04cf-641">또는 사용할 수 있습니다 이러한 메서드는 복합 바인딩 시나리오에 표시 하지 않는 경우 <xref:System.Windows.Forms.BindingSource.ListChanged> 설정 하 여 이벤트는 <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> 속성을 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-641">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public string Sort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Sort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Property Sort As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Sort { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sort : string with get, set" Usage="System.Windows.Forms.BindingSource.Sort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-642">Gets or sets the column names used for sorting, and the sort order for viewing the rows in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-642">Gets or sets the column names used for sorting, and the sort order for viewing the rows in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-643">열 이름과 "ASC"(오름차순) 또는 "DESC"(내림차순)로 구성된 문자열로, 대/소문자를 구분합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-643">A case-sensitive string containing the column name followed by "ASC" (for ascending) or "DESC" (for descending).</span>
          </span>
          <span data-ttu-id="f04cf-644">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-644">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-645"><xref:System.Windows.Forms.BindingSource.Sort%2A> 속성은 대/소문자 구분 정렬 방향 함께 행을 정렬 하는 데 사용 하는 열 이름을 지정 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-645">The <xref:System.Windows.Forms.BindingSource.Sort%2A> property is a case-sensitive string that specifies the column names used to sort the rows, along with the sort direction.</span></span> <span data-ttu-id="f04cf-646">열은 기본적으로 오름차순으로 정렬됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-646">Columns are sorted ascending by default.</span></span> <span data-ttu-id="f04cf-647">여러 열 수 있습니다 사용할 쉼표로 구분 하 여 같은 `"State, ZipCode DESC"`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-647">Multiple columns can be separated by commas, such as `"State, ZipCode DESC"`.</span></span>  
  
 <span data-ttu-id="f04cf-648">기본 목록이 정렬을 지원 하려면 구현 해야 합니다는 <xref:System.ComponentModel.IBindingList> 또는 <xref:System.ComponentModel.IBindingListView> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-648">To support sorting, the underlying list must implement the <xref:System.ComponentModel.IBindingList> or <xref:System.ComponentModel.IBindingListView> interfaces.</span></span> <span data-ttu-id="f04cf-649">이 기능을 통해 쿼리할 수 있습니다는 <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-649">This capability can be queried through the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property.</span></span> <span data-ttu-id="f04cf-650">여러 열 정렬을 사용할 수는 <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> 속성은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-650">Multicolumn sorting is available when the <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="f04cf-651">설정의 <xref:System.Windows.Forms.BindingSource.Sort%2A> 속성 내부 목록을 해당 유형에 따라 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-651">Setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will change the internal list depending on its type:</span></span>  
  
-   <span data-ttu-id="f04cf-652">목록 형식인 경우 <xref:System.ComponentModel.IBindingList>, <xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType> 및 <xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType> 속성은 내부 목록에 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-652">If the list is of type <xref:System.ComponentModel.IBindingList>, the <xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType> properties are set in the internal list.</span></span>  
  
-   <span data-ttu-id="f04cf-653">목록 형식인 경우 <xref:System.ComponentModel.IBindingListView>, <xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-653">If the list is of type <xref:System.ComponentModel.IBindingListView>, the <xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType> property is set.</span></span>  
  
 <span data-ttu-id="f04cf-654">내부 목록의 정렬 속성만 정렬 문자열이 아닌 경우 변경 됩니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-654">The internal list's sort properties are only changed when the sort string is not `null`.</span></span> <span data-ttu-id="f04cf-655">`get` 대신 반환 됩니다;이 속성에 대 한 접근자는 내부 목록의 정렬 값을 검색 하지 않습니다는 `set` 접근자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-655">The `get` accessor for this property will not retrieve the sort value of the internal list; instead, it will return the `set` accessor value.</span></span> <span data-ttu-id="f04cf-656">값은 <xref:System.Windows.Forms.BindingSource.Sort%2A> 속성에는 데이터 원본이 변경 될 때 계속 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-656">The value of the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will persist when the data source changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-657">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Forms.BindingSource.Sort%2A> 속성으로 기본 정렬을 수행 하는 <xref:System.Data.DataView>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-657">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform basic sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="f04cf-658">이 예제를 실행 하려면 Windows Form과 호출에 코드를 붙여 `PopulateDataViewAndSort` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-658">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="f04cf-659">가져오는 것이 양식에 <xref:System.Xml> 및 <xref:System.IO> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-659">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#2)]  
  
 <span data-ttu-id="f04cf-660">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Forms.BindingSource.Sort%2A> 속성을 사용 하 여 정렬 고급는 <xref:System.Data.DataView>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-660">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform advanced sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="f04cf-661">이 예제를 실행 하려면 Windows Form과 호출에 코드를 붙여 `PopulateDataViewAndAdvancedSort` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.</span><span class="sxs-lookup"><span data-stu-id="f04cf-661">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndAdvancedSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="f04cf-662">가져오는 것이 양식에 <xref:System.Xml> 및 <xref:System.IO> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-662">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveSort" />
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ListSortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescriptions As ListSortDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDescriptionCollection ^ SortDescriptions { System::ComponentModel::ListSortDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescriptions : System.ComponentModel.ListSortDescriptionCollection" Usage="System.Windows.Forms.BindingSource.SortDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-663">Gets the collection of sort descriptions applied to the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-663">Gets the collection of sort descriptions applied to the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-664">데이터 원본이 있으면는 <see cref="T:System.ComponentModel.IBindingListView" />, <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> ; 목록에 적용 된 정렬 설명을 포함 하 고, 그러지 <see langword="null" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-664">If the data source is an <see cref="T:System.ComponentModel.IBindingListView" />, a <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> that contains the sort descriptions applied to the list; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-665">목록이 아닌 경우는 <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SortDescriptions%2A> 항상 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-665">If the list is not an <xref:System.ComponentModel.IBindingListView>, the <xref:System.Windows.Forms.BindingSource.SortDescriptions%2A> always returns `null`.</span></span>  
  
 <span data-ttu-id="f04cf-666"><xref:System.ComponentModel.ListSortDescriptionCollection> 은 읽기 전용 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-666">The <xref:System.ComponentModel.ListSortDescriptionCollection> is a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.ListSortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDirection As ListSortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDirection SortDirection { System::ComponentModel::ListSortDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDirection : System.ComponentModel.ListSortDirection" Usage="System.Windows.Forms.BindingSource.SortDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-667">Gets the direction the items in the list are sorted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-667">Gets the direction the items in the list are sorted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-668">중 하나는 <see cref="T:System.ComponentModel.ListSortDirection" /> 방향을 나타내는 값 목록이 정렬 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-668">One of the <see cref="T:System.ComponentModel.ListSortDirection" /> values indicating the direction the list is sorted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-669">기본 목록이 아닌 경우는 <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SortDirection%2A> 속성은 항상 반환 <xref:System.ComponentModel.ListSortDirection.Ascending>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-669">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SortDirection%2A> property will always return <xref:System.ComponentModel.ListSortDirection.Ascending>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortProperty">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor SortProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor SortProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortProperty As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ SortProperty { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortProperty : System.ComponentModel.PropertyDescriptor" Usage="System.Windows.Forms.BindingSource.SortProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-670">Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-670">Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-671">목록이 <see cref="T:System.ComponentModel.IBindingList" />, <see cref="T:System.ComponentModel.PropertyDescriptor" /> 되 고 있는 정렬에 사용 되 고, 그렇지 않으면 <see langword="null" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-671">If the list is an <see cref="T:System.ComponentModel.IBindingList" />, the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-672">목록이 아닌 경우는 <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SortProperty%2A> 항상 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-672">If the list is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SortProperty%2A> always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAdvancedSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAdvancedSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAdvancedSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsAdvancedSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAdvancedSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAdvancedSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAdvancedSorting : bool" Usage="System.Windows.Forms.BindingSource.SupportsAdvancedSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-673">Gets a value indicating whether the data source supports multi-column sorting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-673">Gets a value indicating whether the data source supports multi-column sorting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-674">
            <see langword="true" /> 목록이 <see cref="T:System.ComponentModel.IBindingListView" /> 다중 열 정렬을; 지원 하 고 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-674">
              <see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports multi-column sorting; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-675">목록이 아닌 경우는 <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> 항상 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-675">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeNotification">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeNotification { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsChangeNotification : bool" Usage="System.Windows.Forms.BindingSource.SupportsChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-676">Gets a value indicating whether the data source supports change notification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-676">Gets a value indicating whether the data source supports change notification.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-677">모든 경우에 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-677">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFiltering">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsFiltering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFiltering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFiltering : bool" Usage="System.Windows.Forms.BindingSource.SupportsFiltering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-678">Gets a value indicating whether the data source supports filtering.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-678">Gets a value indicating whether the data source supports filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-679">
            <see langword="true" /> 목록이 <see cref="T:System.ComponentModel.IBindingListView" /> ; 필터링을 지원 하 고 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-679">
              <see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports filtering; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-680">목록이 아닌 경우는 <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A> 항상 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-680">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSearching">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSearching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSearching" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSearching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSearching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSearching { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSearching : bool" Usage="System.Windows.Forms.BindingSource.SupportsSearching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-681">Gets a value indicating whether the data source supports searching with the <see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-681">Gets a value indicating whether the data source supports searching with the <see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-682">
            <see langword="true" /> 목록이 <see cref="T:System.ComponentModel.IBindingList" /> 사용한 검색을 지원 하 고는 <see cref="Overload:System.Windows.Forms.BindingSource.Find" /> 메서드, 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-682">
              <see langword="true" /> if the list is a <see cref="T:System.ComponentModel.IBindingList" /> and supports the searching with the <see cref="Overload:System.Windows.Forms.BindingSource.Find" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-683">데이터 원본이 없는 경우는 <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> 항상 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-683">If the data source is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> always returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04cf-684">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-684">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> member.</span></span> <span data-ttu-id="f04cf-685">전체 예제 클래스 개요 항목을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="f04cf-685">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSorting : bool" Usage="System.Windows.Forms.BindingSource.SupportsSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-686">Gets a value indicating whether the data source supports sorting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-686">Gets a value indicating whether the data source supports sorting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-687">
            <see langword="true" /> 데이터 원본이 있으면는 <see cref="T:System.ComponentModel.IBindingList" /> ; 정렬을 지원 하 고 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-687">
              <see langword="true" /> if the data source is an <see cref="T:System.ComponentModel.IBindingList" /> and supports sorting; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-688">데이터 원본이 없는 경우는 <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> 속성은 항상 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-688">If the data source is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendBinding();" />
      <MemberSignature Language="F#" Value="member this.SuspendBinding : unit -&gt; unit" Usage="bindingSource.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-689">Suspends data binding to prevent changes from updating the bound data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-689">Suspends data binding to prevent changes from updating the bound data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-690"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 및 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> 단순 바인딩 시나리오에서 데이터 바인딩 했다가 일시적 중단을 허용 하는 두 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-690"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="f04cf-691">데이터 바인딩 사용자 유효성 검사를 수행 하기 전에 데이터 필드에 몇 가지 편집 하도록 허용 해야 하는 경우에 일반적으로 일시 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-691">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="f04cf-692">예를 들어 하지만 유효성을 검사 하는 두 번째에 따라 한 필드를 변경 해야 하는 경우 첫 번째 필드에 오류에 포함 되도록 두 번째 필드를 리라 예상 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-692">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f04cf-693">사용 하 여 <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 변경 될 때까지 데이터 원본에 밀어 넣는 수 없도록 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> 호출 되지만 실제로 발생 이벤트를 억제 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-693">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="f04cf-694">와 같은 복잡 한 데이터 바인딩을 사용 하는 컨트롤의 <xref:System.Windows.Forms.DataGridView> 제어와 같은 변경 이벤트에 따라 해당 값을 업데이트 합니다는 <xref:System.Windows.Forms.CurrencyManager.ListChanged> 하므로 호출 하는 이벤트 <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 에서 데이터 원본에 대 한 변경 내용을 수신 주지 않는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-694">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="f04cf-695">이러한 이유로이 <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 및 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> 와 같은 단순 바인딩된 컨트롤을 사용 하도록 설계 되는 <xref:System.Windows.Forms.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-695">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="f04cf-696">또는 사용할 수 있습니다 이러한 메서드는 복합 바인딩 시나리오에 표시 하지 않는 경우 <xref:System.Windows.Forms.BindingSource.ListChanged> 설정 하 여 이벤트는 <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> 속성을 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-696">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Forms.BindingSource.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-697">Gets an object that can be used to synchronize access to the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-697">Gets an object that can be used to synchronize access to the underlying list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-698">내부 목록에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-698">An object that can be used to synchronize access to the underlying list.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.AddIndex">
      <MemberSignature Language="C#" Value="void IBindingList.AddIndex (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.AddIndex(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub AddIndex (property As PropertyDescriptor) Implements IBindingList.AddIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.AddIndex(System::ComponentModel::PropertyDescriptor ^ property) = System::ComponentModel::IBindingList::AddIndex;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="f04cf-699">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the indexes used for searching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-699">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the indexes used for searching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-700">Adds the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the indexes used for searching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-700">Adds the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the indexes used for searching.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-701">기본 목록이 하는 경우는 <xref:System.ComponentModel.IBindingList> 형식,이 메서드를 추가 합니다는 <xref:System.ComponentModel.PropertyDescriptor> ; 인덱스에 호출, 그렇지 않으면이 메서드는 throw 한 <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-701">If the underlying list is an <xref:System.ComponentModel.IBindingList> type, this method will add the <xref:System.ComponentModel.PropertyDescriptor> to the indexes; otherwise, calling this method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f04cf-702">The underlying list is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-702">The underlying list is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.RemoveIndex">
      <MemberSignature Language="C#" Value="void IBindingList.RemoveIndex (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.RemoveIndex(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveIndex (prop As PropertyDescriptor) Implements IBindingList.RemoveIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.RemoveIndex(System::ComponentModel::PropertyDescriptor ^ prop) = System::ComponentModel::IBindingList::RemoveIndex;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop">
          <span data-ttu-id="f04cf-703">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the indexes used for searching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-703">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the indexes used for searching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-704">Removes the <see cref="T:System.ComponentModel.PropertyDescriptor" /> from the indexes used for searching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-704">Removes the <see cref="T:System.ComponentModel.PropertyDescriptor" /> from the indexes used for searching.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-705">기본 목록이 아닌 경우는 <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>,이 메서드는 항상 throw 한 <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-705">If the underlying list is not a <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>, this method will always throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.CancelNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.CancelNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.CancelNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CancelNew (position As Integer) Implements ICancelAddNew.CancelNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.CancelNew(int position) = System::ComponentModel::ICancelAddNew::CancelNew;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="f04cf-706">The index of the item that was added to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-706">The index of the item that was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-707">Discards a pending new item from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-707">Discards a pending new item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-708"><xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A> 메서드 이전에 컬렉션에서 지정한 인덱스에 추가 된 항목의 보류 중인 추가 롤백합니다 `position`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-708">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A> method rolls back a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="f04cf-709">`position` 매개 변수는 몇 가지 새 항목은 동시에 보류 중인 수 있기 때문에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-709">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.EndNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.EndNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.EndNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub EndNew (position As Integer) Implements ICancelAddNew.EndNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.EndNew(int position) = System::ComponentModel::ICancelAddNew::EndNew;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="f04cf-710">The index of the item that was added to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-710">The index of the item that was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f04cf-711">Commits a pending new item to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-711">Commits a pending new item to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-712"><xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> 메서드 이전에 컬렉션에서 지정한 인덱스에 추가 된 항목의 보류 중인 추가 커밋합니다 `position`합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-712">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> method commits a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="f04cf-713">`position` 매개 변수는 몇 가지 새 항목은 동시에 보류 중인 수 있기 때문에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-713">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-714">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is starting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-714">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is starting.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-715">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-715">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitializeNotification.IsInitialized">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.ISupportInitializeNotification.IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#IsInitialized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsInitialized As Boolean Implements ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.ISupportInitializeNotification.IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.BindingSource.System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f04cf-716">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-716">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f04cf-717">
            <see langword="true" /> 나타내는 <see cref="T:System.Windows.Forms.BindingSource" /> 초기화 되지 않았으면, <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f04cf-717">
              <see langword="true" /> to indicate the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04cf-718">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="f04cf-718">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f04cf-719"><xref:System.Windows.Forms.BindingSource> 인스턴스가 <xref:System.ComponentModel.ISupportInitializeNotification> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f04cf-719">It can be used only when the <xref:System.Windows.Forms.BindingSource> instance is cast to an <xref:System.ComponentModel.ISupportInitializeNotification> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>