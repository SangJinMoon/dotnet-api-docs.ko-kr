<Type Name="ToolStripControlHost" FullName="System.Windows.Forms.ToolStripControlHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="347863e6dd532ca8ce52828e7a0735f0becd4c55" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650957" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToolStripControlHost : System.Windows.Forms.ToolStripItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolStripControlHost extends System.Windows.Forms.ToolStripItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripControlHost" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolStripControlHost&#xA;Inherits ToolStripItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStripControlHost : System::Windows::Forms::ToolStripItem" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStripItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="75a37-101">사용자 지정 컨트롤 또는 Windows Forms 컨트롤을 호스팅합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="75a37-101">Hosts custom controls or Windows Forms controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-102"><xref:System.Windows.Forms.ToolStripControlHost> 에 대 한 추상 기본 클래스 <xref:System.Windows.Forms.ToolStripComboBox>, <xref:System.Windows.Forms.ToolStripTextBox>, 및 <xref:System.Windows.Forms.ToolStripProgressBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-102"><xref:System.Windows.Forms.ToolStripControlHost> is the abstract base class for <xref:System.Windows.Forms.ToolStripComboBox>, <xref:System.Windows.Forms.ToolStripTextBox>, and <xref:System.Windows.Forms.ToolStripProgressBar>.</span></span> <span data-ttu-id="75a37-103"><xref:System.Windows.Forms.ToolStripControlHost> 사용자 지정 컨트롤을 포함 하 여 두 가지 방법으로 다른 컨트롤을 호스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-103"><xref:System.Windows.Forms.ToolStripControlHost> can host other controls, including custom controls, in two ways:</span></span>  
  
-   <span data-ttu-id="75a37-104">생성 된 <xref:System.Windows.Forms.ToolStripControlHost> 에서 파생 된 클래스와 함께 <xref:System.Windows.Forms.Control>합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-104">Construct a <xref:System.Windows.Forms.ToolStripControlHost> with a class that derives from <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="75a37-105">호스팅된 컨트롤 및 속성에 완벽 하 게 액세스 하려면 캐스팅 해야 합니다는 <xref:System.Windows.Forms.ToolStripControlHost.Control%2A> 속성을 실제 클래스로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-105">To fully access the hosted control and properties, you must cast the <xref:System.Windows.Forms.ToolStripControlHost.Control%2A> property back to the actual class it represents.</span></span>  
  
-   <span data-ttu-id="75a37-106">확장 <xref:System.Windows.Forms.ToolStripControlHost>, 상속 된 클래스의 기본 생성자에서 파생 되는 클래스를 전달 하 여 기본 클래스 생성자를 호출 하 고 <xref:System.Windows.Forms.Control>합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-106">Extend <xref:System.Windows.Forms.ToolStripControlHost>, and in the inherited class's default constructor, call the base class constructor passing a class that derives from <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="75a37-107">이 옵션을 사용 하면 일반적인 컨트롤의 메서드 및 속성에 쉽게 액세스할 수를 래핑하는 <xref:System.Windows.Forms.ToolStrip>합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-107">This option lets you wrap common control methods and properties for easy access in a <xref:System.Windows.Forms.ToolStrip>.</span></span>  
  
 <span data-ttu-id="75a37-108">사용 된 <xref:System.Windows.Forms.ToolStripControlHost> 사용자 지정된 컨트롤이 나 다른 Windows Forms 컨트롤을 호스트 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-108">Use the <xref:System.Windows.Forms.ToolStripControlHost> class to host your customized controls or any other Windows Forms control.</span></span>  
  
 <span data-ttu-id="75a37-109">사용자 지정 하는 <xref:System.Windows.Forms.ToolStripItem>에서 파생 <xref:System.Windows.Forms.ToolStripControlHost> 사용자 지정 구현을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-109">To customize a <xref:System.Windows.Forms.ToolStripItem>, derive from <xref:System.Windows.Forms.ToolStripControlHost> and create a custom implementation.</span></span> <span data-ttu-id="75a37-110">와 같은 메서드를 재정의할 수 <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> 이벤트를 처리 하는 호스트 된 컨트롤에 의해 발생 하는 호스팅된 컨트롤을 강화 하기 위해 속성에 사용자 지정 기능을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-110">You can override methods such as <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> to handle events raised by the hosted controls, and you can put custom functionality into properties to enhance the hosted control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75a37-111">다음 코드 예제에서는 생성 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ToolStripControlHost> 와 <xref:System.Windows.Forms.MonthCalendar> 컨트롤을 사용 하 여 <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> 처리 이벤트 및 해당 멤버의 일부를 노출 하는 <xref:System.Windows.Forms.ToolStripControlHost>합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-111">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> with a <xref:System.Windows.Forms.MonthCalendar> control, using <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> to handle events, and exposing some of its members to the <xref:System.Windows.Forms.ToolStripControlHost>.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#13)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#13)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#13)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-112">
            <see cref="T:System.Windows.Forms.ToolStripControlHost" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripControlHost (System.Windows.Forms.Control c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.#ctor(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripControlHost(System::Windows::Forms::Control ^ c);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="75a37-113">이 <see cref="T:System.Windows.Forms.Control" /> 클래스에 의해 호스팅되는 <see cref="T:System.Windows.Forms.ToolStripControlHost" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-113">The <see cref="T:System.Windows.Forms.Control" /> hosted by this <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-114">지정된 컨트롤을 호스팅하는 <see cref="T:System.Windows.Forms.ToolStripControlHost" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class that hosts the specified control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="75a37-115">다음 코드 예제에서는 생성 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ToolStripControlHost> 컨트롤과 여러 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-115">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> control and setting several properties.</span></span> <span data-ttu-id="75a37-116">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms.ToolStrip> 라는 `toolStrip1` 호출 `InitializeDateTimePickerHost` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-116">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.ToolStrip> named `toolStrip1` and call `InitializeDateTimePickerHost` from the form's constructor or the <xref:System.Windows.Forms.Form.Load> event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="75a37-117">
            <paramref name="c" /> 매개 변수로 참조된 컨트롤이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-117">The control referred to by the <paramref name="c" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripControlHost (System.Windows.Forms.Control c, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control c, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.#ctor(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As Control, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripControlHost(System::Windows::Forms::Control ^ c, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="75a37-118">이 <see cref="T:System.Windows.Forms.Control" /> 클래스에 의해 호스팅되는 <see cref="T:System.Windows.Forms.ToolStripControlHost" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-118">The <see cref="T:System.Windows.Forms.Control" /> hosted by this <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="75a37-119">
            <see cref="T:System.Windows.Forms.ToolStripControlHost" />의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-119">The name of the <see cref="T:System.Windows.Forms.ToolStripControlHost" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-120">지정된 컨트롤을 호스팅하고 지정된 이름을 갖는 <see cref="T:System.Windows.Forms.ToolStripControlHost" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class that hosts the specified control and that has the specified name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-121">컨트롤의 배경색을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-121">Gets or sets the background color for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-122">컨트롤의 배경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-122">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span>
          </span>
          <span data-ttu-id="75a37-123">기본값은 <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-123">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-124">컨트롤에 표시할 배경 이미지를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-124">Gets or sets the background image displayed in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-125">컨트롤의 배경에 표시할 이미지를 나타내는 <see cref="T:System.Drawing.Image" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-125">An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-126">
            <see langword="ImageLayout" /> 열거형에서 정의된 대로 배경 이미지 레이아웃을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-126">Gets or sets the background image layout as defined in the <see langword="ImageLayout" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-127">
            <see cref="T:System.Windows.Forms.ImageLayout" />의 다음 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-127">One of the values of <see cref="T:System.Windows.Forms.ImageLayout" />:</span>
          </span>  
  
-   <see cref="F:System.Windows.Forms.ImageLayout.Center" />  
  
-   <see cref="F:System.Windows.Forms.ImageLayout.None" />  
  
-   <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />  
  
-   <span data-ttu-id="75a37-128"><see cref="F:System.Windows.Forms.ImageLayout.Tile" />(기본값)</span><span class="sxs-lookup"><span data-stu-id="75a37-128"><see cref="F:System.Windows.Forms.ImageLayout.Tile" /> (default)</span></span>  
  
-   <see cref="F:System.Windows.Forms.ImageLayout.Zoom" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSelect">
      <MemberSignature Language="C#" Value="public override bool CanSelect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.CanSelect" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSelect { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-129">컨트롤을 선택할 수 있는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-129">Gets a value indicating whether the control can be selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-130">컨트롤을 선택할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-130">
              <see langword="true" /> if the control can be selected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-131">호스팅된 컨트롤이 포커스를 받을 때 다른 컨트롤에 대해 유효성 검사 이벤트를 발생시키는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-131">Gets or sets a value indicating whether the hosted control causes and raises validation events on other controls when the hosted control receives focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-132">호스팅된 컨트롤이 포커스를 받을 때 유효성 검사 이벤트를 발생시키면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-132">
              <see langword="true" /> if the hosted control causes and raises validation events on other controls when the hosted control receives focus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="75a37-133">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-133">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Control { System::Windows::Forms::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-134">이 <see cref="T:System.Windows.Forms.Control" />가 호스팅하는 <see cref="T:System.Windows.Forms.ToolStripControlHost" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-134">Gets the <see cref="T:System.Windows.Forms.Control" /> that this <see cref="T:System.Windows.Forms.ToolStripControlHost" /> is hosting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-135">이 <see cref="T:System.Windows.Forms.Control" />가 호스팅하는 <see cref="T:System.Windows.Forms.ToolStripControlHost" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-135">The <see cref="T:System.Windows.Forms.Control" /> that this <see cref="T:System.Windows.Forms.ToolStripControlHost" /> is hosting.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="75a37-136">다음 코드 예제에서는 생성 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ToolStripControlHost> 제어 하 고 사용 하 여 래핑된 컨트롤의 속성을 설정는 <xref:System.Windows.Forms.ToolStripControlHost.Control%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-136">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> control and sets a property on the wrapped control using the <xref:System.Windows.Forms.ToolStripControlHost.Control%2A> property.</span></span> <span data-ttu-id="75a37-137">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms.ToolStrip> 라는 `toolStrip1` 호출 `InitializeDateTimePickerHost` 폼의 생성자 또는 `Load` 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-137">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.ToolStrip> named `toolStrip1` and call `InitializeDateTimePickerHost` from the form's constructor or the `Load` event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment ControlAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment ControlAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ControlAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment ControlAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-138">폼에 있는 컨트롤의 맞춤 방식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-138">Gets or sets the alignment of the control on the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-139">
            <see cref="T:System.Drawing.ContentAlignment" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-139">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
          <span data-ttu-id="75a37-140">기본값은 <see cref="F:System.Drawing.ContentAlignment.MiddleCenter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-140">The default is <see cref="F:System.Drawing.ContentAlignment.MiddleCenter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-141">사용 하 여 <xref:System.Windows.Forms.ToolStripControlHost.ControlAlign%2A> 폼에 배치 하는 속성을 확인 또는 방법이 호스팅된 컨트롤을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-141">Use the <xref:System.Windows.Forms.ToolStripControlHost.ControlAlign%2A> property to determine or define how hosted controls are to be laid out on the form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="75a37-142">
            <see cref="P:System.Windows.Forms.ToolStripControlHost.ControlAlign" /> 속성이 <see cref="T:System.Drawing.ContentAlignment" /> 값 중 하나로 설정되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-142">The <see cref="P:System.Windows.Forms.ToolStripControlHost.ControlAlign" /> property is set to a value that is not one of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="75a37-143">컨트롤의 액세스 가능성 개체를 새로 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-143">Creates a new accessibility object for the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="75a37-144">컨트롤의 새로운 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-144">A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-145">컨트롤의 기본 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-145">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-146">컨트롤의 기본 <see cref="T:System.Drawing.Size" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-146">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-147"><xref:System.Windows.Forms.ToolStripControlHost.DefaultSize%2A> 속성이 나타내는 <xref:System.Drawing.Size> 처음 만들어질 때 컨트롤의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-147">The <xref:System.Windows.Forms.ToolStripControlHost.DefaultSize%2A> property represents the <xref:System.Drawing.Size> of the control when it is initially created.</span></span> <span data-ttu-id="75a37-148">경우 <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> 은 `true`, 컨트롤에 따라 자동으로 크기가 조정 되는 <xref:System.Windows.Forms.ToolStrip> 방향입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-148">If <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> is `true`, the control is sized automatically in accordance with the <xref:System.Windows.Forms.ToolStrip> orientation.</span></span> <span data-ttu-id="75a37-149">수동으로 설정 하 여 컨트롤의 크기를 조정할 수 있습니다는 <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> 속성 값을 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-149">You can manually adjust the size of the control by setting its <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> property value to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="75a37-150">성능 향상을 유지 하기 위해 설정 하지 않아야는 <xref:System.Drawing.Size> 생성자에서 컨트롤의 합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-150">In order to maintain better performance, you should not set the <xref:System.Drawing.Size> of a control in its constructor.</span></span> <span data-ttu-id="75a37-151">재정의 하는 메서드가 좋습니다는 <xref:System.Windows.Forms.ToolStripControlHost.DefaultSize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-151">The preferred method is to override the <xref:System.Windows.Forms.ToolStripControlHost.DefaultSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-152">재정의 하는 경우는 <see cref="P:System.Windows.Forms.ToolStripControlHost.DefaultSize" /> 는 반환할 것이 좋습니다 파생된 클래스에서 속성을 한 <see cref="T:System.Drawing.Size" /> 전체 구현을 재정의 하는 대신 원하는 크기를 사용 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-152">When overriding the <see cref="P:System.Windows.Forms.ToolStripControlHost.DefaultSize" /> property in a derived class, it is preferable to return a <see cref="T:System.Drawing.Size" /> with the desired dimensions rather than overriding all the implementation.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DisplayStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemDisplayStyle DisplayStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemDisplayStyle DisplayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.DisplayStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStyle As ToolStripItemDisplayStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemDisplayStyle DisplayStyle { System::Windows::Forms::ToolStripItemDisplayStyle get(); void set(System::Windows::Forms::ToolStripItemDisplayStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemDisplayStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-153">이 속성은 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-153">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-154">개체의 표시 스타일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-154">The display style of the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-155">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-155">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DisplayStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplayStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.DisplayStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DisplayStyleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-156">이 이벤트는 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-156">This event is not relevant to this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-157">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-157">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="75a37-158">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-158">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-159">
            <see cref="T:System.Windows.Forms.ToolStripControlHost" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-159">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ToolStripControlHost" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-160">이 메서드는 public `Dispose` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75a37-160">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="75a37-161">`Dispose` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-161">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="75a37-162"><xref:System.Object.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-162"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="75a37-163">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Windows.Forms.ToolStripControlHost>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-163">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ToolStripControlHost> references.</span></span> <span data-ttu-id="75a37-164">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-164">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-165">
              <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-165">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="75a37-166">
              <see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-166">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="75a37-167">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-167">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="75a37-168">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-168">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoubleClickEnabled">
      <MemberSignature Language="C#" Value="public bool DoubleClickEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleClickEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.DoubleClickEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DoubleClickEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoubleClickEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-169">이 속성은 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-169">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-170">두 번 클릭이 가능하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-170">
              <see langword="true" /> if double clicking is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-171">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-171">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public override bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-172">
            <see cref="T:System.Windows.Forms.ToolStripItem" />의 부모 컨트롤을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-172">Gets or sets a value indicating whether the parent control of the <see cref="T:System.Windows.Forms.ToolStripItem" /> is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-173">
            <see cref="T:System.Windows.Forms.ToolStripItem" />의 부모 컨트롤을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-173">
              <see langword="true" /> if the parent control of the <see cref="T:System.Windows.Forms.ToolStripItem" /> is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="75a37-174">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-174">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public event EventHandler Enter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Enter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.Enter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Enter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Enter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-175">호스팅된 컨트롤이 입력되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-175">Occurs when the hosted control is entered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-176">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-176">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75a37-177">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-177">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="75a37-178">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripControlHost.Enter> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-178">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.Enter> event.</span></span> <span data-ttu-id="75a37-179">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-179">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="75a37-180">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-180">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="75a37-181">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripControlHost> 라는 `ToolStripControlHost1`합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-181">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="75a37-182">그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripControlHost.Enter> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-182">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.Enter> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#569](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#569)]
 [!code-vb[System.Windows.Forms.EventExamples#569](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#569)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="75a37-183">포커스를 컨트롤로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-183">Gives the focus to a control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public virtual bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-184">컨트롤에 입력 포커스가 있는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-184">Gets a value indicating whether the control has input focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-185">컨트롤에 입력 포커스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-185">
              <see langword="true" /> if the control has input focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-186">호스팅된 컨트롤에서 사용되는 글꼴을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-186">Gets or sets the font to be used on the hosted control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-187">호스팅된 컨트롤의 <see cref="T:System.Drawing.Font" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-187">The <see cref="T:System.Drawing.Font" /> for the hosted control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="75a37-188">다음 코드 예제에서는 생성 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ToolStripControlHost> 컨트롤과 여러 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-188">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> control and setting several properties.</span></span> <span data-ttu-id="75a37-189">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms.ToolStrip> 라는 `toolStrip1` 호출 `InitializeDateTimePickerHost` 폼의 생성자 또는 `Load` 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-189">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.ToolStrip> named `toolStrip1` and call `InitializeDateTimePickerHost` from the form's constructor or the `Load` event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-190">호스팅된 컨트롤의 전경색을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-190">Gets or sets the foreground color of the hosted control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-191">호스팅된 컨트롤의 전경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-191">A <see cref="T:System.Drawing.Color" /> representing the foreground color of the hosted control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size GetPreferredSize (System.Drawing.Size constrainingSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size constrainingSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.GetPreferredSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreferredSize (constrainingSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Size GetPreferredSize(System::Drawing::Size constrainingSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constrainingSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="constrainingSize">
          <span data-ttu-id="75a37-192">컨트롤의 사용자 지정 크기 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-192">The custom-sized area for a control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-193">컨트롤이 들어갈 수 있는 사각형 영역의 크기를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-193">Retrieves the size of a rectangular area into which a control can be fitted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="75a37-194">사각형의 너비와 높이를 나타내는 <see cref="T:System.Drawing.Size" /> 형식의 정렬된 쌍입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-194">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event EventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GotFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-195">호스팅된 컨트롤이 포커스를 받으면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-195">Occurs when the hosted control receives focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-196">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-196">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75a37-197">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-197">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="75a37-198">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripControlHost.GotFocus> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-198">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.GotFocus> event.</span></span> <span data-ttu-id="75a37-199">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-199">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="75a37-200">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripControlHost> 라는 `ToolStripControlHost1`합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-200">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="75a37-201">그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripControlHost.GotFocus> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-201">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.GotFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#570](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#570)]
 [!code-vb[System.Windows.Forms.EventExamples#570](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#570)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image Image { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Image" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-202">개체와 연결된 이미지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-202">The image associated with the object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-203">호스팅되는 컨트롤의 이미지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-203">The image of the hosted control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-204">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-204">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment ImageAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment ImageAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ImageAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment ImageAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-205">이 속성은 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-205">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-206">개체의 이미지 맞춤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-206">The image alignment for the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-207">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-207">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageScaling">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemImageScaling ImageScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemImageScaling ImageScaling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ImageScaling" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageScaling As ToolStripItemImageScaling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemImageScaling ImageScaling { System::Windows::Forms::ToolStripItemImageScaling get(); void set(System::Windows::Forms::ToolStripItemImageScaling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemImageScaling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-208">이 속성은 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-208">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-209">ToolStripItem의 이미지가 컨테이너에 맞게 자동으로 크기 조정되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-209">
              <see langword="true" /> if an image on a ToolStripItem is automatically resized to fit in a container; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-210">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-210">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-211">이 속성은 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-211">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-212">이미지의 투명한 색입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-212">The transparent color of the image.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-213">개체에 투명 하 게 처리할 색입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-213">The color to treat as transparent in the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-214">호스팅된 컨트롤에 포커스가 있는 동안 키를 누르고 있으면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-214">Occurs when a key is pressed and held down while the hosted control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-215">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-215">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75a37-216">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-216">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="75a37-217">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripControlHost.KeyDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-217">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.KeyDown> event.</span></span> <span data-ttu-id="75a37-218">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-218">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="75a37-219">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-219">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="75a37-220">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripControlHost> 라는 `ToolStripControlHost1`합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-220">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="75a37-221">그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripControlHost.KeyDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-221">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.KeyDown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#573](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#573)]
 [!code-vb[System.Windows.Forms.EventExamples#573](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#573)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyPressEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyPressEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.KeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyPress As KeyPressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyPressEventHandler ^ KeyPress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyPressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-222">호스팅된 컨트롤에 포커스가 있을 때 키를 누르면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-222">Occurs when a key is pressed while the hosted control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-223">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-223">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75a37-224">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-224">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="75a37-225">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripControlHost.KeyPress> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-225">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.KeyPress> event.</span></span> <span data-ttu-id="75a37-226">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-226">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="75a37-227">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-227">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="75a37-228">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripControlHost> 라는 `ToolStripControlHost1`합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-228">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="75a37-229">그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripControlHost.KeyPress> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-229">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.KeyPress> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#574](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#574)]
 [!code-vb[System.Windows.Forms.EventExamples#574](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#574)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-230">호스팅된 컨트롤에 포커스가 있을 때 키를 놓으면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-230">Occurs when a key is released while the hosted control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-231">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-231">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75a37-232">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-232">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="75a37-233">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripControlHost.KeyUp> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-233">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.KeyUp> event.</span></span> <span data-ttu-id="75a37-234">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-234">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="75a37-235">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-235">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="75a37-236">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripControlHost> 라는 `ToolStripControlHost1`합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-236">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="75a37-237">그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripControlHost.KeyUp> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-237">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.KeyUp> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#575](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#575)]
 [!code-vb[System.Windows.Forms.EventExamples#575](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#575)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public event EventHandler Leave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Leave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Leave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Leave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-238">입력 포커스가 호스팅된 컨트롤을 벗어나면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-238">Occurs when the input focus leaves the hosted control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-239">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-239">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75a37-240">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-240">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="75a37-241">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripControlHost.Leave> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-241">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.Leave> event.</span></span> <span data-ttu-id="75a37-242">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-242">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="75a37-243">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-243">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="75a37-244">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripControlHost> 라는 `ToolStripControlHost1`합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-244">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="75a37-245">그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripControlHost.Leave> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-245">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.Leave> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#571](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#571)]
 [!code-vb[System.Windows.Forms.EventExamples#571](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#571)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event EventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LostFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-246">호스팅된 컨트롤이 포커스를 잃으면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-246">Occurs when the hosted control loses focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-247">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-247">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75a37-248">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-248">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="75a37-249">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripControlHost.LostFocus> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-249">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.LostFocus> event.</span></span> <span data-ttu-id="75a37-250">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-250">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="75a37-251">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripControlHost> 라는 `ToolStripControlHost1`합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-251">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="75a37-252">그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripControlHost.LostFocus> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-252">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.LostFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#572](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#572)]
 [!code-vb[System.Windows.Forms.EventExamples#572](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#572)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnBoundsChanged">
      <MemberSignature Language="C#" Value="protected override void OnBoundsChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBoundsChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBoundsChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBoundsChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="75a37-253">
            <see cref="P:System.Windows.Forms.ToolStripItem.Bounds" /> 속성이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-253">Occurs when the <see cref="P:System.Windows.Forms.ToolStripItem.Bounds" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-254">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-254">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="75a37-255">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-255">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="75a37-256">또한 <xref:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-256">The <xref:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="75a37-257">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-257">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-258">파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-258">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnter(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="75a37-259">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-259">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-260">
            <see cref="E:System.Windows.Forms.ToolStripControlHost.Enter" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-260">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.Enter" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-261">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-261">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="75a37-262">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-262">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="75a37-263">또한 <xref:System.Windows.Forms.ToolStripControlHost.OnEnter%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-263">The <xref:System.Windows.Forms.ToolStripControlHost.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="75a37-264">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-264">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-265">파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-265">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="75a37-266">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-266">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-267">
            <see cref="E:System.Windows.Forms.ToolStripControlHost.GotFocus" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-267">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.GotFocus" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-268">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-268">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="75a37-269">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-269">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="75a37-270">또한 <xref:System.Windows.Forms.ToolStripControlHost.OnGotFocus%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-270">The <xref:System.Windows.Forms.ToolStripControlHost.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="75a37-271">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-271">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-272">파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-272">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHostedControlResize">
      <MemberSignature Language="C#" Value="protected virtual void OnHostedControlResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHostedControlResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHostedControlResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHostedControlResize(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="75a37-273">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-273">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-274">컨트롤 호스트의 크기 조정을 호스트된 컨트롤의 크기 조정과 동기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-274">Synchronizes the resizing of the control host with the resizing of the hosted control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-275">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-275">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="75a37-276">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-276">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="75a37-277">또한 <xref:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-277">The <xref:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="75a37-278">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-278">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-279">파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-279">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="75a37-280">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-280">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-281">
            <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyDown" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-281">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-282">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-282">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="75a37-283">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-283">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="75a37-284">또한 <xref:System.Windows.Forms.ToolStripControlHost.OnKeyDown%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-284">The <xref:System.Windows.Forms.ToolStripControlHost.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="75a37-285">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-285">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-286">파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-286">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="75a37-287">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyPressEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-287">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-288">
            <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyPress" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-288">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyPress" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-289">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-289">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="75a37-290">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-290">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="75a37-291">또한 <xref:System.Windows.Forms.ToolStripControlHost.OnKeyPress%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-291">The <xref:System.Windows.Forms.ToolStripControlHost.OnKeyPress%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="75a37-292">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-292">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-293">파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-293">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="75a37-294">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-294">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-295">
            <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyUp" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-295">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyUp" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-296">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-296">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="75a37-297">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-297">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="75a37-298">또한 <xref:System.Windows.Forms.ToolStripControlHost.OnKeyUp%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-298">The <xref:System.Windows.Forms.ToolStripControlHost.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="75a37-299">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-299">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-300">파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-300">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected internal override void OnLayout (System.Windows.Forms.LayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLayout (e As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="75a37-301">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.LayoutEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-301">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-302">
            <see cref="E:System.Windows.Forms.Control.Layout" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-302">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLeave(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="75a37-303">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-303">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-304">
            <see cref="E:System.Windows.Forms.ToolStripControlHost.Leave" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-304">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.Leave" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-305">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-305">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="75a37-306">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-306">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="75a37-307">또한 <xref:System.Windows.Forms.ToolStripControlHost.OnLeave%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-307">The <xref:System.Windows.Forms.ToolStripControlHost.OnLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="75a37-308">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-308">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-309">파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-309">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="75a37-310">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-310">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-311">
            <see cref="E:System.Windows.Forms.ToolStripControlHost.LostFocus" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-311">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.LostFocus" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-312">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-312">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="75a37-313">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-313">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="75a37-314">또한 <xref:System.Windows.Forms.ToolStripControlHost.OnLostFocus%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-314">The <xref:System.Windows.Forms.ToolStripControlHost.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="75a37-315">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-315">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-316">파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-316">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="75a37-317">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-317">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-318">
            <see cref="E:System.Windows.Forms.Control.Paint" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-318">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (System.Windows.Forms.ToolStrip oldParent, System.Windows.Forms.ToolStrip newParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.Windows.Forms.ToolStrip oldParent, class System.Windows.Forms.ToolStrip newParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnParentChanged(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (oldParent As ToolStrip, newParent As ToolStrip)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(System::Windows::Forms::ToolStrip ^ oldParent, System::Windows::Forms::ToolStrip ^ newParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="newParent" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="75a37-319">항목의 원래 부모입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-319">The original parent of the item.</span>
          </span>
        </param>
        <param name="newParent">
          <span data-ttu-id="75a37-320">항목의 새 부모입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-320">The new parent of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-321">
            <see cref="E:System.Windows.Forms.Control.ParentChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-321">Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripItem.OnParentChanged(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeControlEvents">
      <MemberSignature Language="C#" Value="protected virtual void OnSubscribeControlEvents (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubscribeControlEvents(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSubscribeControlEvents(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="75a37-322">이벤트를 등록할 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-322">The control from which to subscribe events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-323">호스팅된 컨트롤에서 발생하는 이벤트를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-323">Subscribes events from the hosted control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-324">재정의 <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> 메서드를 추가 하 여 컨트롤 이벤트의 동기화를 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-324">Override the <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> method to add or prevent the synchronizing of control events.</span></span>  
  
 <span data-ttu-id="75a37-325">무시 하 고 여기에 이벤트를 후크를 언 후크 하를 사용 하 여는 <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75a37-325">If you override and hook up events here, unhook them by using the <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> method.</span></span>  
  
 <span data-ttu-id="75a37-326">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-326">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="75a37-327">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-327">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="75a37-328">또한 <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-328">The <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="75a37-329">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-329">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75a37-330">다음 코드 예제에서는 이벤트 호스팅된 컨트롤에서 노출 한 이벤트에 대 한 처리를 설정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-330">The following code example demonstrates how to set up event handling for an event exposed by the hosted control.</span></span> <span data-ttu-id="75a37-331">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripControlHost> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-331">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ToolStripControlHost> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-332">파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-332">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUnsubscribeControlEvents">
      <MemberSignature Language="C#" Value="protected virtual void OnUnsubscribeControlEvents (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnsubscribeControlEvents(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnsubscribeControlEvents(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="75a37-333">이벤트의 등록을 취소할 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-333">The control from which to unsubscribe events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-334">호스팅된 컨트롤에서 발생하는 이벤트의 등록을 취소합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-334">Unsubscribes events from the hosted control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-335">재정의 <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> 메서드 이벤트를 구독 취소를 구독 <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-335">Override the <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> method to unsubscribe events subscribed in <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A>.</span></span>  
  
 <span data-ttu-id="75a37-336">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-336">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="75a37-337">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-337">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="75a37-338">또한 <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-338">The <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="75a37-339">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-339">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75a37-340">다음 코드 예제에서 호스팅된 컨트롤에서 노출 한 이벤트 구독을 취소 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-340">The following code example demonstrates how to unsubscribe from an event exposed by the hosted control.</span></span> <span data-ttu-id="75a37-341">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripControlHost> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-341">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ToolStripControlHost> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-342">파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-342">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnValidated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="75a37-343">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-343">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-344">
            <see cref="E:System.Windows.Forms.ToolStripControlHost.Validated" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-344">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.Validated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-345">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-345">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="75a37-346">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-346">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="75a37-347">또한 <xref:System.Windows.Forms.ToolStripControlHost.OnValidated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-347">The <xref:System.Windows.Forms.ToolStripControlHost.OnValidated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="75a37-348">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-348">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-349">파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-349">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="75a37-350">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CancelEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-350">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-351">
            <see cref="E:System.Windows.Forms.ToolStripControlHost.Validating" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-351">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.Validating" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-352">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-352">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="75a37-353">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-353">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="75a37-354">또한 <xref:System.Windows.Forms.ToolStripControlHost.OnValidating%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-354">The <xref:System.Windows.Forms.ToolStripControlHost.OnValidating%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="75a37-355">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-355">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="75a37-356">파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="75a37-356">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="75a37-357">처리할 창 메시지를 나타내며 참조에 의해 전달되는 <see cref="T:System.Windows.Forms.Message" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-357">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="75a37-358">처리할 키를 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-358">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-359">명령 키를 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-359">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="75a37-360">모든 경우에 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-360">
              <see langword="false" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="75a37-361">및에 대 한 직접 실행 호출자 클래스 상속이 메서드를 호출 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-361">for the immediate caller and inheriting classes to call this method.</span>
          </span>
          <span data-ttu-id="75a37-362">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-362">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="75a37-363">처리할 키를 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-363">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-364">대화 상자 키를 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-364">Processes a dialog key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="75a37-365">항목이 키를 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-365">
              <see langword="true" /> if the key was processed by the item; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="75a37-366">처리할 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-366">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-367">니모닉 문자를 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-367">Processes a mnemonic character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="75a37-368">컨트롤이 문자를 니모닉으로 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-368">
              <see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public override void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ResetBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetBackColor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="75a37-369">이 메서드는 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-369">This method is not relevant to this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-370">이 메서드는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-370">This method is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public override void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ResetForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetForeColor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="75a37-371">이 메서드는 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-371">This method is not relevant to this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-372">이 메서드는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-372">This method is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-373">오른쪽에서 왼쪽으로 쓰는 글꼴을 사용하는 로캘을 지원하도록 컨트롤 요소가 정렬되어 있는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-373">Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-374">
            <see cref="T:System.Windows.Forms.RightToLeft" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-374">One of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</span>
          </span>
          <span data-ttu-id="75a37-375">기본값은 <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-375">The default is <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftAutoMirrorImage">
      <MemberSignature Language="C#" Value="public bool RightToLeftAutoMirrorImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftAutoMirrorImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.RightToLeftAutoMirrorImage" />
      <MemberSignature Language="VB.NET" Value="Public Property RightToLeftAutoMirrorImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RightToLeftAutoMirrorImage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-376">이 속성은 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-376">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-377">이미지가 미러링되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-377">
              <see langword="true" /> if the image is mirrored; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-378">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-378">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public override bool Selected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-379">항목이 선택되었는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-379">Gets a value indicating whether the item is selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-380">
            <see cref="T:System.Windows.Forms.ToolStripItem" />이 선택되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-380">
              <see langword="true" /> if the <see cref="T:System.Windows.Forms.ToolStripItem" /> is selected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected override void SetVisibleCore (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetVisibleCore(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetVisibleCore (visible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetVisibleCore(bool visible);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">
          <span data-ttu-id="75a37-381">ToolStripItem이 표시되도록 하려면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-381">
              <see langword="true" /> to make the ToolStripItem visible; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75a37-382">
            <see cref="T:System.Windows.Forms.ToolStripItem" />을 지정된 표시 상태로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-382">Sets the <see cref="T:System.Windows.Forms.ToolStripItem" /> to the specified visible state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripItem.SetVisibleCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-383">호스팅된 컨트롤의 사이트를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-383">Gets or sets the site of the hosted control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-384">컨트롤과 연결된 <see cref="T:System.ComponentModel.ISite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-384">The <see cref="T:System.ComponentModel.ISite" /> associated with the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-385">
            <see cref="T:System.Windows.Forms.ToolStripItem" />의 크기를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-385">Gets or sets the size of the <see cref="T:System.Windows.Forms.ToolStripItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-386">사각형의 너비와 높이를 나타내는 <see cref="T:System.Drawing.Size" /> 형식의 정렬된 쌍입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-386">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-387">호스팅된 컨트롤에 표시되는 텍스트를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-387">Gets or sets the text to be displayed on the hosted control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-388">텍스트를 나타내는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-388">A <see cref="T:System.String" /> representing the text.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="75a37-389">다음 코드 예제에서는 생성 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ToolStripControlHost> 컨트롤과 여러 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-389">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> control and setting several properties.</span></span> <span data-ttu-id="75a37-390">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms.ToolStrip> 라는 `toolStrip1` 호출 `InitializeDateTimePickerHost` 폼의 생성자 또는 `Load` 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-390">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.ToolStrip> named `toolStrip1` and call `InitializeDateTimePickerHost` from the form's constructor or the `Load` event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment TextAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-391">이 속성은 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-391">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-392">개체의 텍스트 맞춤 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-392">The text alignment property for the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-393">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-393">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDirection">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ToolStripTextDirection TextDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripTextDirection TextDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.TextDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TextDirection As ToolStripTextDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolStripTextDirection TextDirection { System::Windows::Forms::ToolStripTextDirection get(); void set(System::Windows::Forms::ToolStripTextDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripTextDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-394">이 속성은 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-394">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-395">도구 스트립의 텍스트 방향입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-395">The text direction of the tool strip.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-396">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-396">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextImageRelation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TextImageRelation TextImageRelation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TextImageRelation TextImageRelation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.TextImageRelation" />
      <MemberSignature Language="VB.NET" Value="Public Property TextImageRelation As TextImageRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TextImageRelation TextImageRelation { System::Windows::Forms::TextImageRelation get(); void set(System::Windows::Forms::TextImageRelation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextImageRelation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-397">이 속성은 이 클래스와 관련이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-397">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75a37-398">텍스트 이미지와 개체와의 관계입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-398">The relation of a text image with the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-399">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-399">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validated">
      <MemberSignature Language="C#" Value="public event EventHandler Validated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Validated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.Validated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Validated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-400">호스팅된 컨트롤의 유효성 검사가 완료된 후에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-400">Occurs after the hosted control has been successfully validated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-401">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-401">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75a37-402">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-402">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="75a37-403">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripControlHost.Validated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-403">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.Validated> event.</span></span> <span data-ttu-id="75a37-404">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-404">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="75a37-405">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-405">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="75a37-406">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripControlHost> 라는 `ToolStripControlHost1`합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-406">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="75a37-407">그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripControlHost.Validated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-407">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.Validated> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#577](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#577)]
 [!code-vb[System.Windows.Forms.EventExamples#577](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#577)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="Validating">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Validating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Validating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.Validating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validating As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Validating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75a37-408">호스팅된 컨트롤의 유효성 검사를 수행하는 중에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75a37-408">Occurs while the hosted control is validating.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75a37-409">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-409">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75a37-410">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-410">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="75a37-411">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripControlHost.Validating> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-411">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.Validating> event.</span></span> <span data-ttu-id="75a37-412">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-412">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="75a37-413">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-413">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="75a37-414">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripControlHost> 라는 `ToolStripControlHost1`합니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-414">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="75a37-415">그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripControlHost.Validating> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75a37-415">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.Validating> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#576](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#576)]
 [!code-vb[System.Windows.Forms.EventExamples#576](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#576)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
  </Members>
</Type>