<Type Name="DragAction" FullName="System.Windows.Forms.DragAction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="58c03b8bb1275b1ccacdff079c3da1f2db6b1d43" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30637817" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum DragAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DragAction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragAction" />
  <TypeSignature Language="VB.NET" Value="Public Enum DragAction" />
  <TypeSignature Language="C++ CLI" Value="public enum class DragAction" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>끌어서 놓기 작업의 방법과 이 작업을 계속할지 여부를 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 열거형을 사용 하 여 <xref:System.Windows.Forms.QueryContinueDragEventArgs>합니다.  
  
   
  
## Examples  
 다음 예제에서는 두 끌어서 놓기 작업 <xref:System.Windows.Forms.ListBox> 컨트롤입니다. 예제에서는 호출은 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드. 마우스를 이동 하는 경우 끌기 작업이 시작 이상 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 `MouseDown` 이벤트입니다.  
  
 또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다. 이 예에서는 두 가정 커서 파일 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각. 사용자 지정 커서 사용 하는 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 을 선택 합니다. 에 설정 된 사용자 지정 커서는 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.  
  
 키보드 상태에서 평가 됩니다는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다. 위치는 `ListBox` 삭제가 발생 중도 결정 됩니다는 `DragOver` 이벤트입니다. 삭제할 데이터가 아닌 경우는 `String`, 하면 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다. 드롭다운 상태에 표시 되는 마지막으로,는 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.  
  
 데이터를 오른쪽에 대 한 drop `ListBox` 에 따라 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 적절 한 위치에서 값이 추가 `ListBox`합니다. 끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.  
  
 이 코드 발췌 한 구문을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DragAction> 열거형입니다. 참조는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="Cancel" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DragAction Cancel = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DragAction.Cancel" />
      <MemberSignature Language="VB.NET" Value="Cancel" />
      <MemberSignature Language="C++ CLI" Value="Cancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragAction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>놓기 메시지가 표시되지 않고 작업이 취소됩니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="Continue" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DragAction Continue = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DragAction.Continue" />
      <MemberSignature Language="VB.NET" Value="Continue" />
      <MemberSignature Language="C++ CLI" Value="Continue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragAction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>작업이 계속됩니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="Drop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DragAction Drop = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DragAction.Drop" />
      <MemberSignature Language="VB.NET" Value="Drop" />
      <MemberSignature Language="C++ CLI" Value="Drop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragAction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>놓기와 함께 작업이 중지됩니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>