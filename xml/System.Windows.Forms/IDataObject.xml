<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDataObject.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c4e7cff63d5b6c5e96d7cef0d617257a97de4598.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c4e7cff63d5b6c5e96d7cef0d617257a97de4598</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Provides a format-independent mechanism for transferring data.</source>
          <target state="translated">데이터를 전송하기 위한 형식 독립적 메커니즘을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>The <ph id="ph1">`IDataObject`</ph> interface is used by the <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class and in drag-and-drop operations.</source>
          <target state="translated"><ph id="ph1">`IDataObject`</ph> 인터페이스에서 사용 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> 클래스 및 끌어서 놓기 작업 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>When implemented in a class, the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> methods allow the user to store data in multiple formats in an instance of the class.</source>
          <target state="translated">클래스에서 구현 되는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> 메서드 클래스의 인스턴스에 대 한 여러 형식에 데이터를 저장 하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data.</source>
          <target state="translated">여러 가지 형식에 데이터 저장을 사용 하면 모를 수도 형식 요구 사항을 대상 응용 프로그램에서 저장 된 데이터를 검색할 수 보장 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To store data in an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> method and specify the data format in the <ph id="ph3">`format`</ph> parameter.</source>
          <target state="translated">인스턴스의 데이터를 저장 하려면 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, 호출는 <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> 메서드 데이터 형식을 지정 하 고는 <ph id="ph3">`format`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> if you do not want stored data to be converted to another format when it is retrieved.</source>
          <target state="translated">설정의 <ph id="ph1">`autoConvert`</ph> 매개 변수를 <ph id="ph2">`false`</ph> 경우 원하지 않는 저장 된 데이터를 검색할 때는 다른 형식으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Invoke <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> multiple times on one instance of <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> to store data in more than one format.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> 인스턴스 중 하나에서 여러 번 <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> 둘 이상의 형식에 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>You retrieve stored data from an <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method and specifying the data format in the <ph id="ph3">`format`</ph> parameter.</source>
          <target state="translated">저장 된 데이터를 검색 한 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> 호출 하 여는 <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> 에 서식을 메서드 및 데이터를 지정 하는 <ph id="ph3">`format`</ph> 매개 변수.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> to retrieve only data that was stored in the specified format.</source>
          <target state="translated">설정의 <ph id="ph1">`autoConvert`</ph> 매개 변수를 <ph id="ph2">`false`</ph> 만 지정된 된 형식으로 저장 된 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To convert the stored data to the specified format, set <ph id="ph1">`autoConvert`</ph> to <ph id="ph2">`true`</ph>, or do not use <ph id="ph3">`autoConvert`</ph>.</source>
          <target state="translated">저장된 된 데이터를 지정 된 형식으로 변환 하려면 설정 <ph id="ph1">`autoConvert`</ph> 를 <ph id="ph2">`true`</ph>, 하거나 사용 하지 마십시오 <ph id="ph3">`autoConvert`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To determine the formats of the data stored in an <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, use the following <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> methods.</source>
          <target state="translated">에 저장 된 데이터의 형식을 결정 하는 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, 다음을 사용 하 여 <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> method to retrieve an array of all the formats in which the data is available.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> 데이터를 사용할 수 있는 모든 형식의 배열을 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> to get only the formats in which the data is stored.</source>
          <target state="translated">설정의 <ph id="ph1">`autoConvert`</ph> 매개 변수를 <ph id="ph2">`false`</ph> 데이터가 저장 되는 형식만 얻으려고 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To get all the formats in which the data is available, set <ph id="ph1">`autoConvert`</ph> to <ph id="ph2">`true`</ph>, or do not use this parameter.</source>
          <target state="translated">설정 데이터를 사용할 수 있는 모든 형식을 얻으려고 <ph id="ph1">`autoConvert`</ph> 를 <ph id="ph2">`true`</ph>, 또는이 매개 변수를 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> method to determine whether stored data is available in a certain format.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> 메서드를 저장 된 데이터를 특정 형식에 사용할 수 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>If you do not want stored data to be converted to the specified format, set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">저장 된 데이터를 지정된 된 형식으로 변환 하지 않으려면 경우 설정의 <ph id="ph1">`autoConvert`</ph> 매개 변수를 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class for an implementation of this interface.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 이 인터페이스의 구현에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> data formats.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> 미리 정의 된에 대 한 클래스 <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Retrieves the data associated with the specified data format.</source>
          <target state="translated">지정된 데이터 형식과 관련된 데이터를 검색합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The format of the data to retrieve.</source>
          <target state="translated">검색할 데이터의 형식입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">미리 정의된 형식에 대한 자세한 내용은 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>Retrieves the data associated with the specified data format.</source>
          <target state="translated">지정된 데이터 형식과 관련된 데이터를 검색합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The data associated with the specified format, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">지정된 형식과 관련된 데이터 또는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>If this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
          <target state="translated">이 메서드는 지정 된 형식의 데이터를 찾을 수 없습니다, 데이터 형식으로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>If the data cannot be converted to the specified format, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">이 메서드가 반환 하는 경우 데이터 지정된 된 형식으로 변환할 수 없습니다, <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">데이터 연결 된 형식으로 변환할 수 하는지 여부를 확인 하려면 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> 호출 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> 의이 인스턴스에 저장 된 데이터에 대 한 유효한 형식 목록에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드를 구현 하는 것을 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject,`</ph> to demonstrate the use of the <ph id="ph3">`GetData`</ph> method.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 클래스를 구현 하는 <ph id="ph2">`IDataObject,`</ph> 의 사용 방법을 설명 하기는 <ph id="ph3">`GetData`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The method is used to retrieve the data stored in <ph id="ph1">`myDataObject`</ph>, which is associated with the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">에 저장 된 데이터를 검색 하 고 메서드를 사용 하는 <ph id="ph1">`myDataObject`</ph>, 관련 된는 <ph id="ph2">`Text`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The example assumes that you have already created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph4">`textBox1`</ph>.</source>
          <target state="translated">이 예제에서는 이미 만들었다고 가정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 라는 <ph id="ph4">`textBox1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the format of the data to retrieve.</source>
          <target state="translated">검색할 데이터의 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">미리 정의된 형식에 대한 자세한 내용은 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>Retrieves the data associated with the specified class type format.</source>
          <target state="translated">지정된 클래스 형식과 관련된 데이터를 검색합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The data associated with the specified format, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">지정된 형식과 관련된 데이터 또는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>If this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
          <target state="translated">이 메서드는 지정 된 형식의 데이터를 찾을 수 없습니다, 데이터 형식으로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>If the data cannot be converted to the specified format, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">이 메서드가 반환 하는 경우 데이터 지정된 된 형식으로 변환할 수 없습니다, <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">데이터 연결 된 형식으로 변환할 수 하는지 여부를 확인 하려면 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> 호출 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> 의이 인스턴스에 저장 된 데이터에 대 한 유효한 형식 목록에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드를 구현 하는 것을 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetData`</ph> method.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 클래스를 구현 하는 <ph id="ph2">`IDataObject`</ph>의 사용 방법을 설명 하기는 <ph id="ph3">`GetData`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The method is used to retrieve the data stored in <ph id="ph1">`myObject`</ph>, which is associated with a specific type, <ph id="ph2">`myType`</ph>.</source>
          <target state="translated">에 저장 된 데이터를 검색 하 고 메서드를 사용 하는 <ph id="ph1">`myObject`</ph>, 특정 형식과 연결 된 <ph id="ph2">`myType`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The type of the retrieved data is displayed in a message box.</source>
          <target state="translated">검색된 된 데이터의 형식이 메시지 상자에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The example assumes that you have already created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예제에서는 이미 만들었다고 가정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The format of the data to retrieve.</source>
          <target state="translated">검색할 데이터의 형식입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">미리 정의된 형식에 대한 자세한 내용은 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to convert the data to the specified format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">데이터를 지정된 형식으로 변환하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</source>
          <target state="translated">부울을 통해 데이터를 지정된 데이터 형식으로 변환할지 여부를 확인하여 해당 데이터 형식과 관련된 데이터를 검색합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The data associated with the specified format, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">지정된 형식과 관련된 데이터 또는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>If the <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
          <target state="translated">경우는 <ph id="ph1">`autoConvert`</ph> 매개 변수는 <ph id="ph2">`true`</ph> 이 메서드가 지정 된 형식의 데이터를 찾을 수 없습니다 및 데이터 형식으로 변환 하려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>If the data cannot be converted to the specified format, or if the data was stored with the <ph id="ph1">`autoConvert`</ph> parameter set to <ph id="ph2">`false`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">지정된 된 형식으로 데이터를 변환할 수 없는 경우 또는 상태 데이터를 저장 하는 경우는 <ph id="ph1">`autoConvert`</ph> 매개 변수 설정 <ph id="ph2">`false`</ph>,이 메서드가 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>If the <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph>, this method returns data in the specified format, or <ph id="ph3">`null`</ph> if no data in this format can be found.</source>
          <target state="translated">경우는 <ph id="ph1">`autoConvert`</ph> 매개 변수는 <ph id="ph2">`false`</ph>,이 메서드는 지정 된 형식의 데이터를 반환 하거나 <ph id="ph3">`null`</ph> 이 형식에 데이터가 없는 찾을 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">데이터 연결 된 형식으로 변환할 수 하는지 여부를 확인 하려면 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> 호출 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> 의이 인스턴스에 저장 된 데이터에 대 한 유효한 형식 목록에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드를 구현 하는 것을 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetData`</ph> method.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 클래스를 구현 하는 <ph id="ph2">`IDataObject`</ph>의 사용 방법을 설명 하기는 <ph id="ph3">`GetData`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The example retrieves the data stored in a <ph id="ph1">`DataObject`</ph>, using the <ph id="ph2">`autoConvert`</ph> parameter to specify whether or not to convert the data format.</source>
          <target state="translated">에 저장 된 데이터를 검색 하는 예제는 <ph id="ph1">`DataObject`</ph>를 사용 하 여는 <ph id="ph2">`autoConvert`</ph> 매개 변수 데이터 형식을 변환할 것인지 여부를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>First, <ph id="ph1">`myDataObject`</ph> is created with text data.</source>
          <target state="translated">첫째, <ph id="ph1">`myDataObject`</ph> 텍스트 데이터를 사용 하 여 만들어집니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Then the example tries twice to retrieve the data.</source>
          <target state="translated">다음 예에서는 데이터를 검색 하는 두 번 시도 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>In the first trial, it specifies its format as a string and sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">첫 번째 시도에서 문자열 집합을 형식으로 지정 된 <ph id="ph1">`autoConvert`</ph> 매개 변수를 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>This trial fails, and the result is displayed in a message box labeled "Message #1."</source>
          <target state="translated">이 시도 실패 하 고 결과 "#1 메시지입니다." 레이블이 지정 된 메시지 상자에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>In the second trial, the example retrieves the same data with the <ph id="ph1">`autoConvert`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 예제에서는 두 번째 시도 같은 데이터를 검색에서 <ph id="ph1">`autoConvert`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>This trial succeeds, and the result is displayed in a message box labeled "Message #2."</source>
          <target state="translated">이 시도 성공 하 고 결과 "#2 메시지입니다." 레이블이 지정 된 메시지 상자에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예제에서는 만들었다고 가정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Determines whether data stored in this instance is associated with the specified format.</source>
          <target state="translated">이 인스턴스에 저장된 데이터가 지정된 형식과 관련되어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>The format for which to check.</source>
          <target state="translated">확인할 형식입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">미리 정의된 형식에 대한 자세한 내용은 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</source>
          <target state="translated">이 인스턴스에 저장된 데이터가 지정된 형식과 관련되어 있거나 해당 형식으로 변환될 수 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스에 저장된 데이터가 지정된 형식과 관련되어 있거나 해당 형식으로 변환될 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">이 형식이 있는지 여부를 확인 하려면이 메서드를 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 호출 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> 이 인스턴스에 사용할 수 있는 형식에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드를 구현 하는 것을 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetDataPresent`</ph> method.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 클래스를 구현 하는 <ph id="ph2">`IDataObject`</ph>의 사용 방법을 설명 하기는 <ph id="ph3">`GetDataPresent`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>First, it creates a data object using a string and the <ph id="ph1">`Text`</ph> format.</source>
          <target state="translated">문자열을 사용 하 여 데이터 개체를 만들고 먼저 및 <ph id="ph1">`Text`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Then it verifies that the data is present in the <ph id="ph1">`Text`</ph> format and displays the results in a message box.</source>
          <target state="translated">데이터에 있는지 확인 한 다음는 <ph id="ph1">`Text`</ph> 서식을 지정 하 고 메시지 상자에 결과 표시 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예제에서는 만들었다고 가정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the format for which to check.</source>
          <target state="translated">확인할 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">미리 정의된 형식에 대한 자세한 내용은 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</source>
          <target state="translated">이 인스턴스에 저장된 데이터가 지정된 형식과 관련되어 있거나 해당 형식으로 변환될 수 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스에 저장된 데이터가 지정된 형식과 관련되어 있거나 해당 형식으로 변환될 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">이 형식이 있는지 여부를 확인 하려면이 메서드를 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 호출 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> 이 인스턴스에 사용할 수 있는 형식에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드를 구현 하는 것을 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetDataPresent`</ph> method.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 클래스를 구현 하는 <ph id="ph2">`IDataObject`</ph>의 사용 방법을 설명 하기는 <ph id="ph3">`GetDataPresent`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>First, it creates a component (<ph id="ph1">`myComponent`</ph>) and stores it in a data object (<ph id="ph2">`myDataObject`</ph>).</source>
          <target state="translated">먼저, 구성 요소를 만듭니다 (<ph id="ph1">`myComponent`</ph>) 데이터 개체에 저장 합니다 (<ph id="ph2">`myDataObject`</ph>).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Then it checks whether the specified data is stored in <ph id="ph1">`myDataObject`</ph>.</source>
          <target state="translated">지정된 된 데이터에 저장 되는지 여부를 확인 한 다음 <ph id="ph1">`myDataObject`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>If the test evaluates <ph id="ph1">`true`</ph>, it displays the result in a message box and displays the data type in a text box.</source>
          <target state="translated">테스트 결과가 <ph id="ph1">`true`</ph>, 메시지 상자에 결과 표시 하 고 텍스트 상자에 데이터 형식을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>This example assumes that you have already created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph4">`textBox1`</ph>.</source>
          <target state="translated">이 예에서는 이미 만들었다고 가정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 라는 <ph id="ph4">`textBox1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The format for which to check.</source>
          <target state="translated">확인할 형식입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">미리 정의된 형식에 대한 자세한 내용은 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to determine whether data stored in this instance can be converted to the specified format; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to check whether the data is in the specified format.</source>
          <target state="translated">이 인스턴스에 저장된 데이터를 지정된 형식으로 변환할 수 있는지 여부를 확인하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 데이터 형식이 지정된 형식인지 여부를 확인하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</source>
          <target state="translated">부울 값을 통해 데이터를 해당 형식으로 변환할지 여부를 확인하여 이 인스턴스에 저장된 데이터가 지정한 형식과 관련되어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data is in, or can be converted to, the specified format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">데이터가 지정된 형식이거나 지정된 형식으로 변환할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">이 형식이 있는지 여부를 확인 하려면이 메서드를 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 호출 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> 이 인스턴스에 사용할 수 있는 형식에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This method returns <ph id="ph1">`true`</ph> when:</source>
          <target state="translated">이 메서드가 반환 <ph id="ph1">`true`</ph> 때:</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and the data is in a format that can be converted to the appropriate format.</source>
          <target state="translated"><ph id="ph1">`autoConvert`</ph> 매개 변수는 <ph id="ph2">`true`</ph> 와 데이터는 적절 한 형식으로 변환 될 수 있는 형식입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph> and the data is in the appropriate format.</source>
          <target state="translated"><ph id="ph1">`autoConvert`</ph> 매개 변수는 <ph id="ph2">`false`</ph> 와 적절 한 형식의 데이터는 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This method returns <ph id="ph1">`false`</ph> when:</source>
          <target state="translated">이 메서드가 반환 <ph id="ph1">`false`</ph> 때:</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with <ph id="ph3">`autoConvert`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`autoConvert`</ph> 매개 변수는 <ph id="ph2">`true`</ph> 하 고이 메서드가 지정 된 형식의 데이터를 찾을 수 없습니다 및 데이터를 지정 된 형식으로 변환할 수 또는 상태 데이터를 저장 <ph id="ph3">`autoConvert`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph>, and data does not exist in this instance in the specified format.</source>
          <target state="translated"><ph id="ph1">`autoConvert`</ph> 매개 변수는 <ph id="ph2">`false`</ph>, 이며이 인스턴스에서 지정 된 형식의 데이터 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드를 구현 하는 것을 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetDataPresent`</ph> method.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 클래스를 구현 하는 <ph id="ph2">`IDataObject`</ph>의 사용 방법을 설명 하기는 <ph id="ph3">`GetDataPresent`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) using a string and the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">첫째, 데이터 개체를 만듭니다 (<ph id="ph1">`myDataObject`</ph>) 문자열을 사용 하 고 <ph id="ph2">`Text`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Then it queries the object for data associated with the <ph id="ph1">`Text`</ph> format, with the <ph id="ph2">`autoConvert`</ph> parameter set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">다음 개체와 연결 된 데이터를 쿼리는 <ph id="ph1">`Text`</ph> 형식으로 된는 <ph id="ph2">`autoConvert`</ph> 매개 변수 설정 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This trial fails, and the result is displayed in a message box labeled "Message #1."</source>
          <target state="translated">이 시도 실패 하 고 결과 "#1 메시지입니다." 레이블이 지정 된 메시지 상자에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>In the second trial, it sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">두 번째 시도에서 설정 된 <ph id="ph1">`autoConvert`</ph> 매개 변수를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This trial succeeds, and the result is displayed in a message box labeled "Message #2."</source>
          <target state="translated">이 시도 성공 하 고 결과 "#2 메시지입니다." 레이블이 지정 된 메시지 상자에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예제에서는 만들었다고 가정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Returns a list of all formats that data stored in this instance is associated with or can be converted to.</source>
          <target state="translated">이 인스턴스에 저장된 데이터와 관련되어 있거나 해당 데이터를 변환할 수 있는 모든 형식의 목록을 반환합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Returns a list of all formats that data stored in this instance is associated with or can be converted to.</source>
          <target state="translated">이 인스턴스에 저장된 데이터와 관련되어 있거나 해당 데이터를 변환할 수 있는 모든 형식의 목록을 반환합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>An array of the names that represents a list of all formats that are supported by the data stored in this object.</source>
          <target state="translated">이 개체에 저장된 데이터가 지원하는 모든 형식의 목록을 나타내는 이름의 배열입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Call this method to get the supported data formats before calling the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드를 호출 하기 전에 지원 되는 데이터 형식을 가져오려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined formats.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> 미리 정의 된 형식에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드를 구현 하는 것을 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetFormats`</ph> method.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 클래스를 구현 하는 <ph id="ph2">`IDataObject`</ph>의 사용 방법을 설명 하기는 <ph id="ph3">`GetFormats`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) using a string and the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">첫째, 데이터 개체를 만듭니다 (<ph id="ph1">`myDataObject`</ph>) 문자열을 사용 하 고 <ph id="ph2">`Text`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box.</source>
          <target state="translated">그런 다음 모든 데이터 형식 및 데이터 개체의 데이터 변환 형식을 검색 하 고 메시지 상자에 결과 목록을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예에서는 만들었다고 가정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to retrieve all formats that data stored in this instance is associated with or can be converted to; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to retrieve only native data formats.</source>
          <target state="translated">이 인스턴스에 저장된 데이터와 관련되어 있거나 해당 데이터를 변환할 수 있는 모든 형식을 검색하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 네이티브 데이터 형식만 검색하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</source>
          <target state="translated">부울 값을 통해 데이터가 변환될 수 있는 모든 형식을 검색할지 또는 네이티브 데이터 형식만 검색할지를 결정하여 이 인스턴스에 저장된 데이터와 관련되어 있거나 해당 데이터를 변환할 수 있는 모든 형식의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>An array of the names that represents a list of all formats that are supported by the data stored in this object.</source>
          <target state="translated">이 개체에 저장된 데이터가 지원하는 모든 형식의 목록을 나타내는 이름의 배열입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Call this method to get the supported data formats before calling the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드를 호출 하기 전에 지원 되는 데이터 형식을 가져오려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined formats.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> 미리 정의 된 형식에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드를 구현 하는 것을 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetFormats`</ph> method.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 클래스를 구현 하는 <ph id="ph2">`IDataObject`</ph>의 사용 방법을 설명 하기는 <ph id="ph3">`GetFormats`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) using a string and the <ph id="ph2">`UnicodeText`</ph> format.</source>
          <target state="translated">첫째, 데이터 개체를 만듭니다 (<ph id="ph1">`myDataObject`</ph>) 문자열을 사용 하 고 <ph id="ph2">`UnicodeText`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Then it makes two queries to get the formats associated with the data.</source>
          <target state="translated">다음 예제에서는 두 개의 쿼리를 데이터와 관련 된 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>In the first query, it sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> : in this case, only the native format of the data is returned.</source>
          <target state="translated">설정 첫 번째 쿼리에서 <ph id="ph1">`autoConvert`</ph> 매개 변수를 <ph id="ph2">`false`</ph> :이 경우 데이터의 네이티브 형식에만 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>In the second query, it sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`true`</ph>, so that it gets the list of formats, including the formats that the data can be converted to.</source>
          <target state="translated">설정 두 번째 쿼리에서 <ph id="ph1">`autoConvert`</ph> 매개 변수를 <ph id="ph2">`true`</ph>에 데이터를 변환할 수 있는 형식을 포함 한 형식 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>In each case, the resulting list is displayed in a message box.</source>
          <target state="translated">각각의 경우에서 결과 목록이 메시지 상자에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예에서는 만들었다고 가정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Stores the specified data and its associated format in this instance.</source>
          <target state="translated">지정된 데이터 및 관련된 형식을 이 인스턴스에 저장합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>The data to store.</source>
          <target state="translated">저장할 데이터입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>Stores the specified data in this instance, using the class of the data for the format.</source>
          <target state="translated">지정된 데이터를 이 형식에 대한 데이터 클래스를 사용하여 이 인스턴스에 저장합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>The format is derived from the data class.</source>
          <target state="translated">형식은은 데이터 클래스에서 파생 됩니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
          <target state="translated">이 메서드를 사용 하 여 저장 된 데이터 검색 시 호환 형식으로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드를 구현 하는 것을 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 클래스를 구현 하는 <ph id="ph2">`IDataObject`</ph>의 사용 방법을 설명 하기는 <ph id="ph3">`SetData`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>First, it creates a component (<ph id="ph1">`myComponent`</ph>) and stores it in a data object (<ph id="ph2">`myDataObject`</ph>).</source>
          <target state="translated">먼저, 구성 요소를 만듭니다 (<ph id="ph1">`myComponent`</ph>) 데이터 개체에 저장 합니다 (<ph id="ph2">`myDataObject`</ph>).</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>Then it checks whether the specified data is stored in the data object, and displays the result in a message box.</source>
          <target state="translated">그런 다음 지정된 된 데이터 데이터 개체에 저장 됩니다 및 메시지 상자에 결과 표시 하는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예제에서는 만들었다고 가정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>The format associated with the data.</source>
          <target state="translated">데이터와 관련된 형식입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">미리 정의된 형식에 대한 자세한 내용은 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>The data to store.</source>
          <target state="translated">저장할 데이터입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>Stores the specified data and its associated format in this instance.</source>
          <target state="translated">지정된 데이터 및 관련된 형식을 이 인스턴스에 저장합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
          <target state="translated">대상 응용 프로그램의 형식을 모르는 경우이 메서드를 사용 하 여 여러 형식의 데이터를 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
          <target state="translated">이 메서드를 사용 하 여 저장 된 데이터 검색 시 호환 형식으로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드를 구현 하는 것을 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 클래스를 구현 하는 <ph id="ph2">`IDataObject`</ph>의 사용 방법을 설명 하기는 <ph id="ph3">`SetData`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) and stores a string in the object specifying the <ph id="ph2">`UnicodeText`</ph> format.</source>
          <target state="translated">첫째, 데이터 개체를 만듭니다 (<ph id="ph1">`myDataObject`</ph>) 지정 하 여 개체에서 문자열을 저장 하 고는 <ph id="ph2">`UnicodeText`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>Then it retrieves that data stored in the object specifying the <ph id="ph1">`Text`</ph> format, so that the data is converted to the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">지정 하는 개체에 저장 된 데이터를 검색 한 다음는 <ph id="ph1">`Text`</ph> 데이터가 변환 되도록 서식을 <ph id="ph2">`Text`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>The result is displayed in a message box.</source>
          <target state="translated">결과 메시지 상자에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예에서는 만들었다고 가정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the format associated with the data.</source>
          <target state="translated">데이터와 관련된 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">미리 정의된 형식에 대한 자세한 내용은 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>The data to store.</source>
          <target state="translated">저장할 데이터입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>Stores the specified data and its associated class type in this instance.</source>
          <target state="translated">지정된 데이터 및 관련된 클래스 형식을 이 인스턴스에 저장합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
          <target state="translated">대상 응용 프로그램의 형식을 모르는 경우이 메서드를 사용 하 여 여러 형식의 데이터를 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
          <target state="translated">이 메서드를 사용 하 여 저장 된 데이터 검색 시 호환 형식으로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드를 구현 하는 것을 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 클래스를 구현 하는 <ph id="ph2">`IDataObject`</ph>의 사용 방법을 설명 하기는 <ph id="ph3">`SetData`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>First, it creates a component (<ph id="ph1">`myComponent`</ph>) and stores it in a data object (<ph id="ph2">`myDataObject`</ph>), using <ph id="ph3">`myType`</ph> to specify the data format.</source>
          <target state="translated">먼저, 구성 요소를 만듭니다 (<ph id="ph1">`myComponent`</ph>) 데이터 개체에 저장 합니다 (<ph id="ph2">`myDataObject`</ph>)를 사용 하 여 <ph id="ph3">`myType`</ph> 데이터 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box.</source>
          <target state="translated">그런 다음 지정 된 형식의 데이터는 개체에 저장 됩니다 및 메시지 상자에 결과 표시 하는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예제에서는 만들었다고 가정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>The format associated with the data.</source>
          <target state="translated">데이터와 관련된 형식입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">미리 정의된 형식에 대한 자세한 내용은 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to allow the data to be converted to another format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">데이터를 다른 형식으로 변환할 수 있도록 하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>The data to store.</source>
          <target state="translated">저장할 데이터입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</source>
          <target state="translated">부울 값을 통해 데이터를 다른 형식으로 변환할 수 있는지 여부를 지정하여 선택한 데이터 및 관련된 형식을 이 인스턴스에 저장합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
          <target state="translated">대상 응용 프로그램의 형식을 모르는 경우이 메서드를 사용 하 여 여러 형식의 데이터를 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드를 구현 하는 것을 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> 클래스를 구현 하는 <ph id="ph2">`IDataObject`</ph>의 사용 방법을 설명 하기는 <ph id="ph3">`SetData`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) and stores a <ph id="ph2">`UnicodeText`</ph> string in it, with the <ph id="ph3">`autoConvert`</ph> parameter set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">첫째, 데이터 개체를 만듭니다 (<ph id="ph1">`myDataObject`</ph>) 하 고 저장 한 <ph id="ph2">`UnicodeText`</ph> 을 포함 하는 문자열는 <ph id="ph3">`autoConvert`</ph> 매개 변수 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box.</source>
          <target state="translated">다음 개체에 저장 된 데이터와 관련 된 형식 검색 하 고 메시지 상자에 결과 표시 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>The only format associated with the data is the <ph id="ph1">`UnicodeText`</ph> format.</source>
          <target state="translated">데이터와 연결 된 유일한 형식은 <ph id="ph1">`UnicodeText`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예에서는 만들었다고 가정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>