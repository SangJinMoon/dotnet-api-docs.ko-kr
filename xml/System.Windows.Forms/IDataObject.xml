<Type Name="IDataObject" FullName="System.Windows.Forms.IDataObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e6648e6c3a4d4e1d1117188c5b0c1df0c53a5f0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36520849" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataObject" />
  <TypeSignature Language="F#" Value="type IDataObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="90887-101">데이터를 전송하기 위한 형식 독립적 메커니즘을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="90887-101">Provides a format-independent mechanism for transferring data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90887-102">`IDataObject` 인터페이스에서 사용 되는 <xref:System.Windows.Forms.Clipboard> 클래스 및 끌어서 놓기 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-102">The `IDataObject` interface is used by the <xref:System.Windows.Forms.Clipboard> class and in drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="90887-103">클래스에서 구현 되는 경우는 <xref:System.Windows.Forms.IDataObject> 메서드 클래스의 인스턴스에 대 한 여러 형식에 데이터를 저장 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-103">When implemented in a class, the <xref:System.Windows.Forms.IDataObject> methods allow the user to store data in multiple formats in an instance of the class.</span></span> <span data-ttu-id="90887-104">여러 가지 형식에 데이터 저장을 사용 하면 모를 수도 형식 요구 사항을 대상 응용 프로그램에서 저장 된 데이터를 검색할 수 보장 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-104">Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data.</span></span> <span data-ttu-id="90887-105">인스턴스의 데이터를 저장 하려면 <xref:System.Windows.Forms.IDataObject>, 호출는 <xref:System.Windows.Forms.IDataObject.SetData%2A> 메서드 데이터 형식을 지정 하 고는 `format` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-105">To store data in an instance of <xref:System.Windows.Forms.IDataObject>, call the <xref:System.Windows.Forms.IDataObject.SetData%2A> method and specify the data format in the `format` parameter.</span></span> <span data-ttu-id="90887-106">설정의 `autoConvert` 매개 변수를 `false` 경우 원하지 않는 저장 된 데이터를 검색할 때는 다른 형식으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-106">Set the `autoConvert` parameter to `false` if you do not want stored data to be converted to another format when it is retrieved.</span></span> <span data-ttu-id="90887-107">호출 <xref:System.Windows.Forms.IDataObject.SetData%2A> 인스턴스 중 하나에서 여러 번 <xref:System.Windows.Forms.IDataObject> 둘 이상의 형식에 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-107">Invoke <xref:System.Windows.Forms.IDataObject.SetData%2A> multiple times on one instance of <xref:System.Windows.Forms.IDataObject> to store data in more than one format.</span></span>  
  
 <span data-ttu-id="90887-108">저장 된 데이터를 검색 한 <xref:System.Windows.Forms.IDataObject> 호출 하 여는 <xref:System.Windows.Forms.IDataObject.GetData%2A> 에 서식을 메서드 및 데이터를 지정 하는 `format` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="90887-108">You retrieve stored data from an <xref:System.Windows.Forms.IDataObject> by calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method and specifying the data format in the `format` parameter.</span></span> <span data-ttu-id="90887-109">설정의 `autoConvert` 매개 변수를 `false` 만 지정된 된 형식으로 저장 된 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-109">Set the `autoConvert` parameter to `false` to retrieve only data that was stored in the specified format.</span></span> <span data-ttu-id="90887-110">저장된 된 데이터를 지정 된 형식으로 변환 하려면 설정 `autoConvert` 를 `true`, 하거나 사용 하지 마십시오 `autoConvert`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-110">To convert the stored data to the specified format, set `autoConvert` to `true`, or do not use `autoConvert`.</span></span>  
  
 <span data-ttu-id="90887-111">에 저장 된 데이터의 형식을 결정 하는 <xref:System.Windows.Forms.IDataObject>, 다음을 사용 하 여 <xref:System.Windows.Forms.IDataObject> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-111">To determine the formats of the data stored in an <xref:System.Windows.Forms.IDataObject>, use the following <xref:System.Windows.Forms.IDataObject> methods.</span></span>  
  
-   <span data-ttu-id="90887-112">호출의 <xref:System.Windows.Forms.IDataObject.GetFormats%2A> 데이터를 사용할 수 있는 모든 형식의 배열을 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-112">Call the <xref:System.Windows.Forms.IDataObject.GetFormats%2A> method to retrieve an array of all the formats in which the data is available.</span></span> <span data-ttu-id="90887-113">설정의 `autoConvert` 매개 변수를 `false` 데이터가 저장 되는 형식만 얻으려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-113">Set the `autoConvert` parameter to `false` to get only the formats in which the data is stored.</span></span> <span data-ttu-id="90887-114">설정 데이터를 사용할 수 있는 모든 형식을 얻으려고 `autoConvert` 를 `true`, 또는이 매개 변수를 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-114">To get all the formats in which the data is available, set `autoConvert` to `true`, or do not use this parameter.</span></span>  
  
-   <span data-ttu-id="90887-115">호출의 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 메서드를 저장 된 데이터를 특정 형식에 사용할 수 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-115">Call the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether stored data is available in a certain format.</span></span> <span data-ttu-id="90887-116">저장 된 데이터를 지정된 된 형식으로 변환 하지 않으려면 경우 설정의 `autoConvert` 매개 변수를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-116">If you do not want stored data to be converted to the specified format, set the `autoConvert` parameter to `false`.</span></span>  
  
 <span data-ttu-id="90887-117">참조는 <xref:System.Windows.Forms.DataObject> 이 인터페이스의 구현에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-117">See the <xref:System.Windows.Forms.DataObject> class for an implementation of this interface.</span></span> <span data-ttu-id="90887-118">참조는 <xref:System.Windows.Forms.DataFormats> 미리 정의 된에 대 한 클래스 <xref:System.Windows.Forms.Clipboard> 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-118">See the <xref:System.Windows.Forms.DataFormats> class for the predefined <xref:System.Windows.Forms.Clipboard> data formats.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90887-119">지정된 데이터 형식과 관련된 데이터를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-119">Retrieves the data associated with the specified data format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="90887-120">검색할 데이터의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-120">The format of the data to retrieve.</span>
          </span>
          <span data-ttu-id="90887-121">미리 정의된 형식에 대한 자세한 내용은 <see cref="T:System.Windows.Forms.DataFormats" />를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-121">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90887-122">지정된 데이터 형식과 관련된 데이터를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-122">Retrieves the data associated with the specified data format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90887-123">지정된 형식과 관련된 데이터 또는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-123">The data associated with the specified format, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90887-124">이 메서드는 지정 된 형식의 데이터를 찾을 수 없습니다, 데이터 형식으로 변환 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-124">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="90887-125">이 메서드가 반환 하는 경우 데이터 지정된 된 형식으로 변환할 수 없습니다, `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-125">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="90887-126">데이터 연결 된 형식으로 변환할 수 하는지 여부를 확인 하려면 호출 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 호출 하기 전에 <xref:System.Windows.Forms.IDataObject.GetData%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-126">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="90887-127">호출 <xref:System.Windows.Forms.IDataObject.GetFormats%2A> 의이 인스턴스에 저장 된 데이터에 대 한 유효한 형식 목록에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-127">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90887-128">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-128">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="90887-129">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-129">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="90887-130">이 메서드를 구현 하는 것을 참조 하십시오. <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-130">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90887-131">사용 하 여이 예제는 <xref:System.Windows.Forms.DataObject> 클래스를 구현 하는 `IDataObject,` 의 사용 방법을 설명 하기는 `GetData` 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-131">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="90887-132">에 저장 된 데이터를 검색 하 고 메서드를 사용 하는 `myDataObject`, 관련 된는 `Text` 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-132">The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format.</span></span> <span data-ttu-id="90887-133">이 예제에서는 이미 만들었다고 가정는 <xref:System.Windows.Forms.Form> 라는 `Form1` 및 <xref:System.Windows.Forms.TextBox> 라는 `textBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-133">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData1/CPP/getdata1.cpp#1)]
 [!code-csharp[GetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData1/CS/getdata1.cs#1)]
 [!code-vb[GetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData1/VB/getdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="90887-134">검색할 데이터의 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-134">A <see cref="T:System.Type" /> representing the format of the data to retrieve.</span>
          </span>
          <span data-ttu-id="90887-135">미리 정의된 형식에 대한 자세한 내용은 <see cref="T:System.Windows.Forms.DataFormats" />를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-135">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90887-136">지정된 클래스 형식과 관련된 데이터를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-136">Retrieves the data associated with the specified class type format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90887-137">지정된 형식과 관련된 데이터 또는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-137">The data associated with the specified format, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90887-138">이 메서드는 지정 된 형식의 데이터를 찾을 수 없습니다, 데이터 형식으로 변환 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-138">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="90887-139">이 메서드가 반환 하는 경우 데이터 지정된 된 형식으로 변환할 수 없습니다, `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-139">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="90887-140">데이터 연결 된 형식으로 변환할 수 하는지 여부를 확인 하려면 호출 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 호출 하기 전에 <xref:System.Windows.Forms.IDataObject.GetData%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-140">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="90887-141">호출 <xref:System.Windows.Forms.IDataObject.GetFormats%2A> 의이 인스턴스에 저장 된 데이터에 대 한 유효한 형식 목록에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-141">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90887-142">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-142">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="90887-143">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-143">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="90887-144">이 메서드를 구현 하는 것을 참조 하십시오. <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-144">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90887-145">사용 하 여이 예제는 <xref:System.Windows.Forms.DataObject> 클래스를 구현 하는 `IDataObject`의 사용 방법을 설명 하기는 `GetData` 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-145">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="90887-146">에 저장 된 데이터를 검색 하 고 메서드를 사용 하는 `myObject`, 특정 형식과 연결 된 `myType`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-146">The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`.</span></span> <span data-ttu-id="90887-147">검색된 된 데이터의 형식이 메시지 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90887-147">The type of the retrieved data is displayed in a message box.</span></span> <span data-ttu-id="90887-148">이 예제에서는 이미 만들었다고 가정는 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-148">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData2/CPP/getdata2.cpp#1)]
 [!code-csharp[GetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData2/CS/getdata2.cs#1)]
 [!code-vb[GetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData2/VB/getdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj" Usage="iDataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="90887-149">검색할 데이터의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-149">The format of the data to retrieve.</span>
          </span>
          <span data-ttu-id="90887-150">미리 정의된 형식에 대한 자세한 내용은 <see cref="T:System.Windows.Forms.DataFormats" />를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-150">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <param name="autoConvert">
          <span data-ttu-id="90887-151">데이터를 지정된 형식으로 변환하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-151">
              <see langword="true" /> to convert the data to the specified format; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90887-152">부울을 통해 데이터를 지정된 데이터 형식으로 변환할지 여부를 확인하여 해당 데이터 형식과 관련된 데이터를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-152">Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90887-153">지정된 형식과 관련된 데이터 또는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-153">The data associated with the specified format, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90887-154">경우는 `autoConvert` 매개 변수는 `true` 이 메서드가 지정 된 형식의 데이터를 찾을 수 없습니다 및 데이터 형식으로 변환 하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-154">If the `autoConvert` parameter is `true` and this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="90887-155">지정된 된 형식으로 데이터를 변환할 수 없는 경우 또는 상태 데이터를 저장 하는 경우는 `autoConvert` 매개 변수 설정 `false`,이 메서드가 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-155">If the data cannot be converted to the specified format, or if the data was stored with the `autoConvert` parameter set to `false`, this method returns `null`.</span></span>  
  
 <span data-ttu-id="90887-156">경우는 `autoConvert` 매개 변수는 `false`,이 메서드는 지정 된 형식의 데이터를 반환 하거나 `null` 이 형식에 데이터가 없는 찾을 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-156">If the `autoConvert` parameter is `false`, this method returns data in the specified format, or `null` if no data in this format can be found.</span></span>  
  
 <span data-ttu-id="90887-157">데이터 연결 된 형식으로 변환할 수 하는지 여부를 확인 하려면 호출 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 호출 하기 전에 <xref:System.Windows.Forms.IDataObject.GetData%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-157">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="90887-158">호출 <xref:System.Windows.Forms.IDataObject.GetFormats%2A> 의이 인스턴스에 저장 된 데이터에 대 한 유효한 형식 목록에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-158">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90887-159">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-159">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="90887-160">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-160">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="90887-161">이 메서드를 구현 하는 것을 참조 하십시오. <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-161">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90887-162">사용 하 여이 예제는 <xref:System.Windows.Forms.DataObject> 클래스를 구현 하는 `IDataObject`의 사용 방법을 설명 하기는 `GetData` 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-162">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="90887-163">에 저장 된 데이터를 검색 하는 예제는 `DataObject`를 사용 하 여는 `autoConvert` 매개 변수 데이터 형식을 변환할 것인지 여부를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-163">The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format.</span></span> <span data-ttu-id="90887-164">첫째, `myDataObject` 텍스트 데이터를 사용 하 여 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="90887-164">First, `myDataObject` is created with text data.</span></span> <span data-ttu-id="90887-165">다음 예에서는 데이터를 검색 하는 두 번 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-165">Then the example tries twice to retrieve the data.</span></span> <span data-ttu-id="90887-166">첫 번째 시도에서 문자열 집합을 형식으로 지정 된 `autoConvert` 매개 변수를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-166">In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`.</span></span> <span data-ttu-id="90887-167">이 시도 실패 하 고 결과 "#1 메시지입니다." 레이블이 지정 된 메시지 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90887-167">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="90887-168">이 예제에서는 두 번째 시도 같은 데이터를 검색에서 `autoConvert` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-168">In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`.</span></span> <span data-ttu-id="90887-169">이 시도 성공 하 고 결과 "#2 메시지입니다." 레이블이 지정 된 메시지 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90887-169">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="90887-170">이 예제에서는 만들었다고 가정는 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-170">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData3/CPP/getdata3.cpp#1)]
 [!code-csharp[GetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData3/CS/getdata3.cs#1)]
 [!code-vb[GetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData3/VB/getdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90887-171">이 인스턴스에 저장된 데이터가 지정된 형식과 관련되어 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-171">Determines whether data stored in this instance is associated with the specified format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="90887-172">확인할 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-172">The format for which to check.</span>
          </span>
          <span data-ttu-id="90887-173">미리 정의된 형식에 대한 자세한 내용은 <see cref="T:System.Windows.Forms.DataFormats" />를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-173">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90887-174">이 인스턴스에 저장된 데이터가 지정된 형식과 관련되어 있거나 해당 형식으로 변환될 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-174">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90887-175">이 인스턴스에 저장된 데이터가 지정된 형식과 관련되어 있거나 해당 형식으로 변환될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-175">
              <see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90887-176">이 형식이 있는지 여부를 확인 하려면이 메서드를 호출 <xref:System.Windows.Forms.DataObject> 호출 하기 전에 <xref:System.Windows.Forms.IDataObject.GetData%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-176">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="90887-177">호출 <xref:System.Windows.Forms.IDataObject.GetFormats%2A> 이 인스턴스에 사용할 수 있는 형식에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-177">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90887-178">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-178">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="90887-179">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-179">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="90887-180">이 메서드를 구현 하는 것을 참조 하십시오. <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-180">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90887-181">사용 하 여이 예제는 <xref:System.Windows.Forms.DataObject> 클래스를 구현 하는 `IDataObject`의 사용 방법을 설명 하기는 `GetDataPresent` 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-181">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="90887-182">문자열을 사용 하 여 데이터 개체를 만들고 먼저 및 `Text` 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-182">First, it creates a data object using a string and the `Text` format.</span></span> <span data-ttu-id="90887-183">데이터에 있는지 확인 한 다음는 `Text` 서식을 지정 하 고 메시지 상자에 결과 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-183">Then it verifies that the data is present in the `Text` format and displays the results in a message box.</span></span> <span data-ttu-id="90887-184">이 예제에서는 만들었다고 가정는 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-184">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent1/CPP/getdatapresent1.cpp#1)]
 [!code-csharp[GetDataPresent1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent1/CS/getdatapresent1.cs#1)]
 [!code-vb[GetDataPresent1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent1/VB/getdatapresent1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="90887-185">확인할 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-185">A <see cref="T:System.Type" /> representing the format for which to check.</span>
          </span>
          <span data-ttu-id="90887-186">미리 정의된 형식에 대한 자세한 내용은 <see cref="T:System.Windows.Forms.DataFormats" />를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-186">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90887-187">이 인스턴스에 저장된 데이터가 지정된 형식과 관련되어 있거나 해당 형식으로 변환될 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-187">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90887-188">이 인스턴스에 저장된 데이터가 지정된 형식과 관련되어 있거나 해당 형식으로 변환될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-188">
              <see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90887-189">이 형식이 있는지 여부를 확인 하려면이 메서드를 호출 <xref:System.Windows.Forms.DataObject> 호출 하기 전에 <xref:System.Windows.Forms.IDataObject.GetData%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-189">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="90887-190">호출 <xref:System.Windows.Forms.IDataObject.GetFormats%2A> 이 인스턴스에 사용할 수 있는 형식에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-190">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90887-191">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-191">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="90887-192">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-192">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="90887-193">이 메서드를 구현 하는 것을 참조 하십시오. <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-193">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90887-194">사용 하 여이 예제는 <xref:System.Windows.Forms.DataObject> 클래스를 구현 하는 `IDataObject`의 사용 방법을 설명 하기는 `GetDataPresent` 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-194">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="90887-195">먼저, 구성 요소를 만듭니다 (`myComponent`) 데이터 개체에 저장 합니다 (`myDataObject`).</span><span class="sxs-lookup"><span data-stu-id="90887-195">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="90887-196">지정된 된 데이터에 저장 되는지 여부를 확인 한 다음 `myDataObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-196">Then it checks whether the specified data is stored in `myDataObject`.</span></span> <span data-ttu-id="90887-197">테스트 결과가 `true`, 메시지 상자에 결과 표시 하 고 텍스트 상자에 데이터 형식을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-197">If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box.</span></span> <span data-ttu-id="90887-198">이 예에서는 이미 만들었다고 가정는 <xref:System.Windows.Forms.Form> 라는 `Form1` 및 <xref:System.Windows.Forms.TextBox> 라는 `textBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-198">This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetDataPresent2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent2/CPP/getdatapresent2.cpp#1)]
 [!code-csharp[GetDataPresent2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent2/CS/getdatapresent2.cs#1)]
 [!code-vb[GetDataPresent2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent2/VB/getdatapresent2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool" Usage="iDataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="90887-199">확인할 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-199">The format for which to check.</span>
          </span>
          <span data-ttu-id="90887-200">미리 정의된 형식에 대한 자세한 내용은 <see cref="T:System.Windows.Forms.DataFormats" />를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-200">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <param name="autoConvert">
          <span data-ttu-id="90887-201">이 인스턴스에 저장된 데이터를 지정된 형식으로 변환할 수 있는지 여부를 확인하려면 <see langword="true" />이고 데이터 형식이 지정된 형식인지 여부를 확인하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-201">
              <see langword="true" /> to determine whether data stored in this instance can be converted to the specified format; <see langword="false" /> to check whether the data is in the specified format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90887-202">부울 값을 통해 데이터를 해당 형식으로 변환할지 여부를 확인하여 이 인스턴스에 저장된 데이터가 지정한 형식과 관련되어 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-202">Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90887-203">데이터가 지정된 형식이거나 지정된 형식으로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-203">
              <see langword="true" /> if the data is in, or can be converted to, the specified format; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90887-204">이 형식이 있는지 여부를 확인 하려면이 메서드를 호출 <xref:System.Windows.Forms.DataObject> 호출 하기 전에 <xref:System.Windows.Forms.IDataObject.GetData%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-204">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="90887-205">호출 <xref:System.Windows.Forms.IDataObject.GetFormats%2A> 이 인스턴스에 사용할 수 있는 형식에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-205">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
 <span data-ttu-id="90887-206">이 메서드가 반환 `true` 때:</span><span class="sxs-lookup"><span data-stu-id="90887-206">This method returns `true` when:</span></span>  
  
-   <span data-ttu-id="90887-207">`autoConvert` 매개 변수는 `true` 와 데이터는 적절 한 형식으로 변환 될 수 있는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-207">The `autoConvert` parameter is `true` and the data is in a format that can be converted to the appropriate format.</span></span>  
  
-   <span data-ttu-id="90887-208">`autoConvert` 매개 변수는 `false` 와 적절 한 형식의 데이터는 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-208">The `autoConvert` parameter is `false` and the data is in the appropriate format.</span></span>  
  
 <span data-ttu-id="90887-209">이 메서드가 반환 `false` 때:</span><span class="sxs-lookup"><span data-stu-id="90887-209">This method returns `false` when:</span></span>  
  
-   <span data-ttu-id="90887-210">`autoConvert` 매개 변수는 `true` 하 고이 메서드가 지정 된 형식의 데이터를 찾을 수 없습니다 및 데이터를 지정 된 형식으로 변환할 수 또는 상태 데이터를 저장 `autoConvert` 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-210">The `autoConvert` parameter is `true` and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with `autoConvert` set to `false`.</span></span>  
  
-   <span data-ttu-id="90887-211">`autoConvert` 매개 변수는 `false`, 이며이 인스턴스에서 지정 된 형식의 데이터 존재 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-211">The `autoConvert` parameter is `false`, and data does not exist in this instance in the specified format.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90887-212">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-212">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="90887-213">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-213">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="90887-214">이 메서드를 구현 하는 것을 참조 하십시오. <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-214">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90887-215">사용 하 여이 예제는 <xref:System.Windows.Forms.DataObject> 클래스를 구현 하는 `IDataObject`의 사용 방법을 설명 하기는 `GetDataPresent` 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-215">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="90887-216">첫째, 데이터 개체를 만듭니다 (`myDataObject`) 문자열을 사용 하 고 `Text` 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-216">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="90887-217">다음 개체와 연결 된 데이터를 쿼리는 `Text` 형식으로 된는 `autoConvert` 매개 변수 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-217">Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="90887-218">이 시도 실패 하 고 결과 "#1 메시지입니다." 레이블이 지정 된 메시지 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90887-218">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="90887-219">두 번째 시도에서 설정 된 `autoConvert` 매개 변수를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-219">In the second trial, it sets the `autoConvert` parameter to `true`.</span></span> <span data-ttu-id="90887-220">이 시도 성공 하 고 결과 "#2 메시지입니다." 레이블이 지정 된 메시지 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90887-220">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="90887-221">이 예제에서는 만들었다고 가정는 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-221">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent3/CPP/getdatapresent3.cpp#1)]
 [!code-csharp[GetDataPresent3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent3/CS/getdatapresent3.cs#1)]
 [!code-vb[GetDataPresent3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent3/VB/getdatapresent3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90887-222">이 인스턴스에 저장된 데이터와 관련되어 있거나 해당 데이터를 변환할 수 있는 모든 형식의 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-222">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]" Usage="iDataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90887-223">이 인스턴스에 저장된 데이터와 관련되어 있거나 해당 데이터를 변환할 수 있는 모든 형식의 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-223">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90887-224">이 개체에 저장된 데이터가 지원하는 모든 형식의 목록을 나타내는 이름의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-224">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90887-225">이 메서드를 호출 하기 전에 지원 되는 데이터 형식을 가져오려면는 <xref:System.Windows.Forms.IDataObject.GetData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-225">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="90887-226">참조는 <xref:System.Windows.Forms.DataFormats> 미리 정의 된 형식에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-226">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90887-227">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-227">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="90887-228">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-228">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="90887-229">이 메서드를 구현 하는 것을 참조 하십시오. <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-229">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90887-230">사용 하 여이 예제는 <xref:System.Windows.Forms.DataObject> 클래스를 구현 하는 `IDataObject`의 사용 방법을 설명 하기는 `GetFormats` 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-230">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="90887-231">첫째, 데이터 개체를 만듭니다 (`myDataObject`) 문자열을 사용 하 고 `Text` 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-231">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="90887-232">그런 다음 모든 데이터 형식 및 데이터 개체의 데이터 변환 형식을 검색 하 고 메시지 상자에 결과 목록을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-232">Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box.</span></span> <span data-ttu-id="90887-233">이 예에서는 만들었다고 가정는 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-233">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats1/CPP/getformats1.cpp#1)]
 [!code-csharp[GetFormats1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats1/CS/getformats1.cs#1)]
 [!code-vb[GetFormats1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats1/VB/getformats1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]" Usage="iDataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">
          <span data-ttu-id="90887-234">이 인스턴스에 저장된 데이터와 관련되어 있거나 해당 데이터를 변환할 수 있는 모든 형식을 검색하려면 <see langword="true" />이고, 네이티브 데이터 형식만 검색하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-234">
              <see langword="true" /> to retrieve all formats that data stored in this instance is associated with or can be converted to; <see langword="false" /> to retrieve only native data formats.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90887-235">부울 값을 통해 데이터가 변환될 수 있는 모든 형식을 검색할지 또는 네이티브 데이터 형식만 검색할지를 결정하여 이 인스턴스에 저장된 데이터와 관련되어 있거나 해당 데이터를 변환할 수 있는 모든 형식의 목록을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-235">Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90887-236">이 개체에 저장된 데이터가 지원하는 모든 형식의 목록을 나타내는 이름의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-236">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90887-237">이 메서드를 호출 하기 전에 지원 되는 데이터 형식을 가져오려면는 <xref:System.Windows.Forms.IDataObject.GetData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-237">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="90887-238">참조는 <xref:System.Windows.Forms.DataFormats> 미리 정의 된 형식에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-238">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90887-239">데이터는 변환이 가능 하도록 지정를 저장 한 경우 및 요청 된 형식 저장 된와 호환 되 면 다른 형식으로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-239">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="90887-240">유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-240">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="90887-241">이 메서드를 구현 하는 것을 참조 하십시오. <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-241">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90887-242">사용 하 여이 예제는 <xref:System.Windows.Forms.DataObject> 클래스를 구현 하는 `IDataObject`의 사용 방법을 설명 하기는 `GetFormats` 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-242">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="90887-243">첫째, 데이터 개체를 만듭니다 (`myDataObject`) 문자열을 사용 하 고 `UnicodeText` 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-243">First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format.</span></span> <span data-ttu-id="90887-244">다음 예제에서는 두 개의 쿼리를 데이터와 관련 된 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="90887-244">Then it makes two queries to get the formats associated with the data.</span></span> <span data-ttu-id="90887-245">설정 첫 번째 쿼리에서 `autoConvert` 매개 변수를 `false` :이 경우 데이터의 네이티브 형식에만 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90887-245">In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned.</span></span> <span data-ttu-id="90887-246">설정 두 번째 쿼리에서 `autoConvert` 매개 변수를 `true`에 데이터를 변환할 수 있는 형식을 포함 한 형식 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="90887-246">In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to.</span></span> <span data-ttu-id="90887-247">각각의 경우에서 결과 목록이 메시지 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90887-247">In each case, the resulting list is displayed in a message box.</span></span> <span data-ttu-id="90887-248">이 예에서는 만들었다고 가정는 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-248">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats2/CPP/getformats2.cpp#1)]
 [!code-csharp[GetFormats2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats2/CS/getformats2.cs#1)]
 [!code-vb[GetFormats2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats2/VB/getformats2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90887-249">지정된 데이터 및 관련된 형식을 이 인스턴스에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-249">Stores the specified data and its associated format in this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit" Usage="iDataObject.SetData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="90887-250">저장할 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-250">The data to store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90887-251">지정된 데이터를 이 형식에 대한 데이터 클래스를 사용하여 이 인스턴스에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-251">Stores the specified data in this instance, using the class of the data for the format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90887-252">형식은은 데이터 클래스에서 파생 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90887-252">The format is derived from the data class.</span></span>  
  
 <span data-ttu-id="90887-253">이 메서드를 사용 하 여 저장 된 데이터 검색 시 호환 형식으로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-253">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="90887-254">이 메서드를 구현 하는 것을 참조 하십시오. <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-254">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90887-255">사용 하 여이 예제는 <xref:System.Windows.Forms.DataObject> 클래스를 구현 하는 `IDataObject`의 사용 방법을 설명 하기는 `SetData` 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-255">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="90887-256">먼저, 구성 요소를 만듭니다 (`myComponent`) 데이터 개체에 저장 합니다 (`myDataObject`).</span><span class="sxs-lookup"><span data-stu-id="90887-256">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="90887-257">그런 다음 지정된 된 데이터 데이터 개체에 저장 됩니다 및 메시지 상자에 결과 표시 하는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-257">Then it checks whether the specified data is stored in the data object, and displays the result in a message box.</span></span> <span data-ttu-id="90887-258">이 예제에서는 만들었다고 가정는 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-258">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData1/CPP/setdata1.cpp#1)]
 [!code-csharp[SetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData1/CS/setdata1.cs#1)]
 [!code-vb[SetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData1/VB/setdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="90887-259">데이터와 관련된 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-259">The format associated with the data.</span>
          </span>
          <span data-ttu-id="90887-260">미리 정의된 형식에 대한 자세한 내용은 <see cref="T:System.Windows.Forms.DataFormats" />를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-260">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="90887-261">저장할 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-261">The data to store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90887-262">지정된 데이터 및 관련된 형식을 이 인스턴스에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-262">Stores the specified data and its associated format in this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90887-263">대상 응용 프로그램의 형식을 모르는 경우이 메서드를 사용 하 여 여러 형식의 데이터를 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-263">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="90887-264">이 메서드를 사용 하 여 저장 된 데이터 검색 시 호환 형식으로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-264">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="90887-265">이 메서드를 구현 하는 것을 참조 하십시오. <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-265">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90887-266">사용 하 여이 예제는 <xref:System.Windows.Forms.DataObject> 클래스를 구현 하는 `IDataObject`의 사용 방법을 설명 하기는 `SetData` 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-266">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="90887-267">첫째, 데이터 개체를 만듭니다 (`myDataObject`) 지정 하 여 개체에서 문자열을 저장 하 고는 `UnicodeText` 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-267">First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format.</span></span> <span data-ttu-id="90887-268">지정 하는 개체에 저장 된 데이터를 검색 한 다음는 `Text` 데이터가 변환 되도록 서식을 `Text` 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-268">Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format.</span></span> <span data-ttu-id="90887-269">결과 메시지 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90887-269">The result is displayed in a message box.</span></span> <span data-ttu-id="90887-270">이 예에서는 만들었다고 가정는 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-270">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData2/CPP/setdata2.cpp#1)]
 [!code-csharp[SetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData2/CS/setdata2.cs#1)]
 [!code-vb[SetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData2/VB/setdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="90887-271">데이터와 관련된 형식을 나타내는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-271">A <see cref="T:System.Type" /> representing the format associated with the data.</span>
          </span>
          <span data-ttu-id="90887-272">미리 정의된 형식에 대한 자세한 내용은 <see cref="T:System.Windows.Forms.DataFormats" />를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-272">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="90887-273">저장할 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-273">The data to store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90887-274">지정된 데이터 및 관련된 클래스 형식을 이 인스턴스에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-274">Stores the specified data and its associated class type in this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90887-275">대상 응용 프로그램의 형식을 모르는 경우이 메서드를 사용 하 여 여러 형식의 데이터를 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-275">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="90887-276">이 메서드를 사용 하 여 저장 된 데이터 검색 시 호환 형식으로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-276">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="90887-277">이 메서드를 구현 하는 것을 참조 하십시오. <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-277">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90887-278">사용 하 여이 예제는 <xref:System.Windows.Forms.DataObject> 클래스를 구현 하는 `IDataObject`의 사용 방법을 설명 하기는 `SetData` 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-278">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="90887-279">먼저, 구성 요소를 만듭니다 (`myComponent`) 데이터 개체에 저장 합니다 (`myDataObject`)를 사용 하 여 `myType` 데이터 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-279">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format.</span></span> <span data-ttu-id="90887-280">그런 다음 지정 된 형식의 데이터는 개체에 저장 됩니다 및 메시지 상자에 결과 표시 하는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-280">Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box.</span></span> <span data-ttu-id="90887-281">이 예제에서는 만들었다고 가정는 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-281">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData3/CPP/setdata3.cpp#1)]
 [!code-csharp[SetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData3/CS/setdata3.cs#1)]
 [!code-vb[SetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData3/VB/setdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * bool * obj -&gt; unit" Usage="iDataObject.SetData (format, autoConvert, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="90887-282">데이터와 관련된 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-282">The format associated with the data.</span>
          </span>
          <span data-ttu-id="90887-283">미리 정의된 형식에 대한 자세한 내용은 <see cref="T:System.Windows.Forms.DataFormats" />를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-283">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <param name="autoConvert">
          <span data-ttu-id="90887-284">데이터를 다른 형식으로 변환할 수 있도록 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-284">
              <see langword="true" /> to allow the data to be converted to another format; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="90887-285">저장할 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-285">The data to store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90887-286">부울 값을 통해 데이터를 다른 형식으로 변환할 수 있는지 여부를 지정하여 선택한 데이터 및 관련된 형식을 이 인스턴스에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90887-286">Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90887-287">대상 응용 프로그램의 형식을 모르는 경우이 메서드를 사용 하 여 여러 형식의 데이터를 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90887-287">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="90887-288">이 메서드를 구현 하는 것을 참조 하십시오. <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-288">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90887-289">사용 하 여이 예제는 <xref:System.Windows.Forms.DataObject> 클래스를 구현 하는 `IDataObject`의 사용 방법을 설명 하기는 `SetData` 메서드.</span><span class="sxs-lookup"><span data-stu-id="90887-289">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="90887-290">첫째, 데이터 개체를 만듭니다 (`myDataObject`) 하 고 저장 한 `UnicodeText` 을 포함 하는 문자열는 `autoConvert` 매개 변수 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-290">First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="90887-291">다음 개체에 저장 된 데이터와 관련 된 형식 검색 하 고 메시지 상자에 결과 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-291">Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box.</span></span> <span data-ttu-id="90887-292">데이터와 연결 된 유일한 형식은 `UnicodeText` 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="90887-292">The only format associated with the data is the `UnicodeText` format.</span></span> <span data-ttu-id="90887-293">이 예에서는 만들었다고 가정는 <xref:System.Windows.Forms.Form> 라는 `Form1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90887-293">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData4/CPP/form1.cpp#1)]
 [!code-csharp[SetData4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData4/CS/form1.cs#1)]
 [!code-vb[SetData4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>