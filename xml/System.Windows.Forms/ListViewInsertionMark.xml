<Type Name="ListViewInsertionMark" FullName="System.Windows.Forms.ListViewInsertionMark">
  <TypeSignature Language="C#" Value="public sealed class ListViewInsertionMark" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ListViewInsertionMark extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewInsertionMark" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ListViewInsertionMark" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewInsertionMark sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8cbf7-101">항목을 <see cref="T:System.Windows.Forms.ListView" /> 컨트롤 내의 새 위치로 끌어서 놓을 때 예상되는 위치를 나타내는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-101">Used to indicate the expected drop location when an item is dragged to a new position in a <see cref="T:System.Windows.Forms.ListView" /> control.</span></span> <span data-ttu-id="8cbf7-102">이 기능은 Windows XP 이상에서만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-102">This functionality is available only on Windows XP and later.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cbf7-103">검색할 수 있습니다는 <xref:System.Windows.Forms.ListViewInsertionMark> 에서 <xref:System.Windows.Forms.ListView.InsertionMark%2A> 속성은 <xref:System.Windows.Forms.ListView> 제어 하 고 항목을 새 위치로 끌 때 끌어서 놓기 작업에서 예상된 저장 위치를 시각적으로 나타내는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-103">You can retrieve a <xref:System.Windows.Forms.ListViewInsertionMark> from the <xref:System.Windows.Forms.ListView.InsertionMark%2A> property of a <xref:System.Windows.Forms.ListView> control and use it to visually indicate the expected drop location in a drag-and-drop operation when an item is dragged to a new position.</span></span>  
  
 <span data-ttu-id="8cbf7-104">경우에만이 기능이 작동 하는 <xref:System.Windows.Forms.ListView.AutoArrange%2A?displayProperty=nameWithType> 속성 `true` 및 시기는 <xref:System.Windows.Forms.ListView> 컨트롤 항목을 자동으로 정렬 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-104">This feature works only when the <xref:System.Windows.Forms.ListView.AutoArrange%2A?displayProperty=nameWithType> property is set to `true` and when the <xref:System.Windows.Forms.ListView> control does not sort the items automatically.</span></span> <span data-ttu-id="8cbf7-105">자동 정렬을 방지 하려면는 <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> 속성으로 설정 되어 있어야 <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> 및 <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> 속성으로 설정 되어 있어야 <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType>, <xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType>, 또는 <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-105">To prevent automatic sorting, the <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> property must be set to <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> and the <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> property must be set to <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType>, <xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType>, or <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8cbf7-106">삽입 표시 기능은 함께 사용할 수 없습니다 또한는 <xref:System.Windows.Forms.ListView> 그룹화 기능은 그룹 구성원 자격을 기준으로 항목을 정렬 하기 때문에 기능을 그룹화 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-106">Additionally, the insertion mark feature cannot be used with the <xref:System.Windows.Forms.ListView> grouping feature because the grouping feature orders the items by group membership.</span></span>  
  
 <span data-ttu-id="8cbf7-107"><xref:System.Windows.Forms.ListViewInsertionMark> 클래스에 대 한 처리기에서 일반적으로 사용 됩니다는 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 또는 <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> 이벤트 항목을 끄는 삽입 표시의 위치를 업데이트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-107">The <xref:System.Windows.Forms.ListViewInsertionMark> class is typically used in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> or <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> event to update the position of the insertion mark as an item is dragged.</span></span> <span data-ttu-id="8cbf7-108">에 대 한 처리기에는 또한는 <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> 또는 <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> 올바른 위치에 끌어 온된 항목을 삽입 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-108">It is also used in a handler for the <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> or <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> event to insert a dragged item at the correct location.</span></span>  
  
 <span data-ttu-id="8cbf7-109">삽입 표시의 위치를 업데이트 하려면 다음이 단계를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-109">To update the position of the insertion mark, follow these steps:</span></span>  
  
1.  <span data-ttu-id="8cbf7-110">에 대 한 처리기에는 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 또는 <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> 이벤트를 사용 하 여는 <xref:System.Windows.Forms.ListView.InsertionMark%2A?displayProperty=nameWithType> 속성에 액세스는 <xref:System.Windows.Forms.ListViewInsertionMark> 연관 된 개체는 <xref:System.Windows.Forms.ListView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-110">In a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> or <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> event, use the <xref:System.Windows.Forms.ListView.InsertionMark%2A?displayProperty=nameWithType> property to access the <xref:System.Windows.Forms.ListViewInsertionMark> object associated with the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
2.  <span data-ttu-id="8cbf7-111">사용 하 여는 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 마우스 포인터에 가장 가까운 항목의 인덱스를 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-111">Use the <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> method to retrieve the index of the item closest to the mouse pointer.</span></span>  
  
3.  <span data-ttu-id="8cbf7-112">인덱스 값을 전달는 <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=nameWithType> 항목의 경계 사각형을 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-112">Pass the index value to the <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=nameWithType> method to retrieve the bounding rectangle of the item.</span></span>  
  
4.  <span data-ttu-id="8cbf7-113">마우스 포인터가 중간점 경계 사각형의 왼쪽에 있는 경우, 설정 된 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 속성을 `false`, 그렇지 않으면로 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-113">If the mouse pointer is located to the left of the midpoint of the bounding rectangle, set the <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> property to `false`; otherwise, set it to `true`.</span></span>  
  
5.  <span data-ttu-id="8cbf7-114">설정의 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 속성에서 검색 한 인덱스 값을는 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-114">Set the <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> property to the index value retrieved from the <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> method.</span></span> <span data-ttu-id="8cbf7-115">지정된 된 인덱스에 따라 오른쪽 이나 왼쪽에 있는 항목 삽입 표시가 나타나지는 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-115">The insertion mark appears next to item with the specified index, either to the left or the right, depending on the <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> property value.</span></span> <span data-ttu-id="8cbf7-116">항목을 자체를 통해 끌어 인덱스-1 이며 삽입 표시가 나타나지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-116">If an item is dragged over itself, the index is -1 and the insertion mark is hidden.</span></span>  
  
 <span data-ttu-id="8cbf7-117">끌어 온된 항목을 올바른 위치에 삽입 하려면 다음이 단계를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-117">To insert the dragged item at the correct location, follow these steps:</span></span>  
  
1.  <span data-ttu-id="8cbf7-118">에 대 한 처리기에는 <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> 또는 <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> 이벤트를 사용 하 여는 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 속성 삽입 표시의 현재 위치를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-118">In a handler for the <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> or <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> event, use the <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> property to determine the current location of the insertion mark.</span></span> <span data-ttu-id="8cbf7-119">삽입 인덱스와 나중에 사용 하도록이 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-119">Store this value to be used later as the insertion index.</span></span>  
  
2.  <span data-ttu-id="8cbf7-120">경우는 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 속성이 `true`, 저장된 삽입 인덱스 값이 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-120">If the <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> property is set to `true`, increment the stored insertion index value.</span></span>  
  
3.  <span data-ttu-id="8cbf7-121">사용 하 여는 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A?displayProperty=nameWithType> 으로 끌어 온된 항목의 복제본을 삽입 하는 메서드는 <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> 저장된 삽입 인덱스에 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-121">Use the <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A?displayProperty=nameWithType> method to insert a clone of the dragged item into the <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> collection at the stored insertion index.</span></span>  
  
4.  <span data-ttu-id="8cbf7-122">사용 하 여는 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A?displayProperty=nameWithType> 메서드를 끌어 온된 항목의 원래 복사본을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-122">Use the <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A?displayProperty=nameWithType> method to remove the original copy of the dragged item.</span></span>  
  
 <span data-ttu-id="8cbf7-123">인덱스에 값을 원래 복사본을 제거 하기 전에 끌어 온된 항목의 복제본을 삽입 해야는 <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> 삽입 하기 전에 컬렉션은 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-123">You must insert a clone of the dragged item before the original copy is removed so the index values in the <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> collection are not altered before the insertion.</span></span>  
  
 <span data-ttu-id="8cbf7-124">항목 인덱스 값과 동일한 순서로 표시 되도록, 하려면 설정 해야 합니다는 <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A?displayProperty=nameWithType> 속성의 구현에는 <xref:System.Collections.IComparer> 항목을 인덱스 값으로 정렬 하는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-124">To ensure that the items are displayed in the same order as their index values, you must set the <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A?displayProperty=nameWithType> property to an implementation of the <xref:System.Collections.IComparer> interface that sorts items by index value.</span></span> <span data-ttu-id="8cbf7-125">자세한 내용은 "예" 섹션을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-125">For more information, see the Example section.</span></span>  
  
 <span data-ttu-id="8cbf7-126">사용 하 여 삽입 표시의 색을 수정할 수는 <xref:System.Windows.Forms.ListViewInsertionMark.Color%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-126">You can modify the color of the insertion mark by using the <xref:System.Windows.Forms.ListViewInsertionMark.Color%2A> property.</span></span> <span data-ttu-id="8cbf7-127">크기 또는 삽입 표시의 위치를 해야 하는 경우 해당 경계 사각형을 통해 가져올 수 있습니다는 <xref:System.Windows.Forms.ListViewInsertionMark.Bounds%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-127">If you need the size or position of the insertion mark, you can get its bounding rectangle through the <xref:System.Windows.Forms.ListViewInsertionMark.Bounds%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cbf7-128">삽입 표시 기능은 응용 프로그램에서 호출 하는 경우 Windows XP 및 Windows Server 2003 제품군만 사용할 수는 <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-128">The insertion mark feature is available only on Windows XP and the Windows Server 2003 family when your application calls the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8cbf7-129">이전 버전의 운영 체제에서는 삽입 표시와 관련 된 모든 코드가 무시 되 고 삽입 표시가 나타나지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-129">On earlier operating systems, any code relating to the insertion mark will be ignored and the insertion mark will not appear.</span></span> <span data-ttu-id="8cbf7-130">결과적으로, 삽입 표시 기능은에 사용 하는 코드가 제대로 작동 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-130">As a result, any code that depends on the insertion mark feature may not work correctly.</span></span> <span data-ttu-id="8cbf7-131">삽입 표시 기능을 사용할 수 있는지 여부를 확인 하는 테스트를 포함 하 고 사용할 수 없는 경우 대체 기능을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-131">You may want to include a test that determines whether the insertion mark feature is available, and provide alternate functionality when it is unavailable.</span></span> <span data-ttu-id="8cbf7-132">예를 들어 다음 삽입 표시를 지원 하지 않는 운영 체제에서 실행할 때는 위치를 변경 하는 끌어서 놓기 항목을 구현 하는 모든 코드를 무시 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-132">For example, you may want to bypass all code that implements drag-and-drop item repositioning when running on operating systems that do not support insertion marks.</span></span>  
>   
>  <span data-ttu-id="8cbf7-133">삽입 표시 기능은 운영 체제 테마 기능을 제공 하는 라이브러리에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-133">The insertion mark feature is provided by the same library that provides the operating system themes feature.</span></span> <span data-ttu-id="8cbf7-134">이 라이브러리의 가용성을 확인 하려면 호출는 <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> 메서드 오버 로드를 전달은 <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-134">To check for the availability of this library, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> method overload and pass in the <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cbf7-135">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListView> 삽입 표시 기능은 및 구현 끌어서 놓기 항목 다시 정렬을 표준을 사용 하 여 끌기 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-135">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events.</span></span> <span data-ttu-id="8cbf7-136">삽입 표시의 위치에 대 한 처리기에서 업데이트 되 고 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-136">The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="8cbf7-137">이 처리기에서 마우스 포인터의 위치는 중간점을 가장 가까운 항목 비교 하 고 결과 삽입 표시가 항목의 오른쪽 또는 왼쪽에 표시 되는지 여부를 결정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-137">In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
  </Docs>
  <Members>
    <Member MemberName="AppearsAfterItem">
      <MemberSignature Language="C#" Value="public bool AppearsAfterItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppearsAfterItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem" />
      <MemberSignature Language="VB.NET" Value="Public Property AppearsAfterItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppearsAfterItem { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8cbf7-138">삽입 표시가 <see cref="P:System.Windows.Forms.ListViewInsertionMark.Index" /> 속성으로 지정된 인덱스에 있는 항목의 오른쪽에 나타나는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-138">Gets or sets a value indicating whether the insertion mark appears to the right of the item with the index specified by the <see cref="P:System.Windows.Forms.ListViewInsertionMark.Index" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="8cbf7-139">삽입 표시가 <see cref="P:System.Windows.Forms.ListViewInsertionMark.Index" /> 속성으로 지정된 인덱스에 있는 항목의 오른쪽에 나타나면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-139"><see langword="true" /> if the insertion mark appears to the right of the item with the index specified by the <see cref="P:System.Windows.Forms.ListViewInsertionMark.Index" /> property; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8cbf7-140">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-140">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cbf7-141"><xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 메서드를 사용 하면 마우스 포인터에 가장 가까운 항목을 찾을 수 있지만이 항목 전후 삽입 표시가 표시 되는지 여부를 결정 하기 위해 사용자 고유의 계산을 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-141">The <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> method lets you find the item closest to the mouse pointer, but you must do your own calculations to determine whether the insertion mark should appear before or after this item.</span></span>  
  
 <span data-ttu-id="8cbf7-142">에 필요한 값을 계산 하는 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 속성을 다음이 단계를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-142">To calculate the value needed for the <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> property, follow these steps:</span></span>  
  
1.  <span data-ttu-id="8cbf7-143">사용 하 여는 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 마우스 포인터에 가장 가까운 항목의 인덱스를 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-143">Use the <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> method to retrieve the index of the item closest to the mouse pointer.</span></span>  
  
2.  <span data-ttu-id="8cbf7-144">인덱스 값을 전달는 <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=nameWithType> 항목의 경계 사각형을 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-144">Pass the index value to the <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=nameWithType> method to retrieve the bounding rectangle of the item.</span></span>  
  
3.  <span data-ttu-id="8cbf7-145">마우스 포인터가 중간점 경계 사각형의 왼쪽에 있는 경우, 설정 된 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 속성을 `false`, 그렇지 않으면로 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-145">If the mouse pointer is located to the left of the midpoint of the bounding rectangle, set the <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> property to `false`; otherwise, set it to `true`.</span></span>  
  
 <span data-ttu-id="8cbf7-146">자세한 내용은 참조는 <xref:System.Windows.Forms.ListViewInsertionMark> 개요 참조 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-146">For more information, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cbf7-147">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListView> 삽입 표시 기능은 및 구현 끌어서 놓기 항목 다시 정렬을 표준을 사용 하 여 끌기 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-147">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events.</span></span> <span data-ttu-id="8cbf7-148">삽입 표시의 위치에 대 한 처리기에서 업데이트 되 고 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-148">The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="8cbf7-149">이 처리기에서 마우스 포인터의 위치는 중간점을 가장 가까운 항목 비교 하 고 결과 삽입 표시가 항목의 오른쪽 또는 왼쪽에 표시 되는지 여부를 결정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-149">In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.</span></span>  
  
 <span data-ttu-id="8cbf7-150">전체 예제를 참조 하십시오.는 <xref:System.Windows.Forms.ListViewInsertionMark> 개요 참조 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-150">For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8cbf7-151">삽입 표시의 경계 사각형을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-151">Gets the bounding rectangle of the insertion mark.</span></span></summary>
        <value><span data-ttu-id="8cbf7-152">삽입 표시의 위치와 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-152">A <see cref="T:System.Drawing.Rectangle" /> that represents the position and size of the insertion mark.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cbf7-153">왼쪽 위 모퉁이 기준으로 삽입 표시가 경계 사각형의 좌표는는 <xref:System.Windows.Forms.ListView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-153">The coordinates in the insertion mark bounding rectangle are relative to the upper-left corner of the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color Color { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8cbf7-154">삽입 표시의 색을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-154">Gets or sets the color of the insertion mark.</span></span></summary>
        <value><span data-ttu-id="8cbf7-155">삽입 표시의 색을 나타내는 <see cref="T:System.Drawing.Color" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-155">A <see cref="T:System.Drawing.Color" /> value that represents the color of the insertion mark.</span></span> <span data-ttu-id="8cbf7-156">기본값은 <see cref="P:System.Windows.Forms.ListView.ForeColor" /> 속성의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-156">The default value is the value of the <see cref="P:System.Windows.Forms.ListView.ForeColor" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cbf7-157">삽입 표시가 색의 전경색이 아닌 값을 설정 하려면이 속성을 사용 하는 <xref:System.Windows.Forms.ListView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-157">Use this property to set the insertion mark color to a value other than the foreground color of the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cbf7-158">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListView> 삽입 표시 기능은 및 구현 끌어서 놓기 항목 다시 정렬을 표준을 사용 하 여 끌기 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-158">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events.</span></span> <span data-ttu-id="8cbf7-159">삽입 표시의 위치에 대 한 처리기에서 업데이트 되 고 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-159">The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="8cbf7-160">이 처리기에서 마우스 포인터의 위치는 중간점을 가장 가까운 항목 비교 하 고 결과 삽입 표시가 항목의 오른쪽 또는 왼쪽에 표시 되는지 여부를 결정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-160">In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.</span></span>  
  
 <span data-ttu-id="8cbf7-161">전체 예제를 참조 하십시오.는 <xref:System.Windows.Forms.ListViewInsertionMark> 개요 참조 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-161">For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.Index" />
      <MemberSignature Language="VB.NET" Value="Public Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8cbf7-162">삽입 표시 옆에 나타나는 항목의 인덱스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-162">Gets or sets the index of the item next to which the insertion mark appears.</span></span></summary>
        <value><span data-ttu-id="8cbf7-163">삽입 표시 옆에 나타나는 항목의 인덱스이거나 삽입 표시가 나타나지 않는 경우 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-163">The index of the item next to which the insertion mark appears or -1 when the insertion mark is hidden.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cbf7-164">삽입 표시 하는 경우 지정 된 인덱스 항목의 왼쪽에 표시는 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 속성이로 설정 되어 `false`, 그렇지 않으면 항목의 오른쪽에 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-164">The insertion mark appears to the left of the item with the specified index if the <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> property is set to `false`; otherwise, it appears to the right of the item.</span></span> <span data-ttu-id="8cbf7-165">삽입 표시가 항목을 끌어다에 삽입 될 때 자동으로 사라집니다는 <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-165">The insertion mark disappears automatically when a dragged item is inserted into the <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="8cbf7-166">삽입 표시 수동으로 예를 들어 항목 자체를 끌어 되었거나 컨트롤 밖으로 끌어 설정 없앨는 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 값-1입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-166">To remove the insertion mark manually, for example, when an item is dragged onto itself or dragged outside the control, set the <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> value to -1.</span></span>  
  
 <span data-ttu-id="8cbf7-167">사용 하 여는 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 끌어서 놓기 작업에서 항목 위치를 지정할 때 마우스 포인터의 위치와 같은 지정된 된 위치에 가장 가까운 항목의 인덱스를 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-167">Use the <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> method to retrieve the index of the item closest to a specified location, such as the location of the mouse pointer when positioning an item in a drag-and-drop operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cbf7-168">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListView> 삽입 표시 기능은 및 구현 끌어서 놓기 항목 다시 정렬을 표준을 사용 하 여 끌기 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-168">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events.</span></span> <span data-ttu-id="8cbf7-169">삽입 표시의 위치에 대 한 처리기에서 업데이트 되 고 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-169">The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="8cbf7-170">이 처리기에서 마우스 포인터의 위치는 중간점을 가장 가까운 항목 비교 하 고 결과 삽입 표시가 항목의 오른쪽 또는 왼쪽에 표시 되는지 여부를 결정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-170">In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.</span></span>  
  
 <span data-ttu-id="8cbf7-171">전체 예제를 참조 하십시오.는 <xref:System.Windows.Forms.ListViewInsertionMark> 개요 참조 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-171">For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="NearestIndex">
      <MemberSignature Language="C#" Value="public int NearestIndex (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NearestIndex(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function NearestIndex (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NearestIndex(System::Drawing::Point pt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="8cbf7-172">가장 가까운 항목을 찾을 위치를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-172">A <see cref="T:System.Drawing.Point" /> representing the location from which to find the nearest item.</span></span></param>
        <summary><span data-ttu-id="8cbf7-173">지정된 위치에 가장 가까운 항목의 인덱스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-173">Retrieves the index of the item closest to the specified point.</span></span></summary>
        <returns><span data-ttu-id="8cbf7-174">지정된 위치에 가장 가까운 항목의 인덱스이거나 현재 끌고 있는 항목이 가장 가까운 항목인 경우 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-174">The index of the item closest to the specified point or -1 if the closest item is the item currently being dragged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cbf7-175">이 메서드를 사용 하면 끌어서 놓기 작업을 수행 하는 경우 마우스 포인터에 가장 가까운 항목을 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-175">This method lets you locate the item closest to the mouse pointer when doing a drag-and-drop operation.</span></span> <span data-ttu-id="8cbf7-176">인덱스 값을 설정 하려면 반환 된 사용은 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-176">Use the index value returned to set the <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> property.</span></span> <span data-ttu-id="8cbf7-177">끌고 항목 마우스 포인터에 가장 가까운 항목을 사용 하는 경우이 메서드의 반환 값은-1입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-177">When the item closest to the mouse pointer is the item being dragged, the return value of this method is -1.</span></span> <span data-ttu-id="8cbf7-178">이 경우에 설정 된 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 속성이 값이 삽입 표시를 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-178">In this case, setting the <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> property to this value hides the insertion mark.</span></span>  
  
 <span data-ttu-id="8cbf7-179">이 메서드는 마우스 포인터가 있는 동안에 관계 없이 가장 가까운 항목을 찾아는 <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=nameWithType> 만 지정한 위치에 항목을 반환 하는 메서드 또는 `null` 경우 해당 위치에 있는 항목이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-179">This method finds the closest item regardless of where the mouse pointer is located, while the <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=nameWithType> method returns the item at the specified location only, or `null` if there is no item at that location.</span></span> <span data-ttu-id="8cbf7-180"><xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=nameWithType> 메서드 반환 `null`, 마우스 포인터가 두 항목 사이 있으면 예를 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-180">The <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=nameWithType> method returns `null`, for example, when the mouse pointer is located between two items.</span></span> <span data-ttu-id="8cbf7-181">이러한 이유로 항상 사용 해야는 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 메서드 항목의 위치를 끌어서 놓기 작업을 사용 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-181">For this reason, you should always use the <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> method when using a drag-and-drop operation to position items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cbf7-182">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ListView> 삽입 표시 기능은 및 구현 끌어서 놓기 항목 다시 정렬을 표준을 사용 하 여 끌기 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-182">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events.</span></span> <span data-ttu-id="8cbf7-183">삽입 표시의 위치에 대 한 처리기에서 업데이트 되 고 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-183">The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="8cbf7-184">이 처리기에서 마우스 포인터의 위치는 중간점을 가장 가까운 항목 비교 하 고 결과 삽입 표시가 항목의 오른쪽 또는 왼쪽에 표시 되는지 여부를 결정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-184">In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.</span></span>  
  
 <span data-ttu-id="8cbf7-185">전체 예제를 참조 하십시오.는 <xref:System.Windows.Forms.ListViewInsertionMark> 개요 참조 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="8cbf7-185">For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
  </Members>
</Type>