<Type Name="CheckBox" FullName="System.Windows.Forms.CheckBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe141360e41b2de747e31025551bc8a3ec07aad7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CheckBox : System.Windows.Forms.ButtonBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CheckBox extends System.Windows.Forms.ButtonBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CheckBox" />
  <TypeSignature Language="VB.NET" Value="Public Class CheckBox&#xA;Inherits ButtonBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CheckBox : System::Windows::Forms::ButtonBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("CheckState")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CheckedChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Checked")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("System.Windows.Forms.Design.AutoSizeToolboxItem,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="edf64-101">Windows <see cref="T:System.Windows.Forms.CheckBox" />를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="edf64-101">Represents a Windows <see cref="T:System.Windows.Forms.CheckBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-102">사용 하 여 한 <xref:System.Windows.Forms.CheckBox> 같은 true/false 또는 yes/no 옵션을 사용자에 게 있습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-102">Use a <xref:System.Windows.Forms.CheckBox> to give the user an option, such as true/false or yes/no.</span></span> <span data-ttu-id="edf64-103"><xref:System.Windows.Forms.CheckBox> 컨트롤은 이미지, 텍스트 편집기 또는 둘 다 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-103">The <xref:System.Windows.Forms.CheckBox> control can display an image or text or both.</span></span>  
  
 <span data-ttu-id="edf64-104"><xref:System.Windows.Forms.CheckBox> 및 <xref:System.Windows.Forms.RadioButton> 컨트롤에 비슷한 기능이: 옵션의 목록에서 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-104"><xref:System.Windows.Forms.CheckBox> and <xref:System.Windows.Forms.RadioButton> controls have a similar function: they allow the user to choose from a list of options.</span></span> <span data-ttu-id="edf64-105"><xref:System.Windows.Forms.CheckBox> 컨트롤의 사용자 옵션의 조합을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-105"><xref:System.Windows.Forms.CheckBox> controls let the user pick a combination of options.</span></span> <span data-ttu-id="edf64-106">반면, <xref:System.Windows.Forms.RadioButton> 컨트롤을 통해 사용자 상호 배타적인 옵션을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-106">In contrast, <xref:System.Windows.Forms.RadioButton> controls allow a user to choose from mutually exclusive options.</span></span>  
  
 <span data-ttu-id="edf64-107"><xref:System.Windows.Forms.CheckBox.Appearance%2A> 속성 결정 여부는 <xref:System.Windows.Forms.CheckBox> 일반적인으로 나타납니다 <xref:System.Windows.Forms.CheckBox> 또는 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-107">The <xref:System.Windows.Forms.CheckBox.Appearance%2A> property determines whether the <xref:System.Windows.Forms.CheckBox> appears as a typical <xref:System.Windows.Forms.CheckBox> or as a button.</span></span>  
  
 <span data-ttu-id="edf64-108"><xref:System.Windows.Forms.CheckBox.ThreeState%2A> 속성 컨트롤 두 개 또는 세 개의 상태를 지원 하는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-108">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property determines whether the control supports two or three states.</span></span> <span data-ttu-id="edf64-109">사용 하 여는 <xref:System.Windows.Forms.CheckBox.Checked%2A> 가져오거나 두 가지 상태 값을 설정할 속성 <xref:System.Windows.Forms.CheckBox> 제어 하 고 사용 하 여는 <xref:System.Windows.Forms.CheckBox.CheckState%2A> 가져오거나 3 상의 값을 설정할 속성 <xref:System.Windows.Forms.CheckBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-109">Use the <xref:System.Windows.Forms.CheckBox.Checked%2A> property to get or set the value of a two-state <xref:System.Windows.Forms.CheckBox> control and use the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property to get or set the value of a three-state <xref:System.Windows.Forms.CheckBox> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="edf64-110">경우는 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> 속성이 `true`, <xref:System.Windows.Forms.CheckBox.Checked%2A> 속성은 반환 `true` 것인지 확인할 수 없는 상태에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-110">If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `true`, the <xref:System.Windows.Forms.CheckBox.Checked%2A> property will return `true` for either a checked or indeterminate state.</span></span>  
  
 <span data-ttu-id="edf64-111"><xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> 속성 유형과 컨트롤의 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-111">The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property determines the style and appearance of the control.</span></span> <span data-ttu-id="edf64-112">경우는 <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> 속성이 <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>, 사용자의 운영 체제에는 컨트롤의 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-112">If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>, the user's operating system determines the appearance of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="edf64-113">때는 <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> 속성이로 설정 되어 <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>, <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> 속성은 무시 되 고 컨트롤을 사용 하 여 표시 된 <xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=nameWithType> 또는 <xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=nameWithType> 맞춤 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-113">When the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>, the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> property is ignored and the control is displayed using the <xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=nameWithType> or <xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=nameWithType> alignment.</span></span> <span data-ttu-id="edf64-114">경우는 <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> 오른쪽 맞춤 중 하나에 속성, 컨트롤을 사용 하 여 표시 된 <xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=nameWithType> 맞춤;를 사용 하 여 표시 되 고, 그러지는 <xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=nameWithType> 맞춤 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-114">If the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> property is set to one of the right alignments, the control is displayed using the <xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=nameWithType> alignment; otherwise, it is displayed using the <xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=nameWithType> alignment.</span></span>  
  
 <span data-ttu-id="edf64-115">다음 설명 되지 않은 상태: 있는 <xref:System.Windows.Forms.CheckBox> 결정 하는 경우 선택한 텍스트에는 <xref:System.Windows.Forms.RichTextBox> 굵게 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-115">The following describes an indeterminate state: You have a <xref:System.Windows.Forms.CheckBox> that determines if the selected text in a <xref:System.Windows.Forms.RichTextBox> is bold.</span></span> <span data-ttu-id="edf64-116">클릭할 수 있는 텍스트를 선택할 때의 <xref:System.Windows.Forms.CheckBox> 을 굵게 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-116">When you select text you can click the <xref:System.Windows.Forms.CheckBox> to bold the selection.</span></span> <span data-ttu-id="edf64-117">마찬가지로, 일부 텍스트를 선택할 때의 <xref:System.Windows.Forms.CheckBox> 선택한 텍스트를 굵게 표시 여부를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-117">Likewise, when you select some text, the <xref:System.Windows.Forms.CheckBox> displays whether the selected text is bold.</span></span> <span data-ttu-id="edf64-118">선택한 텍스트를 굵게 표시와 일반 텍스트를 포함 하는 경우는 <xref:System.Windows.Forms.CheckBox> 확정 되지 않은 상태를 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-118">If your selected text contains text that is bold and normal, the <xref:System.Windows.Forms.CheckBox> will have an indeterminate state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf64-119">다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.CheckBox>토글 단추의 모양을 제공, 설정, <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> 를 `false`에 추가 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-119">The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ButtonBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CheckBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="edf64-120">
            <see cref="T:System.Windows.Forms.CheckBox" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.CheckBox" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-121">기본적으로 새 <xref:System.Windows.Forms.CheckBox> 인스턴스화되면 <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> 로 설정 된 `true`, <xref:System.Windows.Forms.CheckBox.Checked%2A> 로 설정 된 `false`, 및 <xref:System.Windows.Forms.CheckBox.Appearance%2A> 로 설정 된 <xref:System.Windows.Forms.Appearance.Normal>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-121">By default, when a new <xref:System.Windows.Forms.CheckBox> is instantiated, <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> is set to `true`, <xref:System.Windows.Forms.CheckBox.Checked%2A> is set to `false`, and <xref:System.Windows.Forms.CheckBox.Appearance%2A> is set to <xref:System.Windows.Forms.Appearance.Normal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf64-122">다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.CheckBox>토글 단추의 모양을 제공, 설정, <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> 를 `false`에 추가 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-122">The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CheckBox" />
      </Docs>
    </Member>
    <Member MemberName="Appearance">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Appearance Appearance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Appearance Appearance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.Appearance" />
      <MemberSignature Language="VB.NET" Value="Public Property Appearance As Appearance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Appearance Appearance { System::Windows::Forms::Appearance get(); void set(System::Windows::Forms::Appearance value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Appearance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-123">
            <see cref="T:System.Windows.Forms.CheckBox" /> 컨트롤의 모양을 결정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-123">Gets or sets the value that determines the appearance of a <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edf64-124">
            <see cref="T:System.Windows.Forms.Appearance" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-124">One of the <see cref="T:System.Windows.Forms.Appearance" /> values.</span>
          </span>
          <span data-ttu-id="edf64-125">기본값은 <see cref="F:System.Windows.Forms.Appearance.Normal" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-125">The default value is <see cref="F:System.Windows.Forms.Appearance.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-126">경우 <xref:System.Windows.Forms.CheckBox.Appearance%2A> 값으로 설정 되어 <xref:System.Windows.Forms.Appearance.Normal>, <xref:System.Windows.Forms.CheckBox> 일반적인 모양이 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-126">If <xref:System.Windows.Forms.CheckBox.Appearance%2A> value is set to <xref:System.Windows.Forms.Appearance.Normal>, the <xref:System.Windows.Forms.CheckBox> has a typical appearance.</span></span> <span data-ttu-id="edf64-127">값은로 설정 하는 경우 `Button`, <xref:System.Windows.Forms.CheckBox> 위 또는 아래로 상태로 전환할 수 있는 토글 단추 처럼 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-127">If the value is set to `Button`, the <xref:System.Windows.Forms.CheckBox> appears like a toggle button, which can be toggled to an up or down state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf64-128">다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.CheckBox>토글 단추의 모양을 제공, 설정, <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> 를 `false`에 추가 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-128">The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="edf64-129">할당된 값이 <see cref="T:System.Windows.Forms.Appearance" /> 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-129">The value assigned is not one of the <see cref="T:System.Windows.Forms.Appearance" /> values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.Appearance" />
      </Docs>
    </Member>
    <Member MemberName="AppearanceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AppearanceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AppearanceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.AppearanceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AppearanceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AppearanceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-130">
            <see cref="P:System.Windows.Forms.CheckBox.Appearance" /> 속성 값이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-130">Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Appearance" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-131">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-131">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf64-132">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-132">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="edf64-133">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.CheckBox.AppearanceChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-133">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CheckBox.AppearanceChanged> event.</span></span> <span data-ttu-id="edf64-134">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-134">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="edf64-135">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-135">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="edf64-136">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.CheckBox> 라는 `CheckBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-136">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckBox> named `CheckBox1`.</span></span> <span data-ttu-id="edf64-137">그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.CheckBox.AppearanceChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-137">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CheckBox.AppearanceChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#139](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#139)]
 [!code-vb[System.Windows.Forms.EventExamples#139](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#139)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.Appearance" />
      </Docs>
    </Member>
    <Member MemberName="AutoCheck">
      <MemberSignature Language="C#" Value="public bool AutoCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.AutoCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoCheck { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-138">
            <see cref="P:System.Windows.Forms.CheckBox.Checked" />를 클릭할 때 <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> 또는 <see cref="T:System.Windows.Forms.CheckBox" /> 값과 <see cref="T:System.Windows.Forms.CheckBox" />의 모양이 자동으로 변경되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-138">Gets or set a value indicating whether the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> or <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> values and the <see cref="T:System.Windows.Forms.CheckBox" />'s appearance are automatically changed when the <see cref="T:System.Windows.Forms.CheckBox" /> is clicked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edf64-139">
            <see cref="P:System.Windows.Forms.CheckBox.Checked" /> 이벤트가 발생할 때 <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> 값 또는 <see cref="E:System.Windows.Forms.Control.Click" /> 값과 컨트롤의 모양이 자동으로 변경되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-139">
              <see langword="true" /> if the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> value or <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> value and the appearance of the control are automatically changed on the <see cref="E:System.Windows.Forms.Control.Click" /> event; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="edf64-140">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-140">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-141">경우 <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> 업데이트 하려면 코드를 추가 하면 false로 설정 되는 <xref:System.Windows.Forms.CheckBox.Checked%2A> 또는 <xref:System.Windows.Forms.CheckBox.CheckState%2A> 값에 <xref:System.Windows.Forms.Control.Click> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-141">If <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> is set to false, you will need to add code to update the <xref:System.Windows.Forms.CheckBox.Checked%2A> or <xref:System.Windows.Forms.CheckBox.CheckState%2A> values in the <xref:System.Windows.Forms.Control.Click> event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf64-142">다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.CheckBox>토글 단추의 모양을 제공, 설정, <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> 를 `false`에 추가 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-142">The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment CheckAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment CheckAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.CheckAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment CheckAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-143">
            <see cref="T:System.Windows.Forms.CheckBox" /> 컨트롤에 있는 확인 표시의 가로 및 세로 맞춤을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-143">Gets or sets the horizontal and vertical alignment of the check mark on a <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edf64-144">
            <see cref="T:System.Drawing.ContentAlignment" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-144">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
          <span data-ttu-id="edf64-145">기본값은 <see langword="MiddleLeft" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-145">The default value is <see langword="MiddleLeft" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="edf64-146">다음 코드 예제에서는 레이블에 세 가지 속성의 값을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-146">The following code example displays the values of three properties in a label.</span></span> <span data-ttu-id="edf64-147"><xref:System.Windows.Forms.CheckBox.ThreeState%2A> 속성 사이 번갈아 전환 `true` 및 `false` 교대로 반복 되는 컨트롤의 클릭으로 및 <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> 사이 번갈아 전환는 `MiddleRight` 및 `MiddleLeft` 값 <xref:System.Drawing.ContentAlignment>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-147">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between the `MiddleRight` and `MiddleLeft` values of <xref:System.Drawing.ContentAlignment>.</span></span> <span data-ttu-id="edf64-148">속성 값으로 변경 하는 방법을 보여 주는이 예제는 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> 속성 변경 및 컨트롤 검사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-148">This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked.</span></span> <span data-ttu-id="edf64-149">이 예제에서는 한 <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> 및 <xref:System.Windows.Forms.Button> 모든 인스턴스화된 양식에 및 레이블을 세 줄 텍스트에 대 한 참조의 표시 되는 <xref:System.Drawing?displayProperty=nameWithType> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-149">This example requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="edf64-150">이 코드에서 호출 되어야 합니다는 <xref:System.Windows.Forms.Control.Click> 컨트롤의 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-150">This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="edf64-151">할당된 값이 <see cref="T:System.Drawing.ContentAlignment" /> 열거형 값이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-151">The value assigned is not one of the <see cref="T:System.Drawing.ContentAlignment" /> enumeration values.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.ButtonBase.TextAlign" />
        <altmember cref="T:System.Drawing.ContentAlignment" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-152">
            <see cref="T:System.Windows.Forms.CheckBox" />가 선택되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-152">Gets or set a value indicating whether the <see cref="T:System.Windows.Forms.CheckBox" /> is in the checked state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edf64-153">
            <see cref="T:System.Windows.Forms.CheckBox" />가 선택되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-153">
              <see langword="true" /> if the <see cref="T:System.Windows.Forms.CheckBox" /> is in the checked state; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="edf64-154">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-154">The default value is <see langword="false" />.</span>
          </span>
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="edf64-155">
                <see cref="P:System.Windows.Forms.CheckBox.ThreeState" /> 속성을 <see langword="true" />로 설정하면 <see cref="P:System.Windows.Forms.CheckBox.Checked" /> 속성은 <see langword="true" /> 또는 <see langword="Checked" /><see cref="P:System.Windows.Forms.CheckBox.CheckState" />에 대해 <see langword="Indeterminate" />를 반환합니다.</span>
              <span class="sxs-lookup">
                <span data-stu-id="edf64-155">If the <see cref="P:System.Windows.Forms.CheckBox.ThreeState" /> property is set to <see langword="true" />, the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> property will return <see langword="true" /> for either a <see langword="Checked" /> or <see langword="Indeterminate" /><see cref="P:System.Windows.Forms.CheckBox.CheckState" />.</span>
              </span>
            </para>
          </block>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-156">값이 `true`, <xref:System.Windows.Forms.CheckBox> 컨트롤의 부분에 확인 표시가 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-156">When the value is `true`, the <xref:System.Windows.Forms.CheckBox> portion of the control displays a check mark.</span></span> <span data-ttu-id="edf64-157">경우는 <xref:System.Windows.Forms.CheckBox.Appearance%2A> 속성이 `Button`때 컨트롤이 오목한 나타납니다 <xref:System.Windows.Forms.CheckBox.Checked%2A> 은 `true` 와 같은 표준으로 인해 발생 표시 되 면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-157">If the <xref:System.Windows.Forms.CheckBox.Appearance%2A> property is set to `Button`, the control will appear sunken when <xref:System.Windows.Forms.CheckBox.Checked%2A> is `true` and raised like a standard button when `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf64-158">다음 코드 예제에서는 레이블에 세 가지 속성의 값을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-158">The following code example displays the values of three properties in a label.</span></span> <span data-ttu-id="edf64-159"><xref:System.Windows.Forms.CheckBox.ThreeState%2A> 속성 사이 번갈아 전환 `true` 및 `false` 교대로 반복 되는 컨트롤의 클릭으로 및 <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> 사이 번갈아 전환는 <xref:System.Drawing.ContentAlignment> 값 `MiddleRight` 및 `MiddleLeft`합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-159">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between a <xref:System.Drawing.ContentAlignment> value of `MiddleRight` and `MiddleLeft`.</span></span> <span data-ttu-id="edf64-160">속성 값으로 변경 하는 방법을 보여 주는이 예제는 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> 속성 변경 및 컨트롤 검사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-160">This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked.</span></span> <span data-ttu-id="edf64-161">이 예제에서는 한 <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> 및 <xref:System.Windows.Forms.Button> 모든 인스턴스화된 양식에 및 레이블을 세 줄 텍스트에 대 한 참조의 표시 되는 <xref:System.Drawing?displayProperty=nameWithType> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-161">This example requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="edf64-162">이 코드에서 호출 되어야 합니다는 <xref:System.Windows.Forms.Control.Click> 컨트롤의 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-162">This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
        <altmember cref="P:System.Windows.Forms.CheckBox.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CheckedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CheckedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CheckedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.CheckedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckedChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CheckedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-163">
            <see cref="P:System.Windows.Forms.CheckBox.Checked" /> 속성 값이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-163">Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-164">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-164">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf64-165">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-165">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="edf64-166">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.CheckBox.CheckedChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-166">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CheckBox.CheckedChanged> event.</span></span> <span data-ttu-id="edf64-167">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-167">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="edf64-168">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-168">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="edf64-169">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.CheckBox> 라는 `CheckBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-169">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckBox> named `CheckBox1`.</span></span> <span data-ttu-id="edf64-170">그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.CheckBox.CheckedChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-170">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CheckBox.CheckedChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#140](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#140)]
 [!code-vb[System.Windows.Forms.EventExamples#140](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#140)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.Checked" />
      </Docs>
    </Member>
    <Member MemberName="CheckState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState CheckState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState CheckState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.CheckState" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckState As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState CheckState { System::Windows::Forms::CheckState get(); void set(System::Windows::Forms::CheckState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-171">
            <see cref="T:System.Windows.Forms.CheckBox" />의 상태를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-171">Gets or sets the state of the <see cref="T:System.Windows.Forms.CheckBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edf64-172">
            <see cref="T:System.Windows.Forms.CheckState" /> 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-172">One of the <see cref="T:System.Windows.Forms.CheckState" /> enumeration values.</span>
          </span>
          <span data-ttu-id="edf64-173">기본값은 <see langword="Unchecked" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-173">The default value is <see langword="Unchecked" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-174">경우는 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> 속성이로 설정 되어 `false`, <xref:System.Windows.Forms.CheckBox.CheckState%2A> 속성 값 설정할 수 있습니다 `CheckState.Indeterminate` 코드와 사용자 인터페이스에 의해 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-174">If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `false`, the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property value can only be set to `CheckState.Indeterminate` in code and not by user interaction.</span></span>  
  
 <span data-ttu-id="edf64-175">다음 표에서 <xref:System.Windows.Forms.Appearance?displayProperty=nameWithType> 의 <xref:System.Windows.Forms.CheckBox> 컨트롤에 대 한 여러 상태에는 `Normal` 및 `Button` 컨트롤의 스타일 <xref:System.Windows.Forms.CheckBox.Appearance%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-175">The following table describes the <xref:System.Windows.Forms.Appearance?displayProperty=nameWithType> of the <xref:System.Windows.Forms.CheckBox> control in its different states for the `Normal` and `Button` style control <xref:System.Windows.Forms.CheckBox.Appearance%2A?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="edf64-176">CheckState</span><span class="sxs-lookup"><span data-stu-id="edf64-176">CheckState</span></span>|<span data-ttu-id="edf64-177">Appearance.Normal</span><span class="sxs-lookup"><span data-stu-id="edf64-177">Appearance.Normal</span></span>|<span data-ttu-id="edf64-178">Appearance.Button</span><span class="sxs-lookup"><span data-stu-id="edf64-178">Appearance.Button</span></span>|  
|----------------|-----------------------|-----------------------|  
|`Checked`|<span data-ttu-id="edf64-179"><xref:System.Windows.Forms.CheckBox> 확인 표시가 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-179">The <xref:System.Windows.Forms.CheckBox> displays a check mark.</span></span>|<span data-ttu-id="edf64-180">컨트롤이 오목한 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-180">The control appears sunken.</span></span>|  
|`Unchecked`|<span data-ttu-id="edf64-181"><xref:System.Windows.Forms.CheckBox>가 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="edf64-181">The <xref:System.Windows.Forms.CheckBox> is empty.</span></span>|<span data-ttu-id="edf64-182">컨트롤이 볼록하게 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-182">The control appears raised.</span></span>|  
|`Indeterminate`|<span data-ttu-id="edf64-183"><xref:System.Windows.Forms.CheckBox> 확인 표시를 표시 하 고는 음영 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-183">The <xref:System.Windows.Forms.CheckBox> displays a check mark and is shaded.</span></span>|<span data-ttu-id="edf64-184">컨트롤이 평면으로 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-184">The control appears flat.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="edf64-185">다음 코드 예제에서는 레이블에 세 가지 속성의 값을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-185">The following code example displays the values of three properties in a label.</span></span> <span data-ttu-id="edf64-186"><xref:System.Windows.Forms.CheckBox.ThreeState%2A> 속성 사이 번갈아 전환 `true` 및 `false` 교대로 반복 되는 컨트롤의 클릭으로 및 <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> 사이 번갈아 전환는 `MiddleRight` 및 `MiddleLeft` 값 <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-186">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between the `MiddleRight` and `MiddleLeft` values of <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType>.</span></span> <span data-ttu-id="edf64-187">속성 값으로 변경 하는 방법을 보여 주는이 예제는 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> 속성 변경 및 컨트롤 검사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-187">This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked.</span></span> <span data-ttu-id="edf64-188">이 예제에서는 한 <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> 및 <xref:System.Windows.Forms.Button> 모든 인스턴스화된 양식에 및 레이블을 세 줄 텍스트에 대 한 참조의 표시 되는 <xref:System.Drawing?displayProperty=nameWithType> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-188">This example requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="edf64-189">이 코드에서 호출 되어야 합니다는 <xref:System.Windows.Forms.Control.Click> 컨트롤의 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-189">This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="edf64-190">할당된 값이 <see cref="T:System.Windows.Forms.CheckState" /> 열거형 값이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-190">The value assigned is not one of the <see cref="T:System.Windows.Forms.CheckState" /> enumeration values.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.CheckBox.Checked" />
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
      </Docs>
    </Member>
    <Member MemberName="CheckStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CheckStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CheckStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.CheckStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckStateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CheckStateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-191">
            <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> 속성 값이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-191">Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-192">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-192">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf64-193">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-193">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="edf64-194">예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.CheckBox.CheckStateChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-194">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CheckBox.CheckStateChanged> event.</span></span> <span data-ttu-id="edf64-195">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-195">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="edf64-196">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-196">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="edf64-197">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.CheckBox> 라는 `CheckBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-197">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckBox> named `CheckBox1`.</span></span> <span data-ttu-id="edf64-198">그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.CheckBox.CheckStateChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-198">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CheckBox.CheckStateChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#141](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#141)]
 [!code-vb[System.Windows.Forms.EventExamples#141](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#141)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="edf64-199">
            <see cref="T:System.Windows.Forms.CheckBox" /> 컨트롤의 액세스 가능성 개체를 새로 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-199">Creates a new accessibility object for the <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="edf64-200">컨트롤의 새로운 <see cref="T:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-200">A new <see cref="T:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject" /> for the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-201"><xref:System.Windows.Forms.CheckBox.CreateAccessibilityInstance%2A> 메서드를 명시적으로 호출하지 않으면 <xref:System.Windows.Forms.Control.AccessibilityObject%2A> 속성을 참조할 때 이 메서드가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-201">If you do not explicitly call the <xref:System.Windows.Forms.CheckBox.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="edf64-202">가져오거나 설정할는 <xref:System.Windows.Forms.Control.AccessibilityObject%2A> 속성에 대 한 참조를 추가 해야는 `Accessibility` 어셈블리는.NET Framework와 함께 설치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-202">To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="edf64-203">재정의 하는 경우 <see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" /> 파생된 클래스에서 직접 호출 하지 않도록 기본 클래스의 <see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" /> 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edf64-203">When overriding <see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" /> in a derived class, you should not call the base class's <see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-204">컨트롤 핸들이 만들어지는 경우 필요한 작성 매개 변수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-204">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edf64-205">컨트롤 핸들을 만들 때 필요한 작성 매개 변수가 포함된 <see cref="T:System.Windows.Forms.CreateParams" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-205">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="edf64-206">다음 코드 예에서는 확장 된 <xref:System.Windows.Forms.Control.CreateParams%2A> 속성의는 <xref:System.Windows.Forms.Button> 파생 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-206">The following code example extends the <xref:System.Windows.Forms.Control.CreateParams%2A> property of a <xref:System.Windows.Forms.Button> derived class.</span></span> <span data-ttu-id="edf64-207"><xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType> 속성이 변경 되 고 단추를 한 <xref:System.Drawing.Icon> 아닌 <xref:System.Drawing.Image>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-207">The <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType> property is changed, which causes the button to display an <xref:System.Drawing.Icon> rather than an <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="edf64-208">이 예제에서는 있어야에서 상속 되는 클래스는 <xref:System.Windows.Forms.Button> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-208">This example requires that you have a class that inherits from the <xref:System.Windows.Forms.Button> class.</span></span>  
  
 [!code-cpp[CreateParams#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CreateParams/CPP/createparams.cpp#3)]
 [!code-csharp[CreateParams#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CreateParams/CS/createparams.cs#3)]
 [!code-vb[CreateParams#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CreateParams/VB/createparams.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="edf64-209">에 비관리 코드와 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-209">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="edf64-210">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-210">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-211">컨트롤의 기본 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-211">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edf64-212">기본 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-212">The default size.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-213">사용자가 <see cref="T:System.Windows.Forms.CheckBox" /> 컨트롤을 두 번 클릭하면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-213">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-214">기본적으로는 <xref:System.Windows.Forms.ControlStyles.StandardClick> 및 <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick> 열거형에 대 한 false로 설정 되는 <xref:System.Windows.Forms.CheckBox> 컨트롤 및 <xref:System.Windows.Forms.CheckBox.DoubleClick> 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-214">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick> enumerations are set to false for the <xref:System.Windows.Forms.CheckBox> control, and the <xref:System.Windows.Forms.CheckBox.DoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="edf64-215">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-215">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-216">사용자가 <see cref="T:System.Windows.Forms.CheckBox" /> 컨트롤을 두 번 클릭하면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-216">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-217">기본적으로는 <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> 및 <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> 스타일 비트가 `false` 에 대 한는 <xref:System.Windows.Forms.CheckBox> 컨트롤 및 <xref:System.Windows.Forms.CheckBox.MouseDoubleClick> 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-217">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> style bits are set to `false` for the <xref:System.Windows.Forms.CheckBox> control, and the <xref:System.Windows.Forms.CheckBox.MouseDoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="edf64-218">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-218">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppearanceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAppearanceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAppearanceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAppearanceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAppearanceChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="edf64-219">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-219">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edf64-220">
            <see cref="E:System.Windows.Forms.CheckBox.AppearanceChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-220">Raises the <see cref="E:System.Windows.Forms.CheckBox.AppearanceChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-221">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-221">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="edf64-222">자세한 내용은 참조 [이벤트 처리 및 발생](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-222">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="edf64-223">또한 <xref:System.Windows.Forms.CheckBox.OnAppearanceChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-223">The <xref:System.Windows.Forms.CheckBox.OnAppearanceChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="edf64-224">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-224">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="edf64-225">파생 클래스에서 <see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edf64-225">When overriding <see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.CheckBox.AppearanceChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCheckedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCheckedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCheckedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCheckedChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCheckedChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="edf64-226">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-226">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edf64-227">
            <see cref="E:System.Windows.Forms.CheckBox.CheckedChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-227">Raises the <see cref="E:System.Windows.Forms.CheckBox.CheckedChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-228">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-228">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="edf64-229">자세한 내용은 참조 [이벤트 처리 및 발생](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-229">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="edf64-230">또한 <xref:System.Windows.Forms.CheckBox.OnCheckedChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-230">The <xref:System.Windows.Forms.CheckBox.OnCheckedChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="edf64-231">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-231">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="edf64-232">파생 클래스에서 <see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edf64-232">When overriding <see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.CheckBox.CheckedChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCheckStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCheckStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCheckStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCheckStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCheckStateChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="edf64-233">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-233">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edf64-234">
            <see cref="E:System.Windows.Forms.CheckBox.CheckStateChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-234">Raises the <see cref="E:System.Windows.Forms.CheckBox.CheckStateChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-235">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-235">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="edf64-236">자세한 내용은 참조 [이벤트 처리 및 발생](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-236">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="edf64-237">또한 <xref:System.Windows.Forms.CheckBox.OnCheckStateChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-237">The <xref:System.Windows.Forms.CheckBox.OnCheckStateChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="edf64-238">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-238">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="edf64-239">파생 클래스에서 <see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edf64-239">When overriding <see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.CheckBox.CheckStateChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="edf64-240">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-240">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edf64-241">
            <see cref="E:System.Windows.Forms.Control.Click" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-241">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-242"><xref:System.Windows.Forms.CheckBox.OnClick%2A> 방법 변경은 <xref:System.Windows.Forms.CheckBox.CheckState%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-242">The <xref:System.Windows.Forms.CheckBox.OnClick%2A> method changes the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property.</span></span> <span data-ttu-id="edf64-243">경우는 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> 속성이로 설정 되어 `true`이후의 클릭는 <xref:System.Windows.Forms.CheckBox> 됩니다 <xref:System.Windows.Forms.CheckBox.OnClick%2A> 의 모든 값을 순환는 <xref:System.Windows.Forms.CheckBox.CheckState%2A> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-243">If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `true`, subsequent clicks of the <xref:System.Windows.Forms.CheckBox> will result in <xref:System.Windows.Forms.CheckBox.OnClick%2A> cycling through all the values of the <xref:System.Windows.Forms.CheckBox.CheckState%2A> enumeration.</span></span> <span data-ttu-id="edf64-244">그렇지 않으면 <xref:System.Windows.Forms.CheckBox.OnClick%2A> 사이 전환 <xref:System.Windows.Forms.CheckState.Checked> 및 <xref:System.Windows.Forms.CheckState.Unchecked>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-244">Otherwise, <xref:System.Windows.Forms.CheckBox.OnClick%2A> switches between <xref:System.Windows.Forms.CheckState.Checked> and <xref:System.Windows.Forms.CheckState.Unchecked>.</span></span>  
  
 <span data-ttu-id="edf64-245">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-245">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="edf64-246">자세한 내용은 참조 [이벤트 처리 및 발생](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-246">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="edf64-247">또한 <xref:System.Windows.Forms.CheckBox.OnClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-247">The <xref:System.Windows.Forms.CheckBox.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="edf64-248">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-248">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="edf64-249">재정의 하는 경우 <see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edf64-249">When overriding <see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="edf64-250">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-250">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edf64-251">
            <see cref="E:System.Windows.Forms.Control.HandleCreated" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-251">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="edf64-252">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-252">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edf64-253">
            <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-253">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">
          <span data-ttu-id="edf64-254">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-254">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edf64-255">OnMouseUp 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-255">Raises the OnMouseUp event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="edf64-256">처리할 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-256">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edf64-257">니모닉 문자를 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-257">Processes a mnemonic character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="edf64-258">컨트롤이 문자를 니모닉으로 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-258">
              <see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-259">이 메서드는 컨트롤의 니모닉 문자를 처리할 수 있도록 지정 합니다. 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-259">This method is called to give a control the opportunity to process a mnemonic character.</span></span> <span data-ttu-id="edf64-260">메서드가 결정 해야 컨트롤을 니모닉 처리 하는 상태에 있는지 여부와 지정 된 문자를 니모닉 나타내는지 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-260">The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic.</span></span> <span data-ttu-id="edf64-261">하는 경우,이 메서드는 수행 돌아가 니모닉와 연결 된 동작 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-261">If so, the method should perform the action associated with the mnemonic and return `true`.</span></span> <span data-ttu-id="edf64-262">메서드가 반환 하지, 하면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-262">If not, the method should return `false`.</span></span> <span data-ttu-id="edf64-263">이 메서드의 구현에서는 자주 사용 하 여는 <xref:System.Windows.Forms.Control.IsMnemonic%2A> 메서드를 지정 된 문자는 컨트롤의 텍스트에 니모닉과 일치 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-263">Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text.</span></span>  
  
 <span data-ttu-id="edf64-264">예:</span><span class="sxs-lookup"><span data-stu-id="edf64-264">For example:</span></span>  
  
```csharp  
if (CanSelect && IsMnemonic(charCode, MyControl.Text) {  
    // Perform action associated with mnemonic.  
    }  
```  
  
 <span data-ttu-id="edf64-265">이 기본 구현은 <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> 메서드는 반환 `false` 컨트롤에 없는 니모닉 있음을 나타내기 위해.</span><span class="sxs-lookup"><span data-stu-id="edf64-265">This default implementation of the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method simply returns `false` to indicate that the control has no mnemonic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf64-266">다음 코드 예제에서는 재정의 하는 단추 클래스의 확장은 <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> 메서드를 사용자 지정 동작을 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-266">The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior.</span></span> <span data-ttu-id="edf64-267">이 예제에서는 또한의 사용법을 보여줍니다는 <xref:System.Windows.Forms.Control.CanSelect%2A> 및 <xref:System.Windows.Forms.Control.IsMnemonic%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-267">The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties.</span></span> <span data-ttu-id="edf64-268">이 예제를 실행 하려면 같은 파일에 폼 클래스 뒤 다음 코드를 붙여 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-268">To run this example, paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="edf64-269">형식의 단추 추가 `MnemonicButton` 양식입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-269">Add a button of type `MnemonicButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public override System.Drawing.ContentAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TextAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::ContentAlignment TextAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-270">
            <see cref="T:System.Windows.Forms.CheckBox" /> 컨트롤의 텍스트 맞춤을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-270">Gets or sets the alignment of the text on the <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edf64-271">
            <see cref="T:System.Drawing.ContentAlignment" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-271">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
          <span data-ttu-id="edf64-272">기본값은 <see cref="F:System.Drawing.ContentAlignment.MiddleLeft" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-272">The default is <see cref="F:System.Drawing.ContentAlignment.MiddleLeft" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeState">
      <MemberSignature Language="C#" Value="public bool ThreeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreeState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.ThreeState" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThreeState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edf64-273">
            <see cref="T:System.Windows.Forms.CheckBox" />가 두 가지가 아닌 세 가지의 선택 상태를 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-273">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.CheckBox" /> will allow three check states rather than two.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edf64-274">
            <see cref="T:System.Windows.Forms.CheckBox" />가 세 가지의 선택 상태를 표시할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-274">
              <see langword="true" /> if the <see cref="T:System.Windows.Forms.CheckBox" /> is able to display three check states; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="edf64-275">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-275">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf64-276">경우는 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> 속성이로 설정 되어 `false`, <xref:System.Windows.Forms.CheckBox.CheckState%2A> 속성 값 설정할 수 있습니다는 `Indeterminate` 의 값 <xref:System.Windows.Forms.CheckState?displayProperty=nameWithType> 코드와 사용자 인터페이스에 의해 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-276">If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `false`, the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property value can only be set to the `Indeterminate` value of <xref:System.Windows.Forms.CheckState?displayProperty=nameWithType> in code and not by user interaction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf64-277">다음 코드 예제에서는 레이블에 세 가지 속성의 값을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-277">The following code example displays the values of three properties in a label.</span></span> <span data-ttu-id="edf64-278"><xref:System.Windows.Forms.CheckBox.ThreeState%2A> 속성 사이 번갈아 전환 `true` 및 `false` 교대로 반복 되는 컨트롤의 클릭으로 및 <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> 사이 번갈아 전환는 `MiddleRight` 및 `MiddleLeft` 값 <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-278">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between the `MiddleRight` and `MiddleLeft` values of <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType>.</span></span> <span data-ttu-id="edf64-279">속성 값으로 변경 하는 방법을 보여 주는이 예제는 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> 속성 변경 및 컨트롤 검사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-279">This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked.</span></span> <span data-ttu-id="edf64-280">이 코드를 실행 하려면 한 <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> 및 <xref:System.Windows.Forms.Button> 모든 인스턴스화된 양식에 및 레이블을 세 줄 텍스트에 대 한 참조의 표시 되는 <xref:System.Drawing?displayProperty=nameWithType> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-280">This code requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="edf64-281">이 코드에서 호출 되어야 합니다는 <xref:System.Windows.Forms.Control.Click> 컨트롤의 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="edf64-281">This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="edf64-282">현재 <see cref="T:System.Windows.Forms.CheckBox" /> 컨트롤을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-282">Returns a string that represents the current <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="edf64-283">컨트롤 형식과 <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> 속성의 상태를 설명하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edf64-283">A string that states the control type and the state of the <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>