<Type Name="NodeLabelEditEventArgs" FullName="System.Windows.Forms.NodeLabelEditEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61cfc5765eaf7fe73f1c31a05055f47ba5663775" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647787" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeLabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NodeLabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeLabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class NodeLabelEditEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e8bb0-101">
        <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> 및 <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> 이벤트에 대한 데이터를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8bb0-101">Provides data for the <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> and <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8bb0-102"><xref:System.Windows.Forms.TreeView.AfterLabelEdit> 이벤트 사용자는 트리 노드에 대 한 텍스트 편집을 마쳤을 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-102">The <xref:System.Windows.Forms.TreeView.AfterLabelEdit> event occurs when the user finishes editing the text for a tree node.</span></span> <span data-ttu-id="e8bb0-103"><xref:System.Windows.Forms.TreeView.BeforeLabelEdit> 이벤트 사용자는 트리 노드에 대 한 텍스트 편집을 시작할 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-103">The <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> event occurs when the user begins editing the text for a tree node.</span></span> <span data-ttu-id="e8bb0-104">A <xref:System.Windows.Forms.NodeLabelEditEventArgs> 편집 작업이 취소 되었는지 여부 및 개체를 편집 하려면 레이블을 포함 하는 트리 노드 트리 노드와 연결할 새 텍스트를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-104">A <xref:System.Windows.Forms.NodeLabelEditEventArgs> object specifies the new text to associate with the tree node, the tree node that contains the label to edit, and whether the edit operation has been canceled.</span></span>  
  
 <span data-ttu-id="e8bb0-105">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-105">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8bb0-106">다음 예제에서는 사용자가 사용 하 여 루트가 아닌 트리 노드를 편집할 수는 <xref:System.Windows.Forms.ContextMenu>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-106">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="e8bb0-107">마우스를 마우스 오른쪽 단추로 클릭할 때는 <xref:System.Windows.Forms.TreeNode> 해당 위치가 결정 하 고 이라는 변수에 저장 `mySelectedNode`합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-107">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="e8bb0-108">루트가 아닌 트리 노드를 선택 하는 경우 배치 됩니다를 편집 가능한 상태로 노드 레이블을 편집할 수 있도록 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-108">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="e8bb0-109">사용자가 트리 노드 레이블 편집을 후 새 레이블 텍스트 평가 되 고 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-109">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="e8bb0-110">이 예에서는 여러 문자 레이블 텍스트에서 유효 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-110">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="e8bb0-111">잘못 된 문자 중 하나에 레이블 문자열이 있거나 문자열이 비어, 사용자가 오류의 알림을 하 고 레이블을 이전 텍스트에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-111">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.NodeLabelEditEventHandler" />
    <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8bb0-112">
            <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8bb0-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="e8bb0-113">편집할 텍스트가 포함된 트리 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8bb0-113">The tree node containing the text to edit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8bb0-114">지정된 <see cref="T:System.Windows.Forms.TreeNode" />에 대한 <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8bb0-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class for the specified <see cref="T:System.Windows.Forms.TreeNode" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8bb0-115"><xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> 속성에 할당 되는 `node` 매개 변수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-115">The <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> property is assigned the `node` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node, System::String ^ label);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="e8bb0-116">편집할 텍스트가 포함된 트리 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8bb0-116">The tree node containing the text to edit.</span>
          </span>
        </param>
        <param name="label">
          <span data-ttu-id="e8bb0-117">트리 노드와 연결할 새 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8bb0-117">The new text to associate with the tree node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8bb0-118">지정된 <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" />와 트리 노드 레이블을 업데이트하는 데 사용할 지정된 텍스트에 대한 <see cref="T:System.Windows.Forms.TreeNode" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8bb0-118">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class for the specified <see cref="T:System.Windows.Forms.TreeNode" /> and the specified text with which to update the tree node label.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8bb0-119"><xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> 속성에 할당 되는 `node` 매개 변수 값 및 <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> 속성에 할당 되는 `label` 매개 변수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-119">The <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> property is assigned the `node` parameter value, and the <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> property is assigned the `label` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8bb0-120">편집이 취소되었는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8bb0-120">Gets or sets a value indicating whether the edit has been canceled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8bb0-121">편집이 취소되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8bb0-121">
              <see langword="true" /> if the edit has been canceled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e8bb0-122">다음 예제에서는 사용자가 사용 하 여 루트가 아닌 트리 노드를 편집할 수는 <xref:System.Windows.Forms.ContextMenu>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-122">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="e8bb0-123">마우스를 마우스 오른쪽 단추로 클릭할 때는 <xref:System.Windows.Forms.TreeNode> 해당 위치가 결정 하 고 이라는 변수에 저장 `mySelectedNode`합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-123">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="e8bb0-124">루트가 아닌 트리 노드를 선택 하는 경우 배치 됩니다를 편집 가능한 상태로 노드 레이블을 편집할 수 있도록 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-124">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="e8bb0-125">사용자가 트리 노드 레이블 편집을 후 새 레이블 텍스트 평가 되 고 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-125">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="e8bb0-126">이 예에서는 여러 문자 레이블 텍스트에서 유효 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-126">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="e8bb0-127">잘못 된 문자 중 하나에 레이블 문자열이 있거나 문자열이 비어, 사용자가 오류의 알림을 하 고 레이블을 이전 텍스트에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-127">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8bb0-128">트리 노드와 연결할 새 텍스트를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8bb0-128">Gets the new text to associate with the tree node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8bb0-129">새 <see cref="T:System.Windows.Forms.TreeNode" /> 레이블 또는 <see langword="null" />(사용자가 편집을 취소한 경우)을 나타내는 문자열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8bb0-129">The string value that represents the new <see cref="T:System.Windows.Forms.TreeNode" /> label or <see langword="null" /> if the user cancels the edit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8bb0-130">이 속성의 값은 `null` 편집을 취소 하려면 ESC 키를 누르거나 레이블 텍스트를 수정 하지 않고 ENTER를 누른 경우.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-130">The value of this property is `null` if the user presses ESC to cancel the edit or presses ENTER without modifying the label text.</span></span> <span data-ttu-id="e8bb0-131">사용자가 레이블 텍스트를 편집 하는 경우이 속성의 값은 새 레이블 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-131">If the user edits the label text, the value of this property is the new label text.</span></span> <span data-ttu-id="e8bb0-132">편집 된 레이블 텍스트의 최종 값은 원래 값과 동일 하는 경우에 마찬가지입니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-132">This is true even if the final value of edited label text is the same as its original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8bb0-133">다음 예제에서는 사용자가 사용 하 여 루트가 아닌 트리 노드를 편집할 수는 <xref:System.Windows.Forms.ContextMenu>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-133">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="e8bb0-134">마우스를 마우스 오른쪽 단추로 클릭할 때는 <xref:System.Windows.Forms.TreeNode> 해당 위치가 결정 하 고 이라는 변수에 저장 `mySelectedNode`합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-134">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="e8bb0-135">루트가 아닌 트리 노드를 선택 하는 경우 배치 됩니다를 편집 가능한 상태로 노드 레이블을 편집할 수 있도록 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-135">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="e8bb0-136">사용자가 트리 노드 레이블 편집을 후 새 레이블 텍스트 평가 되 고 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-136">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="e8bb0-137">이 예에서는 여러 문자 레이블 텍스트에서 유효 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-137">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="e8bb0-138">잘못 된 문자 중 하나에 레이블 문자열이 있거나 문자열이 비어, 사용자가 오류의 알림을 하 고 레이블을 이전 텍스트에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-138">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8bb0-139">편집할 텍스트가 포함된 트리 노드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8bb0-139">Gets the tree node containing the text to edit.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8bb0-140">편집할 텍스트가 포함된 트리 노드를 나타내는 <see cref="T:System.Windows.Forms.TreeNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8bb0-140">A <see cref="T:System.Windows.Forms.TreeNode" /> that represents the tree node containing the text to edit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e8bb0-141">다음 예제에서는 사용자가 사용 하 여 루트가 아닌 트리 노드를 편집할 수는 <xref:System.Windows.Forms.ContextMenu>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-141">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="e8bb0-142">마우스를 마우스 오른쪽 단추로 클릭할 때는 <xref:System.Windows.Forms.TreeNode> 해당 위치가 결정 하 고 이라는 변수에 저장 `mySelectedNode`합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-142">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="e8bb0-143">루트가 아닌 트리 노드를 선택 하는 경우 배치 됩니다를 편집 가능한 상태로 노드 레이블을 편집할 수 있도록 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-143">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="e8bb0-144">사용자가 트리 노드 레이블 편집을 후 새 레이블 텍스트 평가 되 고 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-144">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="e8bb0-145">이 예에서는 여러 문자 레이블 텍스트에서 유효 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-145">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="e8bb0-146">잘못 된 문자 중 하나에 레이블 문자열이 있거나 문자열이 비어, 사용자가 오류의 알림을 하 고 레이블을 이전 텍스트에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8bb0-146">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
  </Members>
</Type>